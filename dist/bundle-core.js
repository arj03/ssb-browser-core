(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({"/home/kylemaas/Programming/JavaScript/ssb-browser-core/browser.js":[function(require,module,exports){
const os = require('os')
const path = require('path')

// in browser this will be local storage
const dir = path.join(os.homedir(), ".ssb-lite")

require('./core').init(dir)

},{"./core":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/core.js","os":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/os-browserify/browser.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/core-helpers.js":[function(require,module,exports){
const validate = require('ssb-validate')
const keys = require('ssb-keys')
const pull = require('pull-stream')
const raf = require('polyraf')
const path = require('path')

exports.getPeer = function()
{
  let connPeers = Array.from(SSB.net.conn.hub().entries())
  connPeers = connPeers.filter(([, x]) => !!x.key).map(([address, data]) => ({ address, data }))
  var goodPeer = connPeers.find(cp => cp.data.type != 'room')

  let peers = Object.values(SSB.net.peers).flat()

  if (goodPeer) return peers.find(p => p.id == goodPeer.data.key)
  else if (peers.length > 0) return peers[0]
  else return null
}

function deleteDatabaseFile(filename) {
  const path = require('path')
  const file = raf(path.join(SSB.dir, filename))
  file.open((err, done) => {
    if (err) return console.error(err)
    file.destroy()
  })
}

exports.removeIndexes = function removeIndexes(fs) {
  SSB.db.clearIndexes()
}

exports.removeDB = function() {
  deleteDatabaseFile('log.bipf')

  // remove all indexes including jitdb and partial
  const IdbKvStore = require('idb-kv-store')
  const store = new IdbKvStore(path.join(SSB.dir, "indexes"))
  store.clear()
}

exports.removeBlobs = function() {
  function listDir(fs, path)
  {
    fs.root.getDirectory(path, {}, function(dirEntry) {
      var dirReader = dirEntry.createReader()
      dirReader.readEntries(function(entries) {
        for(var i = 0; i < entries.length; i++) {
          var entry = entries[i]
          if (entry.isDirectory) {
            //console.log('Directory: ' + entry.fullPath);
            listDir(fs, entry.fullPath)
          }
          else if (entry.isFile) {
            console.log('deleting file: ' + entry.fullPath)
            const file = raf(entry.fullPath)
            file.open((err, done) => {
              if (err) return console.error(err)
              file.destroy()
            })
          }
        }
      })
    })
  }

  window.webkitRequestFileSystem(window.PERSISTENT, 0, function (fs) {
    listDir(fs, '/.ssb-lite/blobs')
  })
}

exports.EBTSync = function(rpc)
{
  console.log("doing ebt with", rpc.id)
  SSB.db.getIndex('contacts').getGraphForFeed(SSB.net.id, (err, graph) => {
    SSB.net.ebt.updateClock(() => {
      SSB.net.ebt.request(SSB.net.id, true)
      graph.following.forEach(feed => SSB.net.ebt.request(feed, true))
      graph.extended.forEach(feed => SSB.net.ebt.request(feed, true))

      SSB.net.ebt.startEBT(rpc)
    })
  })
}

exports.fullSync = function(rpc)
{
  SSB.feedSyncer.syncFeeds(rpc, exports.EBTSync)
}

},{"idb-kv-store":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/idb-kv-store/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js","polyraf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/polyraf/browser.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-keys":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/index.js","ssb-validate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/core.js":[function(require,module,exports){
exports.init = function (dir, config) {
  const FeedSyncer = require('./feed-syncer')

  const EventEmitter = require('events')
  SSB = {
    events: new EventEmitter(),
    dbOperators: require('ssb-db2/operators')
  }
  SSB.dbOperators.mentions = require('ssb-db2/operators/full-mentions')

  const s = require('sodium-browserify')
  s.events.on('sodium-browserify:wasm loaded', function() {

    console.log("wasm loaded")

    var net = require('./net').init(dir, config)

    console.log("my id: ", net.id)

    var helpers = require('./core-helpers')

    const Partial = require('./partial')
    const partial = Partial(dir)

    SSB = Object.assign(SSB, {
      db: net.db,
      net,
      dir,
      feedSyncer: FeedSyncer(net, partial),

      getPeer: helpers.getPeer,

      removeDB: helpers.removeDB,
      removeIndexes: helpers.removeIndexes,
      removeBlobs: helpers.removeBlobs,

      box: require('ssb-keys').box,
      blobFiles: require('ssb-blob-files'),

      partial,

      // config
      hops: 1, // this means download full log for hops and partial logs for hops + 1
    })

    // helper for rooms to allow connecting to friends directly
    SSB.net.friends = {
      hops: function(cb) {
        net.db.getIndex('contacts').getGraphForFeed(SSB.net.id, (err, graph) => {
          let hops = {}
          graph.following.forEach(f => hops[f] = 1)
          graph.extended.forEach(f => hops[f] = 2)
          cb(err, hops)
        })
      }
    }

    SSB.net.conn.start()

    SSB.events.emit("SSB: loaded")
  })
}

},{"./core-helpers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/core-helpers.js","./feed-syncer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/feed-syncer.js","./net":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/net.js","./partial":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/partial.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","sodium-browserify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify/index.js","ssb-blob-files":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/index.js","ssb-db2/operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/index.js","ssb-db2/operators/full-mentions":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/full-mentions.js","ssb-keys":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/feed-syncer.js":[function(require,module,exports){
module.exports = function (net, partial) {
  const pull = require('pull-stream')
  const paramap = require('pull-paramap')
  const validate = require('ssb-validate')
  const contacts = net.db.getIndex('contacts')

  function syncMessages(feed, key, rpcCall, partialState, cb) {
    if (!partialState[feed] || !partialState[feed][key]) {
      let adder = net.db.addOOO // this should be default, but is too slow
      if (key == 'syncedMessages') { // false for go!
        const oooState = validate.initial()
        adder = (msg, cb) => net.db.addOOOStrictOrder(msg, oooState, cb)
      } else { // hack
        adder = (msg, cb) => {
          const oooState = validate.initial()
          net.db.addOOOStrictOrder(msg, oooState, cb)
        }
      }
      pull(
        rpcCall(),
        pull.asyncMap(adder),
        pull.collect((err, msgs) => {
          if (err) {
            console.error(err.message)
            return cb(err)
          }

          var newState = {}
          newState[key] = true
          partial.updateState(feed, newState, (err) => { cb(err, feed) })
        })
      )
    } else
      cb(null, feed)
  }

  var syncing = false
  
  function syncFeeds(rpc, cb) {
    syncing = true
    console.log("syncing feeds")
    partial.get((err, partialState) => {
      contacts.getGraphForFeed(net.id, (err, graph) => {
        console.time("full feeds")
        pull(
          pull.values(graph.following),
          pull.asyncMap((feed, cb) => {
            if (!partialState[feed] || !partialState[feed]['full']) {
              net.db.getAllLatest((err, latest) => {
                const latestSeq = latest[feed] ? latest[feed].sequence + 1 : 0
                pull(
                  rpc.partialReplication.getFeed({ id: feed, seq: latestSeq, keys: false }),
                  pull.asyncMap(net.db.add),
                  pull.collect((err) => {
                    if (err) throw err

                    partial.updateState(feed, { full: true }, cb)
                  })
                )
              })
            } else
              cb()
          }),
          pull.collect(() => {
            console.timeEnd("full feeds")

            console.time("partial feeds")
            contacts.getGraphForFeed(net.id, (err, graph) => {
              pull(
                pull.values(graph.extended),
                paramap((feed, cb) => {
                  syncMessages(feed, 'syncedMessages',
                               () => rpc.partialReplication.getFeedReverse({ id: feed, keys: false, limit: 25 }),
                               partialState, cb)
                }, 5),
                paramap((feed, cb) => {
                  syncMessages(feed, 'syncedProfile',
                               () => rpc.partialReplication.getMessagesOfType({id: feed, type: 'about'}),
                               partialState, cb)
                }, 5),
                paramap((feed, cb) => {
                  syncMessages(feed, 'syncedContacts',
                               () => rpc.partialReplication.getMessagesOfType({id: feed, type: 'contact'}),
                               partialState, cb)
                }, 5),
                pull.collect(() => {
                  console.timeEnd("partial feeds")

                  // check for changes that happened while running syncFeeds
                  contacts.getGraphForFeed(net.id, (err, newGraph) => {
                    if (JSON.stringify(graph) === JSON.stringify(newGraph)) {
                      syncing = false

                      if (cb) cb(rpc)
                    }
                    else // sync new changes
                      syncFeeds(rpc, cb)
                  })
                })
              )
            })
          })
        )
      })
    })
  }
  
  return {
    syncFeeds,
    syncing,
    status: function() {
      const partialState = partial.getSync()
      const graph = contacts.getGraphForFeedSync(net.id)

      // full
      let fullSynced = 0
      let totalFull = 0

      // partial
      let profilesSynced = 0
      let contactsSynced = 0
      let messagesSynced = 0
      let totalPartial = 0

      graph.following.forEach(relation => {
        if (partialState[relation] && partialState[relation]['full'])
          fullSynced += 1

        totalFull += 1
      })

      graph.extended.forEach(relation => {
        if (partialState[relation] && partialState[relation]['syncedProfile'])
          profilesSynced += 1
        if (partialState[relation] && partialState[relation]['syncedContacts'])
          contactsSynced += 1
        if (partialState[relation] && partialState[relation]['syncedMessages'])
          messagesSynced += 1

        totalPartial += 1
      })

      return {
        totalPartial,
        profilesSynced,
        contactsSynced,
        messagesSynced,
        totalFull,
        fullSynced,
      }
    },
    inSync: function() {
      const partialState = partial.getSync()
      const graph = contacts.getGraphForFeedSync(SSB.net.id)

      // partial
      let totalPartial = 0
      let profilesSynced = 0
      let contactsSynced = 0
      let messagesSynced = 0

      // full
      let fullSynced = 0
      let totalFull = 0

      graph.following.forEach(relation => {
        if (partialState[relation] && partialState[relation]['full'])
          fullSynced += 1

        totalFull += 1
      })

      graph.extended.forEach(relation => {
        if (partialState[relation] && partialState[relation]['syncedProfile'])
          profilesSynced += 1
        if (partialState[relation] && partialState[relation]['syncedContacts'])
          contactsSynced += 1
        if (partialState[relation] && partialState[relation]['syncedMessages'])
          messagesSynced += 1

        totalPartial += 1
      })

      if (totalPartial === 0 && totalFull === 0)
        return false

      return totalPartial == messagesSynced &&
        totalPartial == contactsSynced &&
        totalPartial == profilesSynced &&
        totalFull == fullSynced
    }
  }
}

},{"pull-paramap":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-paramap/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-validate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/indexes/about-profile.js":[function(require,module,exports){
(function (Buffer){(function (){
const bipf = require('bipf')
const pull = require('pull-stream')
const pl = require('pull-level')
const jsonCodec = require('flumecodec/json')
const Plugin = require('ssb-db2/indexes/plugin')

const isFeed = require('ssb-ref').isFeed

// 1 index:
// - feed => hydrated about

module.exports = function (log, dir) {
  const bValue = Buffer.from('value')
  const bAuthor = Buffer.from('author')
  const bContent = Buffer.from('content')
  const bType = Buffer.from('type')
  const bAbout = Buffer.from('about')

  let batch = []

  const name = 'profiles'
  const { level, offset, stateLoaded, onData, writeBatch } = Plugin(
    dir,
    name,
    1,
    handleData,
    writeData,
    beforeIndexUpdate
  )

  function writeData(cb) {
    level.batch(batch, { keyEncoding: 'json', valueEncoding: 'json' }, cb)
    batch = []
  }

  function handleData(record, processed) {
    if (record.offset < offset.value) return batch.length
    const recBuffer = record.value
    if (!recBuffer) return batch.length // deleted

    let p = 0 // note you pass in p!
    p = bipf.seekKey(recBuffer, p, bValue)
    if (!~p) return batch.length

    const pAuthor = bipf.seekKey(recBuffer, p, bAuthor)
    const author = bipf.decode(recBuffer, pAuthor)

    const pContent = bipf.seekKey(recBuffer, p, bContent)
    if (!~pContent) return batch.length

    const pType = bipf.seekKey(recBuffer, pContent, bType)
    if (!~pType) return batch.length

    if (bipf.compareString(recBuffer, pType, bAbout) === 0) {
      const content = bipf.decode(recBuffer, pContent)
      if (content.about != author) return batch.length

      updateProfileData(author, content)

      if (isFeed(author)) {
        batch.push({
          type: 'put',
          key: author,
          value: profiles[author]
        })
      }
    }

    return batch.length
  }
  
  function updateProfileData(author, content) {
    let profile = profiles[author] || {}

    if (content.name)
      profile.name = content.name

    if (content.description)
      profile.description = content.description

    if (content.image && typeof content.image.link === 'string')
      profile.image = content.image.link
    else if (typeof content.image === 'string')
      profile.image = content.image

    profiles[author] = profile
  }

  let profiles = {}
  
  function beforeIndexUpdate(cb) {
    pull(
      pl.read(level, {
        gte: '',
        lte: undefined,
        keyEncoding: jsonCodec,
        valueEncoding: jsonCodec,
        keys: true
      }),
      pull.collect((err, data) => {
        profiles = {}
        data.forEach(x => profiles[x.key] = x.value)
        cb()
      })
    )
  }

  function getProfile(feedId) {
    return profiles[feedId] || {}
  }

  function getProfiles() {
    return profiles
  }

  return {
    offset,
    stateLoaded,
    onData,
    writeBatch,
    name,

    remove: level.clear,
    close: level.close.bind(level),

    getProfile,
    getProfiles
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","flumecodec/json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/flumecodec/json.js","pull-level":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-db2/indexes/plugin":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/plugin.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/indexes/contacts.js":[function(require,module,exports){
(function (Buffer){(function (){
const bipf = require('bipf')
const pull = require('pull-stream')
const pl = require('pull-level')
const jsonCodec = require('flumecodec/json')
const Plugin = require('ssb-db2/indexes/plugin')
const promisify = require('promisify-4loc')

const isFeed = require('ssb-ref').isFeed

// 1 index:
// - [from, to] => distance

module.exports = function (log, dir) {
  const bValue = Buffer.from('value')
  const bAuthor = Buffer.from('author')
  const bContent = Buffer.from('content')
  const bType = Buffer.from('type')
  const bContact = Buffer.from('contact')

  let batch = []

  const name = 'contacts'
  const { level, offset, stateLoaded, onData, writeBatch } = Plugin(
    dir,
    name,
    1,
    handleData,
    writeData
  )

  function writeData(cb) {
    level.batch(batch, { keyEncoding: 'json' }, cb)
    batch = []
  }

  function handleData(record, processed) {
    if (record.offset < offset.value) return batch.length
    const recBuffer = record.value
    if (!recBuffer) return batch.length // deleted

    let p = 0 // note you pass in p!
    p = bipf.seekKey(recBuffer, p, bValue)
    if (!~p) return batch.length

    const pAuthor = bipf.seekKey(recBuffer, p, bAuthor)
    const author = bipf.decode(recBuffer, pAuthor)

    const pContent = bipf.seekKey(recBuffer, p, bContent)
    if (!~pContent) return batch.length

    const pType = bipf.seekKey(recBuffer, pContent, bType)
    if (!~pType) return batch.length

    if (bipf.compareString(recBuffer, pType, bContact) === 0) {
      const content = bipf.decode(recBuffer, pContent)
      const to = content.contact

      if (isFeed(author) && isFeed(to)) {
        batch.push({
          type: 'put',
          key: [author, to],
          value: getStatus(content)
        })
      }
    }

    return batch.length
  }

  function getStatus(content) {
    return content.blocking || content.flagged ? -1 :
      content.following === true ? 1
      : -2 // this -2 is wierd, but is how it is in ssb-friends
  }
  
  function get(from, to, cb) {
    level.get([from, to], (err, status) => {
      if (err) cb(err)
      else cb(null, parseInt(status, 10))
    })
  }

  function getFeed(from, cb) {
    pull(
      pl.read(level, {
        gte: [from, ''],
        lte: [from, undefined],
        keyEncoding: jsonCodec,
        keys: true
      }),
      pull.collect((err, data) => {
        let result = {}
        data.forEach(x => result[x.key[1]] = parseInt(x.value, 10))
        if (err) return cb(err)
        else cb(null, result)
      })
    )
  }

  function isFollowing(source, dest) {
    if (!hops[source]) return false
    return hops[source][dest] === 1
  }

  function isBlocking(source, dest) {
    if (!hops[source]) return false
    return hops[source][dest] === -1
  }

  function getGraphForFeedHops1(feed, cb) {
    getFeed(feed, (err, data) => {
      hops[feed] = data
      cb(err, getGraphForFeedSync(feed))
    })
  }

  function getGraphForFeed(feed, cb) {
    SSB.db.onDrain('contacts', () => {
      getFeed(feed, (err, data) => {
        hops[feed] = data
        let feedsToGet = []
        for (var other in data) {
          if (data[other] > 0) {
            const follow = other
            if (!hops[follow]) {
              feedsToGet.push(promisify((cb) => {
                getFeed(follow, (err, data) => {
                  if (!err && Object.keys(data).length > 0)
                    hops[follow] = data
                  cb()
                })
              })())
            }
          }
        }
        Promise.all(feedsToGet).then(() => cb(err, getGraphForFeedSync(feed)))
      })
    })
  }

  let hops = {}

  // might return empty when hops is not loaded yet
  function getGraphForFeedSync(feed) {
    let following = []
    let blocking = []
    let extended = []

    for (let relation in hops[feed]) {
      if (isFollowing(feed, relation))
        following.push(relation)
      else if (isBlocking(feed, relation))
        blocking.push(relation)
    }

    for (let feedId in hops) {
      if (feedId === feed)
        continue

      if (!following.includes(feedId))
        continue

      for (let relation in hops[feedId]) {
        if (isFollowing(feedId, relation)) {
          if (relation === feed)
            continue

          if (following.includes(relation))
            continue

          if (blocking.includes(relation))
            continue

          extended.push(relation)
        }
      }
    }

    return {
      following,
      blocking,
      extended: [...new Set(extended)]
    }
  }

  return {
    offset,
    stateLoaded,
    onData,
    writeBatch,
    name,

    remove: level.clear,
    close: level.close.bind(level),

    get,
    getGraphForFeedHops1,
    getGraphForFeed,
    getGraphForFeedSync,
    isFollowing,
    isBlocking,
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","flumecodec/json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/flumecodec/json.js","promisify-4loc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisify-4loc/index.js","pull-level":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-db2/indexes/plugin":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/plugin.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/net.js":[function(require,module,exports){
(function (Buffer){(function (){
const SecretStack = require('secret-stack')
const caps = require('ssb-caps')
const ssbKeys = require('ssb-keys')
const helpers = require('./core-helpers')

const path = require('path')

exports.init = function(dir, overwriteConfig) {
  var keys = ssbKeys.loadOrCreateSync(path.join(dir, 'secret'))

  var config = Object.assign({
    caps: { shs: Buffer.from(caps.shs, 'base64') },
    keys,
    connections: {
      incoming: {
	tunnel: [{ scope: 'public', transform: 'shs' }]
      },
      outgoing: {
	net: [{ transform: 'shs' }],
	ws: [{ transform: 'shs' }, { transform: 'noauth' }],
	tunnel: [{ transform: 'shs' }]
      }
    },
    path: dir,
    timers: {
      inactivity: 30e3
    },
    conn: {
      autostart: false,
      hops: 1,
      populatePubs: false,
    },
    ebt: {
      logging: false
    },
    blobs: {
      sympathy: 0, //sympathy controls whether you'll replicate
      stingy: false,
      pushy: 3,
      max: 256*1024
    }
  }, overwriteConfig)

  var r = SecretStack(config)
  .use(require('ssb-db2/db'))
  .use(require('ssb-db2/compat'))
  .use({
    init: function (sbot, config) {
      sbot.db.registerIndex(require('ssb-db2/indexes/full-mentions'))
    }
  })
  .use({
    init: function (sbot, config) {
      sbot.db.registerIndex(require('./indexes/contacts'))
    }
  })
  .use({
    init: function (sbot, config) {
      sbot.db.registerIndex(require('./indexes/about-profile'))
    }
  })
  .use(require('./ssb-partial-replication'))
  .use(require('./simple-ooo'))
  .use(require('ssb-ws'))
  .use(require('./simple-ebt'))
  .use(require('ssb-conn'))
  .use(require('ssb-room/tunnel/client'))
  .use(require('ssb-no-auth'))
  .use(require("./simple-blobs"))
  ()

  r.sync = function(rpc) {
    if (SSB.feedSyncer.syncing)
      ; // only one can sync at a time
    else if (SSB.feedSyncer.inSync())
      helpers.EBTSync(rpc)
    else
      helpers.fullSync(rpc)
  }

  var timer

  r.on('rpc:connect', function (rpc, isClient) {
    console.log("connected to:", rpc.id)

    let connPeers = Array.from(SSB.net.conn.hub().entries())
    connPeers = connPeers.filter(([, x]) => !!x.key).map(([address, data]) => ({ address, data }))
    var peer = connPeers.find(x => x.data.key == rpc.id)
    if (!peer || peer.data.type === 'room') return

    if (isClient) {
      console.log("syncing with", rpc.id)
      r.sync(rpc)
    }

    // the problem is that the browser will close a connection after
    // 30 seconds if there is no activity, the default ping "timeout"
    // in ssb-gossip (and ssb-conn) is 5 minutes.
    //
    // tunnel (and rooms) is much better, it will give us back a pong
    // right after calling, so we can choose how often to call to keep
    // the connection alive
    function ping() {
      rpc.tunnel.ping(function (err, _ts) {
        if (err) return console.error(err)
        clearTimeout(timer)
        timer = setTimeout(ping, 10e3)
      })
    }

    ping()
  })

  r.on('replicate:finish', function () {
    console.log("finished ebt replicate")
  })

  r.connectAndRemember = function(addr, data) {
    r.conn.connect(addr, data, (err, rpc) => {
      r.conn.remember(addr, Object.assign(data, { autoconnect: true }))
    })
  }

  r.directConnect = function(addr, cb) {
    r.conn.connect(addr, cb)
  }

  return r
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./core-helpers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/core-helpers.js","./indexes/about-profile":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/indexes/about-profile.js","./indexes/contacts":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/indexes/contacts.js","./simple-blobs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/simple-blobs.js","./simple-ebt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/simple-ebt.js","./simple-ooo":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/simple-ooo.js","./ssb-partial-replication":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/ssb-partial-replication.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js","secret-stack":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/index.js","ssb-caps":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-caps/caps.json","ssb-conn":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/index.js","ssb-db2/compat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/index.js","ssb-db2/db":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/db.js","ssb-db2/indexes/full-mentions":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/full-mentions.js","ssb-keys":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/index.js","ssb-no-auth":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-no-auth/index.js","ssb-room/tunnel/client":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/tunnel/client.js","ssb-ws":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ws/client.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-chained-batch.js":[function(require,module,exports){
var nextTick = require('./next-tick')

function AbstractChainedBatch (db) {
  if (typeof db !== 'object' || db === null) {
    throw new TypeError('First argument must be an abstract-leveldown compliant store')
  }

  this.db = db
  this._operations = []
  this._written = false
}

AbstractChainedBatch.prototype._checkWritten = function () {
  if (this._written) {
    throw new Error('write() already called on this batch')
  }
}

AbstractChainedBatch.prototype.put = function (key, value) {
  this._checkWritten()

  var err = this.db._checkKey(key) || this.db._checkValue(value)
  if (err) throw err

  key = this.db._serializeKey(key)
  value = this.db._serializeValue(value)

  this._put(key, value)

  return this
}

AbstractChainedBatch.prototype._put = function (key, value) {
  this._operations.push({ type: 'put', key: key, value: value })
}

AbstractChainedBatch.prototype.del = function (key) {
  this._checkWritten()

  var err = this.db._checkKey(key)
  if (err) throw err

  key = this.db._serializeKey(key)
  this._del(key)

  return this
}

AbstractChainedBatch.prototype._del = function (key) {
  this._operations.push({ type: 'del', key: key })
}

AbstractChainedBatch.prototype.clear = function () {
  this._checkWritten()
  this._clear()

  return this
}

AbstractChainedBatch.prototype._clear = function () {
  this._operations = []
}

AbstractChainedBatch.prototype.write = function (options, callback) {
  this._checkWritten()

  if (typeof options === 'function') { callback = options }
  if (typeof callback !== 'function') {
    throw new Error('write() requires a callback argument')
  }
  if (typeof options !== 'object' || options === null) {
    options = {}
  }

  this._written = true
  this._write(options, callback)
}

AbstractChainedBatch.prototype._write = function (options, callback) {
  this.db._batch(this._operations, options, callback)
}

// Expose browser-compatible nextTick for dependents
AbstractChainedBatch.prototype._nextTick = nextTick

module.exports = AbstractChainedBatch

},{"./next-tick":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/next-tick-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-iterator.js":[function(require,module,exports){
var nextTick = require('./next-tick')

function AbstractIterator (db) {
  if (typeof db !== 'object' || db === null) {
    throw new TypeError('First argument must be an abstract-leveldown compliant store')
  }

  this.db = db
  this._ended = false
  this._nexting = false
}

AbstractIterator.prototype.next = function (callback) {
  var self = this

  if (typeof callback !== 'function') {
    throw new Error('next() requires a callback argument')
  }

  if (self._ended) {
    nextTick(callback, new Error('cannot call next() after end()'))
    return self
  }

  if (self._nexting) {
    nextTick(callback, new Error('cannot call next() before previous next() has completed'))
    return self
  }

  self._nexting = true
  self._next(function () {
    self._nexting = false
    callback.apply(null, arguments)
  })

  return self
}

AbstractIterator.prototype._next = function (callback) {
  nextTick(callback)
}

AbstractIterator.prototype.seek = function (target) {
  if (this._ended) {
    throw new Error('cannot call seek() after end()')
  }
  if (this._nexting) {
    throw new Error('cannot call seek() before next() has completed')
  }

  target = this.db._serializeKey(target)
  this._seek(target)
}

AbstractIterator.prototype._seek = function (target) {}

AbstractIterator.prototype.end = function (callback) {
  if (typeof callback !== 'function') {
    throw new Error('end() requires a callback argument')
  }

  if (this._ended) {
    return nextTick(callback, new Error('end() already called on iterator'))
  }

  this._ended = true
  this._end(callback)
}

AbstractIterator.prototype._end = function (callback) {
  nextTick(callback)
}

// Expose browser-compatible nextTick for dependents
AbstractIterator.prototype._nextTick = nextTick

module.exports = AbstractIterator

},{"./next-tick":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/next-tick-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-leveldown.js":[function(require,module,exports){
var xtend = require('xtend')
var supports = require('level-supports')
var Buffer = require('buffer').Buffer
var AbstractIterator = require('./abstract-iterator')
var AbstractChainedBatch = require('./abstract-chained-batch')
var nextTick = require('./next-tick')
var hasOwnProperty = Object.prototype.hasOwnProperty
var rangeOptions = 'start end gt gte lt lte'.split(' ')

function AbstractLevelDOWN (manifest) {
  this.status = 'new'

  // TODO (next major): make this mandatory
  this.supports = supports(manifest, {
    status: true
  })
}

AbstractLevelDOWN.prototype.open = function (options, callback) {
  var self = this
  var oldStatus = this.status

  if (typeof options === 'function') callback = options

  if (typeof callback !== 'function') {
    throw new Error('open() requires a callback argument')
  }

  if (typeof options !== 'object' || options === null) options = {}

  options.createIfMissing = options.createIfMissing !== false
  options.errorIfExists = !!options.errorIfExists

  this.status = 'opening'
  this._open(options, function (err) {
    if (err) {
      self.status = oldStatus
      return callback(err)
    }
    self.status = 'open'
    callback()
  })
}

AbstractLevelDOWN.prototype._open = function (options, callback) {
  nextTick(callback)
}

AbstractLevelDOWN.prototype.close = function (callback) {
  var self = this
  var oldStatus = this.status

  if (typeof callback !== 'function') {
    throw new Error('close() requires a callback argument')
  }

  this.status = 'closing'
  this._close(function (err) {
    if (err) {
      self.status = oldStatus
      return callback(err)
    }
    self.status = 'closed'
    callback()
  })
}

AbstractLevelDOWN.prototype._close = function (callback) {
  nextTick(callback)
}

AbstractLevelDOWN.prototype.get = function (key, options, callback) {
  if (typeof options === 'function') callback = options

  if (typeof callback !== 'function') {
    throw new Error('get() requires a callback argument')
  }

  var err = this._checkKey(key)
  if (err) return nextTick(callback, err)

  key = this._serializeKey(key)

  if (typeof options !== 'object' || options === null) options = {}

  options.asBuffer = options.asBuffer !== false

  this._get(key, options, callback)
}

AbstractLevelDOWN.prototype._get = function (key, options, callback) {
  nextTick(function () { callback(new Error('NotFound')) })
}

AbstractLevelDOWN.prototype.put = function (key, value, options, callback) {
  if (typeof options === 'function') callback = options

  if (typeof callback !== 'function') {
    throw new Error('put() requires a callback argument')
  }

  var err = this._checkKey(key) || this._checkValue(value)
  if (err) return nextTick(callback, err)

  key = this._serializeKey(key)
  value = this._serializeValue(value)

  if (typeof options !== 'object' || options === null) options = {}

  this._put(key, value, options, callback)
}

AbstractLevelDOWN.prototype._put = function (key, value, options, callback) {
  nextTick(callback)
}

AbstractLevelDOWN.prototype.del = function (key, options, callback) {
  if (typeof options === 'function') callback = options

  if (typeof callback !== 'function') {
    throw new Error('del() requires a callback argument')
  }

  var err = this._checkKey(key)
  if (err) return nextTick(callback, err)

  key = this._serializeKey(key)

  if (typeof options !== 'object' || options === null) options = {}

  this._del(key, options, callback)
}

AbstractLevelDOWN.prototype._del = function (key, options, callback) {
  nextTick(callback)
}

AbstractLevelDOWN.prototype.batch = function (array, options, callback) {
  if (!arguments.length) return this._chainedBatch()

  if (typeof options === 'function') callback = options

  if (typeof array === 'function') callback = array

  if (typeof callback !== 'function') {
    throw new Error('batch(array) requires a callback argument')
  }

  if (!Array.isArray(array)) {
    return nextTick(callback, new Error('batch(array) requires an array argument'))
  }

  if (array.length === 0) {
    return nextTick(callback)
  }

  if (typeof options !== 'object' || options === null) options = {}

  var serialized = new Array(array.length)

  for (var i = 0; i < array.length; i++) {
    if (typeof array[i] !== 'object' || array[i] === null) {
      return nextTick(callback, new Error('batch(array) element must be an object and not `null`'))
    }

    var e = xtend(array[i])

    if (e.type !== 'put' && e.type !== 'del') {
      return nextTick(callback, new Error("`type` must be 'put' or 'del'"))
    }

    var err = this._checkKey(e.key)
    if (err) return nextTick(callback, err)

    e.key = this._serializeKey(e.key)

    if (e.type === 'put') {
      var valueErr = this._checkValue(e.value)
      if (valueErr) return nextTick(callback, valueErr)

      e.value = this._serializeValue(e.value)
    }

    serialized[i] = e
  }

  this._batch(serialized, options, callback)
}

AbstractLevelDOWN.prototype._batch = function (array, options, callback) {
  nextTick(callback)
}

AbstractLevelDOWN.prototype.clear = function (options, callback) {
  if (typeof options === 'function') {
    callback = options
  } else if (typeof callback !== 'function') {
    throw new Error('clear() requires a callback argument')
  }

  options = cleanRangeOptions(this, options)
  options.reverse = !!options.reverse
  options.limit = 'limit' in options ? options.limit : -1

  this._clear(options, callback)
}

AbstractLevelDOWN.prototype._clear = function (options, callback) {
  // Avoid setupIteratorOptions, would serialize range options a second time.
  options.keys = true
  options.values = false
  options.keyAsBuffer = true
  options.valueAsBuffer = true

  var iterator = this._iterator(options)
  var emptyOptions = {}
  var self = this

  var next = function (err) {
    if (err) {
      return iterator.end(function () {
        callback(err)
      })
    }

    iterator.next(function (err, key) {
      if (err) return next(err)
      if (key === undefined) return iterator.end(callback)

      // This could be optimized by using a batch, but the default _clear
      // is not meant to be fast. Implementations have more room to optimize
      // if they override _clear. Note: using _del bypasses key serialization.
      self._del(key, emptyOptions, next)
    })
  }

  next()
}

AbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {
  options = cleanRangeOptions(this, options)

  options.reverse = !!options.reverse
  options.keys = options.keys !== false
  options.values = options.values !== false
  options.limit = 'limit' in options ? options.limit : -1
  options.keyAsBuffer = options.keyAsBuffer !== false
  options.valueAsBuffer = options.valueAsBuffer !== false

  return options
}

function cleanRangeOptions (db, options) {
  var result = {}

  for (var k in options) {
    if (!hasOwnProperty.call(options, k)) continue

    var opt = options[k]

    if (isRangeOption(k)) {
      // Note that we don't reject nullish and empty options here. While
      // those types are invalid as keys, they are valid as range options.
      opt = db._serializeKey(opt)
    }

    result[k] = opt
  }

  return result
}

function isRangeOption (k) {
  return rangeOptions.indexOf(k) !== -1
}

AbstractLevelDOWN.prototype.iterator = function (options) {
  if (typeof options !== 'object' || options === null) options = {}
  options = this._setupIteratorOptions(options)
  return this._iterator(options)
}

AbstractLevelDOWN.prototype._iterator = function (options) {
  return new AbstractIterator(this)
}

AbstractLevelDOWN.prototype._chainedBatch = function () {
  return new AbstractChainedBatch(this)
}

AbstractLevelDOWN.prototype._serializeKey = function (key) {
  return key
}

AbstractLevelDOWN.prototype._serializeValue = function (value) {
  return value
}

AbstractLevelDOWN.prototype._checkKey = function (key) {
  if (key === null || key === undefined) {
    return new Error('key cannot be `null` or `undefined`')
  } else if (Buffer.isBuffer(key) && key.length === 0) {
    return new Error('key cannot be an empty Buffer')
  } else if (key === '') {
    return new Error('key cannot be an empty String')
  } else if (Array.isArray(key) && key.length === 0) {
    return new Error('key cannot be an empty Array')
  }
}

AbstractLevelDOWN.prototype._checkValue = function (value) {
  if (value === null || value === undefined) {
    return new Error('value cannot be `null` or `undefined`')
  }
}

// Expose browser-compatible nextTick for dependents
AbstractLevelDOWN.prototype._nextTick = nextTick

module.exports = AbstractLevelDOWN

},{"./abstract-chained-batch":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-chained-batch.js","./abstract-iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-iterator.js","./next-tick":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/next-tick-browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","level-supports":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-supports/index.js","xtend":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/immutable.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/index.js":[function(require,module,exports){
exports.AbstractLevelDOWN = require('./abstract-leveldown')
exports.AbstractIterator = require('./abstract-iterator')
exports.AbstractChainedBatch = require('./abstract-chained-batch')

},{"./abstract-chained-batch":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-chained-batch.js","./abstract-iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-iterator.js","./abstract-leveldown":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/abstract-leveldown.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/next-tick-browser.js":[function(require,module,exports){
module.exports = require('immediate')

},{"immediate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/array-filter/index.js":[function(require,module,exports){

/**
 * Array#filter.
 *
 * @param {Array} arr
 * @param {Function} fn
 * @param {Object=} self
 * @return {Array}
 * @throw TypeError
 */

module.exports = function (arr, fn, self) {
  if (arr.filter) return arr.filter(fn, self);
  if (void 0 === arr || null === arr) throw new TypeError;
  if ('function' != typeof fn) throw new TypeError;
  var ret = [];
  for (var i = 0; i < arr.length; i++) {
    if (!hasOwn.call(arr, i)) continue;
    var val = arr[i];
    if (fn.call(self, val, i, arr)) ret.push(val);
  }
  return ret;
};

var hasOwn = Object.prototype.hasOwnProperty;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1.js":[function(require,module,exports){
'use strict';

const asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/api.js","./asn1/base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/index.js","./asn1/constants":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/constants/index.js","./asn1/decoders":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/index.js","./asn1/encoders":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/index.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/api.js":[function(require,module,exports){
'use strict';

const encoders = require('./encoders');
const decoders = require('./decoders');
const inherits = require('inherits');

const api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
}

Entity.prototype._createNamed = function createNamed(Base) {
  const name = this.name;

  function Generated(entity) {
    this._initNamed(entity, name);
  }
  inherits(Generated, Base);
  Generated.prototype._initNamed = function _initNamed(entity, name) {
    Base.call(this, entity, name);
  };

  return new Generated(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"./decoders":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/index.js","./encoders":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/buffer.js":[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Reporter = require('../base/reporter').Reporter;
const Buffer = require('safer-buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
  if (data instanceof DecoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    Buffer.isBuffer(data.base) &&
    data.constructor.name === 'DecoderBuffer' &&
    typeof data.offset === 'number' &&
    typeof data.length === 'number' &&
    typeof data.save === 'function' &&
    typeof data.restore === 'function' &&
    typeof data.isEmpty === 'function' &&
    typeof data.readUInt8 === 'function' &&
    typeof data.skip === 'function' &&
    typeof data.raw === 'function';

  return isCompatible;
};

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  const res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
};

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  const res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
};

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
};

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!EncoderBuffer.isEncoderBuffer(item))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
  if (data instanceof EncoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    data.constructor.name === 'EncoderBuffer' &&
    typeof data.length === 'number' &&
    typeof data.join === 'function';

  return isCompatible;
};

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = Buffer.alloc(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base/reporter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/reporter.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safer-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safer-buffer/safer.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/index.js":[function(require,module,exports){
'use strict';

const base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/buffer.js","./node":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/node.js","./reporter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/reporter.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/node.js":[function(require,module,exports){
'use strict';

const Reporter = require('../base/reporter').Reporter;
const EncoderBuffer = require('../base/buffer').EncoderBuffer;
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const assert = require('minimalistic-assert');

// Supported tags
const tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
const methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
const overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent, name) {
  const state = {};
  this._baseState = state;

  state.name = name;
  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

const stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  const state = this._baseState;
  const cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  const res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  const state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      const clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  const state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  const state = this._baseState;

  // Filter children and args
  const children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      const res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        const value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    const state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    const state = this._baseState;
    const args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  const state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  const state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  const state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  const state = this._baseState;
  const args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  const state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  const state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  const state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  const state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  let result = state['default'];
  let present = true;

  let prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    let tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      const save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  let prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      const explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    const start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      let save;
      if (state.any)
        save = input.save();
      const body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any) {
      // no-op
    } else if (state.choice === null) {
      result = this._decodeGeneric(state.tag, input, options);
    } else {
      result = this._decodeChoice(input, options);
    }

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      const data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
        ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  const state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
      ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  const state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  const state = this._baseState;
  let result = null;
  let match = false;

  Object.keys(state.choice).some(function(key) {
    const save = input.save();
    const node = state.choice[key];
    try {
      const value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  const state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  const result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  let result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default'];
    else
      return;
  }

  // Encode children first
  let content = null;
  let primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      const prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      const res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      const child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        const state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  if (!state.any && state.choice === null) {
    const tag = state.implicit !== null ? state.implicit : state.tag;
    const cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  const state = this._baseState;

  const node = state.choice[data.type];
  if (!node) {
    assert(
      false,
      data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  const state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
};

},{"../base/buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/buffer.js","../base/reporter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/reporter.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/reporter.js":[function(require,module,exports){
'use strict';

const inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  const state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  const state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  const state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  const state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  const state = this._reporterState;

  const prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  const state = this._reporterState;

  const now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  let err;
  const state = this._reporterState;

  const inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  const state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
}
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/constants/der.js":[function(require,module,exports){
'use strict';

// Helper
function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
}

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = reverse(exports.tag);

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/constants/index.js":[function(require,module,exports){
'use strict';

const constants = exports;

// Helper
constants._reverse = function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/constants/der.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/der.js":[function(require,module,exports){
'use strict';

const inherits = require('inherits');

const bignum = require('bn.js');
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!DecoderBuffer.isDecoderBuffer(data)) {
    data = new DecoderBuffer(data, options);
  }

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  const state = buffer.save();
  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  const decodedTag = derDecodeTag(buffer,
    'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  let len = derDecodeLen(buffer,
    decodedTag.primitive,
    'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  const state = buffer.save();
  const res = this._skipUntilEnd(
    buffer,
    'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  for (;;) {
    const tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    const len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    let res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len);
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
  options) {
  const result = [];
  while (!buffer.isEmpty()) {
    const possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    const res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    const unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    const raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    let str = '';
    for (let i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    const numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    const printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  let result;
  const identifiers = [];
  let ident = 0;
  let subident = 0;
  while (!buffer.isEmpty()) {
    subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  const first = (identifiers[0] / 40) | 0;
  const second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    let tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  const str = buffer.raw().toString();

  let year;
  let mon;
  let day;
  let hour;
  let min;
  let sec;
  if (tag === 'gentime') {
    year = str.slice(0, 4) | 0;
    mon = str.slice(4, 6) | 0;
    day = str.slice(6, 8) | 0;
    hour = str.slice(8, 10) | 0;
    min = str.slice(10, 12) | 0;
    sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    year = str.slice(0, 2) | 0;
    mon = str.slice(2, 4) | 0;
    day = str.slice(4, 6) | 0;
    hour = str.slice(6, 8) | 0;
    min = str.slice(8, 10) | 0;
    sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull() {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  const res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  const raw = buffer.raw();
  let res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  let tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  const cls = der.tagClass[tag >> 6];
  const primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    let oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  const tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  let len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  const num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (let i = 0; i < num; i++) {
    len <<= 8;
    const j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../base/buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/buffer.js","../base/node":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/node.js","../constants/der":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/constants/der.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/index.js":[function(require,module,exports){
'use strict';

const decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/der.js","./pem":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/pem.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/pem.js":[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;

const DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  const lines = data.toString().split(/[\r\n]+/g);

  const label = options.label.toUpperCase();

  const re = /^-----(BEGIN|END) ([^-]+)-----$/;
  let start = -1;
  let end = -1;
  for (let i = 0; i < lines.length; i++) {
    const match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  const base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9+/=]+/gi, '');

  const input = Buffer.from(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/decoders/der.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safer-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safer-buffer/safer.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/der.js":[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
  primitive,
  cls,
  content) {
  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    const header = Buffer.alloc(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  let lenOctets = 1;
  for (let i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  const header = Buffer.alloc(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    const buf = Buffer.alloc(str.length * 2);
    for (let i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s.]+/g);
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  let size = 0;
  for (let i = 0; i < id.length; i++) {
    let ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  const objid = Buffer.alloc(size);
  let offset = objid.length - 1;
  for (let i = id.length - 1; i >= 0; i--) {
    let ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  let str;
  const date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getUTCFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getUTCFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    const numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = Buffer.from(numArray);
  }

  if (Buffer.isBuffer(num)) {
    let size = num.length;
    if (num.length === 0)
      size++;

    const out = Buffer.alloc(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0;
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  let size = 1;
  for (let i = num; i >= 0x100; i >>= 8)
    size++;

  const out = new Array(size);
  for (let i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(Buffer.from(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  const state = this._baseState;
  let i;
  if (state['default'] === null)
    return false;

  const data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  let res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../base/node":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/base/node.js","../constants/der":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/constants/der.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safer-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safer-buffer/safer.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/index.js":[function(require,module,exports){
'use strict';

const encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/der.js","./pem":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/pem.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/pem.js":[function(require,module,exports){
'use strict';

const inherits = require('inherits');

const DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  const buf = DEREncoder.prototype.encode.call(this, data);

  const p = buf.toString('base64');
  const out = [ '-----BEGIN ' + options.label + '-----' ];
  for (let i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1/encoders/der.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js":[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/assert.js":[function(require,module,exports){
(function (global){(function (){
'use strict';

var objectAssign = require('object-assign');

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:
// NB: The URL to the CommonJS spec is kept just for tradition.
//     node-assert has evolved a lot since then, both in API and behavior.

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

// Expose a strict only variant of assert
function strict(value, message) {
  if (!value) fail(value, true, message, '==', strict);
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"object-assign":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/object-assign/index.js","util/":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/node_modules/util/util.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/node_modules/inherits/inherits_browser.js":[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/node_modules/util/support/isBufferBrowser.js":[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/node_modules/util/util.js":[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/node_modules/util/support/isBufferBrowser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/async-append-only-log/index.js":[function(require,module,exports){
(function (Buffer){(function (){
const Cache = require('hashlru')
const RAF = require('polyraf')
const Obv = require('obz')
const debounce = require('lodash.debounce')
const debug = require('debug')("async-flumelog")

const Stream = require("./stream")

function alwaysTrue() { return true }
function id(e) { return e }
var _codec = {encode: id, decode: id, buffer: true}

module.exports = function (filename, opts) {
  var cache = new Cache(1024) // this is potentially 65mb!
  var raf = RAF(filename)
  var blockSize = opts && opts.blockSize || 65536
  var codec = opts && opts.codec || _codec
  var writeTimeout = opts && opts.writeTimeout || 250
  var validateRecord = opts && opts.validateRecord || alwaysTrue
  var self

  // offset of last written record
  var since = Obv()

  var waiting = []
  const waitingDrain = new Map() // blockIndex -> []
  const blocksToBeWritten = new Map() // blockIndex -> { block, fileOffset }

  var latestBlock = null
  var latestBlockIndex = null
  var nextWriteBlockOffset = null

  raf.stat(function (err, stat) {
    if (err) debug("failed to stat " + filename, err)

    var len = stat ? stat.size : -1

    if (len <= 0) {
      debug("empty file")
      latestBlock = Buffer.alloc(blockSize)
      latestBlockIndex = 0
      nextWriteBlockOffset = 0
      cache.set(0, latestBlock)
      since.set(-1)
      while(waiting.length) waiting.shift()()
    } else {
      raf.read(len - blockSize, blockSize, (err, buffer) => {
        if (err) throw err

        getLastGoodRecord(buffer, len - blockSize, (err, recordOffset) => {
          since.set(len - blockSize + recordOffset)

          latestBlock = buffer
          var recordLength = buffer.readUInt16LE(recordOffset)
          nextWriteBlockOffset = recordOffset + 2 + recordLength
          latestBlockIndex = len / blockSize - 1

          debug("opened file, since: %d", since.value)

          while(waiting.length) waiting.shift()()
        })
      })
    }
  })

  function getRecordOffset(offset) {
    return offset % blockSize
  }

  function getBlockIndex(offset) {
    return (offset - getRecordOffset(offset)) / blockSize
  }

  function getNextBlockIndex(offset) {
    return (getBlockIndex(offset) + 1) * blockSize
  }

  function fixBlock(buffer, i, offset, lastOk, cb) {
    debug("found record that does not validate, fixing last block", i)

    var goodData = buffer.slice(0, i)
    const newBlock = Buffer.alloc(blockSize)
    goodData.copy(newBlock, 0)

    raf.write(offset, newBlock, () => {
      cb(null, lastOk)
    })
  }

  function getLastGoodRecord(buffer, offset, cb) {
    for (var i = 0, lastOk = 0; i < buffer.length;) {
      var length = buffer.readUInt16LE(i)
      if (length == 0)
        break
      else {
        if (i + 2 + length > blockSize) {
          // corrupt length data
          return fixBlock(buffer, i, offset, lastOk, cb)
        } else {
          var data = buffer.slice(i + 2, i + 2 + length)
          if (validateRecord(data)) {
            lastOk = i
            i += 2 + length
          } else {
            // corrupt message data
            return fixBlock(buffer, i, offset, lastOk, cb)
          }
        }
      }
    }

    cb(null, lastOk)
  }

  function getBlock(offset, cb) {
    var blockStart = offset - getRecordOffset(offset)
    var blockIndex = blockStart / blockSize

    var cachedBlock = cache.get(blockIndex)
    if (cachedBlock) {
      debug("getting offset %d from cache", offset)
      cb(null, cachedBlock)
    } else {
      debug("getting offset %d from disc", offset)
      raf.read(blockStart, blockSize, (err, buffer) => {
        cache.set(getBlockIndex(offset), buffer)
        cb(err, buffer)
      })
    }
  }

  function getData(buffer, recordOffset, cb) {
    var length = buffer.readUInt16LE(recordOffset)
    var data = buffer.slice(recordOffset + 2, recordOffset + 2 + length)

    if (data.every(x => x === 0)) {
      const err = new Error('item has been deleted')
      err.code = 'flumelog:deleted'
      return cb(err)
    }
    else
      cb(null, codec.decode(data))
  }

  function get(offset, cb) {
    getBlock(offset, (err, buffer) => {
      if (err) return cb(err)
      getData(buffer, getRecordOffset(offset), cb)
    })
  }

  // nextOffset can take 3 values:
  // -1: end of stream
  //  0: need a new block
  // >0: next record within block
  function getDataNextOffset(buffer, offset) {
    const recordOffset = getRecordOffset(offset)
    const blockIndex = getBlockIndex(offset)

    const length = buffer.readUInt16LE(recordOffset)
    const data = buffer.slice(recordOffset + 2, recordOffset + 2 + length)

    const nextLength = buffer.readUInt16LE(recordOffset + 2 + length)
    let nextOffset = recordOffset + 2 + length + blockIndex * blockSize
    if (nextLength == 0 && getNextBlockIndex(offset) > since.value)
      nextOffset = -1
    else if (nextLength == 0)
      nextOffset = 0

    if (data.every(x => x === 0))
      return [nextOffset, null]
    else
      return [nextOffset, codec.decode(data)]
  }

  function del(offset, cb)
  {
    getBlock(offset, (err, buffer) => {
      if (err) return cb(err)

      const recordOffset = getRecordOffset(offset)
      const recordLength = buffer.readUInt16LE(recordOffset)
      const nullBytes = Buffer.alloc(recordLength)
      nullBytes.copy(buffer, recordOffset+2)

      // we write directly here to make normal write simpler
      raf.write(offset - recordOffset, buffer, cb)
    })
  }

  function appendFrame(buffer, data, offset)
  {
    buffer.writeUInt16LE(data.length, offset)
    data.copy(buffer, offset+2)
  }

  function frameSize(buffer)
  {
    return buffer.length + 2
  }

  function appendSingle(data) {
    let encodedData = codec.encode(data)
    if (typeof encodedData == 'string')
      encodedData = Buffer.from(encodedData)

    if (frameSize(encodedData) + 2 > blockSize)
      throw new Error("data larger than block size")

    if (nextWriteBlockOffset + frameSize(encodedData) + 2 > blockSize)
    {
      // doesn't fit
      var buffer = Buffer.alloc(blockSize)
      latestBlock = buffer
      latestBlockIndex += 1
      nextWriteBlockOffset = 0
      debug("data doesn't fit current block, creating new")
    }

    appendFrame(latestBlock, encodedData, nextWriteBlockOffset)
    cache.set(latestBlockIndex, latestBlock) // update cache
    const fileOffset = nextWriteBlockOffset + latestBlockIndex * blockSize
    nextWriteBlockOffset += frameSize(encodedData)
    blocksToBeWritten.set(latestBlockIndex, { block: latestBlock, fileOffset })
    scheduleWrite()
    debug("data inserted at offset %d", fileOffset)
    return fileOffset
  }

  function append(data, cb)
  {
    if (Array.isArray(data)) {
      var fileOffset = 0
      for (var i = 0, length = data.length; i < length; ++i)
        fileOffset = appendSingle(data[i])

      cb(null, fileOffset)
    } else
      cb(null, appendSingle(data))
  }

  var scheduleWrite = debounce(write, writeTimeout)

  function writeBlock(blockIndex) {
    if (!blocksToBeWritten.has(blockIndex)) return
    const { block, fileOffset } = blocksToBeWritten.get(blockIndex)
    blocksToBeWritten.delete(blockIndex)
    const drainsBefore = (waitingDrain.get(blockIndex) || []).slice(0)

    debug("writing block of size: %d, to offset: %d",
          block.length, blockIndex * blockSize)
    raf.write(blockIndex * blockSize, block, (err) => {
      if (err) {
        debug("failed to write block %d", blockIndex)
        throw err
      } else {
        since.set(fileOffset)

        // write values to live streams
        self.streams.forEach(stream => {
          if (!stream.ended && stream.live && !stream.writing) {
            if (stream.cursor === -1)
              stream.cursor = 0
            else // the cursor still at last position
              stream.skipFirst = true

            stream.writing = true
            stream.resume()
          }
        })

        debug("draining the waiting queue for %d, items: %d", blockIndex, drainsBefore.length)
        for (var i = 0; i < drainsBefore.length; ++i)
          drainsBefore[i]()

        let drainsAfter = waitingDrain.get(blockIndex) || []
        if (drainsBefore.length == drainsAfter.length)
          waitingDrain.delete(blockIndex)
        else if (drainsAfter.length === 0)
          waitingDrain.delete(blockIndex)
        else
          waitingDrain.set(blockIndex, waitingDrain.get(blockIndex).slice(drainsBefore.length))

        write() // next!
      }
    })
  }

  function write() {
    for (var blockIndex of blocksToBeWritten.keys()) {
      writeBlock(blockIndex)
      return // just one at a time
    }
  }

  function close(cb) {
    self.onDrain(function () {
      while (self.streams.length)
        self.streams.shift().abort(new Error('async-flumelog: closed'))
      raf.close(cb)
    })
  }

  function onLoad (fn) {
    return function (arg, cb) {
      if (latestBlock === null)
        waiting.push(function () { fn(arg, cb) })
      else fn(arg, cb)
    }
  }

  function onReady(fn) {
    if (latestBlock != null) fn()
    else waiting.push(fn)
  }

  function last(iterable) {
    let res = null
    for (let x of iterable) res = x
    return res
  }

  return self = {
    get: onLoad(get),
    del: onLoad(del),
    append: onLoad(append),
    close: onLoad(close),
    since,
    onReady,

    onDrain: onLoad(function (fn) {
      if (blocksToBeWritten.size === 0) fn()
      else {
        const latestBlockIndex = last(blocksToBeWritten.keys())
        const drains = waitingDrain.get(latestBlockIndex) || []
        drains.push(fn)
        waitingDrain.set(latestBlockIndex, drains)
      }
    }),

    filename,

    // streaming
    getNextBlockIndex,
    getDataNextOffset,
    getBlock,
    stream: function (opts) {
      var stream = new Stream(self, opts)
      self.streams.push(stream)
      return stream
    },
    streams: [],
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/async-append-only-log/stream.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","hashlru":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hashlru/index.js","lodash.debounce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/lodash.debounce/index.js","obz":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/obz/index.js","polyraf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/polyraf/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/async-append-only-log/stream.js":[function(require,module,exports){
var ltgt = require('ltgt')
var looper = require('looper')

module.exports = Stream

function Stream (blocks, opts) {
  opts = opts || {}

  this.blocks = blocks
  this.live = !!opts.live
  this.offsets = opts.offsets !== false
  this.values = opts.values !== false
  this.limit = opts.limit || 0

  this.min = this.max = this.min_inclusive = this.max_inclusive = null
  this.cursor = -1
  this.count = 0
  this.writing = false
  this.ended = false
  this.skipFirst = false

  var self = this
  this.opts = opts
  this.blocks.onReady(this._ready.bind(this))
}

Stream.prototype._ready = function () {
  this.min = ltgt.lowerBound(this.opts, null)
  if (ltgt.lowerBoundInclusive(this.opts))
    this.min_inclusive = this.min

  this.max = ltgt.upperBound(this.opts, null)
  if (ltgt.upperBoundInclusive(this.opts))
    this.max_inclusive = this.max

  //note: cursor has default of the current length or zero.
  this.cursor = ltgt.lowerBound(this.opts, 0)

  if (this.cursor < 0) this.cursor = 0

  if (this.opts.gt >= 0)
    this.skipFirst = true

  if (!this.live && this.cursor === 0 && this.blocks.since.value == -1)
    this.ended = true

  if (this.live && this.cursor === 0 && this.blocks.since.value == -1)
    this.cursor = -1

  this.resume()
}

Stream.prototype._writeToSink = function (data) {
  if (this.values) {
    if (this.offsets) this.sink.write({ offset: this.cursor, value: data })
    else this.sink.write(data)
  }
  else
    this.sink.write(this.cursor)
}

Stream.prototype._handleBlock = function(block) {
  while (true) {
    const result = this.blocks.getDataNextOffset(block, this.cursor)
    const o = this.cursor

    if (this.skipFirst) {
      this.skipFirst = false

      if (result[0] > 0) {
        this.cursor = result[0]
        continue
      } else if (result[0] == 0) {
        return true // get next block
      } else if (result[0] == -1) {
        if (this.live === true)
          this.writing = false
        return false
      }
    }

    this.count++

    if (
      (this.min === null || this.min < o || this.min_inclusive === o) &&
      (this.max === null || this.max > o || this.max_inclusive === o)
    ) {
      this._writeToSink(result[1])

      if (result[0] > 0)
        this.cursor = result[0]
      else if (result[0] == 0) {
        return true // get next block
      } else if (result[0] == -1) {
        if (this.live === true)
          this.writing = false
        return false
      }

      if (this.limit > 0 && this.count >= this.limit)
        return false
    } else
      return false
  }
}

Stream.prototype._resume = function () {
  if (!this.sink || this.sink.paused) return

  if (this.ended && !this.sink.ended) {
    if (this.ended === true && !this.live)
      return this.abort()
    else
      return this.sink.end(this.ended === true ? null : this.ended)
  }

  if (this.cursor === -1)
    return // not ready yet

  if (this.live && !this.writing && this.cursor > 0)
    return // wait for data

  this.writing = true
  this.blocks.getBlock(this.cursor, (err, block) => {
    if (err) {
      console.error(err)
      return
    }

    if (this._handleBlock(block)) {
      this.cursor = this.blocks.getNextBlockIndex(this.cursor)
      this._next()
    }
    else if (this.live !== true)
      this.abort()
  })
}

Stream.prototype.resume = function () {
  this._next = looper(this._resume.bind(this))
  this._next()
}

Stream.prototype.abort = function (err) {
  //only thing to do is unsubscribe from live stream.
  //but append isn't implemented yet...
  this.ended = err || true
  var i = this.blocks.streams.indexOf(this)
  if (~i) this.blocks.streams.splice(i, 1)
  if (!this.sink.ended && this.sink.end)
    this.sink.end(err === true ? null : err)
}

Stream.prototype.pipe = require('push-stream/pipe')

},{"looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/looper/index.js","ltgt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ltgt/index.js","push-stream/pipe":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/pipe.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomic-file/browser.js":[function(require,module,exports){
const Store = require('./store/idb')
const Inject = require('./inject')

module.exports = function (filename, suffix, codec) {
  return Inject(Store(filename, suffix, codec && codec.buffer), codec)
}

},{"./inject":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomic-file/inject.js","./store/idb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomic-file/store/idb.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomic-file/inject.js":[function(require,module,exports){
'use strict'
var mutexify = require('mutexify')

module.exports = function (store, _codec) {
  var codec = _codec || require('flumecodec/json')
  var lock = mutexify()
  var value

  return {
    get: function (cb) {
      if(value) return cb(null, value)
      else store.get(function (err, _value) {
        if(err) return cb(err)
        try {
          value = codec.decode(_value)
        } catch (err) {
          return cb(err)
        }
        cb(null, value)
      })
    },
    //only allow one update at a time.
    set: function (_value, cb) {
      lock(function (unlock) {
        store.set(codec.encode(_value), function (err) {
          if(!err) value=_value
          unlock(cb, err, _value)
        })
      })
    },
    destroy: function (cb) {
      lock(function (unlock) {
        store.destroy(function (err) {
          value=null
          unlock(cb, err)
        })
      })
    }
  }
}


},{"flumecodec/json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/flumecodec/json.js","mutexify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mutexify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomic-file/store/idb.js":[function(require,module,exports){
(function (Buffer){(function (){
const IdbKvStore = require('idb-kv-store')

module.exports = function (file, suffix, isBuffer) {
  const parts = file.split('/')
  const key = parts.pop()
  const storename = parts.join('/')
  const store = new IdbKvStore(storename, { disableBroadcast: true })
  return {
    set: function (value, cb) {
      store.set(key, isBuffer ? value.toString('base64') : value , cb)
    },
    get: function (cb) {
      store.get(key, function (err, value) {
        if(err) cb(err)
        else if(!value) cb(new Error('not found'))
        else cb(null, value && (isBuffer ? Buffer.from(value, 'base64') : value))
      })
    },
    destroy: function (cb) {
      store.remove(key, cb)
    }
  }
}





















}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","idb-kv-store":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/idb-kv-store/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically-universal/index.js":[function(require,module,exports){
(function (Buffer){(function (){
if (typeof localStorage === "undefined" || localStorage === null)
{
  module.exports = require('atomically')
}
else
{
  const IdbKvStore = require('idb-kv-store')
  const promisify = require('promisify-4loc')

  function getStoreAndKey(filename) {
    const parts = filename.split('/')
    const key = parts.pop()
    const storename = parts.join('/')
    const store = new IdbKvStore(storename, { disableBroadcast: true })
    return { store, key }
  }

  function isUint8Array(value) {
    return toString.call(value).indexOf('Uint8Array') !== -1
  }

  module.exports = {
    readFile: function(filename) {
      const { store, key } = getStoreAndKey(filename)
      const storeGet = store.get.bind(store)
      function get(key, cb) {
        storeGet(key, (err, value) => {
          if (err) return cb(err)
          else cb(null, isUint8Array(value) ? Buffer.from(value) : value)
        })
      }
      return promisify(get)(key)
    },
    writeFile: function(filename, value) {
      const { store, key } = getStoreAndKey(filename)
      return promisify(store.set.bind(store))(key, value)
    }
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"atomically":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","idb-kv-store":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/idb-kv-store/index.js","promisify-4loc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisify-4loc/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/consts.js":[function(require,module,exports){
(function (process){(function (){
"use strict";
/* CONSTS */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NOOP = exports.LIMIT_FILES_DESCRIPTORS = exports.LIMIT_BASENAME_LENGTH = exports.IS_USER_ROOT = exports.IS_POSIX = exports.DEFAULT_TIMEOUT_SYNC = exports.DEFAULT_TIMEOUT_ASYNC = exports.DEFAULT_WRITE_OPTIONS = exports.DEFAULT_READ_OPTIONS = exports.DEFAULT_FOLDER_MODE = exports.DEFAULT_FILE_MODE = exports.DEFAULT_ENCODING = void 0;
const DEFAULT_ENCODING = 'utf8';
exports.DEFAULT_ENCODING = DEFAULT_ENCODING;
const DEFAULT_FILE_MODE = 0o666;
exports.DEFAULT_FILE_MODE = DEFAULT_FILE_MODE;
const DEFAULT_FOLDER_MODE = 0o777;
exports.DEFAULT_FOLDER_MODE = DEFAULT_FOLDER_MODE;
const DEFAULT_READ_OPTIONS = {};
exports.DEFAULT_READ_OPTIONS = DEFAULT_READ_OPTIONS;
const DEFAULT_WRITE_OPTIONS = {};
exports.DEFAULT_WRITE_OPTIONS = DEFAULT_WRITE_OPTIONS;
const DEFAULT_TIMEOUT_ASYNC = 5000;
exports.DEFAULT_TIMEOUT_ASYNC = DEFAULT_TIMEOUT_ASYNC;
const DEFAULT_TIMEOUT_SYNC = 100;
exports.DEFAULT_TIMEOUT_SYNC = DEFAULT_TIMEOUT_SYNC;
const IS_POSIX = !!process.getuid;
exports.IS_POSIX = IS_POSIX;
const IS_USER_ROOT = process.getuid ? !process.getuid() : false;
exports.IS_USER_ROOT = IS_USER_ROOT;
const LIMIT_BASENAME_LENGTH = 128; //TODO: fetch the real limit from the filesystem //TODO: fetch the whole-path length limit too
exports.LIMIT_BASENAME_LENGTH = LIMIT_BASENAME_LENGTH;
const LIMIT_FILES_DESCRIPTORS = 10000; //TODO: fetch the real limit from the filesystem
exports.LIMIT_FILES_DESCRIPTORS = LIMIT_FILES_DESCRIPTORS;
const NOOP = () => { };
exports.NOOP = NOOP;

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/index.js":[function(require,module,exports){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeFileSync = exports.writeFile = exports.readFileSync = exports.readFile = void 0;
const path = require("path");
const consts_1 = require("./consts");
const fs_1 = require("./utils/fs");
const lang_1 = require("./utils/lang");
const scheduler_1 = require("./utils/scheduler");
const temp_1 = require("./utils/temp");
function readFile(filePath, options = consts_1.DEFAULT_READ_OPTIONS) {
    var _a;
    if (lang_1.default.isString(options))
        return readFile(filePath, { encoding: options });
    const timeout = Date.now() + ((_a = options.timeout) !== null && _a !== void 0 ? _a : consts_1.DEFAULT_TIMEOUT_ASYNC);
    return fs_1.default.readFileRetry(timeout)(filePath, options);
}
exports.readFile = readFile;
;
function readFileSync(filePath, options = consts_1.DEFAULT_READ_OPTIONS) {
    var _a;
    if (lang_1.default.isString(options))
        return readFileSync(filePath, { encoding: options });
    const timeout = Date.now() + ((_a = options.timeout) !== null && _a !== void 0 ? _a : consts_1.DEFAULT_TIMEOUT_SYNC);
    return fs_1.default.readFileSyncRetry(timeout)(filePath, options);
}
exports.readFileSync = readFileSync;
;
const writeFile = (filePath, data, options, callback) => {
    if (lang_1.default.isFunction(options))
        return writeFile(filePath, data, consts_1.DEFAULT_WRITE_OPTIONS, options);
    const promise = writeFileAsync(filePath, data, options);
    if (callback)
        promise.then(callback, callback);
    return promise;
};
exports.writeFile = writeFile;
const writeFileAsync = async (filePath, data, options = consts_1.DEFAULT_WRITE_OPTIONS) => {
    var _a;
    if (lang_1.default.isString(options))
        return writeFileAsync(filePath, data, { encoding: options });
    const timeout = Date.now() + ((_a = options.timeout) !== null && _a !== void 0 ? _a : consts_1.DEFAULT_TIMEOUT_ASYNC);
    let schedulerCustomDisposer = null, schedulerDisposer = null, tempDisposer = null, tempPath = null, fd = null;
    try {
        if (options.schedule)
            schedulerCustomDisposer = await options.schedule(filePath);
        schedulerDisposer = await scheduler_1.default.schedule(filePath);
        filePath = await fs_1.default.realpathAttempt(filePath) || filePath;
        [tempPath, tempDisposer] = temp_1.default.get(filePath, options.tmpCreate || temp_1.default.create, !(options.tmpPurge === false));
        const useStatChown = consts_1.IS_POSIX && lang_1.default.isUndefined(options.chown), useStatMode = lang_1.default.isUndefined(options.mode);
        if (useStatChown || useStatMode) {
            const stat = await fs_1.default.statAttempt(filePath);
            if (stat) {
                options = { ...options };
                if (useStatChown)
                    options.chown = { uid: stat.uid, gid: stat.gid };
                if (useStatMode)
                    options.mode = stat.mode;
            }
        }
        const parentPath = path.dirname(filePath);
        await fs_1.default.mkdirAttempt(parentPath, {
            mode: consts_1.DEFAULT_FOLDER_MODE,
            recursive: true
        });
        fd = await fs_1.default.openRetry(timeout)(tempPath, 'w', options.mode || consts_1.DEFAULT_FILE_MODE);
        if (options.tmpCreated)
            options.tmpCreated(tempPath);
        if (lang_1.default.isString(data)) {
            await fs_1.default.writeRetry(timeout)(fd, data, 0, options.encoding || consts_1.DEFAULT_ENCODING);
        }
        else if (!lang_1.default.isUndefined(data)) {
            await fs_1.default.writeRetry(timeout)(fd, data, 0, data.length, 0);
        }
        if (options.fsync !== false) {
            if (options.fsyncWait !== false) {
                await fs_1.default.fsyncRetry(timeout)(fd);
            }
            else {
                fs_1.default.fsyncAttempt(fd);
            }
        }
        await fs_1.default.closeRetry(timeout)(fd);
        fd = null;
        if (options.chown)
            await fs_1.default.chownAttempt(tempPath, options.chown.uid, options.chown.gid);
        if (options.mode)
            await fs_1.default.chmodAttempt(tempPath, options.mode);
        try {
            await fs_1.default.renameRetry(timeout)(tempPath, filePath);
        }
        catch (error) {
            if (error.code !== 'ENAMETOOLONG')
                throw error;
            await fs_1.default.renameRetry(timeout)(tempPath, temp_1.default.truncate(filePath));
        }
        tempDisposer();
        tempPath = null;
    }
    finally {
        if (fd)
            await fs_1.default.closeAttempt(fd);
        if (tempPath)
            temp_1.default.purge(tempPath);
        if (schedulerCustomDisposer)
            schedulerCustomDisposer();
        if (schedulerDisposer)
            schedulerDisposer();
    }
};
const writeFileSync = (filePath, data, options = consts_1.DEFAULT_WRITE_OPTIONS) => {
    var _a;
    if (lang_1.default.isString(options))
        return writeFileSync(filePath, data, { encoding: options });
    const timeout = Date.now() + ((_a = options.timeout) !== null && _a !== void 0 ? _a : consts_1.DEFAULT_TIMEOUT_SYNC);
    let tempDisposer = null, tempPath = null, fd = null;
    try {
        filePath = fs_1.default.realpathSyncAttempt(filePath) || filePath;
        [tempPath, tempDisposer] = temp_1.default.get(filePath, options.tmpCreate || temp_1.default.create, !(options.tmpPurge === false));
        const useStatChown = consts_1.IS_POSIX && lang_1.default.isUndefined(options.chown), useStatMode = lang_1.default.isUndefined(options.mode);
        if (useStatChown || useStatMode) {
            const stat = fs_1.default.statSyncAttempt(filePath);
            if (stat) {
                options = { ...options };
                if (useStatChown)
                    options.chown = { uid: stat.uid, gid: stat.gid };
                if (useStatMode)
                    options.mode = stat.mode;
            }
        }
        const parentPath = path.dirname(filePath);
        fs_1.default.mkdirSyncAttempt(parentPath, {
            mode: consts_1.DEFAULT_FOLDER_MODE,
            recursive: true
        });
        fd = fs_1.default.openSyncRetry(timeout)(tempPath, 'w', options.mode || consts_1.DEFAULT_FILE_MODE);
        if (options.tmpCreated)
            options.tmpCreated(tempPath);
        if (lang_1.default.isString(data)) {
            fs_1.default.writeSyncRetry(timeout)(fd, data, 0, options.encoding || consts_1.DEFAULT_ENCODING);
        }
        else if (!lang_1.default.isUndefined(data)) {
            fs_1.default.writeSyncRetry(timeout)(fd, data, 0, data.length, 0);
        }
        if (options.fsync !== false) {
            if (options.fsyncWait !== false) {
                fs_1.default.fsyncSyncRetry(timeout)(fd);
            }
            else {
                fs_1.default.fsyncAttempt(fd);
            }
        }
        fs_1.default.closeSyncRetry(timeout)(fd);
        fd = null;
        if (options.chown)
            fs_1.default.chownSyncAttempt(tempPath, options.chown.uid, options.chown.gid);
        if (options.mode)
            fs_1.default.chmodSyncAttempt(tempPath, options.mode);
        try {
            fs_1.default.renameSyncRetry(timeout)(tempPath, filePath);
        }
        catch (error) {
            if (error.code !== 'ENAMETOOLONG')
                throw error;
            fs_1.default.renameSyncRetry(timeout)(tempPath, temp_1.default.truncate(filePath));
        }
        tempDisposer();
        tempPath = null;
    }
    finally {
        if (fd)
            fs_1.default.closeSyncAttempt(fd);
        if (tempPath)
            temp_1.default.purge(tempPath);
    }
};
exports.writeFileSync = writeFileSync;

},{"./consts":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/consts.js","./utils/fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/fs.js","./utils/lang":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/lang.js","./utils/scheduler":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/scheduler.js","./utils/temp":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/temp.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/attemptify.js":[function(require,module,exports){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
exports.attemptifySync = exports.attemptifyAsync = void 0;
const consts_1 = require("../consts");
/* ATTEMPTIFY */
//TODO: Maybe publish this as a standalone package
//FIXME: The type castings here aren't exactly correct
const attemptifyAsync = (fn, onError = consts_1.NOOP) => {
    return function () {
        return fn.apply(undefined, arguments).catch(onError);
    };
};
exports.attemptifyAsync = attemptifyAsync;
const attemptifySync = (fn, onError = consts_1.NOOP) => {
    return function () {
        try {
            return fn.apply(undefined, arguments);
        }
        catch (error) {
            return onError(error);
        }
    };
};
exports.attemptifySync = attemptifySync;

},{"../consts":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/consts.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/fs.js":[function(require,module,exports){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const util_1 = require("util");
const attemptify_1 = require("./attemptify");
const fs_handlers_1 = require("./fs_handlers");
const retryify_1 = require("./retryify");
/* FS */
const FS = {
    chmodAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.chmod), fs_handlers_1.default.onChangeError),
    chownAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.chown), fs_handlers_1.default.onChangeError),
    closeAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.close)),
    fsyncAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.fsync)),
    mkdirAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.mkdir)),
    realpathAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.realpath)),
    statAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.stat)),
    unlinkAttempt: attemptify_1.attemptifyAsync(util_1.promisify(fs.unlink)),
    closeRetry: retryify_1.retryifyAsync(util_1.promisify(fs.close), fs_handlers_1.default.isRetriableError),
    fsyncRetry: retryify_1.retryifyAsync(util_1.promisify(fs.fsync), fs_handlers_1.default.isRetriableError),
    openRetry: retryify_1.retryifyAsync(util_1.promisify(fs.open), fs_handlers_1.default.isRetriableError),
    readFileRetry: retryify_1.retryifyAsync(util_1.promisify(fs.readFile), fs_handlers_1.default.isRetriableError),
    renameRetry: retryify_1.retryifyAsync(util_1.promisify(fs.rename), fs_handlers_1.default.isRetriableError),
    statRetry: retryify_1.retryifyAsync(util_1.promisify(fs.stat), fs_handlers_1.default.isRetriableError),
    writeRetry: retryify_1.retryifyAsync(util_1.promisify(fs.write), fs_handlers_1.default.isRetriableError),
    chmodSyncAttempt: attemptify_1.attemptifySync(fs.chmodSync, fs_handlers_1.default.onChangeError),
    chownSyncAttempt: attemptify_1.attemptifySync(fs.chownSync, fs_handlers_1.default.onChangeError),
    closeSyncAttempt: attemptify_1.attemptifySync(fs.closeSync),
    mkdirSyncAttempt: attemptify_1.attemptifySync(fs.mkdirSync),
    realpathSyncAttempt: attemptify_1.attemptifySync(fs.realpathSync),
    statSyncAttempt: attemptify_1.attemptifySync(fs.statSync),
    unlinkSyncAttempt: attemptify_1.attemptifySync(fs.unlinkSync),
    closeSyncRetry: retryify_1.retryifySync(fs.closeSync, fs_handlers_1.default.isRetriableError),
    fsyncSyncRetry: retryify_1.retryifySync(fs.fsyncSync, fs_handlers_1.default.isRetriableError),
    openSyncRetry: retryify_1.retryifySync(fs.openSync, fs_handlers_1.default.isRetriableError),
    readFileSyncRetry: retryify_1.retryifySync(fs.readFileSync, fs_handlers_1.default.isRetriableError),
    renameSyncRetry: retryify_1.retryifySync(fs.renameSync, fs_handlers_1.default.isRetriableError),
    statSyncRetry: retryify_1.retryifySync(fs.statSync, fs_handlers_1.default.isRetriableError),
    writeSyncRetry: retryify_1.retryifySync(fs.writeSync, fs_handlers_1.default.isRetriableError)
};
/* EXPORT */
exports.default = FS;

},{"./attemptify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/attemptify.js","./fs_handlers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/fs_handlers.js","./retryify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/retryify.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/util.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/fs_handlers.js":[function(require,module,exports){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
const consts_1 = require("../consts");
/* FS HANDLERS */
const Handlers = {
    isChangeErrorOk: (error) => {
        const { code } = error;
        if (code === 'ENOSYS')
            return true;
        if (!consts_1.IS_USER_ROOT && (code === 'EINVAL' || code === 'EPERM'))
            return true;
        return false;
    },
    isRetriableError: (error) => {
        const { code } = error;
        if (code === 'EMFILE' || code === 'ENFILE' || code === 'EAGAIN' || code === 'EBUSY' || code === 'EACCESS' || code === 'EACCS' || code === 'EPERM')
            return true;
        return false;
    },
    onChangeError: (error) => {
        if (Handlers.isChangeErrorOk(error))
            return;
        throw error;
    }
};
/* EXPORT */
exports.default = Handlers;

},{"../consts":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/consts.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/lang.js":[function(require,module,exports){
"use strict";
/* LANG */
Object.defineProperty(exports, "__esModule", { value: true });
const Lang = {
    isFunction: (x) => {
        return typeof x === 'function';
    },
    isString: (x) => {
        return typeof x === 'string';
    },
    isUndefined: (x) => {
        return typeof x === 'undefined';
    }
};
/* EXPORT */
exports.default = Lang;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/retryify.js":[function(require,module,exports){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
exports.retryifySync = exports.retryifyAsync = void 0;
const retryify_queue_1 = require("./retryify_queue");
/* RETRYIFY */
const retryifyAsync = (fn, isRetriableError) => {
    return function (timestamp) {
        return function attempt() {
            return retryify_queue_1.default.schedule().then(cleanup => {
                return fn.apply(undefined, arguments).then(result => {
                    cleanup();
                    return result;
                }, error => {
                    cleanup();
                    if (Date.now() >= timestamp)
                        throw error;
                    if (isRetriableError(error)) {
                        const delay = Math.round(100 + (400 * Math.random())), delayPromise = new Promise(resolve => setTimeout(resolve, delay));
                        return delayPromise.then(() => attempt.apply(undefined, arguments));
                    }
                    throw error;
                });
            });
        };
    };
};
exports.retryifyAsync = retryifyAsync;
const retryifySync = (fn, isRetriableError) => {
    return function (timestamp) {
        return function attempt() {
            try {
                return fn.apply(undefined, arguments);
            }
            catch (error) {
                if (Date.now() > timestamp)
                    throw error;
                if (isRetriableError(error))
                    return attempt.apply(undefined, arguments);
                throw error;
            }
        };
    };
};
exports.retryifySync = retryifySync;

},{"./retryify_queue":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/retryify_queue.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/retryify_queue.js":[function(require,module,exports){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
const consts_1 = require("../consts");
/* RETRYIFY QUEUE */
const RetryfyQueue = {
    interval: 25,
    intervalId: undefined,
    limit: consts_1.LIMIT_FILES_DESCRIPTORS,
    queueActive: new Set(),
    queueWaiting: new Set(),
    init: () => {
        if (RetryfyQueue.intervalId)
            return;
        RetryfyQueue.intervalId = setInterval(RetryfyQueue.tick, RetryfyQueue.interval);
    },
    reset: () => {
        if (!RetryfyQueue.intervalId)
            return;
        clearInterval(RetryfyQueue.intervalId);
        delete RetryfyQueue.intervalId;
    },
    add: (fn) => {
        RetryfyQueue.queueWaiting.add(fn);
        if (RetryfyQueue.queueActive.size < (RetryfyQueue.limit / 2)) { // Active queue not under preassure, executing immediately
            RetryfyQueue.tick();
        }
        else {
            RetryfyQueue.init();
        }
    },
    remove: (fn) => {
        RetryfyQueue.queueWaiting.delete(fn);
        RetryfyQueue.queueActive.delete(fn);
    },
    schedule: () => {
        return new Promise(resolve => {
            const cleanup = () => RetryfyQueue.remove(resolver);
            const resolver = () => resolve(cleanup);
            RetryfyQueue.add(resolver);
        });
    },
    tick: () => {
        if (RetryfyQueue.queueActive.size >= RetryfyQueue.limit)
            return;
        if (!RetryfyQueue.queueWaiting.size)
            return RetryfyQueue.reset();
        for (const fn of RetryfyQueue.queueWaiting) {
            if (RetryfyQueue.queueActive.size >= RetryfyQueue.limit)
                break;
            RetryfyQueue.queueWaiting.delete(fn);
            RetryfyQueue.queueActive.add(fn);
            fn();
        }
    }
};
/* EXPORT */
exports.default = RetryfyQueue;

},{"../consts":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/consts.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/scheduler.js":[function(require,module,exports){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
/* VARIABLES */
const Queues = {};
/* SCHEDULER */
//TODO: Maybe publish this as a standalone package
const Scheduler = {
    next: (id) => {
        const queue = Queues[id];
        if (!queue)
            return;
        queue.shift();
        const job = queue[0];
        if (job) {
            job(() => Scheduler.next(id));
        }
        else {
            delete Queues[id];
        }
    },
    schedule: (id) => {
        return new Promise(resolve => {
            let queue = Queues[id];
            if (!queue)
                queue = Queues[id] = [];
            queue.push(resolve);
            if (queue.length > 1)
                return;
            resolve(() => Scheduler.next(id));
        });
    }
};
/* EXPORT */
exports.default = Scheduler;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/temp.js":[function(require,module,exports){
(function (process){(function (){
"use strict";
/* IMPORT */
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const consts_1 = require("../consts");
const fs_1 = require("./fs");
/* TEMP */
//TODO: Maybe publish this as a standalone package
const Temp = {
    store: {},
    create: (filePath) => {
        const randomness = `000000${Math.floor(Math.random() * 16777215).toString(16)}`.slice(-6), // 6 random-enough hex characters
        timestamp = Date.now().toString().slice(-10), // 10 precise timestamp digits
        prefix = 'tmp-', suffix = `.${prefix}${timestamp}${randomness}`, tempPath = `${filePath}${suffix}`;
        return tempPath;
    },
    get: (filePath, creator, purge = true) => {
        const tempPath = Temp.truncate(creator(filePath));
        if (tempPath in Temp.store)
            return Temp.get(filePath, creator, purge); // Collision found, try again
        Temp.store[tempPath] = purge;
        const disposer = () => delete Temp.store[tempPath];
        return [tempPath, disposer];
    },
    purge: (filePath) => {
        if (!Temp.store[filePath])
            return;
        delete Temp.store[filePath];
        fs_1.default.unlinkAttempt(filePath);
    },
    purgeSync: (filePath) => {
        if (!Temp.store[filePath])
            return;
        delete Temp.store[filePath];
        fs_1.default.unlinkSyncAttempt(filePath);
    },
    purgeSyncAll: () => {
        for (const filePath in Temp.store) {
            Temp.purgeSync(filePath);
        }
    },
    truncate: (filePath) => {
        const basename = path.basename(filePath);
        if (basename.length <= consts_1.LIMIT_BASENAME_LENGTH)
            return filePath; //FIXME: Rough and quick attempt at detecting ok lengths
        const truncable = /^(\.?)(.*?)((?:\.[^.]+)?(?:\.tmp-\d{10}[a-f0-9]{6})?)$/.exec(basename);
        if (!truncable)
            return filePath; //FIXME: No truncable part detected, can't really do much without also changing the parent path, which is unsafe, hoping for the best here
        const truncationLength = basename.length - consts_1.LIMIT_BASENAME_LENGTH;
        return `${filePath.slice(0, -basename.length)}${truncable[1]}${truncable[2].slice(0, -truncationLength)}${truncable[3]}`; //FIXME: The truncable part might be shorter than needed here
    }
};
/* INIT */
process.on('exit', Temp.purgeSyncAll); // Ensuring purgeable temp files are purged on exit
/* EXPORT */
exports.default = Temp;

}).call(this)}).call(this,require('_process'))
},{"../consts":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/consts.js","./fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically/dist/utils/fs.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/available-typed-arrays/index.js":[function(require,module,exports){
(function (global){(function (){
'use strict';

var filter = require('array-filter');

module.exports = function availableTypedArrays() {
	return filter([
		'BigInt64Array',
		'BigUint64Array',
		'Float32Array',
		'Float64Array',
		'Int16Array',
		'Int32Array',
		'Int8Array',
		'Uint16Array',
		'Uint32Array',
		'Uint8Array',
		'Uint8ClampedArray'
	], function (typedArray) {
		return typeof global[typedArray] === 'function';
	});
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"array-filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/array-filter/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/base64-js/index.js":[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/binary-search-bounds/search-bounds.js":[function(require,module,exports){
"use strict"

function compileSearch(funcName, predicate, reversed, extraArgs, earlyOut) {
  var code = [
    "function ", funcName, "(a,l,h,", extraArgs.join(","),  "){",
    earlyOut ? "" : "var i=", (reversed ? "l-1" : "h+1"),
    ";while(l<=h){var m=(l+h)>>>1,x=a[m]"]
  if(earlyOut) {
    if(predicate.indexOf("c") < 0) {
      code.push(";if(x===y){return m}else if(x<=y){")
    } else {
      code.push(";var p=c(x,y);if(p===0){return m}else if(p<=0){")
    }
  } else {
    code.push(";if(", predicate, "){i=m;")
  }
  if(reversed) {
    code.push("l=m+1}else{h=m-1}")
  } else {
    code.push("h=m-1}else{l=m+1}")
  }
  code.push("}")
  if(earlyOut) {
    code.push("return -1};")
  } else {
    code.push("return i};")
  }
  return code.join("")
}

function compileBoundsSearch(predicate, reversed, suffix, earlyOut) {
  var result = new Function([
  compileSearch("A", "x" + predicate + "y", reversed, ["y"], earlyOut),
  compileSearch("P", "c(x,y)" + predicate + "0", reversed, ["y", "c"], earlyOut),
"function dispatchBsearch", suffix, "(a,y,c,l,h){\
if(typeof(c)==='function'){\
return P(a,(l===void 0)?0:l|0,(h===void 0)?a.length-1:h|0,y,c)\
}else{\
return A(a,(c===void 0)?0:c|0,(l===void 0)?a.length-1:l|0,y)\
}}\
return dispatchBsearch", suffix].join(""))
  return result()
}

module.exports = {
  ge: compileBoundsSearch(">=", false,  "GE"),
  gt: compileBoundsSearch(">",  false,  "GT"),
  lt: compileBoundsSearch("<",  true,   "LT"),
  le: compileBoundsSearch("<=", true,   "LE"),
  eq: compileBoundsSearch("-",  true,   "EQ", true)
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var varint = require('varint')

var STRING = 0    // 000
var BUFFER = 1    // 001

var INT = 2       // 010 //32bit int
var DOUBLE = 3    // 011 //use next 8 bytes to encode 64bit float

var ARRAY = 4     // 100
var OBJECT = 5    // 101

var BOOLNULL = 6  // 110 //and use the rest of the byte as true/false/null
var RESERVED = 7  // 111

var TAG_SIZE = 3, TAG_MASK = 7

var bytes = 0
//sets buffer, and returns length
var encoders = [
  function String (string, buffer, start) {
    return buffer.write(string, start)
  },
  function Buffer (b, buffer, start) {
    b.copy(buffer, start, 0, b.length)
    return b.length
  },
  function Integer (i, buffer, start) {
    buffer.writeInt32LE(i, start)
    return 4
  },
  function Double (d, buffer, start) {
    buffer.writeDoubleLE(d, start)
    return 8
  },
  function Array (a, buffer, start) {
    var p = start
    for(var i = 0; i < a.length; i++) {
      p+=encode(a[i], buffer, p)
    }
    return p - start
  },
  function Object (o, buffer, start) {
    var p = start
    for(var k in o) {
      //TODO filter non json types
      p+=encode(k, buffer, p)
      p+=encode(o[k], buffer, p)
    }
    return p - start
  },
  function Boolean (b, buffer, start) {
    if(b !== null)
      buffer[start] = (
        b === false ? 0
      : b === true  ? 1
      :               2 //undefined
      )
    return b === null ? 0 : 1
  }
]

var encodingLengthers = [
  function String (string) {
    return Buffer.byteLength(string)
  },
  function Buffer (b) {
    return b.length
  },
  function Integer (i) {
    return 4
  },
  function Double (d) {
    return 8
  },
  function Array (a) {
    var bytes = 0
    for(var i = 0; i < a.length; i++)
      bytes += encodingLength(a[i])
    return bytes
  },
  function Object (o) {
    var bytes = 0
    for(var k in o)
      bytes+=encodingLength(k)+ encodingLength(o[k])
    return bytes
  },
  function boolnull (b, buffer, start) {
    return b === null ? 0 : 1 //encode null as zero length!
  }
]

function decode_string (buffer, start, length) {
  return buffer.toString('utf8', start, start+length)
}
function decode_buffer (buffer, start, length) {
  return buffer.slice(start, start+length)
}
function decode_integer (buffer, start, length) {
  return buffer.readInt32LE(start) //TODO: encode in minimum bytes
}
function decode_double (buffer, start, length) {
  return buffer.readDoubleLE(start) //TODO: encode in minimum bytes
}
function decode_array (buffer, start, length) {
  var a = [], i = 0
  for(var c = 0; c < length;) {
    var tag = varint.decode(buffer, start+c)
    var type = tag & TAG_MASK
    if(type === 7) throw new Error('reserved type')
    var len = tag >> TAG_SIZE
    c += varint.decode.bytes
    var value = decode_type(type, buffer, start+c, len)
    a.push(value)
    c += len
  }
  return a
}
function decode_object (buffer, start, length) {
  var o = {}
  for(var c = 0; c < length;) {
    var tag = varint.decode(buffer, start+c)
    var type = tag & TAG_MASK
    var len = tag >> TAG_SIZE
    c += varint.decode.bytes
    //TODO: positive integers keys are always in order!
    //floats or negative numbers encoded as strings. or may not be keys?
    if(type === 7) throw new Error('reserved type:key')
    var key = decode_type(type, buffer, start+c, len)
    c += len

    var tag2 = varint.decode(buffer, start+c)
    var type2 = tag2 & TAG_MASK
    if(type2 === 7) throw new Error('reserved type:value')
    var len2 = tag2 >> TAG_SIZE
    c += varint.decode.bytes
    var value = decode_type(type2, buffer, start+c, len2)
    c+= len2
    o[key] = value
  }
  return o

}
function decode_boolnull (buffer, start, length) {
  if(length === 0) return null
  if(buffer[start] > 2) throw new Error('invalid boolnull')
  if(length > 1) throw new Error('invalid boolnull, length must = 1')
  return (
    buffer[start] === 0 ? false
  : buffer[start] === 1 ? true
  :                       undefined
  )
}

function getType (value) {
  if('string' === typeof value || value instanceof Date)
    return STRING
  else if(Buffer.isBuffer(value))
    return BUFFER
  else if(Number.isInteger(value) && Math.abs(value) <= 4294967296)
    return INT
  else if('number' === typeof value && Number.isFinite(value)) //do not support Infinity or NaN (because JSON)
    return DOUBLE
  else if(Array.isArray(value))
    return ARRAY
  else if(value && 'object' === typeof value)
    return OBJECT
  else if('boolean' === typeof value || null == value)
    return BOOLNULL //boolean, null, undefined
}

function encodingLength (value) {
  var type = getType(value)
  var len = encodingLengthers[type](value)
  return varint.encodingLength(len << TAG_SIZE) + len
}

function slice(buffer, start) {
  var tag_value = varint.decode(buffer, start)
  var length = tag_value >> TAG_SIZE
  return buffer.slice(start+varint.decode.bytes, start+varint.decode.bytes + length)
}

function getEncodedLength(buffer, start) {
  return varint.decode(buffer, start) >> TAG_SIZE
}

function getEncodedType(buffer, start) {
  return varint.decode(buffer, start) & TAG_MASK
}

function encode (value, buffer, start, _len) {
  start = start | 0
  var type = getType(value)
  if('function' !== typeof encodingLengthers[type])
    throw new Error('unknown type:'+type+', '+JSON.stringify(value))
  var len = _len === undefined ? encodingLengthers[type](value) : _len
//  if(!buffer)
//    buffer = Buffer.allocUnsafe(len)
    //throw new Error('buffer must be provided')
  if(type === 7) throw new Error('reserved type')
  varint.encode(len << TAG_SIZE | type, buffer, start)
  var bytes = varint.encode.bytes
  return encoders[type](value, buffer, start+bytes) + bytes
}

function allocAndEncode(value) {
  var len = encodingLength(value)
  var buffer = Buffer.allocUnsafe(len)
  encode(value, buffer, 0)
  return buffer
}

function decode_type(type, buffer, start, len) {
  return (type < ARRAY) ? (
    type === STRING   ? decode_string   (buffer, start, len)
  : type === BUFFER   ? decode_buffer   (buffer, start, len)
  : type === INT      ? decode_integer  (buffer, start, len)
  :                     decode_double   (buffer, start, len)
  ) : (
    type === ARRAY    ? decode_array    (buffer, start, len)
  : type === OBJECT   ? decode_object   (buffer, start, len)
  : type === BOOLNULL ? decode_boolnull (buffer, start, len)
  :                     decode_reserved (buffer, start, len)
  )
}

function decode (buffer, start) {
  start = start | 0
  var tag = varint.decode(buffer, start)
  var type = tag & TAG_MASK
  var len = tag >> TAG_SIZE
  var bytes = varint.decode.bytes
  start += bytes
  var value = decode_type(type, buffer, start, len)
  decode.bytes = len + bytes
  return value
}

function seekKey (buffer, start, target) {
  if(start === -1) return -1
  target = Buffer.isBuffer(target) ? target : Buffer.from(target)
  var targetLength = target.length
  var tag = varint.decode(buffer, start)
  var len = tag >> TAG_SIZE
  var type = tag & TAG_MASK
  if(type != OBJECT) return -1
  for(var c = varint.decode.bytes; c < len;) {
    var key_tag = varint.decode(buffer, start+c)
    c += varint.decode.bytes
    var key_len = key_tag >> TAG_SIZE
    var key_type = key_tag & TAG_MASK
    if(key_type === STRING && targetLength === key_len)
      if(buffer.compare(target, 0, targetLength, start+c, start+c+targetLength) === 0)
        return start+c+key_len

    c += key_len
    var value_tag = varint.decode(buffer, start+c)
    c += varint.decode.bytes
    var value_len = value_tag >> TAG_SIZE
    c += value_len
  }
  return -1
}

function seekKey2 (buffer, start, target, t_start) {
  var tag = varint.decode(buffer, start)
  var c = varint.decode.bytes
  var len = tag >> TAG_SIZE
  var type = tag & TAG_MASK
  var t_tag = varint.decode(target, t_start)
  var t_length = (t_tag >> TAG_SIZE) + varint.decode.bytes
  if(type != OBJECT) return -1
  for(; c + t_length < len;) {
    var b_tag = varint.decode(buffer, start+c)
    if(b_tag === t_tag && buffer.compare(target, t_start, t_length, start+c, start+c+t_length) === 0)
      return start+c+(b_tag>>TAG_SIZE)+varint.decode.bytes
    else {
      c += (b_tag >> TAG_SIZE) + varint.decode.bytes //key
      c += (varint.decode(buffer, start+c) >> TAG_SIZE) + varint.decode.bytes //value
    }
  }
  return -1
}

//TODO rewrite the seek methods so that there is minimal copies.

function seekPath (buffer, start, target, target_start) {
  target_start = target_start || 0
  var ary = decode(target, target_start)
  if(!Array.isArray(ary)) throw new Error('path must be encoded array')
  for(var i = 0; i < ary.length; i++) {
    var string = ary[i]
    start = seekKey(buffer, start, string)
    if(start === -1) return -1
  }
  return start
}

//for some reason, seek path
function createSeekPathSrc(target) {
  return (
    '"use strict";\n' + //go fast sauce!
    target.map(function (e, i) {
      return '  var k'+i+' = Buffer.from('+ JSON.stringify(e) +');' //strings only!
    }).join('\n') + '\n'+
    "  return function (buffer, start) {\n"+
    target.map(function (_, i) {
      return "  start = seekKey(buffer, start, k"+i+")"
    }).join('\n') + '\n' +
    '  return start;\n'+
    '}\n'
  )
}

function createSeekPath(target) {
  return new Function('seekKey', createSeekPathSrc(target))(seekKey)
}

function compareString (buffer, start, target) {
  if(start === -1) return null
  target = Buffer.isBuffer(target) ? target : Buffer.from(target)
  var tag = varint.decode(buffer, start)
  if(tag & TAG_MASK !== STRING) return null
  var len = tag >> TAG_SIZE
  var _len = Math.min(target.length, len)
  return buffer.compare(
    target, 0, _len,
    start + varint.decode.bytes, start + varint.decode.bytes + _len
  ) || target.length - len
}

function isNull(tag) {
  return tag === 6
}
function isUndefined(tag, firstByte) {
  return tag === 0xE && firstByte === 2
}

function compare (buffer1, start1, buffer2, start2) {

  //handle null pointers...
//  console.log(start1, start2)
  if(start1 === -1 || start2 === -1)
    return start1 - start2

  var tag1 = varint.decode(buffer1, start1)
  var len1 = varint.decode.bytes
  var tag2 = varint.decode(buffer2, start2)
  var len2 = varint.decode.bytes
  var type1 = tag1 & TAG_MASK
  var type2 = tag2 & TAG_MASK

  //null, lowest value
  if(isNull(tag1))
    return isNull(tag2) ? 0 : -1
  else if(isNull(tag2))
    return 1

  //undefined, highest value
  if(isUndefined(tag1, buffer1[start1+1]))
    return isUndefined(tag2, buffer2[start2+1]) ? 0 : 1
  else if(isUndefined(tag2, buffer2[start2+1]))
    return -1


  //allow comparison of number types. **javascriptism**
  //maybe it's better to just have one number type? how can I make a varint double?
  if(type1 === INT && type2 === DOUBLE)
    return buffer1.readInt32LE(start1+len1) - buffer2.readDoubleLE(start2+len2)

  if(type1 === DOUBLE && type1 === INT)
    return buffer1.readDoubleLE(start1+len1) - buffer2.readInt32LE(start2+len2)


  if(type1 !== type2)
    return type1 - type2
  //if they are the same type, compare encoded value.
  //TODO: compare by type semantics...
  if(type1 === DOUBLE)
    return buffer1.readDoubleLE(start1+len1) - buffer2.readDoubleLE(start2+len2)
  if(type1 === INT)
    return buffer1.readInt32LE(start1+len1) - buffer2.readInt32LE(start2+len2)

  //except for strings, sort shorter values first
  if(type1 !== STRING) {
    var result = type1 - type2
    if(result) return result
  }
  return buffer1.compare(buffer2,
    start2+len2, start2+len2+(tag2 >> TAG_SIZE),
    start1+len1, start1+len1 + (tag1 >> TAG_SIZE)
  )
}

function iterate(buffer, start, iter) {
  var tag = varint.decode(buffer, start)
  var len = tag >> TAG_SIZE
  var type = tag & TAG_MASK
  if(type === OBJECT) {
    for(var c = varint.decode.bytes; c < len;) {
      var key_start = start+c
      var key_tag = varint.decode(buffer, key_start)
      c += varint.decode.bytes
      c += (key_tag >> TAG_SIZE)
      var value_start = start+c
      var value_tag = varint.decode(buffer, value_start)
      var next_start = varint.decode.bytes + (value_tag >> TAG_SIZE)
      if (iter(buffer, value_start, key_start)) return start
      c += next_start
    }
    return start
  }
  else if(type === ARRAY) {
    var i = 0
    for(var c = varint.decode.bytes; c < len;) {
      if (iter(buffer, start+c, i++)) return start
      var value_tag = varint.decode(buffer, start+c)
      c += varint.decode.bytes + (value_tag >> TAG_SIZE)
    }
    return start
  } else return -1
}

function createCompareAt(paths) {
  var getPaths = paths.map(createSeekPath)
  return function (a, b) {
    for(var i = 0; i < getPaths.length; i++) {
      var _a = getPaths[i](a, 0)
      var _b = getPaths[i](b, 0)
      var r = compare(a, _a, b, _b)
      if(r) return r
    }
    return 0
  }
}

module.exports = {
  encode: encode,
  decode: decode,
  allocAndEncode: allocAndEncode,
  encodingLength: encodingLength,
  buffer: true,
  slice: slice,
  getValueType: getType,
  getEncodedLength: getEncodedLength,
  getEncodedType: getEncodedType,
  seekKey: seekKey,
  seekKey2: seekKey2,
  createSeekPath: createSeekPath,
  seekPath: seekPath,
  compareString: compareString,
  compare: compare,
  createCompareAt: createCompareAt,
  iterate: iterate,
  types: {
    string: STRING,
    buffer: BUFFER,
    int: INT,
    double: DOUBLE,
    array: ARRAY,
    object: OBJECT,
    boolnull: BOOLNULL,
    reserved: RESERVED,
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","varint":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bn.js/lib/bn.js":[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this._strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    var z = 0;
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      var b;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        b = c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }

      r |= b;
      z |= b;
    }

    assert(!(z & 0xf0), 'Invalid character in ' + str);
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/brorand/index.js":[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js":[function(require,module,exports){

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/aes.js":[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/authCipher.js":[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/aes.js","./ghash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/ghash.js","./incr32":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/incr32.js","buffer-xor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-xor/index.js","cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/browser.js":[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/decrypter.js","./encrypter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/encrypter.js","./modes/list.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/list.json"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/decrypter.js":[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/aes.js","./authCipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/authCipher.js","./modes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/index.js","./streamCipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/streamCipher.js","cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","evp_bytestokey":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/evp_bytestokey/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/encrypter.js":[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/aes.js","./authCipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/authCipher.js","./modes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/index.js","./streamCipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/streamCipher.js","cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","evp_bytestokey":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/evp_bytestokey/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/ghash.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/incr32.js":[function(require,module,exports){
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cbc.js":[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-xor/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cfb.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-xor/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cfb1.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cfb8.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/ctr.js":[function(require,module,exports){
var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"../incr32":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/incr32.js","buffer-xor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-xor/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/ecb.js":[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/index.js":[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cbc.js","./cfb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cfb.js","./cfb1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cfb1.js","./cfb8":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/cfb8.js","./ctr":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/ctr.js","./ecb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/ecb.js","./list.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/list.json","./ofb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/ofb.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/list.json":[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/ofb.js":[function(require,module,exports){
(function (Buffer){(function (){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","buffer-xor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-xor/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/streamCipher.js":[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/aes.js","cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-cipher/browser.js":[function(require,module,exports){
var DES = require('browserify-des')
var aes = require('browserify-aes/browser')
var aesModes = require('browserify-aes/modes')
var desModes = require('browserify-des/modes')
var ebtk = require('evp_bytestokey')

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/browser.js","browserify-aes/modes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/modes/index.js","browserify-des":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-des/index.js","browserify-des/modes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-des/modes.js","evp_bytestokey":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/evp_bytestokey/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-des/index.js":[function(require,module,exports){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}

},{"cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","des.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-des/modes.js":[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-rsa/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var BN = require('bn.js')
var randomBytes = require('randombytes')

function blind (priv) {
  var r = getr(priv)
  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()
  return { blinder: blinder, unblinder: r.invm(priv.modulus) }
}

function getr (priv) {
  var len = priv.modulus.byteLength()
  var r
  do {
    r = new BN(randomBytes(len))
  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))
  return r
}

function crt (msg, priv) {
  var blinds = blind(priv)
  var len = priv.modulus.byteLength()
  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)
  var c1 = blinded.toRed(BN.mont(priv.prime1))
  var c2 = blinded.toRed(BN.mont(priv.prime2))
  var qinv = priv.coefficient
  var p = priv.prime1
  var q = priv.prime2
  var m1 = c1.redPow(priv.exponent1).fromRed()
  var m2 = c2.redPow(priv.exponent2).fromRed()
  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)
  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)
}
crt.getr = getr

module.exports = crt

}).call(this)}).call(this,require("buffer").Buffer)
},{"bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bn.js/lib/bn.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","randombytes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randombytes/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/algos.js":[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/algorithms.json"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/algorithms.json":[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/curves.json":[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/index.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var createHash = require('create-hash')
var stream = require('readable-stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = Buffer.from(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

},{"./algorithms.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/algorithms.json","./sign":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/sign.js","./verify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/verify.js","create-hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","readable-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/sign.js":[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [0, 1]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return Buffer.from(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r)
  if (s[0] & 0x80) s = [0].concat(s)

  var total = r.length + s.length + 4
  var res = [0x30, total, 0x02, r.length]
  res = res.concat(r, [0x02, s.length], s)
  return Buffer.from(res)
}

function getKey (x, q, hash, algo) {
  x = Buffer.from(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - x.length)
    x = Buffer.concat([zeros, x])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = Buffer.alloc(hlen)
  v.fill(1)
  var k = Buffer.alloc(hlen)
  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = Buffer.from(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - out.length)
    out = Buffer.concat([zeros, out])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = Buffer.alloc(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([t, kv.v])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

},{"./curves.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/curves.json","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bn.js/lib/bn.js","browserify-rsa":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-rsa/index.js","create-hmac":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/browser.js","elliptic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic.js","parse-asn1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/verify.js":[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [1]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = Buffer.from(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = Buffer.from(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

},{"./curves.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/curves.json","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bn.js/lib/bn.js","elliptic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic.js","parse-asn1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js":[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js":[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js","./_stream_writable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js":[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/async_iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./internal/streams/buffer_list":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/from":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","string_decoder/":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/lib/string_decoder.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js":[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","util-deprecate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util-deprecate/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js":[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js":[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js":[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js":[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js":[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js":[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js":[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js":[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
exports.finished = require('./lib/internal/streams/end-of-stream.js');
exports.pipeline = require('./lib/internal/streams/pipeline.js');

},{"./lib/_stream_duplex.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","./lib/_stream_passthrough.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js","./lib/_stream_readable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js","./lib/_stream_transform.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js","./lib/_stream_writable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js","./lib/internal/streams/end-of-stream.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./lib/internal/streams/pipeline.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js":[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/base64-js/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","ieee754":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ieee754/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-alloc-unsafe/index.js":[function(require,module,exports){
(function (Buffer){(function (){
function allocUnsafe (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  }

  if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }

  if (Buffer.allocUnsafe) {
    return Buffer.allocUnsafe(size)
  } else {
    return new Buffer(size)
  }
}

module.exports = allocUnsafe

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-alloc/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var bufferFill = require('buffer-fill')
var allocUnsafe = require('buffer-alloc-unsafe')

module.exports = function alloc (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  }

  if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }

  if (Buffer.alloc) {
    return Buffer.alloc(size, fill, encoding)
  }

  var buffer = allocUnsafe(size)

  if (size === 0) {
    return buffer
  }

  if (fill === undefined) {
    return bufferFill(buffer, 0)
  }

  if (typeof encoding !== 'string') {
    encoding = undefined
  }

  return bufferFill(buffer, fill, encoding)
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","buffer-alloc-unsafe":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-alloc-unsafe/index.js","buffer-fill":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-fill/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-fill/index.js":[function(require,module,exports){
(function (Buffer){(function (){
/* Node.js 6.4.0 and up has full support */
var hasFullSupport = (function () {
  try {
    if (!Buffer.isEncoding('latin1')) {
      return false
    }

    var buf = Buffer.alloc ? Buffer.alloc(4) : new Buffer(4)

    buf.fill('ab', 'ucs2')

    return (buf.toString('hex') === '61006200')
  } catch (_) {
    return false
  }
}())

function isSingleByte (val) {
  return (val.length === 1 && val.charCodeAt(0) < 256)
}

function fillWithNumber (buffer, val, start, end) {
  if (start < 0 || end > buffer.length) {
    throw new RangeError('Out of range index')
  }

  start = start >>> 0
  end = end === undefined ? buffer.length : end >>> 0

  if (end > start) {
    buffer.fill(val, start, end)
  }

  return buffer
}

function fillWithBuffer (buffer, val, start, end) {
  if (start < 0 || end > buffer.length) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return buffer
  }

  start = start >>> 0
  end = end === undefined ? buffer.length : end >>> 0

  var pos = start
  var len = val.length
  while (pos <= (end - len)) {
    val.copy(buffer, pos)
    pos += len
  }

  if (pos !== end) {
    val.copy(buffer, pos, 0, end - pos)
  }

  return buffer
}

function fill (buffer, val, start, end, encoding) {
  if (hasFullSupport) {
    return buffer.fill(val, start, end, encoding)
  }

  if (typeof val === 'number') {
    return fillWithNumber(buffer, val, start, end)
  }

  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = buffer.length
    } else if (typeof end === 'string') {
      encoding = end
      end = buffer.length
    }

    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }

    if (encoding === 'latin1') {
      encoding = 'binary'
    }

    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }

    if (val === '') {
      return fillWithNumber(buffer, 0, start, end)
    }

    if (isSingleByte(val)) {
      return fillWithNumber(buffer, val.charCodeAt(0), start, end)
    }

    val = new Buffer(val, encoding)
  }

  if (Buffer.isBuffer(val)) {
    return fillWithBuffer(buffer, val, start, end)
  }

  // Other values (e.g. undefined, boolean, object) results in zero-fill
  return fillWithNumber(buffer, 0, start, end)
}

module.exports = fill

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-from/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var toString = Object.prototype.toString

var isModern = (
  typeof Buffer.alloc === 'function' &&
  typeof Buffer.allocUnsafe === 'function' &&
  typeof Buffer.from === 'function'
)

function isArrayBuffer (input) {
  return toString.call(input).slice(8, -1) === 'ArrayBuffer'
}

function fromArrayBuffer (obj, byteOffset, length) {
  byteOffset >>>= 0

  var maxLength = obj.byteLength - byteOffset

  if (maxLength < 0) {
    throw new RangeError("'offset' is out of bounds")
  }

  if (length === undefined) {
    length = maxLength
  } else {
    length >>>= 0

    if (length > maxLength) {
      throw new RangeError("'length' is out of bounds")
    }
  }

  return isModern
    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))
    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  return isModern
    ? Buffer.from(string, encoding)
    : new Buffer(string, encoding)
}

function bufferFrom (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value)) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return isModern
    ? Buffer.from(value)
    : new Buffer(value)
}

module.exports = bufferFrom

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-xor/index.js":[function(require,module,exports){
(function (Buffer){(function (){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/builtin-status-codes/browser.js":[function(require,module,exports){
module.exports = {
  "100": "Continue",
  "101": "Switching Protocols",
  "102": "Processing",
  "200": "OK",
  "201": "Created",
  "202": "Accepted",
  "203": "Non-Authoritative Information",
  "204": "No Content",
  "205": "Reset Content",
  "206": "Partial Content",
  "207": "Multi-Status",
  "208": "Already Reported",
  "226": "IM Used",
  "300": "Multiple Choices",
  "301": "Moved Permanently",
  "302": "Found",
  "303": "See Other",
  "304": "Not Modified",
  "305": "Use Proxy",
  "307": "Temporary Redirect",
  "308": "Permanent Redirect",
  "400": "Bad Request",
  "401": "Unauthorized",
  "402": "Payment Required",
  "403": "Forbidden",
  "404": "Not Found",
  "405": "Method Not Allowed",
  "406": "Not Acceptable",
  "407": "Proxy Authentication Required",
  "408": "Request Timeout",
  "409": "Conflict",
  "410": "Gone",
  "411": "Length Required",
  "412": "Precondition Failed",
  "413": "Payload Too Large",
  "414": "URI Too Long",
  "415": "Unsupported Media Type",
  "416": "Range Not Satisfiable",
  "417": "Expectation Failed",
  "418": "I'm a teapot",
  "421": "Misdirected Request",
  "422": "Unprocessable Entity",
  "423": "Locked",
  "424": "Failed Dependency",
  "425": "Unordered Collection",
  "426": "Upgrade Required",
  "428": "Precondition Required",
  "429": "Too Many Requests",
  "431": "Request Header Fields Too Large",
  "451": "Unavailable For Legal Reasons",
  "500": "Internal Server Error",
  "501": "Not Implemented",
  "502": "Bad Gateway",
  "503": "Service Unavailable",
  "504": "Gateway Timeout",
  "505": "HTTP Version Not Supported",
  "506": "Variant Also Negotiates",
  "507": "Insufficient Storage",
  "508": "Loop Detected",
  "509": "Bandwidth Limit Exceeded",
  "510": "Not Extended",
  "511": "Network Authentication Required"
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/call-bind/callBound.js":[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/call-bind/index.js","get-intrinsic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/get-intrinsic/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/call-bind/index.js":[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			$defineProperty(
				func,
				'length',
				{ value: $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/function-bind/index.js","get-intrinsic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/get-intrinsic/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js":[function(require,module,exports){

module.exports = require('sodium-browserify')

},{"sodium-browserify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js","stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/index.js","string_decoder":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/lib/string_decoder.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-ecdh/browser.js":[function(require,module,exports){
(function (Buffer){(function (){
var elliptic = require('elliptic')
var BN = require('bn.js')

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","elliptic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-ecdh/node_modules/bn.js/lib/bn.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/browser.js":[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var MD5 = require('md5.js')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Base = require('cipher-base')

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}

},{"cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","md5.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/md5.js/index.js","ripemd160":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ripemd160/index.js","sha.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/md5.js":[function(require,module,exports){
var MD5 = require('md5.js')

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}

},{"md5.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/md5.js/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/browser.js":[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/legacy.js","cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","create-hash/md5":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/md5.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","ripemd160":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ripemd160/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js","sha.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/legacy.js":[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/cipher-base/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/index.js":[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha.js","./sha1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha1.js","./sha224":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha224.js","./sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha256.js","./sha384":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha384.js","./sha512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha512.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha.js":[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha1.js":[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha224.js":[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js","./sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha256.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha256.js":[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha384.js":[function(require,module,exports){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js","./sha512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha512.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha512.js":[function(require,module,exports){
var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/crypto-browserify/index.js":[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-cipher/browser.js","browserify-sign":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/browser/index.js","browserify-sign/algos":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/algos.js","create-ecdh":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-ecdh/browser.js","create-hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/browser.js","create-hmac":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/browser.js","diffie-hellman":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/browser.js","pbkdf2":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/browser.js","public-encrypt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/browser.js","randombytes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randombytes/browser.js","randomfill":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randomfill/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js":[function(require,module,exports){
(function (process){(function (){
/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = require('./common')(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};

}).call(this)}).call(this,require('_process'))
},{"./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/common.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/common.js":[function(require,module,exports){

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = require('ms');
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;

},{"ms":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ms/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/deferred-leveldown/deferred-iterator.js":[function(require,module,exports){
var AbstractIterator = require('abstract-leveldown').AbstractIterator
var inherits = require('inherits')

function DeferredIterator (db, options) {
  AbstractIterator.call(this, db)

  this._options = options
  this._iterator = null
  this._operations = []
}

inherits(DeferredIterator, AbstractIterator)

DeferredIterator.prototype.setDb = function (db) {
  var it = this._iterator = db.iterator(this._options)
  this._operations.forEach(function (op) {
    it[op.method].apply(it, op.args)
  })
}

DeferredIterator.prototype._operation = function (method, args) {
  if (this._iterator) return this._iterator[method].apply(this._iterator, args)
  this._operations.push({ method: method, args: args })
}

'next end'.split(' ').forEach(function (m) {
  DeferredIterator.prototype['_' + m] = function () {
    this._operation(m, arguments)
  }
})

// Must defer seek() rather than _seek() because it requires db._serializeKey to be available
DeferredIterator.prototype.seek = function () {
  this._operation('seek', arguments)
}

module.exports = DeferredIterator

},{"abstract-leveldown":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/deferred-leveldown/deferred-leveldown.js":[function(require,module,exports){
var AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN
var inherits = require('inherits')
var DeferredIterator = require('./deferred-iterator')
var deferrables = 'put get del batch clear'.split(' ')
var optionalDeferrables = 'approximateSize compactRange'.split(' ')

function DeferredLevelDOWN (db) {
  AbstractLevelDOWN.call(this, db.supports || {})

  // TODO (future major): remove this fallback; db must have manifest that
  // declares approximateSize and compactRange in additionalMethods.
  optionalDeferrables.forEach(function (m) {
    if (typeof db[m] === 'function' && !this.supports.additionalMethods[m]) {
      this.supports.additionalMethods[m] = true
    }
  }, this)

  this._db = db
  this._operations = []
  closed(this)
}

inherits(DeferredLevelDOWN, AbstractLevelDOWN)

DeferredLevelDOWN.prototype.type = 'deferred-leveldown'

DeferredLevelDOWN.prototype._open = function (options, callback) {
  var self = this

  this._db.open(options, function (err) {
    if (err) return callback(err)

    self._operations.forEach(function (op) {
      if (op.iterator) {
        op.iterator.setDb(self._db)
      } else {
        self._db[op.method].apply(self._db, op.args)
      }
    })
    self._operations = []

    open(self)
    callback()
  })
}

DeferredLevelDOWN.prototype._close = function (callback) {
  var self = this

  this._db.close(function (err) {
    if (err) return callback(err)
    closed(self)
    callback()
  })
}

function open (self) {
  deferrables.concat('iterator').forEach(function (m) {
    self['_' + m] = function () {
      return this._db[m].apply(this._db, arguments)
    }
  })
  Object.keys(self.supports.additionalMethods).forEach(function (m) {
    self[m] = function () {
      return this._db[m].apply(this._db, arguments)
    }
  })
}

function closed (self) {
  deferrables.forEach(function (m) {
    self['_' + m] = function () {
      this._operations.push({ method: m, args: arguments })
    }
  })
  Object.keys(self.supports.additionalMethods).forEach(function (m) {
    self[m] = function () {
      this._operations.push({ method: m, args: arguments })
    }
  })
  self._iterator = function (options) {
    var it = new DeferredIterator(self, options)
    this._operations.push({ iterator: it })
    return it
  }
}

DeferredLevelDOWN.prototype._serializeKey = function (key) {
  return key
}

DeferredLevelDOWN.prototype._serializeValue = function (value) {
  return value
}

module.exports = DeferredLevelDOWN
module.exports.DeferredIterator = DeferredIterator

},{"./deferred-iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/deferred-leveldown/deferred-iterator.js","abstract-leveldown":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des.js":[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/cbc.js","./des/cipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/cipher.js","./des/des":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/des.js","./des/ede":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/ede.js","./des/utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/utils.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/cbc.js":[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/cipher.js":[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/des.js":[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var utils = require('./utils');
var Cipher = require('./cipher');

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"./cipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/cipher.js","./utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/utils.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/ede.js":[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var Cipher = require('./cipher');
var DES = require('./des');

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"./cipher":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/cipher.js","./des":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/des.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/des.js/lib/des/utils.js":[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/browser.js":[function(require,module,exports){
(function (Buffer){(function (){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this)}).call(this,require("buffer").Buffer)
},{"./lib/dh":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/lib/dh.js","./lib/generatePrime":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/lib/generatePrime.js","./lib/primes.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/lib/primes.json","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/lib/dh.js":[function(require,module,exports){
(function (Buffer){(function (){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./generatePrime":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/lib/generatePrime.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","miller-rabin":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/miller-rabin/lib/mr.js","randombytes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randombytes/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/lib/generatePrime.js":[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","miller-rabin":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/miller-rabin/lib/mr.js","randombytes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randombytes/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/lib/primes.json":[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ed2curve/ed2curve.js":[function(require,module,exports){
/*
 * ed2curve: convert Ed25519 signing key pair into Curve25519
 * key pair suitable for Diffie-Hellman key exchange.
 *
 * Written by Dmitry Chestnykh in 2014. Public domain.
 */
/* jshint newcap: false */
(function(root, f) {
  'use strict';
  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl/nacl-fast'));
  else root.ed2curve = f(root.nacl);
}(this, function(nacl) {
  'use strict';
  if (!nacl) throw new Error('tweetnacl not loaded');

  // -- Operations copied from TweetNaCl.js. --

  var gf = function(init) {
    var i, r = new Float64Array(16);
    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
    return r;
  };

  var gf1 = gf([1]);

  function car25519(o) {
    var c;
    var i;
    for (i = 0; i < 16; i++) {
      o[i] += 65536;
      c = Math.floor(o[i] / 65536);
      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);
      o[i] -= (c * 65536);
    }
  }

  function sel25519(p, q, b) {
    var t, c = ~(b-1);
    for (var i = 0; i < 16; i++) {
      t = c & (p[i] ^ q[i]);
      p[i] ^= t;
      q[i] ^= t;
    }
  }

  function unpack25519(o, n) {
    var i;
    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
    o[15] &= 0x7fff;
  }

  // addition
  function A(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;
  }

  // subtraction
  function Z(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;
  }

  // multiplication
  function M(o, a, b) {
    var i, j, t = new Float64Array(31);
    for (i = 0; i < 31; i++) t[i] = 0;
    for (i = 0; i < 16; i++) {
      for (j = 0; j < 16; j++) {
        t[i+j] += a[i] * b[j];
      }
    }
    for (i = 0; i < 15; i++) {
      t[i] += 38 * t[i+16];
    }
    for (i = 0; i < 16; i++) o[i] = t[i];
    car25519(o);
    car25519(o);
  }

  // squaring
  function S(o, a) {
    M(o, a, a);
  }

  // inversion
  function inv25519(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 253; a >= 0; a--) {
      S(c, c);
      if(a !== 2 && a !== 4) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }

  function pack25519(o, n) {
    var i, j, b;
    var m = gf(), t = gf();
    for (i = 0; i < 16; i++) t[i] = n[i];
    car25519(t);
    car25519(t);
    car25519(t);
    for (j = 0; j < 2; j++) {
      m[0] = t[0] - 0xffed;
      for (i = 1; i < 15; i++) {
        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
        m[i-1] &= 0xffff;
      }
      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
      b = (m[15]>>16) & 1;
      m[14] &= 0xffff;
      sel25519(t, m, 1-b);
    }
    for (i = 0; i < 16; i++) {
      o[2*i] = t[i] & 0xff;
      o[2*i+1] = t[i]>>8;
    }
  }

  // ----

  // Converts Ed25519 public key to Curve25519 public key.
  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p
  function convertPublicKey(pk) {
    var z = new Uint8Array(32),
        y = gf(), a = gf(), b = gf();

    unpack25519(y, pk);

    A(a, gf1, y);
    Z(b, gf1, y);
    inv25519(b, b);
    M(a, a, b);

    pack25519(z, a);
    return z;
  }

  // Converts Ed25519 secret key to Curve25519 secret key.
  function convertSecretKey(sk) {
    var d = new Uint8Array(64), o = new Uint8Array(32), i;
    nacl.lowlevel.crypto_hash(d, sk, 32);
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    for (i = 0; i < 32; i++) o[i] = d[i];
    for (i = 0; i < 64; i++) d[i] = 0;
    return o;
  }

  function convertKeyPair(edKeyPair) {
    return {
      publicKey: convertPublicKey(edKeyPair.publicKey),
      secretKey: convertSecretKey(edKeyPair.secretKey)
    };
  }

  return {
    convertPublicKey: convertPublicKey,
    convertSecretKey: convertSecretKey,
    convertKeyPair: convertKeyPair,
  };

}));

},{"tweetnacl/nacl-fast":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/tweetnacl/nacl-fast.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic.js":[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/package.json","./elliptic/curve":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/index.js","./elliptic/curves":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curves.js","./elliptic/ec":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/ec/index.js","./elliptic/eddsa":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/eddsa/index.js","./elliptic/utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","brorand":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/brorand/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/base.js":[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/edwards.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","./base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/base.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/index.js":[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/base.js","./edwards":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/edwards.js","./mont":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/mont.js","./short":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/short.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/mont.js":[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var utils = require('../utils');

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","./base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/base.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/short.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","./base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/base.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curves.js":[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var curve = require('./curve');
var utils = require('./utils');

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"./curve":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curve/index.js","./precomputed/secp256k1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","./utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","hash.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/ec/index.js":[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var utils = require('../utils');
var curves = require('../curves');
var rand = require('brorand');
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../curves":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curves.js","../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","./key":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/ec/key.js","./signature":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/ec/signature.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js","brorand":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/brorand/index.js","hmac-drbg":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hmac-drbg/lib/hmac-drbg.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/ec/key.js":[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/ec/signature.js":[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var utils = require('../utils');
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/eddsa/index.js":[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var curves = require('../curves');
var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../curves":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/curves.js","../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","./key":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/eddsa/key.js","./signature":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/eddsa/signature.js","hash.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/eddsa/key.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/eddsa/signature.js":[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/lib/elliptic/utils.js":[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js","minimalistic-crypto-utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-crypto-utils/lib/utils.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/node_modules/bn.js/lib/bn.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/elliptic/package.json":[function(require,module,exports){
module.exports={
  "_from": "elliptic@^6.5.3",
  "_id": "elliptic@6.5.3",
  "_inBundle": false,
  "_integrity": "sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==",
  "_location": "/elliptic",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "elliptic@^6.5.3",
    "name": "elliptic",
    "escapedName": "elliptic",
    "rawSpec": "^6.5.3",
    "saveSpec": null,
    "fetchSpec": "^6.5.3"
  },
  "_requiredBy": [
    "/browserify-sign",
    "/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.3.tgz",
  "_shasum": "cb59eb2efdaf73a0bd78ccd7015a62ad6e0f93d6",
  "_spec": "elliptic@^6.5.3",
  "_where": "/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign",
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.0",
    "inherits": "^2.0.1",
    "minimalistic-assert": "^1.0.0",
    "minimalistic-crypto-utils": "^1.0.0"
  },
  "deprecated": false,
  "description": "EC cryptography",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^3.0.8",
    "grunt": "^1.0.4",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^9.0.1",
    "istanbul": "^0.4.2",
    "jscs": "^3.0.7",
    "jshint": "^2.10.3",
    "mocha": "^6.2.2"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "name": "elliptic",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "version": "grunt dist && git add dist/"
  },
  "version": "6.5.3"
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/encoding-down/index.js":[function(require,module,exports){
'use strict'

var AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN
var AbstractChainedBatch = require('abstract-leveldown').AbstractChainedBatch
var AbstractIterator = require('abstract-leveldown').AbstractIterator
var inherits = require('inherits')
var Codec = require('level-codec')
var EncodingError = require('level-errors').EncodingError
var rangeMethods = ['approximateSize', 'compactRange']

module.exports = DB.default = DB

function DB (db, opts) {
  if (!(this instanceof DB)) return new DB(db, opts)

  var manifest = db.supports || {}
  var additionalMethods = manifest.additionalMethods || {}

  AbstractLevelDOWN.call(this, manifest)

  this.supports.encodings = true
  this.supports.additionalMethods = {}

  rangeMethods.forEach(function (m) {
    // TODO (future major): remove this fallback
    var fallback = typeof db[m] === 'function'

    if (additionalMethods[m] || fallback) {
      this.supports.additionalMethods[m] = true

      this[m] = function (start, end, opts, cb) {
        start = this.codec.encodeKey(start, opts)
        end = this.codec.encodeKey(end, opts)
        return this.db[m](start, end, opts, cb)
      }
    }
  }, this)

  opts = opts || {}
  if (typeof opts.keyEncoding === 'undefined') opts.keyEncoding = 'utf8'
  if (typeof opts.valueEncoding === 'undefined') opts.valueEncoding = 'utf8'

  this.db = db
  this.codec = new Codec(opts)
}

inherits(DB, AbstractLevelDOWN)

DB.prototype.type = 'encoding-down'

DB.prototype._serializeKey =
DB.prototype._serializeValue = function (datum) {
  return datum
}

DB.prototype._open = function (opts, cb) {
  this.db.open(opts, cb)
}

DB.prototype._close = function (cb) {
  this.db.close(cb)
}

DB.prototype._put = function (key, value, opts, cb) {
  key = this.codec.encodeKey(key, opts)
  value = this.codec.encodeValue(value, opts)
  this.db.put(key, value, opts, cb)
}

DB.prototype._get = function (key, opts, cb) {
  var self = this
  key = this.codec.encodeKey(key, opts)
  opts.asBuffer = this.codec.valueAsBuffer(opts)
  this.db.get(key, opts, function (err, value) {
    if (err) return cb(err)
    try {
      value = self.codec.decodeValue(value, opts)
    } catch (err) {
      return cb(new EncodingError(err))
    }
    cb(null, value)
  })
}

DB.prototype._del = function (key, opts, cb) {
  key = this.codec.encodeKey(key, opts)
  this.db.del(key, opts, cb)
}

DB.prototype._chainedBatch = function () {
  return new Batch(this)
}

DB.prototype._batch = function (ops, opts, cb) {
  ops = this.codec.encodeBatch(ops, opts)
  this.db.batch(ops, opts, cb)
}

DB.prototype._iterator = function (opts) {
  opts.keyAsBuffer = this.codec.keyAsBuffer(opts)
  opts.valueAsBuffer = this.codec.valueAsBuffer(opts)
  return new Iterator(this, opts)
}

DB.prototype._clear = function (opts, callback) {
  opts = this.codec.encodeLtgt(opts)
  this.db.clear(opts, callback)
}

function Iterator (db, opts) {
  AbstractIterator.call(this, db)
  this.codec = db.codec
  this.keys = opts.keys
  this.values = opts.values
  this.opts = this.codec.encodeLtgt(opts)
  this.it = db.db.iterator(this.opts)
}

inherits(Iterator, AbstractIterator)

Iterator.prototype._next = function (cb) {
  var self = this
  this.it.next(function (err, key, value) {
    if (err) return cb(err)
    try {
      if (self.keys && typeof key !== 'undefined') {
        key = self.codec.decodeKey(key, self.opts)
      } else {
        key = undefined
      }

      if (self.values && typeof value !== 'undefined') {
        value = self.codec.decodeValue(value, self.opts)
      } else {
        value = undefined
      }
    } catch (err) {
      return cb(new EncodingError(err))
    }
    cb(null, key, value)
  })
}

Iterator.prototype._seek = function (key) {
  key = this.codec.encodeKey(key, this.opts)
  this.it.seek(key)
}

Iterator.prototype._end = function (cb) {
  this.it.end(cb)
}

function Batch (db, codec) {
  AbstractChainedBatch.call(this, db)
  this.codec = db.codec
  this.batch = db.db.batch()
}

inherits(Batch, AbstractChainedBatch)

Batch.prototype._put = function (key, value) {
  key = this.codec.encodeKey(key)
  value = this.codec.encodeValue(value)
  this.batch.put(key, value)
}

Batch.prototype._del = function (key) {
  key = this.codec.encodeKey(key)
  this.batch.del(key)
}

Batch.prototype._clear = function () {
  this.batch.clear()
}

Batch.prototype._write = function (opts, cb) {
  this.batch.write(opts, cb)
}

},{"abstract-leveldown":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","level-codec":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/encoding-down/node_modules/level-codec/index.js","level-errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-errors/errors.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/encoding-down/node_modules/level-codec/index.js":[function(require,module,exports){
var encodings = require('./lib/encodings')

module.exports = Codec

function Codec (opts) {
  if (!(this instanceof Codec)) {
    return new Codec(opts)
  }
  this.opts = opts || {}
  this.encodings = encodings
}

Codec.prototype._encoding = function (encoding) {
  if (typeof encoding === 'string') encoding = encodings[encoding]
  if (!encoding) encoding = encodings.id
  return encoding
}

Codec.prototype._keyEncoding = function (opts, batchOpts) {
  return this._encoding((batchOpts && batchOpts.keyEncoding) ||
                        (opts && opts.keyEncoding) ||
                        this.opts.keyEncoding)
}

Codec.prototype._valueEncoding = function (opts, batchOpts) {
  return this._encoding((batchOpts && (batchOpts.valueEncoding || batchOpts.encoding)) ||
                        (opts && (opts.valueEncoding || opts.encoding)) ||
                        (this.opts.valueEncoding || this.opts.encoding))
}

Codec.prototype.encodeKey = function (key, opts, batchOpts) {
  return this._keyEncoding(opts, batchOpts).encode(key)
}

Codec.prototype.encodeValue = function (value, opts, batchOpts) {
  return this._valueEncoding(opts, batchOpts).encode(value)
}

Codec.prototype.decodeKey = function (key, opts) {
  return this._keyEncoding(opts).decode(key)
}

Codec.prototype.decodeValue = function (value, opts) {
  return this._valueEncoding(opts).decode(value)
}

Codec.prototype.encodeBatch = function (ops, opts) {
  var self = this

  return ops.map(function (_op) {
    var op = {
      type: _op.type,
      key: self.encodeKey(_op.key, opts, _op)
    }
    if (self.keyAsBuffer(opts, _op)) op.keyEncoding = 'binary'
    if (_op.prefix) op.prefix = _op.prefix
    if ('value' in _op) {
      op.value = self.encodeValue(_op.value, opts, _op)
      if (self.valueAsBuffer(opts, _op)) op.valueEncoding = 'binary'
    }
    return op
  })
}

var ltgtKeys = ['lt', 'gt', 'lte', 'gte', 'start', 'end']

Codec.prototype.encodeLtgt = function (ltgt) {
  var self = this
  var ret = {}
  Object.keys(ltgt).forEach(function (key) {
    ret[key] = ltgtKeys.indexOf(key) > -1
      ? self.encodeKey(ltgt[key], ltgt)
      : ltgt[key]
  })
  return ret
}

Codec.prototype.createStreamDecoder = function (opts) {
  var self = this

  if (opts.keys && opts.values) {
    return function (key, value) {
      return {
        key: self.decodeKey(key, opts),
        value: self.decodeValue(value, opts)
      }
    }
  } else if (opts.keys) {
    return function (key) {
      return self.decodeKey(key, opts)
    }
  } else if (opts.values) {
    return function (_, value) {
      return self.decodeValue(value, opts)
    }
  } else {
    return function () {}
  }
}

Codec.prototype.keyAsBuffer = function (opts) {
  return this._keyEncoding(opts).buffer
}

Codec.prototype.valueAsBuffer = function (opts) {
  return this._valueEncoding(opts).buffer
}

},{"./lib/encodings":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/encoding-down/node_modules/level-codec/lib/encodings.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/encoding-down/node_modules/level-codec/lib/encodings.js":[function(require,module,exports){
var Buffer = require('buffer').Buffer

exports.utf8 = exports['utf-8'] = {
  encode: function (data) {
    return isBinary(data) ? data : String(data)
  },
  decode: identity,
  buffer: false,
  type: 'utf8'
}

exports.json = {
  encode: JSON.stringify,
  decode: JSON.parse,
  buffer: false,
  type: 'json'
}

exports.binary = {
  encode: function (data) {
    return isBinary(data) ? data : Buffer.from(data)
  },
  decode: identity,
  buffer: true,
  type: 'binary'
}

exports.none = {
  encode: identity,
  decode: identity,
  buffer: false,
  type: 'id'
}

exports.id = exports.none

var bufferEncodings = [
  'hex',
  'ascii',
  'base64',
  'ucs2',
  'ucs-2',
  'utf16le',
  'utf-16le'
]

bufferEncodings.forEach(function (type) {
  exports[type] = {
    encode: function (data) {
      return isBinary(data) ? data : Buffer.from(data, type)
    },
    decode: function (buffer) {
      return buffer.toString(type)
    },
    buffer: true,
    type: type
  }
})

function identity (value) {
  return value
}

function isBinary (data) {
  return data === undefined || data === null || Buffer.isBuffer(data)
}

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/events.js":[function(require,module,exports){
'use strict'

module.exports = function (version) {

  const { note, getReceive, getReplicate, getSequence } = version

  var exports = {
    note,
    getReceive,
    getReplicate,
    getSequence
  }

  function isEmpty (o) {
    for(var k in o) return false
    return true
  }

  function isObject (o) {
    return o && 'object' === typeof o
  }

  function isBlocked(state, id, target) {
    return state.blocks[id] && state.blocks[id][target]
  }

  function isShared (state, id, peer_id) {
    return state.follows[id] && !isBlocked(state, id, peer_id)
  }

  //check if a feed is already being replicated on another peer from ignore_id
  function isAlreadyReplicating(state, feed_id, ignore_id) {
    for(var id in state.peers) {
      if(id !== ignore_id) {
        var peer = state.peers[id]
        if(peer.notes && getReceive(peer.notes[id])) return id

        // for replicating the node must have replicated something not just rx
        // this fixed a partial replication bug where a node is unable to send the full log
        var id_has_sent = peer.replicating && peer.replicating[id] && peer.replicating[id].sent != -1
        if(peer.replicating && peer.replicating[feed_id] && peer.replicating[feed_id].rx && id_has_sent) return id
      }
    }
    return false
  }

  function max (a, b) {
    if(a == null) return b
    if(a == -1 || b == -1) return b
    return Math.max(a, b)
  }

  //check if a feed is available from a peer apart from ignore_id

  function isAvailable(state, feed_id, ignore_id) {
    for(var peer_id in state.peers) {
      if(peer_id != ignore_id) {
        var peer = state.peers[peer_id]
        //BLOCK: check wether id has blocked this peer
        if((peer.clock && peer.clock[feed_id] || 0) > (state.clock[feed_id] || 0) && isShared(state, feed_id, peer_id)) {
          return true
        }
      }
    }
  }

  //jump to a particular key in a list, then iterate from there
  //back around to the key. this is used for switching away from
  //peers that stall so that you'll rotate through all the peers
  //not just swich between two different peers.

  function eachFrom(keys, key, iter) {
    var i = keys.indexOf(key)
    if(!~i) return
    //start at 1 because we want to visit all keys but key.
    for(var j = 1; j < keys.length; j++)
      if(iter(keys[(j+i)%keys.length], j))
        return
  }

  function setNotes (peer, feed, seq, rx) {
    peer.notes = peer.notes || {}
    peer.notes[feed] = note(seq, rx)

    var rep = peer.replicating[feed]
    if(rep) {
      rep.rx = rx
      rep.requested = seq
    }
  }

  // defaults for backwards compatibility
  exports.getMsgAuthor = function(msg) {
    return msg.author
  }
  exports.getMsgSequence = function(msg) {
    return msg.sequence
  }

  exports.initialize = function (id, getMsgAuthor, getMsgSequence) {
    if (getMsgAuthor)
      exports.getMsgAuthor = getMsgAuthor
    if (getMsgSequence)
      exports.getMsgSequence = getMsgSequence

    return {
      id: id,
      clock: null,
      follows: {},
      blocks: {},
      peers: {},
      receive: []
    }
  }

  exports.clock = function (state, clock) {
    state.clock = clock
    return state
  }

  exports.connect = function (state, ev) {
    if(state.peers[ev.id]) throw new Error('already connected to peer:'+ev.id)
    if(typeof ev.client != 'boolean') throw new Error('connect.client must be boolean')

    //  if(isBlocked(state, state.id, ev.id)) return state

    state.peers[ev.id] = {
      blocked: isBlocked(state, state.id, ev.id),
      clock: null,
      client: !!ev.client,
      msgs: [],
      retrive: [],
      notes: null,
      //if we are client, wait until we receive notes to send code.
      //this is a weird way of doing it! shouldn't we just have a bit of state
      //for wether we have received a vector clock
      replicating: ev.client ? null : {}
    }

    return state
  }

  exports.disconnect = function (state, ev) {
    delete state.peers[ev.id]
    return state
  }

  //this is when the stored peer clock has been loaded from the local database.
  //note, this must be handled before any messages are received.
  exports.peerClock = function (state, ev) {
    if(!state.peers[ev.id])
      throw new Error('peerClock called for:'+ev.id + ' but only connected to:'+ Object.keys(state.peers))
    var peer = state.peers[ev.id]
    var clock = peer.clock = ev.value

    //client should wait for the server notes, so that stream
    //can error before a peer sends a massive handshake.
    if(peer.replicating == null) return state

    //always set an empty clock here, so that if we don't have anything
    //to send, we still send this empty clock. This only happens on a new connection.
    //in every other situation, clock is only sent if there is something in it.
    peer.notes = peer.notes || {}

    //iterate over following and create replications.
    //if we want to replicate a peer that has changed since their clock,
    //create a replication for that peer.

    for(var id in state.follows) {
      var seq = clock[id], lseq = state.clock[id] || 0
      //BLOCK: check wether id has blocked this peer
      if(isShared(state, id, ev.id) && seq !== -1 && seq !== lseq) {

        //if we are already replicating, and this feed is at zero, ask for it anyway,
        //XXX if a feed is at zero, but we are replicating on another peer
        //just don't ask for it yet?
        var replicating = isAlreadyReplicating(state, id, ev.id)// && lseq
        peer.replicating = peer.replicating || {}
        peer.replicating[id] = {
          tx: false,
          rx: !replicating,
          sent: null,
          requested: state.clock[id]
        }
        setNotes(peer, id, state.clock[id] || 0, !replicating)
      }
    }

    return state
  }

  //XXX handle replicating with only one peer.
  exports.follow = function (state, ev) {
    //set to true once we have asked for this feed from someone.
    var replicating = false
    if(!!state.follows[ev.id] !== ev.value) {
      state.follows[ev.id] = ev.value
      for(var id in state.peers) {
        var peer = state.peers[id]
        if(!peer.clock || !peer.replicating || !isShared(state, ev.id, id)) continue
        //BLOCK: check wether this feed has has blocked this peer.
        //..... don't replicate feeds with peers that have blocked them at all?

        //cases:
        //  don't have feed
        //  do have feed
        //  peer has feed
        //  peer rejects feed
        var seq = peer.clock[ev.id], lseq = state.clock[ev.id] || 0
        if(seq === -1) {
          //peer explicitly does not replicate this feed, don't ask for it.
        }
        else if(ev.value === false) { //unfollow
          setNotes(peer, ev.id, -1, false)
        }
        else if(ev.value === true && seq != lseq) {
          peer.replicating[ev.id] = {
            rx: true, tx: false,
            sent: -1, requested: lseq
          }
          setNotes(peer, ev.id, lseq, !replicating)
          replicating = true
        }
      }
    }
    return state
  }

  exports.retrive = function (state, msg) {
    //check if any peer requires this msg
    for(var id in state.peers) {
      var peer = state.peers[id]
      if(!peer.replicating) continue;
      //BLOCK: check wether id has blocked this peer
      const author = exports.getMsgAuthor(msg)
      const sequence = exports.getMsgSequence(msg)
      var rep = peer.replicating[author]

      if(rep && rep.tx && rep.sent === sequence - 1) {
        rep.sent++
        peer.msgs.push(msg)
        if(rep.sent < state.clock[author]) {
          //use continue, not return because we still need to loop through other peers.
          if(~peer.retrive.indexOf(author)) continue
          peer.retrive.push(author)
        }
      }
    }
    return state
  }

  function isAhead(seq1, seq2) {
    if(seq2 === -1) return false
    if(seq2 == null) return true
    if(seq1 > seq2) return true
  }

  exports.append = function (state, msg) {
    const author = exports.getMsgAuthor(msg)
    const sequence = exports.getMsgSequence(msg)
    //check if any peer requires this msg
    if(state.clock[author] != null && state.clock[author] !== sequence - 1)
      return state //ignore

    var lseq = state.clock[author] = sequence
    for(var id in state.peers) {
      var peer = state.peers[id]
      if(!peer.clock || !peer.replicating || !isShared(state, author, id)) continue
      //BLOCK: check wether msg.author has blocked this peer

      var seq = peer.clock[author]

      var rep = peer.replicating[author]

      if(rep && rep.tx && rep.sent == lseq - 1 && lseq > seq) {
        peer.msgs.push(msg)
        rep.sent++
      }
      //if we are ahead of this peer, and not in tx mode, let them know that.
      else if(
        isAhead(lseq, seq) &&
          (rep ? !rep.tx && rep.sent != null : state.follows[author])
      )
        setNotes(peer, author, sequence, false)
    }

    return state
  }

  //XXX if we only receive from a single peer,
  //then we shouldn't really get known messages?
  //except during the race when we have disabled a peer
  //but they havn't noticed yet.
  exports.receive = function (state, ev) {
    var msg = ev.value
    //receive a message, validate and append.
    //if this message is forked, disable this feed

    if(!state.peers[ev.id]) throw new Error('lost peer state:'+ev.id)

    //we _know_ that this peer is upto at least this message now.
    //(but maybe they already told us they where ahead further)
    const author = exports.getMsgAuthor(msg)
    const sequence = exports.getMsgSequence(msg)
    var peer = state.peers[ev.id]
    var rep = peer.replicating[author]

    //if we havn't asked for this, ignore it. (this is remote speaking protocol wrong!)
    if(!rep) return state

    peer.clock[author] = Math.max(peer.clock[author], sequence)
    rep.sent = Math.max(rep.sent, sequence)

    //if this message has already been seen, ignore.
    if(state.clock[author] >= sequence) {
      if (rep.rx) {
        setNotes(peer, author, state.clock[author], false)
      }
      //XXX activate some other peer?
      return state
    }

    //remember the time of the last message received
    state.peers[ev.id].ts = ev.ts

    //FORKS ignore additional messages if we have already found an invalid one.
    if(isShared(state, exports.getMsgAuthor(ev.value), ev.id))
      state.receive.push(ev)
    //Q: possibly update the receiving mode?

    return state
  }


  //XXX check if we are already receiving a feed
  //and if so put this into lazy mode.
  exports.notes = function (state, ev) {
    //update replicating modes
    var clock = ev.value

    //support sending clocks inside a thing with additional properties.
    //this is to allow room for backwards compatible upgrades.
    if(isObject(ev.value.clock))
      clock = ev.value.clock

    var peer = state.peers[ev.id]
    if(!peer) throw new Error('lost state of peer:'+ev.id)
    if(!peer.clock) throw new Error("received notes, but has not set the peer's clock yet")
    var count = 0

    //if we are client, and this is the first notes we receive
    if(!peer.replicating) {
      peer.replicating = {}
      state = exports.peerClock(state, {id: ev.id, value: state.peers[ev.id].clock})
    }

    for(var id in clock) {
      count++

      var seq = peer.clock[id] = max(peer.clock[id], getSequence(clock[id]))
      var tx = getReceive(clock[id]) // is even
      var isReplicate = getReplicate(clock[id]) // !== -1

      var lseq = state.clock[id] || 0

      //check if we are not following this feed.
      //BLOCK: or wether id has blocked this peer
      if(!isShared(state, id, ev.id)) {
        if(!peer.replicating[id])
          setNotes(peer, id, -1)
        peer.replicating[id] = {tx:false, rx:false, sent: -1, requested: -1}
      }
      else {
        var rep = peer.replicating[id]
        var replicating = isAlreadyReplicating(state, id, ev.id)
        if(!rep) {
          rep = peer.replicating[id] = {
            tx: true,
            rx: true,
            sent: seq,
            requested: lseq
          }
          setNotes(peer, id, lseq, lseq < seq && !replicating)
        }
        else if(!rep.rx && seq > lseq) {
          if(!replicating) {
            peer.ts = ev.ts //remember ts, so we can switch this feed if necessary
            setNotes(peer, id, lseq, true)
          } else {
            //if we are already replicating this via another peer
            //switch to this peer if it is further ahead.
            //(todo?: switch if the other peer's timestamp is old?)
            var _peer = state.peers[replicating]
            // note: _peer.clock[id] may be undefined, if we have
            // just connected to them and sent our notes but not
            // received theirs.
            if(seq > (_peer.clock[id] || 0)) {
              peer.ts = ev.ts
              setNotes(peer, id, lseq, true)
              setNotes(_peer, id, lseq, false) //deactivate the previous peer
            }
          }
        }

        //positive seq means "send this to me please"
        rep.tx = tx
        //in the case we are already ahead, get ready to send them messages.
        rep.sent = seq
        if(lseq > seq) {
          if(tx) peer.retrive.push(id)
          else if(isReplicate) setNotes(peer, id, lseq, rep.rx)
        }
      }
    }

    peer.recvNotes = (peer.recvNotes || 0) + count
    return state
  }

  exports.timeout = function (state, ev) {
    var want = {}
    for(var peer_id in state.peers) {
      var peer = state.peers[peer_id]
      //check if the peer hasn't received a message recently.

      //if we havn't received a message from this peer recently
      if((peer.ts || 0) + state.timeout < ev.ts) {
        //check if they have claimed a higher sequence, but not sent us
        for(var id in peer.replicating) {

          var rep = peer.replicating[id]
          //if yes, prepare to switch this feed to that peer
          if(rep.rx && isAvailable(state, id, peer_id)) {
            want[id] = peer_id
            setNotes(peer, id, state.clock[id], false)
          }
        }
      }
    }
    var peer_ids = Object.keys(state.peers)
    for(var feed_id in want) {
      var ignore_id = want[feed_id]
      eachFrom(peer_ids, ignore_id, function (peer_id) {
        var peer = state.peers[peer_id]
        if(peer.clock && peer.clock[feed_id] || 0 > state.clock[feed_id] || 0) {
          peer.replicating = peer.replicating || {}
          peer.replicating[feed_id] = peer.replicating[feed_id] || {
            tx: false, rx: true, sent: -1, requested: state.clock[feed_id]
          }
          setNotes(peer, feed_id, state.clock[feed_id], true)
          peer.ts = ev.ts
          //returning true triggers the end of eachFrom
          return true
        }
      })
    }
    return state
  }

  exports.block = function (state, ev) {
    if(!ev.value) {
      if(state.blocks[ev.id]) delete state.blocks[ev.id][ev.target]
      if(isEmpty(state.blocks[ev.id]))
        delete state.blocks[ev.id]
    }
    else {
      state.blocks[ev.id] = state.blocks[ev.id] || {}
      state.blocks[ev.id][ev.target] = true
    }

    //if we blocked this peer, and we are also connected to them.
    //then stop replicating immediately.
    if(state.id === ev.id && state.peers[ev.target]) {
      //end replication immediately.
      state.peers[ev.target].blocked = ev.value
    }

    for(var id in state.peers) {
      var peer = state.peers[id]
      if(!peer.replicating) continue
      if(id === ev.target && peer.replicating[ev.id])
        setNotes(peer, ev.id, -1, false)
    }

    return state
  }

  return exports
}

/*
  what does a fork proof look like?

  usually, you have one message, and receive a subsequent message.
  (n, n'+1), except that n'+1 does not extend n. but both have valid
  signatures.

*/

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/index.js":[function(require,module,exports){
var events = require('./events')(require('./v3'))
var Stream = require('./stream')(events)
var progress = require('./progress')

function timestamp () {
  return Date.now()
}

// Returns a function that removes keys from `clock` where `!isFeed(key)`.
function createValidate (isFeed) {
  return function (clock) {
    for(var outerKey in clock) {
      if(!isFeed(outerKey)) {
        var _clock = {}
        for(var innerKey in clock) {
          if(isFeed(innerKey)) _clock[innerKey] = clock[innerKey]
        }
        return _clock
      }
    }
    return clock
  }
}

module.exports = function (opts) {
  var state = events.initialize(opts.id, opts.getMsgAuthor, opts.getMsgSequence)
  state.timeout = opts.timeout || 3000
  state.clock = {}

  if (!opts.isMsg) {
    opts.isMsg = function(m) {
      return Number.isInteger(m.sequence) && m.sequence > 0 &&
        typeof m.author == 'string' && m.content
    }
  }

  var self = {
    id: opts.id,
    streams: {},
    state: state,
    logging: opts.logging,
    progress: function () {
      return progress(state)
    },
    request: function (id, follows) {
      if(opts.isFeed && !opts.isFeed(id)) return
      self.state = events.follow(self.state, {id: id, value: follows !== false, ts: timestamp()})
      self.update()
    },
    pause: function (id, paused) {
      self.state = events.pause(self.state, {id: id, paused: paused !== false})
      self.update()
    },
    block: function (id, target, value) {
      self.state = events.block(self.state, {id: id, target: target, value: value !== false, ts: timestamp()})
      self.update()
    },
    createStream: function (remote_id, version, client) {
      if(this.streams[remote_id])
        this.streams[remote_id].end(new Error('reconnected to peer'))
      if(this.logging) console.log('EBT:conn', remote_id)
      var stream = this.streams[remote_id] = new Stream(this, remote_id, version, client, opts.isMsg, function (peerState) {
        opts.setClock(remote_id, peerState.clock)
      })

      if(opts.isFeed)
        stream._validate = createValidate(opts.isFeed)

      opts.getClock(remote_id, function (err, clock) {
        //check if peer exists in state, because we may
        //have disconect in the meantime
        if(self.state.peers[remote_id])
          stream.clock(err ? {} : clock)
      })
      return stream
    },
    _retrive: function (err, msg) {
      if(msg) {
        self.state = events.retrive(self.state, msg)
        self.update()
      }
      else {
        //this should never happen.
        //replication for this feed is in bad state now.
        console.log('could not retrive msg:', err)
      }
    },
    onAppend: function (msg) {
      self.state = events.append(self.state, msg)
      self.update()
    },
    update: function () {
      //retrive next messages.
      //TODO: respond to back pressure from streams to each peer.
      //if a given stream is paused, don't retrive more msgs
      //for that peer/stream.
      for(var peer in this.state.peers) {
        var state = this.state.peers[peer]
        while(state.retrive.length) {
          var id = state.retrive.shift()
          if(state.replicating[id])
            opts.getAt({
              id: id,
              sequence:state.replicating[id].sent+1
            }, this._retrive)
        }
      }
      if(this.state.receive.length) {
        var ev = this.state.receive.shift()
        opts.append(ev.value, function (err) {
          if(err) {
            if(this.logging) console.error('EBT:err', err)
            self.block(ev.value.author, ev.id, true)
          }
          else self.onAppend(ev.value)
        })
      }
      for(var k in this.streams)
        this.streams[k].resume()
    },
  }

  var int = setInterval(function () {
    self.state = events.timeout(self.state, {ts: timestamp()})
    self.update()
  }, state.timeout)
  if(int.unref) int.unref()

  return self
}

},{"./events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/events.js","./progress":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/progress.js","./stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/stream.js","./v3":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/v3.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/progress.js":[function(require,module,exports){
/*
  better progress algorithm:

  count number of feeds we expect to send to each peer.
  sum of the difference between what they have asked, and what we have sent.

  same for receive, but have to remember what we asked for.
*/

module.exports = function (state) {
  var prog = {start:0, current: 0, target: 0}
  for(var peer_id in state.peers) {
    var peer = state.peers[peer_id]

    for(var feed_id in peer.replicating) {
      var rep = peer.replicating[feed_id]
      //progress for sending initial note
      prog.target++
      if(rep.sent != null) prog.current++

      prog.target++
      if(rep.requested != null) prog.current++

      var seq = peer.clock[feed_id]
      var lseq = state.clock[feed_id] || 0

      if(rep.rx && rep.requested != null && rep.requested > -1 && lseq < seq) {
        prog.current += lseq - rep.requested
        prog.target += seq - rep.requested
      }

      if(rep.tx && seq > -1 && seq < lseq) {
        prog.current += rep.sent - seq
        prog.target += lseq - seq
      }
    }
  }

  return prog
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/stream.js":[function(require,module,exports){
module.exports = function (events) {
  function timestamp () {
    return Date.now()
  }

  function EBTStream (peer, remote, version, client, isMsg, onClose) {
    this.paused = true //start out paused
    this.remote = remote
    this.peer = peer
    this.version = version
    this.peer.state = events.connect(this.peer.state, {
      id: remote,
      ts: timestamp(),
      client: client
    })
    this.ended = false
    this._onClose = onClose
    this.isMsg = isMsg
    this.sink = this.source = null
  }

  EBTStream.prototype.clock = function (clock) {
    this.peer.state = events.peerClock(this.peer.state, {
      id: this.remote,
      value: clock,
      ts: timestamp()
    })
    this.paused = false
    this.peer.update()
    if(this.source) this.source.resume()
  }

  EBTStream.prototype.write = function (data) {
    if(this.peer.logging) console.log("EBT:recv", JSON.stringify(data, null, 2))
    if(this.ended) throw new Error('write after ebt stream ended:'+this.remote)
    if(this.isMsg(data)) {
      this.peer.state = events.receive(this.peer.state, {
        id: this.remote,
        value: data,
        ts: timestamp()
      })
    } else {
      this.peer.state = events.notes(this.peer.state, {
        id: this.remote,
        value: data,
        ts: timestamp()
      })
    }

    this.peer.update(this.remote)
  }

  EBTStream.prototype.abort = EBTStream.prototype.end = function (err) {
    this.ended = true
    //check if we have already ended
    if(!this.peer.state.peers[this.remote]) return

    if(this.peer.logging) console.log('EBT:dcon', this.remote)

    var peerState = this.peer.state.peers[this.remote]
    this.peer.state = events.disconnect(this.peer.state, {
      id: this.remote,
      ts: timestamp()
    })
    if(this._onClose) this._onClose(peerState)
    //remove from the peer...
    delete this.peer.streams[this.remote]
    if(this.source && !this.source.ended) this.source.abort(err)
    if(this.sink && !this.sink.ended) this.sink.end(err)
  }

  EBTStream.prototype.canSend = function () {
    var state = this.peer.state.peers[this.remote]
    return (
      this.sink &&
        !this.sink.paused &&
        !this.ended && (
          //missing state means this peer was blocked,
          //end immediately.
          state.blocked || state.msgs.length || state.notes
        )
    )
  }

  EBTStream.prototype.resume = function () {
    var state = this.peer.state.peers[this.remote]
    if(!this.sink || this.sink.paused) return
    while(this.canSend()) {
      if(state.blocked)
        this.end()
      else if(state.msgs.length) {
        if(this.peer.logging) console.log("EBT:send", JSON.stringify(state.msgs[0], null, 2))
        this.sink.write(state.msgs.shift())
      }
      else {
        var notes = state.notes
        state.notes = null
        if(this.peer.logging) console.log("EBT:send (" + this.peer.id + ")", notes)
        this.sink.write(notes)
      }
    }
  }

  EBTStream.prototype.pipe = require('push-stream/pipe')

  return EBTStream
}

},{"push-stream/pipe":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/pipe.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/v3.js":[function(require,module,exports){
exports.note = function note(seq, rx) {
  return seq === -1 ? -1 : seq << 1 | !rx
}

exports.getSequence = function getSequence(seq) {
  return !Number.isInteger(seq) ? -1 : seq >> 1
}

exports.getReplicate = function getReplicate(seq) {
  return seq !== -1
}

exports.getReceive = function getReceive(seq) {
  return !(seq & 1)
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/errno/custom.js":[function(require,module,exports){
var prr = require('prr')

function init (type, message, cause) {
  if (!!message && typeof message != 'string') {
    message = message.message || message.name
  }
  prr(this, {
      type    : type
    , name    : type
      // can be passed just a 'cause'
    , cause   : typeof message != 'string' ? message : cause
    , message : message
  }, 'ewr')
}

// generic prototype, not intended to be actually used - helpful for `instanceof`
function CustomError (message, cause) {
  Error.call(this)
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, this.constructor)
  init.call(this, 'CustomError', message, cause)
}

CustomError.prototype = new Error()

function createError (errno, type, proto) {
  var err = function (message, cause) {
    init.call(this, type, message, cause)
    //TODO: the specificity here is stupid, errno should be available everywhere
    if (type == 'FilesystemError') {
      this.code    = this.cause.code
      this.path    = this.cause.path
      this.errno   = this.cause.errno
      this.message =
        (errno.errno[this.cause.errno]
          ? errno.errno[this.cause.errno].description
          : this.cause.message)
        + (this.cause.path ? ' [' + this.cause.path + ']' : '')
    }
    Error.call(this)
    if (Error.captureStackTrace)
      Error.captureStackTrace(this, err)
  }
  err.prototype = !!proto ? new proto() : new CustomError()
  return err
}

module.exports = function (errno) {
  var ce = function (type, proto) {
    return createError(errno, type, proto)
  }
  return {
      CustomError     : CustomError
    , FilesystemError : ce('FilesystemError')
    , createError     : ce
  }
}

},{"prr":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/prr/prr.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/errno/errno.js":[function(require,module,exports){
var all = module.exports.all = [
  {
    errno: -2,
    code: 'ENOENT',
    description: 'no such file or directory'
  },
  {
    errno: -1,
    code: 'UNKNOWN',
    description: 'unknown error'
  },
  {
    errno: 0,
    code: 'OK',
    description: 'success'
  },
  {
    errno: 1,
    code: 'EOF',
    description: 'end of file'
  },
  {
    errno: 2,
    code: 'EADDRINFO',
    description: 'getaddrinfo error'
  },
  {
    errno: 3,
    code: 'EACCES',
    description: 'permission denied'
  },
  {
    errno: 4,
    code: 'EAGAIN',
    description: 'resource temporarily unavailable'
  },
  {
    errno: 5,
    code: 'EADDRINUSE',
    description: 'address already in use'
  },
  {
    errno: 6,
    code: 'EADDRNOTAVAIL',
    description: 'address not available'
  },
  {
    errno: 7,
    code: 'EAFNOSUPPORT',
    description: 'address family not supported'
  },
  {
    errno: 8,
    code: 'EALREADY',
    description: 'connection already in progress'
  },
  {
    errno: 9,
    code: 'EBADF',
    description: 'bad file descriptor'
  },
  {
    errno: 10,
    code: 'EBUSY',
    description: 'resource busy or locked'
  },
  {
    errno: 11,
    code: 'ECONNABORTED',
    description: 'software caused connection abort'
  },
  {
    errno: 12,
    code: 'ECONNREFUSED',
    description: 'connection refused'
  },
  {
    errno: 13,
    code: 'ECONNRESET',
    description: 'connection reset by peer'
  },
  {
    errno: 14,
    code: 'EDESTADDRREQ',
    description: 'destination address required'
  },
  {
    errno: 15,
    code: 'EFAULT',
    description: 'bad address in system call argument'
  },
  {
    errno: 16,
    code: 'EHOSTUNREACH',
    description: 'host is unreachable'
  },
  {
    errno: 17,
    code: 'EINTR',
    description: 'interrupted system call'
  },
  {
    errno: 18,
    code: 'EINVAL',
    description: 'invalid argument'
  },
  {
    errno: 19,
    code: 'EISCONN',
    description: 'socket is already connected'
  },
  {
    errno: 20,
    code: 'EMFILE',
    description: 'too many open files'
  },
  {
    errno: 21,
    code: 'EMSGSIZE',
    description: 'message too long'
  },
  {
    errno: 22,
    code: 'ENETDOWN',
    description: 'network is down'
  },
  {
    errno: 23,
    code: 'ENETUNREACH',
    description: 'network is unreachable'
  },
  {
    errno: 24,
    code: 'ENFILE',
    description: 'file table overflow'
  },
  {
    errno: 25,
    code: 'ENOBUFS',
    description: 'no buffer space available'
  },
  {
    errno: 26,
    code: 'ENOMEM',
    description: 'not enough memory'
  },
  {
    errno: 27,
    code: 'ENOTDIR',
    description: 'not a directory'
  },
  {
    errno: 28,
    code: 'EISDIR',
    description: 'illegal operation on a directory'
  },
  {
    errno: 29,
    code: 'ENONET',
    description: 'machine is not on the network'
  },
  {
    errno: 31,
    code: 'ENOTCONN',
    description: 'socket is not connected'
  },
  {
    errno: 32,
    code: 'ENOTSOCK',
    description: 'socket operation on non-socket'
  },
  {
    errno: 33,
    code: 'ENOTSUP',
    description: 'operation not supported on socket'
  },
  {
    errno: 34,
    code: 'ENOENT',
    description: 'no such file or directory'
  },
  {
    errno: 35,
    code: 'ENOSYS',
    description: 'function not implemented'
  },
  {
    errno: 36,
    code: 'EPIPE',
    description: 'broken pipe'
  },
  {
    errno: 37,
    code: 'EPROTO',
    description: 'protocol error'
  },
  {
    errno: 38,
    code: 'EPROTONOSUPPORT',
    description: 'protocol not supported'
  },
  {
    errno: 39,
    code: 'EPROTOTYPE',
    description: 'protocol wrong type for socket'
  },
  {
    errno: 40,
    code: 'ETIMEDOUT',
    description: 'connection timed out'
  },
  {
    errno: 41,
    code: 'ECHARSET',
    description: 'invalid Unicode character'
  },
  {
    errno: 42,
    code: 'EAIFAMNOSUPPORT',
    description: 'address family for hostname not supported'
  },
  {
    errno: 44,
    code: 'EAISERVICE',
    description: 'servname not supported for ai_socktype'
  },
  {
    errno: 45,
    code: 'EAISOCKTYPE',
    description: 'ai_socktype not supported'
  },
  {
    errno: 46,
    code: 'ESHUTDOWN',
    description: 'cannot send after transport endpoint shutdown'
  },
  {
    errno: 47,
    code: 'EEXIST',
    description: 'file already exists'
  },
  {
    errno: 48,
    code: 'ESRCH',
    description: 'no such process'
  },
  {
    errno: 49,
    code: 'ENAMETOOLONG',
    description: 'name too long'
  },
  {
    errno: 50,
    code: 'EPERM',
    description: 'operation not permitted'
  },
  {
    errno: 51,
    code: 'ELOOP',
    description: 'too many symbolic links encountered'
  },
  {
    errno: 52,
    code: 'EXDEV',
    description: 'cross-device link not permitted'
  },
  {
    errno: 53,
    code: 'ENOTEMPTY',
    description: 'directory not empty'
  },
  {
    errno: 54,
    code: 'ENOSPC',
    description: 'no space left on device'
  },
  {
    errno: 55,
    code: 'EIO',
    description: 'i/o error'
  },
  {
    errno: 56,
    code: 'EROFS',
    description: 'read-only file system'
  },
  {
    errno: 57,
    code: 'ENODEV',
    description: 'no such device'
  },
  {
    errno: 58,
    code: 'ESPIPE',
    description: 'invalid seek'
  },
  {
    errno: 59,
    code: 'ECANCELED',
    description: 'operation canceled'
  }
]

module.exports.errno = {}
module.exports.code = {}

all.forEach(function (error) {
  module.exports.errno[error.errno] = error
  module.exports.code[error.code] = error
})

module.exports.custom = require('./custom')(module.exports)
module.exports.create = module.exports.custom.createError

},{"./custom":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/errno/custom.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/es-abstract/GetIntrinsic.js":[function(require,module,exports){
'use strict';

/* globals
	AggregateError,
	Atomics,
	FinalizationRegistry,
	SharedArrayBuffer,
	WeakRef,
*/

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		// eslint-disable-next-line no-new-func
		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () { throw new $TypeError(); };
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var asyncGenFunction = getEvalledConstructor('async function* () {}');
var asyncGenFunctionPrototype = asyncGenFunction ? asyncGenFunction.prototype : undefined;
var asyncGenPrototype = asyncGenFunctionPrototype ? asyncGenFunctionPrototype.prototype : undefined;

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': getEvalledConstructor('async function () {}'),
	'%AsyncGenerator%': asyncGenFunctionPrototype,
	'%AsyncGeneratorFunction%': asyncGenFunction,
	'%AsyncIteratorPrototype%': asyncGenPrototype ? getProto(asyncGenPrototype) : undefined,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': getEvalledConstructor('function* () {}'),
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				if (!allowMissing && !(part in value)) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/function-bind/index.js","has":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has/src/index.js","has-symbols":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-symbols/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js":[function(require,module,exports){
'use strict';

var GetIntrinsic = require('../GetIntrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');
if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"../GetIntrinsic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/es-abstract/GetIntrinsic.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function eventListener() {
      if (errorListener !== undefined) {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };
    var errorListener;

    // Adding an error listener is not optional because
    // if an error is thrown on an event emitter we cannot
    // guarantee that the actual event we are waiting will
    // be fired. The result could be a silent way to create
    // memory or file descriptor leaks, which is something
    // we should avoid.
    if (name !== 'error') {
      errorListener = function errorListener(err) {
        emitter.removeListener(name, eventListener);
        reject(err);
      };

      emitter.once('error', errorListener);
    }

    emitter.once(name, eventListener);
  });
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/evp_bytestokey/index.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/md5.js/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/explain-error/index.js":[function(require,module,exports){

function getStack(err) {
  if(err.stack && err.name && err.message)
    return err.stack.substring(err.name.length + 3 + err.message.length)
      .split('\n')
  else if(err.stack)
    return err.stack.split('\n')
}

function removePrefix (a, b) {
  return a.filter(function (e) {
    return !~b.indexOf(e)
  })
}

var explain = module.exports = function (err, message) {
  if(!(err.stack && err.name && err.message)) {
    console.error(new Error('stackless error'))
    return err
  }

  var _err = new Error(message)
  var stack = removePrefix(getStack(_err).slice(1), getStack(err)).join('\n')

  _err.__proto__ = err

  _err.stack =
    _err.name + ': ' + _err.message + '\n' +
    stack + '\n  ' + err.stack

  return _err
}




},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/fastintcompression/FastIntegerCompression.js":[function(require,module,exports){
/**
 * FastIntegerCompression.js : a fast integer compression library in JavaScript.
 * (c) the authors
 * Licensed under the Apache License, Version 2.0.
 *
 *FastIntegerCompression
 * Simple usage :
 *  // var FastIntegerCompression = require("fastintcompression");// if you use node
 *  var array = [10,100000,65999,10,10,0,1,1,2000];
 *  var buf = FastIntegerCompression.compress(array);
 *  var back = FastIntegerCompression.uncompress(buf); // gets back [10,100000,65999,10,10,0,1,1,2000]
 *
 *
 * You can install the library under node with the command line
 *   npm install fastintcompression
 */
'use strict';


// you can provide an iterable
function FastIntegerCompression() {
}

// private function
function bytelog(val) {
  if (val < (1 << 7)) {
    return 1;
  } else if (val < (1 << 14)) {
    return 2;
  } else if (val < (1 << 21)) {
    return 3;
  } else if (val < (1 << 28)) {
    return 4;
  }
  return 5;
}

// private function
function zigzag_encode(val) {
  return (val + val) ^ (val >> 31);;
}

// private function
function zigzag_decode(val) {
  return  (val >> 1) ^ (- (val & 1));
}


// compute how many bytes an array of integers would use once compressed
// input is expected to be an array of non-negative integers
FastIntegerCompression.computeCompressedSizeInBytes = function(input) {
  var c = input.length;
  var answer = 0;
  for(var i = 0; i < c; i++) {
    answer += bytelog(input[i]);
  }
  return answer;
};


// compute how many bytes an array of integers would use once compressed
// input is expected to be an array of integers, some of them can be negative
FastIntegerCompression.computeCompressedSizeInBytesSigned = function(input) {
  var c = input.length;
  var answer = 0;
  for(var i = 0; i < c; i++) {
    answer += bytelog(zigzag_encode(input[i]));
  }
  return answer;
};

// Compress an array of integers, return a compressed buffer (as an ArrayBuffer).
// It is expected that the integers are non-negative: the caller is responsible
// for making this check. Floating-point numbers are not supported.
FastIntegerCompression.compress = function(input) {
  var c = input.length;
  var buf = new ArrayBuffer(FastIntegerCompression.computeCompressedSizeInBytes(input));
  var view   = new Int8Array(buf);
  var pos = 0;
  for(var i = 0; i < c; i++) {
    var val = input[i];
    if (val < (1 << 7)) {
      view[pos++] = val ;
    } else if (val < (1 << 14)) {
      view[pos++] = (val & 0x7F) | 0x80;
      view[pos++] = val >>> 7;
    } else if (val < (1 << 21)) {
      view[pos++] = (val & 0x7F) | 0x80;
      view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;
      view[pos++] = val >>> 14;
    } else if (val < (1 << 28)) {
      view[pos++] = (val & 0x7F ) | 0x80 ;
      view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 14) & 0x7F ) | 0x80;
      view[pos++] = val >>> 21;
    } else {
      view[pos++] = ( val & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 14) & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 21) & 0x7F ) | 0x80;
      view[pos++] = val >>> 28;
    }
  }
  return buf;
};

// from a compressed array of integers stored ArrayBuffer, compute the number of compressed integers by scanning the input
FastIntegerCompression.computeHowManyIntegers = function(input) {
  var view   = new Int8Array(input);
  var c = view.length;
  var count = 0;
  for(var i = 0; i < c; i++) {
    count += (input[i]>>>7);
  }
  return c - count;
}
// uncompress an array of integer from an ArrayBuffer, return the array
// it is assumed that they were compressed using the compress function, the caller
// is responsible for ensuring that it is the case.
FastIntegerCompression.uncompress = function(input) {
  var array = []
  var inbyte = new Int8Array(input);
  var end = inbyte.length;
  var pos = 0;
  while (end > pos) {
        var c = inbyte[pos++];
        var v = c & 0x7F;
        if (c >= 0) {
          array.push(v)
          continue;
        }
        c = inbyte[pos++];
        v |= (c & 0x7F) << 7;
        if (c >= 0) {
          array.push(v)
          continue;
        }
        c = inbyte[pos++];
        v |= (c & 0x7F) << 14;
        if (c >= 0) {
          array.push(v)
          continue;
        }
        c = inbyte[pos++];
        v |= (c & 0x7F) << 21;
        if (c >= 0) {
          array.push(v)
          continue;
        }
        c = inbyte[pos++];
        v |= c << 28;
        v >>>= 0; // make positive
        array.push(v)
  }
  return array;
};


// Compress an array of integers, return a compressed buffer (as an ArrayBuffer).
// The integers can be signed (negative), but floating-point values are not supported.
FastIntegerCompression.compressSigned = function(input) {
  var c = input.length;
  var buf = new ArrayBuffer(FastIntegerCompression.computeCompressedSizeInBytesSigned(input));
  var view   = new Int8Array(buf);
  var pos = 0;
  for(var i = 0; i < c; i++) {
    var val = zigzag_encode(input[i]);
    if (val < (1 << 7)) {
      view[pos++] = val ;
    } else if (val < (1 << 14)) {
      view[pos++] = (val & 0x7F) | 0x80;
      view[pos++] = val >>> 7;
    } else if (val < (1 << 21)) {
      view[pos++] = (val & 0x7F) | 0x80;
      view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;
      view[pos++] = val >>> 14;
    } else if (val < (1 << 28)) {
      view[pos++] = (val & 0x7F ) | 0x80 ;
      view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 14) & 0x7F ) | 0x80;
      view[pos++] = val >>> 21;
    } else {
      view[pos++] = ( val & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 7) & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 14) & 0x7F ) | 0x80;
      view[pos++] = ( (val >>> 21) & 0x7F ) | 0x80;
      view[pos++] = val >>> 28;
    }
  }
  return buf;
};

// uncompress an array of integer from an ArrayBuffer, return the array
// it is assumed that they were compressed using the compressSigned function, the caller
// is responsible for ensuring that it is the case.
FastIntegerCompression.uncompressSigned = function(input) {
  var array = []
  var inbyte = new Int8Array(input);
  var end = inbyte.length;
  var pos = 0;
  while (end > pos) {
        var c = inbyte[pos++];
        var v = c & 0x7F;
        if (c >= 0) {
          array.push(zigzag_decode(v))
          continue;
        }
        c = inbyte[pos++];
        v |= (c & 0x7F) << 7;
        if (c >= 0) {
          array.push(zigzag_decode(v))
          continue;
        }
        c = inbyte[pos++];
        v |= (c & 0x7F) << 14;
        if (c >= 0) {
          array.push(zigzag_decode(v))
          continue;
        }
        c = inbyte[pos++];
        v |= (c & 0x7F) << 21;
        if (c >= 0) {
          array.push(zigzag_decode(v))
          continue;
        }
        c = inbyte[pos++];
        v |= c << 28;
        array.push(zigzag_decode(v))
  }
  return array;
};

///////////////

module.exports = FastIntegerCompression;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/flumecodec/json.js":[function(require,module,exports){


module.exports = require('level-codec/lib/encodings').json

},{"level-codec/lib/encodings":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-codec/lib/encodings.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/foreach/index.js":[function(require,module,exports){

var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

module.exports = function forEach (obj, fn, ctx) {
    if (toString.call(fn) !== '[object Function]') {
        throw new TypeError('iterator must be a function');
    }
    var l = obj.length;
    if (l === +l) {
        for (var i = 0; i < l; i++) {
            fn.call(ctx, obj[i], i, obj);
        }
    } else {
        for (var k in obj) {
            if (hasOwn.call(obj, k)) {
                fn.call(ctx, obj[k], k, obj);
            }
        }
    }
};


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/function-bind/implementation.js":[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/function-bind/index.js":[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/function-bind/implementation.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/get-intrinsic/index.js":[function(require,module,exports){
'use strict';

/* globals
	AggregateError,
	Atomics,
	FinalizationRegistry,
	SharedArrayBuffer,
	WeakRef,
*/

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		// eslint-disable-next-line no-new-func
		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var asyncGenFunction = getEvalledConstructor('async function* () {}');
var asyncGenFunctionPrototype = asyncGenFunction ? asyncGenFunction.prototype : undefined;
var asyncGenPrototype = asyncGenFunctionPrototype ? asyncGenFunctionPrototype.prototype : undefined;

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': getEvalledConstructor('async function () {}'),
	'%AsyncGenerator%': asyncGenFunctionPrototype,
	'%AsyncGeneratorFunction%': asyncGenFunction,
	'%AsyncIteratorPrototype%': asyncGenPrototype ? getProto(asyncGenPrototype) : undefined,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': getEvalledConstructor('function* () {}'),
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/function-bind/index.js","has":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has/src/index.js","has-symbols":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-symbols/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/gossip-query/index.js":[function(require,module,exports){
'use strict'
var Obv = require('obv')

var STATES = {
  queried: 1,
  checking: 2,
  checked: 3,

  //I realized that this state is maybe not necessary
  //since we actually track this on a per peer basis.
  //requesting: 4,

  responded: 5, //we have received at least one response

  processing: 6,
  processed: 7 //now we can broadcast this
}

function each (obj, fn) {
  for(var k in obj)
    fn(obj[k], k, obj)
}

function isEmpty (o) {
  for(var k in o) return false
  return true
}

module.exports = function (opts) {
  //opts has {check, process, increment, isQuery, isResponse}
  var state = {}
  var localCbs = {}

  var initialWeight = opts.initialWeight || -1
  var increment = opts.increment || function (n) { return Number(n) - 1 }
  var isRequest = opts.isRequest || function (value) { return typeof value === 'number' && value < 0 }
  var isResponse = opts.isResponse || function (value) { return !isRequest(value) }
  var isQuery = opts.isQuery || function () { return true }
  var process = opts.process || function (k, v, cb) { cb (null, v) }
  var compare = opts.compare || function (a, b) {
    return b - a
  }
  var maximum = opts.maximum || -3
  var timeout = opts.timeout || 30e3
  var nextTimeout = 0

  var obv = Obv()
  obv.set(state)
  function next (fn) {
    if(!fn) obv.set(state)
    else obv.once(fn, false)
  }

  function ErrorTimeout() {
    var err = new Error('gossip-query: request timed out')
    err.name = 'request_timeout'
    return err
  }

  function setTimestamp() {
    return Date.now()
  }

  function callback (k, value, err) {
    if (localCbs[k]) {
      var cbs = localCbs[k]
      delete localCbs[k]
      while (cbs.length) cbs.shift()(err, value)
    }
  }

  obv(function () {
    //XXX: I think there could be some bugs in this because
    //obv.set is triggered from inside the loop (if check/process)
    //callback sync, which can happen.

    each(state, function (item, k) {
      //check the local store when new queries are added
      if(item.state === STATES.queried) {
        item.state = STATES.checking
        item.ts = setTimestamp()
        opts.check(k, function (_, value) {
          //igore error
          if(value && !item.value) {
            item.state = STATES.processed
            //UPDATE VALUE
            callback(k, item.value = value)
          }
          else
            item.state = STATES.checked

          item.ts = setTimestamp()

          obv.set(state)
        })
      }

      //process items received
      if(item.value != null && item.state === STATES.responded) {
        item.state = STATES.processing
        item.ts = setTimestamp()
        process(k, item.value, function (err, value) {
          if(err) {
            //stay in processing state
            return
          }
          item.state = STATES.processed
          item.ts = setTimestamp()
          //this is the only place that localCbs is called,
          //except for in query(key, cb) if key is already ready.
          if(value)
            //UPDATE VALUE
            callback(k, item.value = value)

          obv.set(state)
        })
      }
    })
  })

  function initial (weight) {
    return {
      state: STATES.queried,
      weight: weight,
      value: null,
      requestedBy: {},
      requestedFrom: {},
      respondedTo: {},
      ts: setTimestamp()
    }
  }

  return {
    state: state,
    createStream: function (peerId) {
      return {
        source: function (end, cb) {
          if(end) {
            for(var k in state) {
              delete state[k].respondedTo[peerId]
              delete state[k].requestedFrom[peerId]
            }
            return
          }
          //read the next pieces of data from the state object.
          ;(function read () {
            var data = {}
            for(var k in state) {
              if(
                //this item has been received & processed, respond to any other peers
                //idea: make respondedTo be a counter, for queries with multiple answers.
                state[k].state === STATES.processed &&
                state[k].requestedBy[peerId] &&
                //responded to != state[k].value.length
                !state[k].respondedTo[peerId]
              ) {
                // change bool to integer, and send data since that index
                state[k].respondedTo[peerId] = true
                data[k] = state[k].value
              }
              else if(
                state[k].state === STATES.checked &&
                !state[k].requestedFrom[peerId]
              ) {
                state[k].requestedFrom[peerId] = true
                data[k] = state[k].weight //the number of hops, etc
              }
            }
            //next(read) calls read again when something changes in the state.
            if(isEmpty(data)) next(read)
            else cb(null, data)
          })()
        },
        sink: function (read) {
          read(null, function more (end, data) {
            if(end) {
              for(var k in state) {
                delete state[k].requestedBy[peerId]
              }
              //Q: how does the source decide to end?
              //A: the network connection aborts the stream.
              return
            }
            //process this message and possibly update the state.
            var update = false
            for(var k in data) {
              var value = data[k]
               //ignore invalid requests
              if(!isQuery(k) || !(isRequest(value) || isResponse(value, k)))
                ;
              else if(isRequest(data[k])) {
                //if we already have seen this query:
                if(compare(data[k], maximum) < 0) {
                  if(!state[k]) {
                    update = true
                    state[k] = initial(increment(data[k]))
                    state[k].requestedBy[peerId] = true
                  }
                  else if (compare(data[k], state[k].weight) < 0){
                    update = true
                    state[k].requestedBy[peerId] = true
                    //update the weight if this peer is closer to us
                    state[k].weight = increment(data[k])
                  }
                }
              }
              else if(isResponse(data[k])) {
                if(state[k].state == STATES.checked) {
                  //what states can it be in here?
                  //what if we are currently processing something and a new response arrives?
                  state[k].state = STATES.responded
                  state[k].value = data[k]
                  update = true
                }
              }
            }
            if(update) next()
            read(null, more)
          })
        }
      }
    },

    query: function (k, cb) {
      var update
      //add to state object and update
      if(state[k]) {
        if(state[k].state == STATES.processed) cb(null, state[k].value)
        else (localCbs[k] = localCbs[k] || []).push(cb)
      }
      else {
        update = true
        state[k] = initial(initialWeight)
        localCbs[k] = [cb]
      }
     if(update) next()
    },
    checkTimeout: function () {
      var ts = Date.now()
      for(var k in state)
        if(state[k].ts + timeout < ts) {
          callback(k, null, ErrorTimeout(k))
          delete state[k]
        }
    },
    progress: function () {
      var prog = {start: 0, current: 0, target: 0}

      for(var k in state) {
        if(Date.now() - state[k].ts < timeout) {
          prog.current += state[k].state
          prog.target += STATES.processed
        }
      }
      return prog
    }
  }
}




},{"obv":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/obv/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-network2/index.js":[function(require,module,exports){
//returns true there is an available network interface which is neither
//local loopback (localhost) or tunneling (probably cjdns)
//On my system, cjdns always appears even when there is no actual internet.
//and in that case, cjdns doesn't work anyway. maybe somebody has a setup
//where they _ONLY_ have a tun interface, so this test will fail.
//lets cross that bridge when we come to it though.

var os = require('os');
module.exports = function() {
  var interfaces;

  // in browser always assume we are connected
  if (typeof localStorage !== "undefined" && localStorage !== null)
    return true;

  try {
    interfaces = os.networkInterfaces();
  } catch (e) {
    // As of October 2016, Windows Subsystem for Linux (WSL) does not support
    // the os.networkInterfaces() call and throws instead. For this platform,
    // assume we are online.
    if (e.syscall === 'uv_interface_addresses') {
      return true;
    } else {
      throw e;
    }
  }

  for (var k in interfaces)
    if (
      'lo' !== k && //loopback
      !/^tun\d+$/.test(k) //cjdns
    )
      return true;
  return false;
};

},{"os":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/os-browserify/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-symbols/index.js":[function(require,module,exports){
(function (global){(function (){
'use strict';

var origSymbol = global.Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./shams":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-symbols/shams.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-symbols/shams.js":[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has/src/index.js":[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/function-bind/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/index.js":[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('readable-stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","readable-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/readable-browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/errors-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js"][0].apply(exports,arguments)
},{"./_stream_readable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","./_stream_writable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js"][0].apply(exports,arguments)
},{"./_stream_transform":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/async_iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./internal/streams/buffer_list":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/from":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","string_decoder/":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/lib/string_decoder.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","util-deprecate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util-deprecate/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js"][0].apply(exports,arguments)
},{"./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js"][0].apply(exports,arguments)
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/errors-browser.js","./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js"][0].apply(exports,arguments)
},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/readable-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js"][0].apply(exports,arguments)
},{"./lib/_stream_duplex.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","./lib/_stream_passthrough.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js","./lib/_stream_readable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","./lib/_stream_transform.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","./lib/_stream_writable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","./lib/internal/streams/end-of-stream.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./lib/internal/streams/pipeline.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash.js":[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/common.js","./hash/hmac":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/hmac.js","./hash/ripemd":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/ripemd.js","./hash/sha":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha.js","./hash/utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/common.js":[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/hmac.js":[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/ripemd.js":[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/common.js","./utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha.js":[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/1.js","./sha/224":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/224.js","./sha/256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/256.js","./sha/384":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/384.js","./sha/512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/512.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/1.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/common.js","../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js","./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/common.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/224.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js","./256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/256.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/256.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/common.js","../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js","./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/common.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/384.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js","./512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/512.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/512.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/common.js","../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/sha/common.js":[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash/utils.js":[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hashlru/index.js":[function(require,module,exports){
module.exports = function (max) {

  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')

  var size = 0, cache = Object.create(null), _cache = Object.create(null)

  function update (key, value) {
    cache[key] = value
    size ++
    if(size >= max) {
      size = 0
      _cache = cache
      cache = Object.create(null)
    }
  }

  return {
    has: function (key) {
      return cache[key] !== undefined || _cache[key] !== undefined
    },
    remove: function (key) {
      if(cache[key] !== undefined)
        cache[key] = undefined
      if(_cache[key] !== undefined)
        _cache[key] = undefined
    },
    get: function (key) {
      var v = cache[key]
      if(v !== undefined) return v
      if((v = _cache[key]) !== undefined) {
        update(key, v)
        return v
      }
    },
    set: function (key, value) {
      if(cache[key] !== undefined) cache[key] = value
      else update(key, value)
    },
    clear: function () {
      cache = Object.create(null)
      _cache = Object.create(null)
    }
  }
}








},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hmac-drbg/lib/hmac-drbg.js":[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash.js/lib/hash.js","minimalistic-assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js","minimalistic-crypto-utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-crypto-utils/lib/utils.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hoox/index.js":[function(require,module,exports){
function wrap (fn, hook) {
  return function () {
    return hook.call(this, fn, [].slice.call(arguments))
  }
}

module.exports = function hookable(fn) {

  function hooked () {
    return fn.apply(this, [].slice.call(arguments))
  }

  hooked.hook = function (hook) {
    fn = wrap(fn, hook)
    return this
  }

  return hooked
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/https-browserify/index.js":[function(require,module,exports){
var http = require('http')
var url = require('url')

var https = module.exports

for (var key in http) {
  if (http.hasOwnProperty(key)) https[key] = http[key]
}

https.request = function (params, cb) {
  params = validateParams(params)
  return http.request.call(this, params, cb)
}

https.get = function (params, cb) {
  params = validateParams(params)
  return http.get.call(this, params, cb)
}

function validateParams (params) {
  if (typeof params === 'string') {
    params = url.parse(params)
  }
  if (!params.protocol) {
    params.protocol = 'https:'
  }
  if (params.protocol !== 'https:') {
    throw new Error('Protocol "' + params.protocol + '" not supported. Expected "https:"')
  }
  return params
}

},{"http":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/index.js","url":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/url/url.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/idb-kv-store/index.js":[function(require,module,exports){
/* eslint-env browser */

module.exports = IdbKvStore

var EventEmitter = require('events').EventEmitter
var inherits = require('inherits')
var promisize = require('promisize')

var global = typeof window === 'undefined' ? self : window
var IDB = global.indexedDB || global.mozIndexedDB || global.webkitIndexedDB || global.msIndexedDB

IdbKvStore.INDEXEDDB_SUPPORT = IDB != null
IdbKvStore.BROADCAST_SUPPORT = global.BroadcastChannel != null

inherits(IdbKvStore, EventEmitter)
function IdbKvStore (name, opts, cb) {
  var self = this
  if (typeof name !== 'string') throw new Error('A name must be supplied of type string')
  if (!IDB) throw new Error('IndexedDB not supported')
  if (typeof opts === 'function') return new IdbKvStore(name, null, opts)
  if (!(self instanceof IdbKvStore)) return new IdbKvStore(name, opts, cb)
  if (!opts) opts = {}

  EventEmitter.call(self)

  self._db = null
  self._closed = false
  self._channel = null
  self._waiters = []

  if (opts.disableBroadcast !== true) {
    var Channel = opts.channel || global.BroadcastChannel
    if (Channel) {
      self._channel = new Channel(name)
      self._channel.onmessage = onChange
    }
  }

  var request = IDB.open(name)
  request.onerror = onerror
  request.onsuccess = onsuccess
  request.onupgradeneeded = onupgradeneeded

  self.on('newListener', onNewListener)

  function onerror (event) {
    handleError(event)
    self._close(event.target.error)
    if (cb) cb(event.target.error)
  }

  function onDbError (event) {
    handleError(event)
    self._close(event.target.error)
  }

  function onsuccess (event) {
    if (self._closed) {
      event.target.result.close()
    } else {
      self._db = event.target.result
      self._db.onclose = onclose
      self._db.onerror = onDbError
      for (var i in self._waiters) self._waiters[i]._init(null)
      self._waiters = null
      if (cb) cb(null)
      self.emit('open')
    }
  }

  function onupgradeneeded (event) {
    var db = event.target.result
    db.createObjectStore('kv', {autoIncrement: true})
  }

  function onclose () {
    self._close()
  }

  function onNewListener (event) {
    if (event !== 'add' && event !== 'set' && event !== 'remove') return
    if (!self._channel) return self.emit('error', new Error('No BroadcastChannel support'))
  }

  function onChange (event) {
    if (event.data.method === 'add') self.emit('add', event.data)
    else if (event.data.method === 'set') self.emit('set', event.data)
    else if (event.data.method === 'remove') self.emit('remove', event.data)
  }
}

IdbKvStore.prototype.get = function (key, cb) {
  return this.transaction('readonly').get(key, cb)
}

IdbKvStore.prototype.getMultiple = function (keys, cb) {
  return this.transaction('readonly').getMultiple(keys, cb)
}

IdbKvStore.prototype.set = function (key, value, cb) {
  cb = promisize(cb)
  var error = null
  var t = this.transaction('readwrite', function (err) {
    error = error || err
    cb(error)
  })
  t.set(key, value, function (err) {
    error = err
  })
  return cb.promise
}

IdbKvStore.prototype.json = function (range, cb) {
  return this.transaction('readonly').json(range, cb)
}

IdbKvStore.prototype.keys = function (range, cb) {
  return this.transaction('readonly').keys(range, cb)
}

IdbKvStore.prototype.values = function (range, cb) {
  return this.transaction('readonly').values(range, cb)
}

IdbKvStore.prototype.remove = function (key, cb) {
  cb = promisize(cb)
  var error = null
  var t = this.transaction('readwrite', function (err) {
    error = error || err
    cb(error)
  })
  t.remove(key, function (err) {
    error = err
  })
  return cb.promise
}

IdbKvStore.prototype.clear = function (cb) {
  cb = promisize(cb)
  var error = null
  var t = this.transaction('readwrite', function (err) {
    error = error || err
    cb(error)
  })
  t.clear(function (err) {
    error = err
  })
  return cb.promise
}

IdbKvStore.prototype.count = function (range, cb) {
  return this.transaction('readonly').count(range, cb)
}

IdbKvStore.prototype.add = function (key, value, cb) {
  cb = promisize(cb)
  var error = null
  var t = this.transaction('readwrite', function (err) {
    error = error || err
    cb(error)
  })
  t.add(key, value, function (err) {
    error = err
  })
  return cb.promise
}

IdbKvStore.prototype.iterator = function (range, next) {
  return this.transaction('readonly').iterator(range, next)
}

IdbKvStore.prototype.transaction = function (mode, onfinish) {
  if (this._closed) throw new Error('Database is closed')

  var transaction = new Transaction(this, mode, onfinish)
  if (this._db) transaction._init(null)
  else this._waiters.push(transaction)
  return transaction
}

IdbKvStore.prototype.close = function () {
  this._close()
}

IdbKvStore.prototype._close = function (err) {
  if (this._closed) return
  this._closed = true

  if (this._db) this._db.close()
  if (this._channel) this._channel.close()

  this._db = null
  this._channel = null

  if (err) this.emit('error', err)

  this.emit('close')

  for (var i in this._waiters) this._waiters[i]._init(err || new Error('Database is closed'))
  this._waiters = null

  this.removeAllListeners()
}

function Transaction (kvStore, mode, cb) {
  if (typeof mode === 'function') return new Transaction(kvStore, null, mode)

  this._kvStore = kvStore
  this._mode = mode || 'readwrite'
  this._objectStore = null
  this._waiters = null

  this.finished = false
  this.onfinish = promisize(cb) // `onfinish` public variable for backwards compatibility with v4.3.1
  this.done = this.onfinish.promise

  if (this._mode !== 'readonly' && this._mode !== 'readwrite') {
    throw new Error('mode must be either "readonly" or "readwrite"')
  }
}

Transaction.prototype._init = function (err) {
  var self = this

  if (self.finished) return
  if (err) return self._close(err)

  var transaction = self._kvStore._db.transaction('kv', self._mode)
  transaction.oncomplete = oncomplete
  transaction.onerror = onerror
  transaction.onabort = onerror

  self._objectStore = transaction.objectStore('kv')

  for (var i in self._waiters) self._waiters[i](null, self._objectStore)
  self._waiters = null

  function oncomplete () {
    self._close(null)
  }

  function onerror (event) {
    handleError(event)
    self._close(event.target.error)
  }
}

Transaction.prototype._getObjectStore = function (cb) {
  if (this.finished) throw new Error('Transaction is finished')
  if (this._objectStore) return cb(null, this._objectStore)
  this._waiters = this._waiters || []
  this._waiters.push(cb)
}

Transaction.prototype.set = function (key, value, cb) {
  var self = this
  if (key == null || value == null) throw new Error('A key and value must be given')
  cb = promisize(cb)

  self._getObjectStore(function (err, objectStore) {
    if (err) return cb(err)

    try {
      var request = objectStore.put(value, key)
    } catch (e) {
      return cb(e)
    }

    request.onerror = handleError.bind(this, cb)
    request.onsuccess = function () {
      if (self._kvStore._channel) {
        self._kvStore._channel.postMessage({
          method: 'set',
          key: key,
          value: value
        })
      }
      cb(null)
    }
  })

  return cb.promise
}

Transaction.prototype.add = function (key, value, cb) {
  var self = this
  if (value == null && key != null) return self.add(undefined, key, cb)
  if (typeof value === 'function' || (value == null && cb == null)) return self.add(undefined, key, value)
  if (value == null) throw new Error('A value must be provided as an argument')
  cb = promisize(cb)

  self._getObjectStore(function (err, objectStore) {
    if (err) return cb(err)

    try {
      var request = key == null ? objectStore.add(value) : objectStore.add(value, key)
    } catch (e) {
      return cb(e)
    }

    request.onerror = handleError.bind(this, cb)
    request.onsuccess = function () {
      if (self._kvStore._channel) {
        self._kvStore._channel.postMessage({
          method: 'add',
          key: key,
          value: value
        })
      }
      cb(null)
    }
  })

  return cb.promise
}

Transaction.prototype.get = function (key, cb) {
  var self = this
  if (key == null) throw new Error('A key must be given as an argument')
  cb = promisize(cb)

  self._getObjectStore(function (err, objectStore) {
    if (err) return cb(err)

    try {
      var request = objectStore.get(key)
    } catch (e) {
      return cb(e)
    }

    request.onerror = handleError.bind(this, cb)
    request.onsuccess = function (event) {
      cb(null, event.target.result)
    }
  })

  return cb.promise
}

Transaction.prototype.getMultiple = function (keys, cb) {
  var self = this
  if (keys == null) throw new Error('An array of keys must be given as an argument')
  cb = promisize(cb)

  if (keys.length === 0) {
    cb(null, [])
    return cb.promise
  }

  self._getObjectStore(function (err, objectStore) {
    if (err) return cb(err)

    // Implementation mostly taken from https://www.codeproject.com/Articles/744986/How-to-do-some-magic-with-indexedDB
    var sortedKeys = keys.slice().sort()
    var i = 0
    var resultsMap = {}
    var getReturnValue = function () {
      return keys.map(function (key) {
        return resultsMap[key]
      })
    }
    var cursorReq = objectStore.openCursor()
    cursorReq.onerror = handleError.bind(this, cb)
    cursorReq.onsuccess = function (event) {
      var cursor = event.target.result
      if (!cursor) {
        cb(null, getReturnValue())
        return
      }
      var key = cursor.key
      while (key > sortedKeys[i]) {
        // The cursor has passed beyond this key. Check next.
        ++i
        if (i === sortedKeys.length) {
          // There is no next. Stop searching.
          cb(null, getReturnValue())
          return
        }
      }
      if (key === sortedKeys[i]) {
        resultsMap[key] = cursor.value
        // The current cursor value should be included and we should continue
        // a single step in case next item has the same key or possibly our
        // next key in sortedKeys.
        cursor.continue()
      } else {
        // cursor.key not yet at sortedKeys[i]. Forward cursor to the next key to hunt for.
        cursor.continue(sortedKeys[i])
      }
    }
  })

  return cb.promise
}

Transaction.prototype.json = function (range, cb) {
  var self = this
  if (typeof range === 'function') return self.json(null, range)
  cb = promisize(cb)

  var json = {}
  self.iterator(range, function (err, cursor) {
    if (err) return cb(err)
    if (cursor) {
      json[cursor.key] = cursor.value
      cursor.continue()
    } else {
      cb(null, json)
    }
  })

  return cb.promise
}

Transaction.prototype.keys = function (range, cb) {
  var self = this
  if (typeof range === 'function') return self.keys(null, range)
  cb = promisize(cb)

  var keys = []
  self.iterator(range, function (err, cursor) {
    if (err) return cb(err)
    if (cursor) {
      keys.push(cursor.key)
      cursor.continue()
    } else {
      cb(null, keys)
    }
  })

  return cb.promise
}

Transaction.prototype.values = function (range, cb) {
  var self = this
  if (typeof range === 'function') return self.values(null, range)
  cb = promisize(cb)

  var values = []
  self.iterator(range, function (err, cursor) {
    if (err) return cb(err)
    if (cursor) {
      values.push(cursor.value)
      cursor.continue()
    } else {
      cb(null, values)
    }
  })

  return cb.promise
}

Transaction.prototype.remove = function (key, cb) {
  var self = this
  if (key == null) throw new Error('A key must be given as an argument')
  cb = promisize(cb)

  self._getObjectStore(function (err, objectStore) {
    if (err) return cb(err)

    try {
      var request = objectStore.delete(key)
    } catch (e) {
      return cb(e)
    }

    request.onerror = handleError.bind(this, cb)
    request.onsuccess = function () {
      if (self._kvStore._channel) {
        self._kvStore._channel.postMessage({
          method: 'remove',
          key: key
        })
      }
      cb(null)
    }
  })

  return cb.promise
}

Transaction.prototype.clear = function (cb) {
  var self = this
  cb = promisize(cb)

  self._getObjectStore(function (err, objectStore) {
    if (err) return cb(err)

    try {
      var request = objectStore.clear()
    } catch (e) {
      return cb(e)
    }

    request.onerror = handleError.bind(this, cb)
    request.onsuccess = function () {
      cb(null)
    }
  })

  return cb.promise
}

Transaction.prototype.count = function (range, cb) {
  var self = this
  if (typeof range === 'function') return self.count(null, range)
  cb = promisize(cb)

  self._getObjectStore(function (err, objectStore) {
    if (err) return cb(err)

    try {
      var request = range == null ? objectStore.count() : objectStore.count(range)
    } catch (e) {
      return cb(e)
    }

    request.onerror = handleError.bind(this, cb)
    request.onsuccess = function (event) {
      cb(null, event.target.result)
    }
  })

  return cb.promise
}

Transaction.prototype.iterator = function (range, next) {
  var self = this
  if (typeof range === 'function') return self.iterator(null, range)
  if (typeof next !== 'function') throw new Error('A function must be given')
  self._getObjectStore(function (err, objectStore) {
    if (err) return next(err)

    try {
      var request = range == null ? objectStore.openCursor() : objectStore.openCursor(range)
    } catch (e) {
      return next(e)
    }

    request.onerror = handleError.bind(this, next)
    request.onsuccess = function (event) {
      var cursor = event.target.result
      next(null, cursor)
    }
  })
}

Transaction.prototype.abort = function () {
  if (this.finished) throw new Error('Transaction is finished')
  if (this._objectStore) this._objectStore.transaction.abort()
  this._close(new Error('Transaction aborted'))
}

Transaction.prototype._close = function (err) {
  if (this.finished) return
  this.finished = true

  this._kvStore = null
  this._objectStore = null

  for (var i in this._waiters) this._waiters[i](err || new Error('Transaction is finished'))
  this._waiters = null

  if (this.onfinish) this.onfinish(err)
  this.onfinish = null
}

function handleError (cb, event) {
  if (event == null) return handleError(null, cb)
  event.preventDefault()
  event.stopPropagation()
  if (cb) cb(event.target.error)
}

},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","promisize":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisize/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ieee754/index.js":[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/index.js":[function(require,module,exports){
'use strict';
var types = [
  require('./nextTick'),
  require('./queueMicrotask'),
  require('./mutation.js'),
  require('./messageChannel'),
  require('./stateChange'),
  require('./timeout')
];
var draining;
var currentQueue;
var queueIndex = -1;
var queue = [];
var scheduled = false;
function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }
  draining = false;
  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }
  if (queue.length) {
    nextTick();
  }
}

//named nextTick for less confusing stack traces
function nextTick() {
  if (draining) {
    return;
  }
  scheduled = false;
  draining = true;
  var len = queue.length;
  var timeout = setTimeout(cleanUpNextTick);
  while (len) {
    currentQueue = queue;
    queue = [];
    while (currentQueue && ++queueIndex < len) {
      currentQueue[queueIndex].run();
    }
    queueIndex = -1;
    len = queue.length;
  }
  currentQueue = null;
  queueIndex = -1;
  draining = false;
  clearTimeout(timeout);
}
var scheduleDrain;
var i = -1;
var len = types.length;
while (++i < len) {
  if (types[i] && types[i].test && types[i].test()) {
    scheduleDrain = types[i].install(nextTick);
    break;
  }
}
// v8 likes predictible objects
function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}
Item.prototype.run = function () {
  var fun = this.fun;
  var array = this.array;
  switch (array.length) {
  case 0:
    return fun();
  case 1:
    return fun(array[0]);
  case 2:
    return fun(array[0], array[1]);
  case 3:
    return fun(array[0], array[1], array[2]);
  default:
    return fun.apply(null, array);
  }

};
module.exports = immediate;
function immediate(task) {
  var args = new Array(arguments.length - 1);
  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }
  queue.push(new Item(task, args));
  if (!scheduled && !draining) {
    scheduled = true;
    scheduleDrain();
  }
}

},{"./messageChannel":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/messageChannel.js","./mutation.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/mutation.js","./nextTick":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js","./queueMicrotask":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/queueMicrotask.js","./stateChange":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/stateChange.js","./timeout":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/timeout.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/messageChannel.js":[function(require,module,exports){
(function (global){(function (){
'use strict';

exports.test = function () {
  if (global.setImmediate) {
    // we can only get here in IE10
    // which doesn't handel postMessage well
    return false;
  }
  return typeof global.MessageChannel !== 'undefined';
};

exports.install = function (func) {
  var channel = new global.MessageChannel();
  channel.port1.onmessage = func;
  return function () {
    channel.port2.postMessage(0);
  };
};
}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/mutation.js":[function(require,module,exports){
(function (global){(function (){
'use strict';
//based off rsvp https://github.com/tildeio/rsvp.js
//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE
//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js

var Mutation = global.MutationObserver || global.WebKitMutationObserver;

exports.test = function () {
  return Mutation;
};

exports.install = function (handle) {
  var called = 0;
  var observer = new Mutation(handle);
  var element = global.document.createTextNode('');
  observer.observe(element, {
    characterData: true
  });
  return function () {
    element.data = (called = ++called % 2);
  };
};
}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/queueMicrotask.js":[function(require,module,exports){
(function (global){(function (){
'use strict';
exports.test = function () {
  return typeof global.queueMicrotask === 'function';
};

exports.install = function (func) {
  return function () {
    global.queueMicrotask(func);
  };
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/stateChange.js":[function(require,module,exports){
(function (global){(function (){
'use strict';

exports.test = function () {
  return 'document' in global && 'onreadystatechange' in global.document.createElement('script');
};

exports.install = function (handle) {
  return function () {

    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
    var scriptEl = global.document.createElement('script');
    scriptEl.onreadystatechange = function () {
      handle();

      scriptEl.onreadystatechange = null;
      scriptEl.parentNode.removeChild(scriptEl);
      scriptEl = null;
    };
    global.document.documentElement.appendChild(scriptEl);

    return handle;
  };
};
}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/immediate/lib/timeout.js":[function(require,module,exports){
'use strict';
exports.test = function () {
  return true;
};

exports.install = function (t) {
  return function () {
    setTimeout(t, 0);
  };
};
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/increment-buffer/index.js":[function(require,module,exports){


module.exports = function (buf) {
  var len = buf.length, i

  for(i = len - 1; i >= 0 && buf[i] === 255; i--) buf[i] = 0
  if(~i) buf[i] = buf[i] + 1

  return buf
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js":[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js":[function(require,module,exports){
'use strict';

var ip = exports;
var Buffer = require('buffer').Buffer;
var os = require('os');

ip.toBuffer = function(ip, buff, offset) {
  offset = ~~offset;

  var result;

  if (this.isV4Format(ip)) {
    result = buff || new Buffer(offset + 4);
    ip.split(/\./g).map(function(byte) {
      result[offset++] = parseInt(byte, 10) & 0xff;
    });
  } else if (this.isV6Format(ip)) {
    var sections = ip.split(':', 8);

    var i;
    for (i = 0; i < sections.length; i++) {
      var isv4 = this.isV4Format(sections[i]);
      var v4Buffer;

      if (isv4) {
        v4Buffer = this.toBuffer(sections[i]);
        sections[i] = v4Buffer.slice(0, 2).toString('hex');
      }

      if (v4Buffer && ++i < 8) {
        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));
      }
    }

    if (sections[0] === '') {
      while (sections.length < 8) sections.unshift('0');
    } else if (sections[sections.length - 1] === '') {
      while (sections.length < 8) sections.push('0');
    } else if (sections.length < 8) {
      for (i = 0; i < sections.length && sections[i] !== ''; i++);
      var argv = [ i, 1 ];
      for (i = 9 - sections.length; i > 0; i--) {
        argv.push('0');
      }
      sections.splice.apply(sections, argv);
    }

    result = buff || new Buffer(offset + 16);
    for (i = 0; i < sections.length; i++) {
      var word = parseInt(sections[i], 16);
      result[offset++] = (word >> 8) & 0xff;
      result[offset++] = word & 0xff;
    }
  }

  if (!result) {
    throw Error('Invalid ip address: ' + ip);
  }

  return result;
};

ip.toString = function(buff, offset, length) {
  offset = ~~offset;
  length = length || (buff.length - offset);

  var result = [];
  if (length === 4) {
    // IPv4
    for (var i = 0; i < length; i++) {
      result.push(buff[offset + i]);
    }
    result = result.join('.');
  } else if (length === 16) {
    // IPv6
    for (var i = 0; i < length; i += 2) {
      result.push(buff.readUInt16BE(offset + i).toString(16));
    }
    result = result.join(':');
    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');
    result = result.replace(/:{3,4}/, '::');
  }

  return result;
};

var ipv4Regex = /^(\d{1,3}\.){3,3}\d{1,3}$/;
var ipv6Regex =
    /^(::)?(((\d{1,3}\.){3}(\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;

ip.isV4Format = function(ip) {
  return ipv4Regex.test(ip);
};

ip.isV6Format = function(ip) {
  return ipv6Regex.test(ip);
};
function _normalizeFamily(family) {
  return family ? family.toLowerCase() : 'ipv4';
}

ip.fromPrefixLen = function(prefixlen, family) {
  if (prefixlen > 32) {
    family = 'ipv6';
  } else {
    family = _normalizeFamily(family);
  }

  var len = 4;
  if (family === 'ipv6') {
    len = 16;
  }
  var buff = new Buffer(len);

  for (var i = 0, n = buff.length; i < n; ++i) {
    var bits = 8;
    if (prefixlen < 8) {
      bits = prefixlen;
    }
    prefixlen -= bits;

    buff[i] = ~(0xff >> bits) & 0xff;
  }

  return ip.toString(buff);
};

ip.mask = function(addr, mask) {
  addr = ip.toBuffer(addr);
  mask = ip.toBuffer(mask);

  var result = new Buffer(Math.max(addr.length, mask.length));

  var i = 0;
  // Same protocol - do bitwise and
  if (addr.length === mask.length) {
    for (i = 0; i < addr.length; i++) {
      result[i] = addr[i] & mask[i];
    }
  } else if (mask.length === 4) {
    // IPv6 address and IPv4 mask
    // (Mask low bits)
    for (i = 0; i < mask.length; i++) {
      result[i] = addr[addr.length - 4  + i] & mask[i];
    }
  } else {
    // IPv6 mask and IPv4 addr
    for (var i = 0; i < result.length - 6; i++) {
      result[i] = 0;
    }

    // ::ffff:ipv4
    result[10] = 0xff;
    result[11] = 0xff;
    for (i = 0; i < addr.length; i++) {
      result[i + 12] = addr[i] & mask[i + 12];
    }
    i = i + 12;
  }
  for (; i < result.length; i++)
    result[i] = 0;

  return ip.toString(result);
};

ip.cidr = function(cidrString) {
  var cidrParts = cidrString.split('/');

  var addr = cidrParts[0];
  if (cidrParts.length !== 2)
    throw new Error('invalid CIDR subnet: ' + addr);

  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));

  return ip.mask(addr, mask);
};

ip.subnet = function(addr, mask) {
  var networkAddress = ip.toLong(ip.mask(addr, mask));

  // Calculate the mask's length.
  var maskBuffer = ip.toBuffer(mask);
  var maskLength = 0;

  for (var i = 0; i < maskBuffer.length; i++) {
    if (maskBuffer[i] === 0xff) {
      maskLength += 8;
    } else {
      var octet = maskBuffer[i] & 0xff;
      while (octet) {
        octet = (octet << 1) & 0xff;
        maskLength++;
      }
    }
  }

  var numberOfAddresses = Math.pow(2, 32 - maskLength);

  return {
    networkAddress: ip.fromLong(networkAddress),
    firstAddress: numberOfAddresses <= 2 ?
                    ip.fromLong(networkAddress) :
                    ip.fromLong(networkAddress + 1),
    lastAddress: numberOfAddresses <= 2 ?
                    ip.fromLong(networkAddress + numberOfAddresses - 1) :
                    ip.fromLong(networkAddress + numberOfAddresses - 2),
    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),
    subnetMask: mask,
    subnetMaskLength: maskLength,
    numHosts: numberOfAddresses <= 2 ?
                numberOfAddresses : numberOfAddresses - 2,
    length: numberOfAddresses,
    contains: function(other) {
      return networkAddress === ip.toLong(ip.mask(other, mask));
    }
  };
};

ip.cidrSubnet = function(cidrString) {
  var cidrParts = cidrString.split('/');

  var addr = cidrParts[0];
  if (cidrParts.length !== 2)
    throw new Error('invalid CIDR subnet: ' + addr);

  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));

  return ip.subnet(addr, mask);
};

ip.not = function(addr) {
  var buff = ip.toBuffer(addr);
  for (var i = 0; i < buff.length; i++) {
    buff[i] = 0xff ^ buff[i];
  }
  return ip.toString(buff);
};

ip.or = function(a, b) {
  a = ip.toBuffer(a);
  b = ip.toBuffer(b);

  // same protocol
  if (a.length === b.length) {
    for (var i = 0; i < a.length; ++i) {
      a[i] |= b[i];
    }
    return ip.toString(a);

  // mixed protocols
  } else {
    var buff = a;
    var other = b;
    if (b.length > a.length) {
      buff = b;
      other = a;
    }

    var offset = buff.length - other.length;
    for (var i = offset; i < buff.length; ++i) {
      buff[i] |= other[i - offset];
    }

    return ip.toString(buff);
  }
};

ip.isEqual = function(a, b) {
  a = ip.toBuffer(a);
  b = ip.toBuffer(b);

  // Same protocol
  if (a.length === b.length) {
    for (var i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }

  // Swap
  if (b.length === 4) {
    var t = b;
    b = a;
    a = t;
  }

  // a - IPv4, b - IPv6
  for (var i = 0; i < 10; i++) {
    if (b[i] !== 0) return false;
  }

  var word = b.readUInt16BE(10);
  if (word !== 0 && word !== 0xffff) return false;

  for (var i = 0; i < 4; i++) {
    if (a[i] !== b[i + 12]) return false;
  }

  return true;
};

ip.isPrivate = function(addr) {
  return /^(::f{4}:)?10\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i
      .test(addr) ||
    /^(::f{4}:)?192\.168\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(addr) ||
    /^(::f{4}:)?172\.(1[6-9]|2\d|30|31)\.([0-9]{1,3})\.([0-9]{1,3})$/i
      .test(addr) ||
    /^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(addr) ||
    /^(::f{4}:)?169\.254\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(addr) ||
    /^f[cd][0-9a-f]{2}:/i.test(addr) ||
    /^fe80:/i.test(addr) ||
    /^::1$/.test(addr) ||
    /^::$/.test(addr);
};

ip.isPublic = function(addr) {
  return !ip.isPrivate(addr);
};

ip.isLoopback = function(addr) {
  return /^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/
      .test(addr) ||
    /^fe80::1$/.test(addr) ||
    /^::1$/.test(addr) ||
    /^::$/.test(addr);
};

ip.loopback = function(family) {
  //
  // Default to `ipv4`
  //
  family = _normalizeFamily(family);

  if (family !== 'ipv4' && family !== 'ipv6') {
    throw new Error('family must be ipv4 or ipv6');
  }

  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';
};

//
// ### function address (name, family)
// #### @name {string|'public'|'private'} **Optional** Name or security
//      of the network interface.
// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults
//      to ipv4).
//
// Returns the address for the network interface on the current system with
// the specified `name`:
//   * String: First `family` address of the interface.
//             If not found see `undefined`.
//   * 'public': the first public ip address of family.
//   * 'private': the first private ip address of family.
//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.
//
ip.address = function(name, family) {
  var interfaces = os.networkInterfaces();
  var all;

  //
  // Default to `ipv4`
  //
  family = _normalizeFamily(family);

  //
  // If a specific network interface has been named,
  // return the address.
  //
  if (name && name !== 'private' && name !== 'public') {
    var res = interfaces[name].filter(function(details) {
      var itemFamily = details.family.toLowerCase();
      return itemFamily === family;
    });
    if (res.length === 0)
      return undefined;
    return res[0].address;
  }

  var all = Object.keys(interfaces).map(function (nic) {
    //
    // Note: name will only be `public` or `private`
    // when this is called.
    //
    var addresses = interfaces[nic].filter(function (details) {
      details.family = details.family.toLowerCase();
      if (details.family !== family || ip.isLoopback(details.address)) {
        return false;
      } else if (!name) {
        return true;
      }

      return name === 'public' ? ip.isPrivate(details.address) :
          ip.isPublic(details.address);
    });

    return addresses.length ? addresses[0].address : undefined;
  }).filter(Boolean);

  return !all.length ? ip.loopback(family) : all[0];
};

ip.toLong = function(ip) {
  var ipl = 0;
  ip.split('.').forEach(function(octet) {
    ipl <<= 8;
    ipl += parseInt(octet);
  });
  return(ipl >>> 0);
};

ip.fromLong = function(ipl) {
  return ((ipl >>> 24) + '.' +
      (ipl >> 16 & 255) + '.' +
      (ipl >> 8 & 255) + '.' +
      (ipl & 255) );
};

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","os":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/os-browserify/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-arguments/index.js":[function(require,module,exports){
'use strict';

var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

},{"call-bind/callBound":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/call-bind/callBound.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-buffer/index.js":[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-canonical-base64/index.js":[function(require,module,exports){

var char = '[a-zA-Z0-9\/\+]'
var trail2 = '[AQgw]=='
var trail4 = '[AEIMQUYcgkosw048]='
var rx = '(?:' +char+ '{4})*(?:' +char+ '(?:(?:' +trail2 + ')|(?:' +char+trail4+ ')))?'
module.exports = function (prefix,suffix, length) {
  if(!Number.isInteger(length)) return new RegExp('^'+(prefix||'')+rx+(suffix||'')+'$')

  var mod = length % 3

  return new RegExp('^'+(prefix||'')+(
      char +'{'+~~((length*8)/6)+'}' + (
        mod === 0 ? ''
      : mod === 1 ? trail2
      :             trail4
      )
  )+(suffix||'')+'$')
}
















},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-electron/index.js":[function(require,module,exports){
(function (process){(function (){
// https://github.com/electron/electron/issues/2288
function isElectron() {
    // Renderer process
    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {
        return true;
    }

    // Main process
    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {
        return true;
    }

    // Detect the user agent when the `nodeIntegration` option is set to true
    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {
        return true;
    }

    return false;
}

module.exports = isElectron;

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-generator-function/index.js":[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;
var fnToStr = Function.prototype.toString;
var isFnRegex = /^\s*(?:function)?\*/;
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
var getProto = Object.getPrototypeOf;
var getGeneratorFunc = function () { // eslint-disable-line consistent-return
	if (!hasToStringTag) {
		return false;
	}
	try {
		return Function('return function*() {}')();
	} catch (e) {
	}
};
var generatorFunc = getGeneratorFunc();
var GeneratorFunction = getProto && generatorFunc ? getProto(generatorFunc) : false;

module.exports = function isGeneratorFunction(fn) {
	if (typeof fn !== 'function') {
		return false;
	}
	if (isFnRegex.test(fnToStr.call(fn))) {
		return true;
	}
	if (!hasToStringTag) {
		var str = toStr.call(fn);
		return str === '[object GeneratorFunction]';
	}
	return getProto && getProto(fn) === GeneratorFunction;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-options/index.js":[function(require,module,exports){
(function (Buffer){(function (){
module.exports = isOptions

function isOptions (opts) {
  return typeof opts === 'object' && opts && !Buffer.isBuffer(opts)
}

}).call(this)}).call(this,{"isBuffer":require("../is-buffer/index.js")})
},{"../is-buffer/index.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-typed-array/index.js":[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('foreach');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasSymbols = require('has-symbols')();
var hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';

var typedArrays = availableTypedArrays();

var $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
	for (var i = 0; i < array.length; i += 1) {
		if (array[i] === value) {
			return i;
		}
	}
	return -1;
};
var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		var arr = new global[typedArray]();
		if (!(Symbol.toStringTag in arr)) {
			throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
		}
		var proto = getPrototypeOf(arr);
		var descriptor = gOPD(proto, Symbol.toStringTag);
		if (!descriptor) {
			var superProto = getPrototypeOf(proto);
			descriptor = gOPD(superProto, Symbol.toStringTag);
		}
		toStrTags[typedArray] = descriptor.get;
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var anyTrue = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!anyTrue) {
			try {
				anyTrue = getter.call(value) === typedArray;
			} catch (e) { /**/ }
		}
	});
	return anyTrue;
};

module.exports = function isTypedArray(value) {
	if (!value || typeof value !== 'object') { return false; }
	if (!hasToStringTag) {
		var tag = $slice($toString(value), 8, -1);
		return $indexOf(typedArrays, tag) > -1;
	}
	if (!gOPD) { return false; }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/available-typed-arrays/index.js","call-bind/callBound":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/call-bind/callBound.js","es-abstract/helpers/getOwnPropertyDescriptor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","foreach":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/foreach/index.js","has-symbols":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-symbols/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-valid-domain/data/sldMap.json":[function(require,module,exports){
module.exports={
  "com.ac": true,
  "net.ac": true,
  "gov.ac": true,
  "org.ac": true,
  "mil.ac": true,
  "co.ae": true,
  "net.ae": true,
  "gov.ae": true,
  "ac.ae": true,
  "sch.ae": true,
  "org.ae": true,
  "mil.ae": true,
  "pro.ae": true,
  "name.ae": true,
  "com.af": true,
  "edu.af": true,
  "gov.af": true,
  "net.af": true,
  "org.af": true,
  "com.al": true,
  "edu.al": true,
  "gov.al": true,
  "mil.al": true,
  "net.al": true,
  "org.al": true,
  "ed.ao": true,
  "gv.ao": true,
  "og.ao": true,
  "co.ao": true,
  "pb.ao": true,
  "it.ao": true,
  "com.ar": true,
  "edu.ar": true,
  "gob.ar": true,
  "gov.ar": true,
  "int.ar": true,
  "mil.ar": true,
  "net.ar": true,
  "org.ar": true,
  "tur.ar": true,
  "gv.at": true,
  "ac.at": true,
  "co.at": true,
  "or.at": true,
  "com.au": true,
  "net.au": true,
  "org.au": true,
  "edu.au": true,
  "gov.au": true,
  "csiro.au": true,
  "asn.au": true,
  "id.au": true,
  "vic.au": true,
  "sa.au": true,
  "wa.au": true,
  "nt.au": true,
  "tas.au": true,
  "qld.au": true,
  "act.au": true,
  "conf.au": true,
  "oz.au": true,
  "org.ba": true,
  "net.ba": true,
  "edu.ba": true,
  "gov.ba": true,
  "mil.ba": true,
  "unsa.ba": true,
  "untz.ba": true,
  "unmo.ba": true,
  "unbi.ba": true,
  "unze.ba": true,
  "co.ba": true,
  "com.ba": true,
  "rs.ba": true,
  "co.bb": true,
  "com.bb": true,
  "net.bb": true,
  "org.bb": true,
  "gov.bb": true,
  "edu.bb": true,
  "info.bb": true,
  "store.bb": true,
  "tv.bb": true,
  "biz.bb": true,
  "com.bh": true,
  "info.bh": true,
  "cc.bh": true,
  "edu.bh": true,
  "biz.bh": true,
  "net.bh": true,
  "org.bh": true,
  "gov.bh": true,
  "com.bn": true,
  "edu.bn": true,
  "gov.bn": true,
  "net.bn": true,
  "org.bn": true,
  "com.bo": true,
  "net.bo": true,
  "org.bo": true,
  "tv.bo": true,
  "mil.bo": true,
  "int.bo": true,
  "gob.bo": true,
  "gov.bo": true,
  "edu.bo": true,
  "adm.br": true,
  "adv.br": true,
  "agr.br": true,
  "am.br": true,
  "arq.br": true,
  "art.br": true,
  "ato.br": true,
  "b.br": true,
  "bio.br": true,
  "blog.br": true,
  "bmd.br": true,
  "cim.br": true,
  "cng.br": true,
  "cnt.br": true,
  "com.br": true,
  "coop.br": true,
  "ecn.br": true,
  "edu.br": true,
  "eng.br": true,
  "esp.br": true,
  "etc.br": true,
  "eti.br": true,
  "far.br": true,
  "flog.br": true,
  "fm.br": true,
  "fnd.br": true,
  "fot.br": true,
  "fst.br": true,
  "g12.br": true,
  "ggf.br": true,
  "gov.br": true,
  "imb.br": true,
  "ind.br": true,
  "inf.br": true,
  "jor.br": true,
  "jus.br": true,
  "lel.br": true,
  "mat.br": true,
  "med.br": true,
  "mil.br": true,
  "mus.br": true,
  "net.br": true,
  "nom.br": true,
  "not.br": true,
  "ntr.br": true,
  "odo.br": true,
  "org.br": true,
  "ppg.br": true,
  "pro.br": true,
  "psc.br": true,
  "psi.br": true,
  "qsl.br": true,
  "rec.br": true,
  "slg.br": true,
  "srv.br": true,
  "tmp.br": true,
  "trd.br": true,
  "tur.br": true,
  "tv.br": true,
  "vet.br": true,
  "vlog.br": true,
  "wiki.br": true,
  "zlg.br": true,
  "com.bs": true,
  "net.bs": true,
  "org.bs": true,
  "edu.bs": true,
  "gov.bs": true,
  "om.bz": true,
  "du.bz": true,
  "ov.bz": true,
  "et.bz": true,
  "rg.bz": true,
  "ab.ca": true,
  "bc.ca": true,
  "mb.ca": true,
  "nb.ca": true,
  "nf.ca": true,
  "nl.ca": true,
  "ns.ca": true,
  "nt.ca": true,
  "nu.ca": true,
  "on.ca": true,
  "pe.ca": true,
  "qc.ca": true,
  "sk.ca": true,
  "yk.ca": true,
  "co.ck": true,
  "org.ck": true,
  "edu.ck": true,
  "gov.ck": true,
  "net.ck": true,
  "gen.ck": true,
  "biz.ck": true,
  "info.ck": true,
  "ac.cn": true,
  "com.cn": true,
  "edu.cn": true,
  "gov.cn": true,
  "mil.cn": true,
  "net.cn": true,
  "org.cn": true,
  "ah.cn": true,
  "bj.cn": true,
  "cq.cn": true,
  "fj.cn": true,
  "gd.cn": true,
  "gs.cn": true,
  "gz.cn": true,
  "gx.cn": true,
  "ha.cn": true,
  "hb.cn": true,
  "he.cn": true,
  "hi.cn": true,
  "hl.cn": true,
  "hn.cn": true,
  "jl.cn": true,
  "js.cn": true,
  "jx.cn": true,
  "ln.cn": true,
  "nm.cn": true,
  "nx.cn": true,
  "qh.cn": true,
  "sc.cn": true,
  "sd.cn": true,
  "sh.cn": true,
  "sn.cn": true,
  "sx.cn": true,
  "tj.cn": true,
  "tw.cn": true,
  "xj.cn": true,
  "xz.cn": true,
  "yn.cn": true,
  "zj.cn": true,
  "com.co": true,
  "org.co": true,
  "edu.co": true,
  "gov.co": true,
  "net.co": true,
  "mil.co": true,
  "nom.co": true,
  "ac.cr": true,
  "co.cr": true,
  "ed.cr": true,
  "fi.cr": true,
  "go.cr": true,
  "or.cr": true,
  "sa.cr": true,
  "cr": true,
  "ac.cy": true,
  "net.cy": true,
  "gov.cy": true,
  "org.cy": true,
  "pro.cy": true,
  "name.cy": true,
  "ekloges.cy": true,
  "tm.cy": true,
  "ltd.cy": true,
  "biz.cy": true,
  "press.cy": true,
  "parliament.cy": true,
  "com.cy": true,
  "edu.do": true,
  "gob.do": true,
  "gov.do": true,
  "com.do": true,
  "sld.do": true,
  "org.do": true,
  "net.do": true,
  "web.do": true,
  "mil.do": true,
  "art.do": true,
  "com.dz": true,
  "org.dz": true,
  "net.dz": true,
  "gov.dz": true,
  "edu.dz": true,
  "asso.dz": true,
  "pol.dz": true,
  "art.dz": true,
  "com.ec": true,
  "info.ec": true,
  "net.ec": true,
  "fin.ec": true,
  "med.ec": true,
  "pro.ec": true,
  "org.ec": true,
  "edu.ec": true,
  "gov.ec": true,
  "mil.ec": true,
  "com.eg": true,
  "edu.eg": true,
  "eun.eg": true,
  "gov.eg": true,
  "mil.eg": true,
  "name.eg": true,
  "net.eg": true,
  "org.eg": true,
  "sci.eg": true,
  "com.er": true,
  "edu.er": true,
  "gov.er": true,
  "mil.er": true,
  "net.er": true,
  "org.er": true,
  "ind.er": true,
  "rochest.er": true,
  "w.er": true,
  "com.es": true,
  "nom.es": true,
  "org.es": true,
  "gob.es": true,
  "edu.es": true,
  "com.et": true,
  "gov.et": true,
  "org.et": true,
  "edu.et": true,
  "net.et": true,
  "biz.et": true,
  "name.et": true,
  "info.et": true,
  "ac.fj": true,
  "biz.fj": true,
  "com.fj": true,
  "info.fj": true,
  "mil.fj": true,
  "name.fj": true,
  "net.fj": true,
  "org.fj": true,
  "pro.fj": true,
  "co.fk": true,
  "org.fk": true,
  "gov.fk": true,
  "ac.fk": true,
  "nom.fk": true,
  "net.fk": true,
  "fr": true,
  "tm.fr": true,
  "asso.fr": true,
  "nom.fr": true,
  "prd.fr": true,
  "presse.fr": true,
  "com.fr": true,
  "gouv.fr": true,
  "co.gg": true,
  "net.gg": true,
  "org.gg": true,
  "com.gh": true,
  "edu.gh": true,
  "gov.gh": true,
  "org.gh": true,
  "mil.gh": true,
  "co.gl": true,
  "com.gl": true,
  "edu.gl": true,
  "net.gl": true,
  "org.gl": true,
  "com.gn": true,
  "ac.gn": true,
  "gov.gn": true,
  "org.gn": true,
  "net.gn": true,
  "com.gr": true,
  "edu.gr": true,
  "net.gr": true,
  "org.gr": true,
  "gov.gr": true,
  "mil.gr": true,
  "com.gt": true,
  "edu.gt": true,
  "net.gt": true,
  "gob.gt": true,
  "org.gt": true,
  "mil.gt": true,
  "ind.gt": true,
  "com.gu": true,
  "net.gu": true,
  "gov.gu": true,
  "org.gu": true,
  "edu.gu": true,
  "com.hk": true,
  "edu.hk": true,
  "gov.hk": true,
  "idv.hk": true,
  "net.hk": true,
  "org.hk": true,
  "2000.hu": true,
  "agrar.hu": true,
  "bolt.hu": true,
  "casino.hu": true,
  "city.hu": true,
  "co.hu": true,
  "erotica.hu": true,
  "erotika.hu": true,
  "film.hu": true,
  "forum.hu": true,
  "games.hu": true,
  "hotel.hu": true,
  "info.hu": true,
  "ingatlan.hu": true,
  "jogasz.hu": true,
  "konyvelo.hu": true,
  "lakas.hu": true,
  "media.hu": true,
  "news.hu": true,
  "org.hu": true,
  "priv.hu": true,
  "reklam.hu": true,
  "sex.hu": true,
  "shop.hu": true,
  "sport.hu": true,
  "suli.huv": true,
  "szex.hu": true,
  "tm.hu": true,
  "tozsde.hu": true,
  "utazas.hu": true,
  "video.hu": true,
  "ac.id": true,
  "co.id": true,
  "net.id": true,
  "or.id": true,
  "web.id": true,
  "sch.id": true,
  "mil.id": true,
  "go.id": true,
  "war.net.id": true,
  "my.id": true,
  "biz.id": true,
  "ac.il": true,
  "co.il": true,
  "org.il": true,
  "net.il": true,
  "k12.il": true,
  "gov.il": true,
  "muni.il": true,
  "idf.il": true,
  "in": true,
  "4fd.in": true,
  "co.in": true,
  "firm.in": true,
  "net.in": true,
  "org.in": true,
  "gen.in": true,
  "ind.in": true,
  "ac.in": true,
  "edu.in": true,
  "res.in": true,
  "ernet.in": true,
  "gov.in": true,
  "mil.in": true,
  "nic.in": true,
  "iq": true,
  "gov.iq": true,
  "edu.iq": true,
  "com.iq": true,
  "mil.iq": true,
  "org.iq": true,
  "net.iq": true,
  "ir": true,
  "ac.ir": true,
  "co.ir": true,
  "gov.ir": true,
  "id.ir": true,
  "net.ir": true,
  "org.ir": true,
  "sch.ir": true,
  "dnssec.ir": true,
  "gov.it": true,
  "edu.it": true,
  "co.je": true,
  "net.je": true,
  "org.je": true,
  "com.jo": true,
  "net.jo": true,
  "gov.jo": true,
  "edu.jo": true,
  "org.jo": true,
  "mil.jo": true,
  "name.jo": true,
  "sch.jo": true,
  "ac.jp": true,
  "ad.jp": true,
  "co.jp": true,
  "ed.jp": true,
  "go.jp": true,
  "gr.jp": true,
  "lg.jp": true,
  "ne.jp": true,
  "or.jp": true,
  "co.ke": true,
  "or.ke": true,
  "ne.ke": true,
  "go.ke": true,
  "ac.ke": true,
  "sc.ke": true,
  "me.ke": true,
  "mobi.ke": true,
  "info.ke": true,
  "per.kh": true,
  "com.kh": true,
  "edu.kh": true,
  "gov.kh": true,
  "mil.kh": true,
  "net.kh": true,
  "org.kh": true,
  "com.ki": true,
  "biz.ki": true,
  "de.ki": true,
  "net.ki": true,
  "info.ki": true,
  "org.ki": true,
  "gov.ki": true,
  "edu.ki": true,
  "mob.ki": true,
  "tel.ki": true,
  "km": true,
  "com.km": true,
  "coop.km": true,
  "asso.km": true,
  "nom.km": true,
  "presse.km": true,
  "tm.km": true,
  "medecin.km": true,
  "notaires.km": true,
  "pharmaciens.km": true,
  "veterinaire.km": true,
  "edu.km": true,
  "gouv.km": true,
  "mil.km": true,
  "net.kn": true,
  "org.kn": true,
  "edu.kn": true,
  "gov.kn": true,
  "kr": true,
  "co.kr": true,
  "ne.kr": true,
  "or.kr": true,
  "re.kr": true,
  "pe.kr": true,
  "go.kr": true,
  "mil.kr": true,
  "ac.kr": true,
  "hs.kr": true,
  "ms.kr": true,
  "es.kr": true,
  "sc.kr": true,
  "kg.kr": true,
  "seoul.kr": true,
  "busan.kr": true,
  "daegu.kr": true,
  "incheon.kr": true,
  "gwangju.kr": true,
  "daejeon.kr": true,
  "ulsan.kr": true,
  "gyeonggi.kr": true,
  "gangwon.kr": true,
  "chungbuk.kr": true,
  "chungnam.kr": true,
  "jeonbuk.kr": true,
  "jeonnam.kr": true,
  "gyeongbuk.kr": true,
  "gyeongnam.kr": true,
  "jeju.kr": true,
  "edu.kw": true,
  "com.kw": true,
  "net.kw": true,
  "org.kw": true,
  "gov.kw": true,
  "com.ky": true,
  "org.ky": true,
  "net.ky": true,
  "edu.ky": true,
  "gov.ky": true,
  "com.kz": true,
  "edu.kz": true,
  "gov.kz": true,
  "mil.kz": true,
  "net.kz": true,
  "org.kz": true,
  "com.lb": true,
  "edu.lb": true,
  "gov.lb": true,
  "net.lb": true,
  "org.lb": true,
  "gov.lk": true,
  "sch.lk": true,
  "net.lk": true,
  "int.lk": true,
  "com.lk": true,
  "org.lk": true,
  "edu.lk": true,
  "ngo.lk": true,
  "soc.lk": true,
  "web.lk": true,
  "ltd.lk": true,
  "assn.lk": true,
  "grp.lk": true,
  "hotel.lk": true,
  "com.lr": true,
  "edu.lr": true,
  "gov.lr": true,
  "org.lr": true,
  "net.lr": true,
  "com.lv": true,
  "edu.lv": true,
  "gov.lv": true,
  "org.lv": true,
  "mil.lv": true,
  "id.lv": true,
  "net.lv": true,
  "asn.lv": true,
  "conf.lv": true,
  "com.ly": true,
  "net.ly": true,
  "gov.ly": true,
  "plc.ly": true,
  "edu.ly": true,
  "sch.ly": true,
  "med.ly": true,
  "org.ly": true,
  "id.ly": true,
  "ma": true,
  "net.ma": true,
  "ac.ma": true,
  "org.ma": true,
  "gov.ma": true,
  "press.ma": true,
  "co.ma": true,
  "tm.mc": true,
  "asso.mc": true,
  "co.me": true,
  "net.me": true,
  "org.me": true,
  "edu.me": true,
  "ac.me": true,
  "gov.me": true,
  "its.me": true,
  "priv.me": true,
  "org.mg": true,
  "nom.mg": true,
  "gov.mg": true,
  "prd.mg": true,
  "tm.mg": true,
  "edu.mg": true,
  "mil.mg": true,
  "com.mg": true,
  "com.mk": true,
  "org.mk": true,
  "net.mk": true,
  "edu.mk": true,
  "gov.mk": true,
  "inf.mk": true,
  "name.mk": true,
  "pro.mk": true,
  "com.ml": true,
  "net.ml": true,
  "org.ml": true,
  "edu.ml": true,
  "gov.ml": true,
  "presse.ml": true,
  "gov.mn": true,
  "edu.mn": true,
  "org.mn": true,
  "com.mo": true,
  "edu.mo": true,
  "gov.mo": true,
  "net.mo": true,
  "org.mo": true,
  "com.mt": true,
  "org.mt": true,
  "net.mt": true,
  "edu.mt": true,
  "gov.mt": true,
  "aero.mv": true,
  "biz.mv": true,
  "com.mv": true,
  "coop.mv": true,
  "edu.mv": true,
  "gov.mv": true,
  "info.mv": true,
  "int.mv": true,
  "mil.mv": true,
  "museum.mv": true,
  "name.mv": true,
  "net.mv": true,
  "org.mv": true,
  "pro.mv": true,
  "ac.mw": true,
  "co.mw": true,
  "com.mw": true,
  "coop.mw": true,
  "edu.mw": true,
  "gov.mw": true,
  "int.mw": true,
  "museum.mw": true,
  "net.mw": true,
  "org.mw": true,
  "com.mx": true,
  "net.mx": true,
  "org.mx": true,
  "edu.mx": true,
  "gob.mx": true,
  "com.my": true,
  "net.my": true,
  "org.my": true,
  "gov.my": true,
  "edu.my": true,
  "sch.my": true,
  "mil.my": true,
  "name.my": true,
  "com.nf": true,
  "net.nf": true,
  "arts.nf": true,
  "store.nf": true,
  "web.nf": true,
  "firm.nf": true,
  "info.nf": true,
  "other.nf": true,
  "per.nf": true,
  "rec.nf": true,
  "com.ng": true,
  "org.ng": true,
  "gov.ng": true,
  "edu.ng": true,
  "net.ng": true,
  "sch.ng": true,
  "name.ng": true,
  "mobi.ng": true,
  "biz.ng": true,
  "mil.ng": true,
  "gob.ni": true,
  "co.ni": true,
  "com.ni": true,
  "ac.ni": true,
  "edu.ni": true,
  "org.ni": true,
  "nom.ni": true,
  "net.ni": true,
  "mil.ni": true,
  "com.np": true,
  "edu.np": true,
  "gov.np": true,
  "org.np": true,
  "mil.np": true,
  "net.np": true,
  "edu.nr": true,
  "gov.nr": true,
  "biz.nr": true,
  "info.nr": true,
  "net.nr": true,
  "org.nr": true,
  "com.nr": true,
  "com.om": true,
  "co.om": true,
  "edu.om": true,
  "ac.om": true,
  "sch.om": true,
  "gov.om": true,
  "net.om": true,
  "org.om": true,
  "mil.om": true,
  "museum.om": true,
  "biz.om": true,
  "pro.om": true,
  "med.om": true,
  "edu.pe": true,
  "gob.pe": true,
  "nom.pe": true,
  "mil.pe": true,
  "sld.pe": true,
  "org.pe": true,
  "com.pe": true,
  "net.pe": true,
  "com.ph": true,
  "net.ph": true,
  "org.ph": true,
  "mil.ph": true,
  "ngo.ph": true,
  "i.ph": true,
  "gov.ph": true,
  "edu.ph": true,
  "com.pk": true,
  "net.pk": true,
  "edu.pk": true,
  "org.pk": true,
  "fam.pk": true,
  "biz.pk": true,
  "web.pk": true,
  "gov.pk": true,
  "gob.pk": true,
  "gok.pk": true,
  "gon.pk": true,
  "gop.pk": true,
  "gos.pk": true,
  "pwr.pl": true,
  "com.pl": true,
  "biz.pl": true,
  "net.pl": true,
  "art.pl": true,
  "edu.pl": true,
  "org.pl": true,
  "ngo.pl": true,
  "gov.pl": true,
  "info.pl": true,
  "mil.pl": true,
  "waw.pl": true,
  "warszawa.pl": true,
  "wroc.pl": true,
  "wroclaw.pl": true,
  "krakow.pl": true,
  "katowice.pl": true,
  "poznan.pl": true,
  "lodz.pl": true,
  "gda.pl": true,
  "gdansk.pl": true,
  "slupsk.pl": true,
  "radom.pl": true,
  "szczecin.pl": true,
  "lublin.pl": true,
  "bialystok.pl": true,
  "olsztyn.pl": true,
  "torun.pl": true,
  "gorzow.pl": true,
  "zgora.pl": true,
  "biz.pr": true,
  "com.pr": true,
  "edu.pr": true,
  "gov.pr": true,
  "info.pr": true,
  "isla.pr": true,
  "name.pr": true,
  "net.pr": true,
  "org.pr": true,
  "pro.pr": true,
  "est.pr": true,
  "prof.pr": true,
  "ac.pr": true,
  "com.ps": true,
  "net.ps": true,
  "org.ps": true,
  "edu.ps": true,
  "gov.ps": true,
  "plo.ps": true,
  "sec.ps": true,
  "co.pw": true,
  "ne.pw": true,
  "or.pw": true,
  "ed.pw": true,
  "go.pw": true,
  "belau.pw": true,
  "arts.ro": true,
  "com.ro": true,
  "firm.ro": true,
  "info.ro": true,
  "nom.ro": true,
  "nt.ro": true,
  "org.ro": true,
  "rec.ro": true,
  "store.ro": true,
  "tm.ro": true,
  "www.ro": true,
  "co.rs": true,
  "org.rs": true,
  "edu.rs": true,
  "ac.rs": true,
  "gov.rs": true,
  "in.rs": true,
  "com.sb": true,
  "net.sb": true,
  "edu.sb": true,
  "org.sb": true,
  "gov.sb": true,
  "com.sc": true,
  "net.sc": true,
  "edu.sc": true,
  "gov.sc": true,
  "org.sc": true,
  "co.sh": true,
  "com.sh": true,
  "org.sh": true,
  "gov.sh": true,
  "edu.sh": true,
  "net.sh": true,
  "nom.sh": true,
  "com.sl": true,
  "net.sl": true,
  "org.sl": true,
  "edu.sl": true,
  "gov.sl": true,
  "gov.st": true,
  "saotome.st": true,
  "principe.st": true,
  "consulado.st": true,
  "embaixada.st": true,
  "org.st": true,
  "edu.st": true,
  "net.st": true,
  "com.st": true,
  "store.st": true,
  "mil.st": true,
  "co.st": true,
  "edu.sv": true,
  "gob.sv": true,
  "com.sv": true,
  "org.sv": true,
  "red.sv": true,
  "co.sz": true,
  "ac.sz": true,
  "org.sz": true,
  "com.tr": true,
  "gen.tr": true,
  "org.tr": true,
  "biz.tr": true,
  "info.tr": true,
  "av.tr": true,
  "dr.tr": true,
  "pol.tr": true,
  "bel.tr": true,
  "tsk.tr": true,
  "bbs.tr": true,
  "k12.tr": true,
  "edu.tr": true,
  "name.tr": true,
  "net.tr": true,
  "gov.tr": true,
  "web.tr": true,
  "tel.tr": true,
  "tv.tr": true,
  "co.tt": true,
  "com.tt": true,
  "org.tt": true,
  "net.tt": true,
  "biz.tt": true,
  "info.tt": true,
  "pro.tt": true,
  "int.tt": true,
  "coop.tt": true,
  "jobs.tt": true,
  "mobi.tt": true,
  "travel.tt": true,
  "museum.tt": true,
  "aero.tt": true,
  "cat.tt": true,
  "tel.tt": true,
  "name.tt": true,
  "mil.tt": true,
  "edu.tt": true,
  "gov.tt": true,
  "edu.tw": true,
  "gov.tw": true,
  "mil.tw": true,
  "com.tw": true,
  "net.tw": true,
  "org.tw": true,
  "idv.tw": true,
  "game.tw": true,
  "ebiz.tw": true,
  "club.tw": true,
  "com.mu": true,
  "gov.mu": true,
  "net.mu": true,
  "org.mu": true,
  "ac.mu": true,
  "co.mu": true,
  "or.mu": true,
  "ac.mz": true,
  "co.mz": true,
  "edu.mz": true,
  "org.mz": true,
  "gov.mz": true,
  "com.na": true,
  "co.na": true,
  "ac.nz": true,
  "co.nz": true,
  "cri.nz": true,
  "geek.nz": true,
  "gen.nz": true,
  "govt.nz": true,
  "health.nz": true,
  "iwi.nz": true,
  "maori.nz": true,
  "mil.nz": true,
  "net.nz": true,
  "org.nz": true,
  "parliament.nz": true,
  "school.nz": true,
  "abo.pa": true,
  "ac.pa": true,
  "com.pa": true,
  "edu.pa": true,
  "gob.pa": true,
  "ing.pa": true,
  "med.pa": true,
  "net.pa": true,
  "nom.pa": true,
  "org.pa": true,
  "sld.pa": true,
  "com.pt": true,
  "edu.pt": true,
  "gov.pt": true,
  "int.pt": true,
  "net.pt": true,
  "nome.pt": true,
  "org.pt": true,
  "publ.pt": true,
  "com.py": true,
  "edu.py": true,
  "gov.py": true,
  "mil.py": true,
  "net.py": true,
  "org.py": true,
  "com.qa": true,
  "edu.qa": true,
  "gov.qa": true,
  "mil.qa": true,
  "net.qa": true,
  "org.qa": true,
  "asso.re": true,
  "com.re": true,
  "nom.re": true,
  "ac.ru": true,
  "adygeya.ru": true,
  "altai.ru": true,
  "amur.ru": true,
  "arkhangelsk.ru": true,
  "astrakhan.ru": true,
  "bashkiria.ru": true,
  "belgorod.ru": true,
  "bir.ru": true,
  "bryansk.ru": true,
  "buryatia.ru": true,
  "cbg.ru": true,
  "chel.ru": true,
  "chelyabinsk.ru": true,
  "chita.ru": true,
  "chukotka.ru": true,
  "chuvashia.ru": true,
  "com.ru": true,
  "dagestan.ru": true,
  "e-burg.ru": true,
  "edu.ru": true,
  "gov.ru": true,
  "grozny.ru": true,
  "int.ru": true,
  "irkutsk.ru": true,
  "ivanovo.ru": true,
  "izhevsk.ru": true,
  "jar.ru": true,
  "joshkar-ola.ru": true,
  "kalmykia.ru": true,
  "kaluga.ru": true,
  "kamchatka.ru": true,
  "karelia.ru": true,
  "kazan.ru": true,
  "kchr.ru": true,
  "kemerovo.ru": true,
  "khabarovsk.ru": true,
  "khakassia.ru": true,
  "khv.ru": true,
  "kirov.ru": true,
  "koenig.ru": true,
  "komi.ru": true,
  "kostroma.ru": true,
  "kranoyarsk.ru": true,
  "kuban.ru": true,
  "kurgan.ru": true,
  "kursk.ru": true,
  "lipetsk.ru": true,
  "magadan.ru": true,
  "mari.ru": true,
  "mari-el.ru": true,
  "marine.ru": true,
  "mil.ru": true,
  "mordovia.ru": true,
  "mosreg.ru": true,
  "msk.ru": true,
  "murmansk.ru": true,
  "nalchik.ru": true,
  "net.ru": true,
  "nnov.ru": true,
  "nov.ru": true,
  "novosibirsk.ru": true,
  "nsk.ru": true,
  "omsk.ru": true,
  "orenburg.ru": true,
  "org.ru": true,
  "oryol.ru": true,
  "penza.ru": true,
  "perm.ru": true,
  "pp.ru": true,
  "pskov.ru": true,
  "ptz.ru": true,
  "rnd.ru": true,
  "ryazan.ru": true,
  "sakhalin.ru": true,
  "samara.ru": true,
  "saratov.ru": true,
  "simbirsk.ru": true,
  "smolensk.ru": true,
  "spb.ru": true,
  "stavropol.ru": true,
  "stv.ru": true,
  "surgut.ru": true,
  "tambov.ru": true,
  "tatarstan.ru": true,
  "tom.ru": true,
  "tomsk.ru": true,
  "tsaritsyn.ru": true,
  "tsk.ru": true,
  "tula.ru": true,
  "tuva.ru": true,
  "tver.ru": true,
  "tyumen.ru": true,
  "udm.ru": true,
  "udmurtia.ru": true,
  "ulan-ude.ru": true,
  "vladikavkaz.ru": true,
  "vladimir.ru": true,
  "vladivostok.ru": true,
  "volgograd.ru": true,
  "vologda.ru": true,
  "voronezh.ru": true,
  "vrn.ru": true,
  "vyatka.ru": true,
  "yakutia.ru": true,
  "yamal.ru": true,
  "yekaterinburg.ru": true,
  "yuzhno-sakhalinsk.ru": true,
  "ac.rw": true,
  "co.rw": true,
  "com.rw": true,
  "edu.rw": true,
  "gouv.rw": true,
  "gov.rw": true,
  "int.rw": true,
  "mil.rw": true,
  "net.rw": true,
  "com.sa": true,
  "edu.sa": true,
  "gov.sa": true,
  "med.sa": true,
  "net.sa": true,
  "org.sa": true,
  "pub.sa": true,
  "sch.sa": true,
  "com.sd": true,
  "edu.sd": true,
  "gov.sd": true,
  "info.sd": true,
  "med.sd": true,
  "net.sd": true,
  "org.sd": true,
  "tv.sd": true,
  "a.se": true,
  "ac.se": true,
  "b.se": true,
  "bd.se": true,
  "c.se": true,
  "d.se": true,
  "e.se": true,
  "f.se": true,
  "g.se": true,
  "h.se": true,
  "i.se": true,
  "k.se": true,
  "l.se": true,
  "m.se": true,
  "n.se": true,
  "o.se": true,
  "org.se": true,
  "p.se": true,
  "parti.se": true,
  "pp.se": true,
  "press.se": true,
  "r.se": true,
  "s.se": true,
  "t.se": true,
  "tm.se": true,
  "u.se": true,
  "w.se": true,
  "x.se": true,
  "y.se": true,
  "z.se": true,
  "com.sg": true,
  "edu.sg": true,
  "gov.sg": true,
  "idn.sg": true,
  "net.sg": true,
  "org.sg": true,
  "per.sg": true,
  "art.sn": true,
  "com.sn": true,
  "edu.sn": true,
  "gouv.sn": true,
  "org.sn": true,
  "perso.sn": true,
  "univ.sn": true,
  "com.sy": true,
  "edu.sy": true,
  "gov.sy": true,
  "mil.sy": true,
  "net.sy": true,
  "news.sy": true,
  "org.sy": true,
  "ac.th": true,
  "co.th": true,
  "go.th": true,
  "in.th": true,
  "mi.th": true,
  "net.th": true,
  "or.th": true,
  "ac.tj": true,
  "biz.tj": true,
  "co.tj": true,
  "com.tj": true,
  "edu.tj": true,
  "go.tj": true,
  "gov.tj": true,
  "info.tj": true,
  "int.tj": true,
  "mil.tj": true,
  "name.tj": true,
  "net.tj": true,
  "nic.tj": true,
  "org.tj": true,
  "test.tj": true,
  "web.tj": true,
  "agrinet.tn": true,
  "com.tn": true,
  "defense.tn": true,
  "edunet.tn": true,
  "ens.tn": true,
  "fin.tn": true,
  "gov.tn": true,
  "ind.tn": true,
  "info.tn": true,
  "intl.tn": true,
  "mincom.tn": true,
  "nat.tn": true,
  "net.tn": true,
  "org.tn": true,
  "perso.tn": true,
  "rnrt.tn": true,
  "rns.tn": true,
  "rnu.tn": true,
  "tourism.tn": true,
  "ac.tz": true,
  "co.tz": true,
  "go.tz": true,
  "ne.tz": true,
  "or.tz": true,
  "biz.ua": true,
  "cherkassy.ua": true,
  "chernigov.ua": true,
  "chernovtsy.ua": true,
  "ck.ua": true,
  "cn.ua": true,
  "co.ua": true,
  "com.ua": true,
  "crimea.ua": true,
  "cv.ua": true,
  "dn.ua": true,
  "dnepropetrovsk.ua": true,
  "donetsk.ua": true,
  "dp.ua": true,
  "edu.ua": true,
  "gov.ua": true,
  "if.ua": true,
  "in.ua": true,
  "ivano-frankivsk.ua": true,
  "kh.ua": true,
  "kharkov.ua": true,
  "kherson.ua": true,
  "khmelnitskiy.ua": true,
  "kiev.ua": true,
  "kirovograd.ua": true,
  "km.ua": true,
  "kr.ua": true,
  "ks.ua": true,
  "kv.ua": true,
  "lg.ua": true,
  "lugansk.ua": true,
  "lutsk.ua": true,
  "lviv.ua": true,
  "me.ua": true,
  "mk.ua": true,
  "net.ua": true,
  "nikolaev.ua": true,
  "od.ua": true,
  "odessa.ua": true,
  "org.ua": true,
  "pl.ua": true,
  "poltava.ua": true,
  "pp.ua": true,
  "rovno.ua": true,
  "rv.ua": true,
  "sebastopol.ua": true,
  "sumy.ua": true,
  "te.ua": true,
  "ternopil.ua": true,
  "uzhgorod.ua": true,
  "vinnica.ua": true,
  "vn.ua": true,
  "zaporizhzhe.ua": true,
  "zhitomir.ua": true,
  "zp.ua": true,
  "zt.ua": true,
  "ac.ug": true,
  "co.ug": true,
  "go.ug": true,
  "ne.ug": true,
  "or.ug": true,
  "org.ug": true,
  "sc.ug": true,
  "ac.uk": true,
  "bl.uk": true,
  "british-library.uk": true,
  "co.uk": true,
  "cym.uk": true,
  "gov.uk": true,
  "govt.uk": true,
  "icnet.uk": true,
  "jet.uk": true,
  "lea.uk": true,
  "ltd.uk": true,
  "me.uk": true,
  "mil.uk": true,
  "mod.uk": true,
  "national-library-scotland.uk": true,
  "nel.uk": true,
  "net.uk": true,
  "nhs.uk": true,
  "nic.uk": true,
  "nls.uk": true,
  "org.uk": true,
  "orgn.uk": true,
  "parliament.uk": true,
  "plc.uk": true,
  "police.uk": true,
  "sch.uk": true,
  "scot.uk": true,
  "soc.uk": true,
  "4fd.us": true,
  "dni.us": true,
  "fed.us": true,
  "isa.us": true,
  "kids.us": true,
  "nsn.us": true,
  "com.uy": true,
  "edu.uy": true,
  "gub.uy": true,
  "mil.uy": true,
  "net.uy": true,
  "org.uy": true,
  "co.ve": true,
  "com.ve": true,
  "edu.ve": true,
  "gob.ve": true,
  "info.ve": true,
  "mil.ve": true,
  "net.ve": true,
  "org.ve": true,
  "web.ve": true,
  "co.vi": true,
  "com.vi": true,
  "k12.vi": true,
  "net.vi": true,
  "org.vi": true,
  "ac.vn": true,
  "biz.vn": true,
  "com.vn": true,
  "edu.vn": true,
  "gov.vn": true,
  "health.vn": true,
  "info.vn": true,
  "int.vn": true,
  "name.vn": true,
  "net.vn": true,
  "org.vn": true,
  "pro.vn": true,
  "co.ye": true,
  "com.ye": true,
  "gov.ye": true,
  "ltd.ye": true,
  "me.ye": true,
  "net.ye": true,
  "org.ye": true,
  "plc.ye": true,
  "ac.yu": true,
  "co.yu": true,
  "edu.yu": true,
  "gov.yu": true,
  "org.yu": true,
  "ac.za": true,
  "agric.za": true,
  "alt.za": true,
  "bourse.za": true,
  "city.za": true,
  "co.za": true,
  "cybernet.za": true,
  "db.za": true,
  "ecape.school.za": true,
  "edu.za": true,
  "fs.school.za": true,
  "gov.za": true,
  "gp.school.za": true,
  "grondar.za": true,
  "iaccess.za": true,
  "imt.za": true,
  "inca.za": true,
  "kzn.school.za": true,
  "landesign.za": true,
  "law.za": true,
  "lp.school.za": true,
  "mil.za": true,
  "mpm.school.za": true,
  "ncape.school.za": true,
  "net.za": true,
  "ngo.za": true,
  "nis.za": true,
  "nom.za": true,
  "nw.school.za": true,
  "olivetti.za": true,
  "org.za": true,
  "pix.za": true,
  "school.za": true,
  "tm.za": true,
  "wcape.school.za": true,
  "web.za": true,
  "ac.zm": true,
  "co.zm": true,
  "com.zm": true,
  "edu.zm": true,
  "gov.zm": true,
  "net.zm": true,
  "org.zm": true,
  "sch.zm": true
}
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-valid-domain/index.js":[function(require,module,exports){
const sldMap = require('./data/sldMap.json')

module.exports = function isValidDomain (value, opts) {
  if (typeof value !== 'string') return false
  if (!(opts instanceof Object)) opts = {}
  value = value.toLowerCase()

  if (value.endsWith('.')) {
    value = value.slice(0, value.length - 1)
  }

  if (value.length > 253) {
    return false
  }

  const validChars = /^([a-z0-9-._*]+)$/g
  if (!validChars.test(value)) {
    return false
  }

  const sldRegex = /(.*)\.(([a-z0-9]+)(\.[a-z0-9]+))/
  const matches = value.match(sldRegex)
  var tld = null
  var labels = null
  if (matches && matches.length > 2) {
    if (sldMap[matches[2]]) {
      tld = matches[2]
      labels = matches[1].split('.')
    }
  }

  if (!labels) {
    labels = value.split('.')
    if (labels.length <= 1) return false

    tld = labels.pop()
    const tldRegex = /^(?:xn--)?(?!^\d+$)[a-z0-9]+$/gi

    if (!tldRegex.test(tld)) return false
  }

  if (opts.subdomain === false && labels.length > 1) return false

  const isValid = labels.every(function (label, index) {
    if (opts.wildcard && index === 0 && label === '*' && labels.length > 1) {
      return true
    }

    let validLabelChars = /^([a-zA-Z0-9-_]+)$/g
    if (index === labels.length - 1) {
      validLabelChars = /^([a-zA-Z0-9-]+)$/g
    }

    const doubleDashCount = (label.match(/--/g) || []).length
    const xnDashCount = (label.match(/xn--/g) || []).length
    if (doubleDashCount !== xnDashCount) {
      return false
    }

    const isValid = (
      validLabelChars.test(label) &&
      label.length < 64 &&
      !label.startsWith('-') &&
      !label.endsWith('-')
    )

    return isValid
  })

  return isValid
}

},{"./data/sldMap.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-valid-domain/data/sldMap.json"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/files.js":[function(require,module,exports){
(function (Buffer){(function (){
const jsesc = require('jsesc')
const sanitize = require('sanitize-filename')
const TypedFastBitSet = require('typedfastbitset')
const { readFile, writeFile } = require('atomically-universal')
const toBuffer = require('typedarray-to-buffer')

const FIELD_SIZE = 4 // bytes

/*
 * ## File format for tarr files
 *
 * Each header field is 4 bytes in size.
 *
 * | offset (bytes) | name    | type     |
 * |----------------|---------|----------|
 * | 0              | version | UInt32LE |
 * | 4              | offset  | UInt32LE |
 * | 8              | count   | UInt32LE |
 * | 12             | (N/A)   | (N/A)    |
 * | 16             | body    | Buffer   |
 *
 * Note that the 4th header field (offset=12) is empty on purpose, to support
 * `new Float64Array(b,start,len)` where `start` must be a multiple of 8
 * when loading in `loadTypedArrayFile`.
 */

function saveTypedArrayFile(filename, version, offset, count, tarr, cb) {
  if (!cb) cb = () => {}

  const dataBuffer = toBuffer(tarr)
  // we try to save an extra 10% so we don't have to immediately grow
  // after loading and adding again
  const saveSize = Math.min(count * 1.1, tarr.length)
  const b = Buffer.alloc(4 * FIELD_SIZE + saveSize * tarr.BYTES_PER_ELEMENT)
  b.writeUInt32LE(version, 0)
  b.writeUInt32LE(offset, FIELD_SIZE)
  b.writeUInt32LE(count, 2 * FIELD_SIZE)
  dataBuffer.copy(b, 4 * FIELD_SIZE)

  writeFile(filename, b)
    .then(() => cb())
    .catch(cb)
}

function loadTypedArrayFile(filename, Type, cb) {
  readFile(filename)
    .then((buf) => {
      const version = buf.readUInt32LE(0)
      const offset = buf.readUInt32LE(FIELD_SIZE)
      const count = buf.readUInt32LE(2 * FIELD_SIZE)
      const body = buf.slice(4 * FIELD_SIZE)

      cb(null, {
        version,
        offset,
        count,
        tarr: new Type(
          body.buffer,
          body.offset,
          body.byteLength / (Type === Float64Array ? 8 : 4)
        ),
      })
    })
    .catch(cb)
}

function saveBitsetFile(filename, version, offset, bitset, cb) {
  bitset.trim()
  saveTypedArrayFile(filename, version, offset, bitset.count, bitset.words, cb)
}

function loadBitsetFile(filename, cb) {
  loadTypedArrayFile(filename, Uint32Array, (err, data) => {
    if (err) cb(err)
    else {
      const { version, offset, count, tarr } = data
      const bitset = new TypedFastBitSet()
      bitset.words = tarr
      bitset.count = count
      cb(null, { version, offset, bitset })
    }
  })
}

function listFilesIDB(dir, cb) {
  const IdbKvStore = require('idb-kv-store')
  const store = new IdbKvStore(dir, { disableBroadcast: true })
  store.keys(cb)
}

function listFilesFS(dir, cb) {
  const fs = require('fs')
  const mkdirp = require('mkdirp')
  mkdirp(dir).then(() => {
    fs.readdir(dir, cb)
  }, cb)
}

function safeFilename(filename) {
  // in general we want to escape wierd characters
  let result = jsesc(filename)
  // sanitize will remove special characters, which means that two
  // indexes might end up with the same name so lets replace those
  // with jsesc escapeEverything values
  result = result.replace(/\./g, 'x2E')
  result = result.replace(/\//g, 'x2F')
  result = result.replace(/\?/g, 'x3F')
  result = result.replace(/\</g, 'x3C')
  result = result.replace(/\>/g, 'x3E')
  result = result.replace(/\:/g, 'x3A')
  result = result.replace(/\*/g, 'x2A')
  result = result.replace(/\|/g, 'x7C')
  // finally sanitize
  return sanitize(result)
}

module.exports = {
  saveTypedArrayFile,
  loadTypedArrayFile,
  saveBitsetFile,
  loadBitsetFile,
  listFilesIDB,
  listFilesFS,
  safeFilename,
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"atomically-universal":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically-universal/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","idb-kv-store":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/idb-kv-store/index.js","jsesc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jsesc/jsesc.js","mkdirp":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/index.js","sanitize-filename":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sanitize-filename/index.js","typedarray-to-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/typedarray-to-buffer/index.js","typedfastbitset":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/typedfastbitset/TypedFastBitSet.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/index.js":[function(require,module,exports){
(function (Buffer){(function (){
const path = require('path')
const bipf = require('bipf')
const push = require('push-stream')
const pull = require('pull-stream')
const toPull = require('push-stream-to-pull-stream')
const pullAsync = require('pull-async')
const TypedFastBitSet = require('typedfastbitset')
const bsb = require('binary-search-bounds')
const multicb = require('multicb')
const debug = require('debug')('jitdb')
const {
  saveTypedArrayFile,
  loadTypedArrayFile,
  saveBitsetFile,
  loadBitsetFile,
  safeFilename,
  listFilesIDB,
  listFilesFS,
} = require('./files')

module.exports = function (log, indexesPath) {
  debug('indexes path', indexesPath)

  let bitsetCache = new WeakMap()
  let sortedCache = { ascending: new WeakMap(), descending: new WeakMap() }
  let cacheOffset = -1

  const indexes = {}
  let isReady = false
  let waiting = []

  loadIndexes(() => {
    debug('loaded indexes', Object.keys(indexes))

    if (!indexes['seq']) {
      indexes['seq'] = {
        offset: -1,
        count: 0,
        tarr: new Uint32Array(16 * 1000),
      }
    }
    if (!indexes['timestamp']) {
      indexes['timestamp'] = {
        offset: -1,
        count: 0,
        tarr: new Float64Array(16 * 1000),
      }
    }
    if (!indexes['sequence']) {
      indexes['sequence'] = {
        offset: -1,
        count: 0,
        tarr: new Uint32Array(16 * 1000),
      }
    }

    isReady = true
    for (var i = 0; i < waiting.length; ++i) waiting[i]()
    waiting = []
  })

  function onReady(cb) {
    if (isReady) cb()
    else waiting.push(cb)
  }

  const bTimestamp = Buffer.from('timestamp')
  const bSequence = Buffer.from('sequence')
  const bValue = Buffer.from('value')

  // FIXME: handle the errors in these callbacks
  function loadIndexes(cb) {
    function parseIndexes(err, files) {
      push(
        push.values(files),
        push.asyncMap((file, cb) => {
          const indexName = path.parse(file).name
          if (file === 'seq.index') {
            loadTypedArrayFile(
              path.join(indexesPath, file),
              Uint32Array,
              (e, idx) => {
                indexes[indexName] = idx
                cb()
              }
            )
          } else if (file === 'timestamp.index') {
            loadTypedArrayFile(
              path.join(indexesPath, file),
              Float64Array,
              (e, idx) => {
                indexes[indexName] = idx
                cb()
              }
            )
          } else if (file === 'sequence.index') {
            loadTypedArrayFile(
              path.join(indexesPath, file),
              Uint32Array,
              (e, idx) => {
                indexes[indexName] = idx
                cb()
              }
            )
          } else if (file.endsWith('.32prefix')) {
            // Don't load it yet, just tag it `lazy`
            indexes[indexName] = {
              offset: -1,
              count: 0,
              tarr: new Uint32Array(16 * 1000),
              lazy: true,
              prefix: 32,
              filepath: path.join(indexesPath, file),
            }
            cb()
          } else if (file.endsWith('.index')) {
            // Don't load it yet, just tag it `lazy`
            indexes[indexName] = {
              offset: 0,
              bitset: new TypedFastBitSet(),
              lazy: true,
              filepath: path.join(indexesPath, file),
            }
            cb()
          } else cb()
        }),
        push.collect(cb)
      )
    }

    if (typeof window !== 'undefined') {
      // browser
      listFilesIDB(indexesPath, parseIndexes)
    } else {
      // node.js
      listFilesFS(indexesPath, parseIndexes)
    }
  }

  function updateCacheWithLog() {
    if (log.since.value > cacheOffset) {
      cacheOffset = log.since.value
      bitsetCache = new WeakMap()
      sortedCache.ascending = new WeakMap()
      sortedCache.descending = new WeakMap()
    }
  }

  function saveCoreIndex(name, coreIndex, count) {
    if (coreIndex.offset < 0) return
    debug('saving core index: %s', name)
    const filename = path.join(indexesPath, name + '.index')
    saveTypedArrayFile(
      filename,
      coreIndex.version || 1,
      coreIndex.offset,
      count,
      coreIndex.tarr
    )
  }

  function saveIndex(name, index, cb) {
    if (index.offset < 0 || index.bitset.size() === 0) return
    debug('saving index: %s', name)
    const filename = path.join(indexesPath, name + '.index')
    saveBitsetFile(filename, index.version || 1, index.offset, index.bitset, cb)
  }

  function savePrefixIndex(name, prefixIndex, count, cb) {
    if (prefixIndex.offset < 0) return
    debug('saving prefix index: %s', name)
    const num = prefixIndex.prefix
    const filename = path.join(indexesPath, name + `.${num}prefix`)
    saveTypedArrayFile(
      filename,
      prefixIndex.version || 1,
      prefixIndex.offset,
      count,
      prefixIndex.tarr,
      cb
    )
  }

  function growTarrIndex(index, Type) {
    debug('growing index')
    const newArray = new Type(index.tarr.length * 2)
    newArray.set(index.tarr)
    index.tarr = newArray
  }

  function updateSeqIndex(seq, offset) {
    if (seq > indexes['seq'].count - 1) {
      if (seq > indexes['seq'].tarr.length)
        growTarrIndex(indexes['seq'], Uint32Array)

      indexes['seq'].offset = offset
      indexes['seq'].tarr[seq] = offset
      indexes['seq'].count = seq + 1
      return true
    }
  }

  function updateTimestampIndex(seq, offset, buffer) {
    if (seq > indexes['timestamp'].count - 1) {
      if (seq > indexes['timestamp'].tarr.length)
        growTarrIndex(indexes['timestamp'], Float64Array)

      indexes['timestamp'].offset = offset

      var p = 0 // note you pass in p!
      p = bipf.seekKey(buffer, p, bTimestamp)
      const arrivalTimestamp = bipf.decode(buffer, p)
      p = 0
      p = bipf.seekKey(buffer, p, bValue)
      p = bipf.seekKey(buffer, p, bTimestamp)
      const declaredTimestamp = bipf.decode(buffer, p)
      const timestamp = Math.min(arrivalTimestamp, declaredTimestamp)

      indexes['timestamp'].tarr[seq] = timestamp
      indexes['timestamp'].count = seq + 1
      return true
    }
  }

  function updateSequenceIndex(seq, offset, buffer) {
    if (seq > indexes['sequence'].count - 1) {
      if (seq > indexes['sequence'].tarr.length)
        growTarrIndex(indexes['sequence'], Uint32Array)

      indexes['sequence'].offset = offset

      var p = 0 // note you pass in p!
      p = bipf.seekKey(buffer, p, bValue)
      p = bipf.seekKey(buffer, p, bSequence)

      indexes['sequence'].tarr[seq] = bipf.decode(buffer, p)
      indexes['sequence'].count = seq + 1
      return true
    }
  }

  function checkEqual(opData, buffer) {
    const fieldStart = opData.seek(buffer)
    if (!opData.value) return fieldStart === -1
    else if (
      ~fieldStart &&
      bipf.compareString(buffer, fieldStart, opData.value) === 0
    )
      return true
    else return false
  }

  function checkIncludes(opData, buffer) {
    const fieldStart = opData.seek(buffer)
    if (!~fieldStart) return false
    const type = bipf.getEncodedType(buffer, fieldStart)
    if (type === bipf.types.string) {
      return checkEqual(opData, buffer)
    } else if (type === bipf.types.array) {
      let found = false
      bipf.iterate(buffer, fieldStart, (_, itemStart) => {
        const valueStart = opData.pluck
          ? opData.pluck(buffer, itemStart)
          : itemStart
        if (bipf.compareString(buffer, valueStart, opData.value) === 0) {
          found = true
          return true // abort the bipf.iterate
        }
      })
      return found
    } else {
      return false
    }
  }

  function safeReadUint32(buf) {
    if (buf.length < 4) {
      const bigger = Buffer.alloc(4)
      buf.copy(bigger)
      return bigger.readUInt32LE(0)
    } else {
      return buf.readUInt32LE(0)
    }
  }

  function updatePrefixIndex(opData, index, buffer, seq, offset) {
    if (seq > index.count - 1) {
      if (seq > index.tarr.length) growTarrIndex(index, Uint32Array)

      const fieldStart = opData.seek(buffer)
      if (fieldStart) {
        const buf = bipf.slice(buffer, fieldStart)
        index.tarr[seq] = buf.length ? safeReadUint32(buf) : 0
      } else {
        index.tarr[seq] = 0
      }
      index.offset = offset
      index.count = seq + 1
    }
  }

  function updateIndexValue(op, index, buffer, seq) {
    if (op.type === 'EQUAL' && checkEqual(op.data, buffer))
      index.bitset.add(seq)
    else if (op.type === 'INCLUDES' && checkIncludes(op.data, buffer))
      index.bitset.add(seq)
  }

  function updateAllIndexValue(opData, newIndexes, buffer, seq) {
    const fieldStart = opData.seek(buffer)
    const value = bipf.decode(buffer, fieldStart)
    const indexName = safeFilename(opData.indexType + '_' + value)

    if (!newIndexes[indexName]) {
      newIndexes[indexName] = {
        offset: 0,
        bitset: new TypedFastBitSet(),
      }
    }

    newIndexes[indexName].bitset.add(seq)
  }

  function updateIndex(op, cb) {
    const index = indexes[op.data.indexName]

    // find the next possible seq
    let seq = 0
    if (index.offset !== -1) {
      const { tarr } = indexes['seq']
      const indexOffset = index.offset
      for (const len = tarr.length; seq < len; ++seq)
        if (tarr[seq] === indexOffset) {
          seq++
          break
        }
    }

    let updatedSeqIndex = false
    let updatedTimestampIndex = false
    let updatedSequenceIndex = false
    const start = Date.now()

    const indexNeedsUpdate =
      op.data.indexName !== 'sequence' &&
      op.data.indexName !== 'timestamp' &&
      op.data.indexName !== 'seq'

    log.stream({ gt: index.offset }).pipe({
      paused: false,
      write: function (record) {
        const offset = record.offset
        const buffer = record.value

        if (updateSeqIndex(seq, offset)) updatedSeqIndex = true

        if (!buffer) {
          // deleted
          seq++
          return
        }

        if (updateTimestampIndex(seq, offset, buffer))
          updatedTimestampIndex = true

        if (updateSequenceIndex(seq, offset, buffer))
          updatedSequenceIndex = true

        if (indexNeedsUpdate) {
          if (op.data.prefix)
            updatePrefixIndex(op.data, index, buffer, seq, offset)
          else updateIndexValue(op, index, buffer, seq)
        }

        seq++
      },
      end: () => {
        const count = seq // incremented at end
        debug(`time: ${Date.now() - start}ms, total items: ${count}`)

        if (updatedSeqIndex) saveCoreIndex('seq', indexes['seq'], count)

        if (updatedTimestampIndex)
          saveCoreIndex('timestamp', indexes['timestamp'], count)

        if (updatedSequenceIndex)
          saveCoreIndex('sequence', indexes['sequence'], count)

        index.offset = indexes['seq'].offset
        if (indexNeedsUpdate) {
          if (index.prefix) savePrefixIndex(op.data.indexName, index, count)
          else saveIndex(op.data.indexName, index)
        }

        cb()
      },
    })
  }

  function createIndexes(opsMissingIndexes, cb) {
    const newIndexes = {}
    opsMissingIndexes.forEach((op) => {
      if (op.data.prefix)
        newIndexes[op.data.indexName] = {
          offset: 0,
          count: 0,
          tarr: new Uint32Array(16 * 1000),
          prefix: typeof op.data.prefix === 'number' ? op.data.prefix : 32,
        }
      else
        newIndexes[op.data.indexName] = {
          offset: 0,
          bitset: new TypedFastBitSet(),
        }
    })

    let seq = 0

    let updatedSeqIndex = false
    let updatedTimestampIndex = false
    let updatedSequenceIndex = false
    const start = Date.now()

    log.stream({}).pipe({
      paused: false,
      write: function (record) {
        const offset = record.offset
        const buffer = record.value

        if (updateSeqIndex(seq, offset)) updatedSeqIndex = true

        if (!buffer) {
          // deleted
          seq++
          return
        }

        if (updateTimestampIndex(seq, offset, buffer))
          updatedTimestampIndex = true

        if (updateSequenceIndex(seq, offset, buffer))
          updatedSequenceIndex = true

        opsMissingIndexes.forEach((op) => {
          if (op.data.prefix)
            updatePrefixIndex(
              op.data,
              newIndexes[op.data.indexName],
              buffer,
              seq,
              offset
            )
          else if (op.data.indexAll)
            updateAllIndexValue(op.data, newIndexes, buffer, seq)
          else updateIndexValue(op, newIndexes[op.data.indexName], buffer, seq)
        })

        seq++
      },
      end: () => {
        const count = seq // incremented at end
        debug(`time: ${Date.now() - start}ms, total items: ${count}`)

        if (updatedSeqIndex) saveCoreIndex('seq', indexes['seq'], count)

        if (updatedTimestampIndex)
          saveCoreIndex('timestamp', indexes['timestamp'], count)

        if (updatedSequenceIndex)
          saveCoreIndex('sequence', indexes['sequence'], count)

        for (var indexName in newIndexes) {
          const index = (indexes[indexName] = newIndexes[indexName])
          index.offset = indexes['seq'].offset
          if (index.prefix) savePrefixIndex(indexName, index, count)
          else saveIndex(indexName, index)
        }

        cb()
      },
    })
  }

  function loadLazyIndex(indexName, cb) {
    debug('lazy loading %s', indexName)
    let index = indexes[indexName]
    if (index.prefix) {
      loadTypedArrayFile(index.filepath, Uint32Array, (err, data) => {
        if (err) return cb(err)
        const { version, offset, count, tarr } = data
        index.version = version
        index.offset = offset
        index.count = count
        index.tarr = tarr
        index.lazy = false
        cb()
      })
    } else {
      loadBitsetFile(index.filepath, (err, data) => {
        if (err) return cb(err)
        const { version, offset, bitset } = data
        index.version = version
        index.offset = offset
        index.bitset = bitset
        index.lazy = false
        cb()
      })
    }
  }

  function loadLazyIndexes(indexNames, cb) {
    push(
      push.values(indexNames),
      push.asyncMap(loadLazyIndex),
      push.collect(cb)
    )
  }

  function ensureIndexSync(op, cb) {
    if (log.since.value > indexes[op.data.indexName].offset) {
      updateIndex(op, cb)
    } else {
      debug('ensureIndexSync %s is already synced', op.data.indexName)
      cb()
    }
  }

  function ensureSeqIndexSync(cb) {
    ensureIndexSync({ data: { indexName: 'seq' } }, cb)
  }

  function filterIndex(op, filterCheck, cb) {
    ensureIndexSync(op, () => {
      if (op.data.indexName === 'sequence') {
        const bitset = new TypedFastBitSet()
        const { tarr, count } = indexes['sequence']
        for (var i = 0; i < count; ++i) {
          if (filterCheck(tarr[i], op)) bitset.add(i)
        }
        cb(bitset)
      } else if (op.data.indexName === 'timestamp') {
        const bitset = new TypedFastBitSet()
        const { tarr, count } = indexes['timestamp']
        for (var i = 0; i < count; ++i) {
          if (filterCheck(tarr[i], op)) bitset.add(i)
        }
        cb(bitset)
      } else {
        debug('filterIndex() is unsupported for %s', op.data.indexName)
      }
    })
  }

  function getFullBitset(cb) {
    ensureIndexSync({ data: { indexName: 'sequence' } }, () => {
      const bitset = new TypedFastBitSet()
      const { count } = indexes['sequence']
      for (var i = 0; i < count; ++i) bitset.add(i)
      cb(bitset)
    })
  }

  function getOffsetsBitset(opOffsets, cb) {
    const seqs = []
    opOffsets.sort((x, y) => x - y)
    const opOffsetsLen = opOffsets.length
    const { tarr } = indexes['seq']
    for (var s = 0, len = tarr.length; s < len; ++s) {
      if (bsb.eq(opOffsets, tarr[s]) !== -1) seqs.push(s)
      if (seqs.length === opOffsetsLen) break
    }
    cb(new TypedFastBitSet(seqs))
  }

  function matchAgainstPrefix(op, prefixIndex, cb) {
    const target = op.data.value
    const targetPrefix = target ? safeReadUint32(target) : 0
    const count = prefixIndex.count
    const tarr = prefixIndex.tarr
    const bitset = new TypedFastBitSet()
    const done = multicb({ pluck: 1 })
    for (let o = 0; o < count; ++o) {
      if (tarr[o] === targetPrefix) {
        bitset.add(o)
        getRecord(o, done())
      }
    }
    done((err, recs) => {
      // FIXME: handle error better, this cb() should support 2 args
      if (err) return console.error(err)
      const seek = op.data.seek
      for (let i = 0, len = recs.length; i < len; ++i) {
        const { value, seq } = recs[i]
        if (!value) {
          // deleted
          bitset.remove(seq)
          continue
        }
        const fieldStart = seek(value)
        const candidate = bipf.slice(value, fieldStart)
        if (target) {
          if (Buffer.compare(candidate, target)) bitset.remove(seq)
        } else {
          if (~fieldStart) bitset.remove(seq)
        }
      }
      cb(bitset)
    })
  }

  function nestLargeOpsArray(ops, type) {
    let op = ops[0]
    ops.slice(1).forEach((rest) => {
      op = {
        type,
        data: [op, rest],
      }
    })
    return op
  }

  function getBitsetForOperation(op, cb) {
    if (op.type === 'EQUAL' || op.type === 'INCLUDES') {
      if (op.data.prefix) {
        ensureIndexSync(op, () => {
          matchAgainstPrefix(op, indexes[op.data.indexName], cb)
        })
      } else {
        ensureIndexSync(op, () => {
          cb(indexes[op.data.indexName].bitset)
        })
      }
    } else if (op.type === 'GT') {
      filterIndex(op, (num, op) => num > op.data.value, cb)
    } else if (op.type === 'GTE') {
      filterIndex(op, (num, op) => num >= op.data.value, cb)
    } else if (op.type === 'LT') {
      filterIndex(op, (num, op) => num < op.data.value, cb)
    } else if (op.type === 'LTE') {
      filterIndex(op, (num, op) => num <= op.data.value, cb)
    } else if (op.type === 'OFFSETS') {
      ensureSeqIndexSync(() => {
        getOffsetsBitset(op.offsets, cb)
      })
    } else if (op.type === 'SEQS') {
      ensureSeqIndexSync(() => {
        cb(new TypedFastBitSet(op.seqs))
      })
    } else if (op.type === 'LIVESEQS') {
      cb(new TypedFastBitSet())
    } else if (op.type === 'AND') {
      if (op.data.length > 2) op = nestLargeOpsArray(op.data, 'AND')

      getBitsetForOperation(op.data[0], (op1) => {
        getBitsetForOperation(op.data[1], (op2) => {
          cb(op1.new_intersection(op2))
        })
      })
    } else if (op.type === 'OR') {
      if (op.data.length > 2) op = nestLargeOpsArray(op.data, 'OR')

      getBitsetForOperation(op.data[0], (op1) => {
        getBitsetForOperation(op.data[1], (op2) => {
          cb(op1.new_union(op2))
        })
      })
    } else if (!op.type) {
      // to support `query(fromDB(jitdb), toCallback(cb))`
      getFullBitset(cb)
    } else console.error('Unknown type', op)
  }

  function executeOperation(operation, cb) {
    updateCacheWithLog()
    if (bitsetCache.has(operation)) return cb(bitsetCache.get(operation))

    const opsMissingIndexes = []
    const lazyIndexes = []

    function detectMissingAndLazyIndexes(ops) {
      ops.forEach((op) => {
        if (op.type === 'EQUAL' || op.type === 'INCLUDES') {
          const indexName = op.data.indexName
          if (!indexes[indexName]) opsMissingIndexes.push(op)
          else if (indexes[indexName].lazy) lazyIndexes.push(indexName)
        } else if (op.type === 'AND' || op.type === 'OR')
          detectMissingAndLazyIndexes(op.data)
        else if (
          op.type === 'SEQS' ||
          op.type === 'LIVESEQS' ||
          op.type === 'OFFSETS' ||
          !op.type // e.g. query(fromDB, toCallback), or empty deferred()
        );
        else debug('Unknown operator type: ' + op.type)
      })
    }

    function getBitset() {
      getBitsetForOperation(operation, (bitset) => {
        bitsetCache.set(operation, bitset)
        cb(bitset)
      })
    }

    function createMissingIndexes() {
      if (opsMissingIndexes.length > 0)
        createIndexes(opsMissingIndexes, getBitset)
      else getBitset()
    }

    detectMissingAndLazyIndexes([operation])

    if (opsMissingIndexes.length > 0)
      debug('missing indexes: %o', opsMissingIndexes)

    if (lazyIndexes.length > 0)
      loadLazyIndexes(lazyIndexes, createMissingIndexes)
    else createMissingIndexes()
  }

  function isValueOk(ops, value, isOr) {
    for (var i = 0; i < ops.length; ++i) {
      const op = ops[i]
      let ok = false
      if (op.type === 'EQUAL') ok = checkEqual(op.data, value)
      else if (op.type === 'INCLUDES') ok = checkIncludes(op.data, value)
      else if (op.type === 'AND') ok = isValueOk(op.data, value, false)
      else if (op.type === 'OR') ok = isValueOk(op.data, value, true)
      else if (op.type === 'LIVESEQS') ok = true
      else if (!op.type) ok = true

      if (ok && isOr) return true
      else if (!ok && !isOr) return false
    }

    if (isOr) return false
    else return true
  }

  function getMessage(seq, cb) {
    const offset = indexes['seq'].tarr[seq]
    log.get(offset, (err, value) => {
      if (err && err.code === 'flumelog:deleted') cb()
      else cb(err, bipf.decode(value, 0))
    })
  }

  function getRecord(seq, cb) {
    const offset = indexes['seq'].tarr[seq]
    log.get(offset, (err, value) => {
      if (err && err.code === 'flumelog:deleted') cb()
      else cb(err, { offset, value, seq })
    })
  }

  function sortedByTimestamp(bitset, descending) {
    updateCacheWithLog()
    const order = descending ? 'descending' : 'ascending'
    if (sortedCache[order].has(bitset)) return sortedCache[order].get(bitset)
    const timestamped = bitset.array().map((s) => {
      return {
        seq: s,
        timestamp: indexes['timestamp'].tarr[s],
      }
    })
    const sorted = timestamped.sort((a, b) => {
      if (descending) return b.timestamp - a.timestamp
      else return a.timestamp - b.timestamp
    })
    sortedCache[order].set(bitset, sorted)
    return sorted
  }

  function getMessagesFromBitsetSlice(
    bitset,
    seq,
    limit,
    descending,
    onlyOffset,
    cb
  ) {
    seq = seq || 0
    const start = Date.now()

    const sorted = sortedByTimestamp(bitset, descending)
    const sliced =
      limit != null
        ? sorted.slice(seq, seq + limit)
        : seq > 0
        ? sorted.slice(seq)
        : sorted

    push(
      push.values(sliced),
      push.asyncMap(({ seq }, cb) => {
        if (onlyOffset) cb(null, indexes['seq'].tarr[seq])
        else getMessage(seq, cb)
      }),
      push.filter((x) => (onlyOffset ? true : x)), // removes deleted messages
      push.collect((err, results) => {
        cb(err, {
          results: results,
          total: sorted.length,
          duration: Date.now() - start,
        })
      })
    )
  }

  function paginate(operation, seq, limit, descending, onlyOffset, cb) {
    onReady(() => {
      executeOperation(operation, (bitset) => {
        getMessagesFromBitsetSlice(
          bitset,
          seq,
          limit,
          descending,
          onlyOffset,
          (err, answer) => {
            if (err) cb(err)
            else {
              debug(
                `paginate(): ${answer.duration}ms, total messages: ${answer.total}`
              )
              cb(err, answer)
            }
          }
        )
      })
    })
  }

  function all(operation, seq, descending, onlyOffset, cb) {
    onReady(() => {
      executeOperation(operation, (bitset) => {
        getMessagesFromBitsetSlice(
          bitset,
          seq,
          null,
          descending,
          onlyOffset,
          (err, answer) => {
            if (err) cb(err)
            else {
              debug(
                `all(): ${answer.duration}ms, total messages: ${answer.total}`
              )
              cb(err, answer.results)
            }
          }
        )
      })
    })
  }

  // live will return new messages as they enter the log
  // can be combined with a normal all or paginate first
  function live(op) {
    return pull(
      pullAsync((cb) =>
        onReady(() => {
          executeOperation(op, (bitset) => {
            cb()
          })
        })
      ),
      pull.map(() => {
        let offset = -1
        let seqStream

        function detectOffsetAndSeqStream(ops) {
          ops.forEach((op) => {
            if (op.type === 'EQUAL' || op.type === 'INCLUDES') {
              if (!indexes[op.data.indexName]) offset = -1
              else offset = indexes[op.data.indexName].offset
            } else if (op.type === 'AND' || op.type === 'OR') {
              detectOffsetAndSeqStream(op.data)
            } else if (op.type === 'LIVESEQS') {
              if (seqStream)
                throw new Error('Only one seq stream in live supported')
              seqStream = op.stream
            }
          })
        }

        detectOffsetAndSeqStream([op])

        // There are two cases here:
        // - op contains a live seq stream, in which case we let the
        //   seq stream drive new values
        // - op doesn't, in which we let the log stream drive new values

        let recordStream
        if (seqStream) {
          recordStream = pull(
            seqStream,
            pull.asyncMap((o, cb) => {
              ensureSeqIndexSync(() => {
                getRecord(o, cb)
              })
            })
          )
        } else {
          const opts =
            offset === -1
              ? { live: true, gt: indexes['seq'].offset }
              : { live: true, gt: offset }
          recordStream = toPull(log.stream(opts))
        }

        return recordStream
      }),
      pull.flatten(),
      pull.filter((record) => isValueOk([op], record.value)),
      pull.map((record) => bipf.decode(record.value, 0))
    )
  }

  return {
    onReady,
    paginate,
    all,
    live,

    // testing
    indexes,
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./files":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/files.js","binary-search-bounds":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/binary-search-bounds/search-bounds.js","bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","multicb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multicb/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js","pull-async":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-async/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","push-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/index.js","push-stream-to-pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/index.js","typedfastbitset":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/typedfastbitset/TypedFastBitSet.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/operators.js":[function(require,module,exports){
(function (Buffer){(function (){
const bipf = require('bipf')
const traverse = require('traverse')
const promisify = require('promisify-4loc')
const pull = require('pull-stream')
const pullAsync = require('pull-async')
const pullAwaitable = require('pull-awaitable')
const cat = require('pull-cat')
const { safeFilename } = require('./files')

function query(...cbs) {
  let res = cbs[0]
  for (let i = 1, n = cbs.length; i < n; i++) res = cbs[i](res)
  return res
}

function fromDB(db) {
  return {
    meta: { db },
  }
}

function toBufferOrFalsy(value) {
  if (!value) return value
  return Buffer.isBuffer(value) ? value : Buffer.from(value)
}

function seqs(values) {
  return {
    type: 'SEQS',
    seqs: values,
  }
}

function liveSeqs(pullStream) {
  return {
    type: 'LIVESEQS',
    stream: pullStream,
  }
}

function offsets(values) {
  return {
    type: 'OFFSETS',
    offsets: values,
  }
}

function seekFromDesc(desc) {
  const keys = desc.split('.')
  // The 2nd arg `start` is to support plucks too
  return (buffer, start = 0) => {
    var p = start
    for (let key of keys) {
      p = bipf.seekKey(buffer, p, Buffer.from(key))
      if (!~p) return void 0
    }
    return p
  }
}

function slowEqual(seekDesc, target, opts) {
  opts = opts || {}
  const seek = seekFromDesc(seekDesc)
  const value = toBufferOrFalsy(target)
  const valueName = !value ? '' : value.toString()
  const indexType = seekDesc.replace(/\./g, '_')
  const indexName = opts.prefix
    ? safeFilename(indexType)
    : safeFilename(indexType + '_' + valueName)
  return {
    type: 'EQUAL',
    data: {
      seek,
      value,
      indexType,
      indexName,
      indexAll: opts.indexAll,
      prefix: opts.prefix,
    },
  }
}

function equal(seek, target, opts) {
  opts = opts || {}
  if (!opts.indexType)
    throw new Error('equal() operator needs an indexType in the 3rd arg')
  const value = toBufferOrFalsy(target)
  const valueName = !value ? '' : value.toString()
  const indexType = opts.indexType
  const indexName = opts.prefix
    ? safeFilename(indexType)
    : safeFilename(indexType + '_' + valueName)
  return {
    type: 'EQUAL',
    data: {
      seek,
      value,
      indexType,
      indexName,
      indexAll: opts.indexAll,
      prefix: opts.prefix,
    },
  }
}

function slowIncludes(seekDesc, target, opts) {
  opts = opts || {}
  const seek = seekFromDesc(seekDesc)
  const value = toBufferOrFalsy(target)
  if (!value) throw new Error('slowIncludes() 2nd arg needs to be truthy')
  const valueName = value.toString()
  const indexType = seekDesc.replace(/\./g, '_')
  const indexName = safeFilename(indexType + '_' + valueName)
  const pluck =
    opts.pluck && typeof opts.pluck === 'string'
      ? seekFromDesc(opts.pluck)
      : opts.pluck
  return {
    type: 'INCLUDES',
    data: {
      seek,
      value,
      indexType,
      indexName,
      indexAll: opts.indexAll,
      pluck,
    },
  }
}

function includes(seek, target, opts) {
  opts = opts || {}
  if (!opts.indexType)
    throw new Error('includes() operator needs an indexType in the 3rd arg')
  const value = toBufferOrFalsy(target)
  if (!value) throw new Error('includes() 2nd arg needs to be truthy')
  const valueName = value.toString()
  const indexType = opts.indexType
  const indexName = safeFilename(indexType + '_' + valueName)
  return {
    type: 'INCLUDES',
    data: {
      seek,
      value,
      indexType,
      indexName,
      indexAll: opts.indexAll,
      pluck: opts.pluck,
    },
  }
}

function gt(value, indexName) {
  if (typeof value !== 'number') throw new Error('gt() needs a number arg')
  return {
    type: 'GT',
    data: {
      value,
      indexName,
    },
  }
}

function gte(value, indexName) {
  if (typeof value !== 'number') throw new Error('gte() needs a number arg')
  return {
    type: 'GTE',
    data: {
      value,
      indexName,
    },
  }
}

function lt(value, indexName) {
  if (typeof value !== 'number') throw new Error('lt() needs a number arg')
  return {
    type: 'LT',
    data: {
      value,
      indexName,
    },
  }
}

function lte(value, indexName) {
  if (typeof value !== 'number') throw new Error('lte() needs a number arg')
  return {
    type: 'LTE',
    data: {
      value,
      indexName,
    },
  }
}

function deferred(task) {
  return {
    type: 'DEFERRED',
    task,
  }
}

function debug() {
  return (ops) => {
    const meta = JSON.stringify(ops.meta, (key, val) =>
      key === 'db' ? void 0 : val
    )
    console.log(
      'debug',
      JSON.stringify(
        ops,
        (key, val) => {
          if (key === 'meta') return void 0
          else if (key === 'task' && typeof val === 'function')
            return '[Function]'
          else if (key === 'value' && val.type === 'Buffer')
            return Buffer.from(val.data).toString()
          else return val
        },
        2
      ),
      meta === '{}' ? '' : 'meta: ' + meta
    )
    return ops
  }
}

function copyMeta(orig, dest) {
  if (orig.meta) {
    dest.meta = orig.meta
  }
}

function updateMeta(orig, key, value) {
  const res = Object.assign({}, orig)
  res.meta[key] = value
  return res
}

function extractMeta(orig) {
  const meta = orig.meta
  return meta
}

function and(...args) {
  const rhs = args.map((arg) => (typeof arg === 'function' ? arg() : arg))
  return (ops) => {
    const res =
      ops && ops.type
        ? {
            type: 'AND',
            data: [ops, ...rhs],
          }
        : rhs.length > 1
        ? {
            type: 'AND',
            data: rhs,
          }
        : rhs[0]
    if (ops) copyMeta(ops, res)
    return res
  }
}

function or(...args) {
  const rhs = args.map((arg) => (typeof arg === 'function' ? arg() : arg))
  return (ops) => {
    const res =
      ops && ops.type
        ? {
            type: 'OR',
            data: [ops, ...rhs],
          }
        : rhs.length > 1
        ? {
            type: 'OR',
            data: rhs,
          }
        : rhs[0]
    if (ops) copyMeta(ops, res)
    return res
  }
}

function live(opts) {
  if (opts && opts.old) return (ops) => updateMeta(ops, 'live', 'liveAndOld')
  else return (ops) => updateMeta(ops, 'live', 'liveOnly')
}

function descending() {
  return (ops) => updateMeta(ops, 'descending', true)
}

function startFrom(seq) {
  return (ops) => updateMeta(ops, 'seq', seq)
}

function paginate(pageSize) {
  return (ops) => updateMeta(ops, 'pageSize', pageSize)
}

async function executeDeferredOps(ops, meta) {
  // Collect all deferred tasks and their object-traversal paths
  const allDeferred = []
  traverse.forEach(ops, function (val) {
    if (!val) return
    // this.block() means don't traverse inside these, they won't have DEFERRED
    if (this.key === 'meta' && val.db) return this.block()
    if (val.type === 'DEFERRED' && val.task) allDeferred.push([this.path, val])
    if (!(Array.isArray(val) || val.type === 'AND' || val.type === 'OR')) {
      this.block()
    }
  })
  if (allDeferred.length === 0) return ops

  // Execute all deferred tasks and collect the results (and the paths)
  const allResults = await Promise.all(
    allDeferred.map(([path, obj]) =>
      promisify(obj.task)(meta).then((result) => [path, result || {}])
    )
  )

  // Replace all deferreds with their respective results
  allResults.forEach(([path, result]) => {
    result.meta = meta
    if (path.length === 0) ops = result
    else traverse.set(ops, path, result)
  })

  return ops
}

function toCallback(cb) {
  return (rawOps) => {
    const meta = extractMeta(rawOps)
    executeDeferredOps(rawOps, meta)
      .then((ops) => {
        const seq = meta.seq || 0
        if (meta.pageSize)
          meta.db.paginate(ops, seq, meta.pageSize, meta.descending, false, cb)
        else meta.db.all(ops, seq, meta.descending, false, cb)
      })
      .catch((err) => {
        cb(err)
      })
  }
}

function toPromise() {
  return (rawOps) => {
    return promisify((cb) => toCallback(cb)(rawOps))()
  }
}

function toPullStream() {
  return (rawOps) => {
    const meta = extractMeta(rawOps)

    function paginateStream(ops) {
      let seq = meta.seq || 0
      let total = Infinity
      const limit = meta.pageSize || 1
      return function readable(end, cb) {
        if (end) return cb(end)
        if (seq >= total) return cb(true)
        meta.db.paginate(
          ops,
          seq,
          limit,
          meta.descending,
          false,
          (err, answer) => {
            if (err) return cb(err)
            else if (answer.total === 0) cb(true)
            else {
              total = answer.total
              seq += limit
              cb(null, !meta.pageSize ? answer.results[0] : answer.results)
            }
          }
        )
      }
    }

    return pull(
      pullAsync((cb) => {
        executeDeferredOps(rawOps, meta).then(
          (ops) => cb(null, ops),
          (err) => cb(err)
        )
      }),
      pull.map((ops) => {
        if (meta.live === 'liveOnly') return meta.db.live(ops)
        else if (meta.live === 'liveAndOld')
          return cat([paginateStream(ops), meta.db.live(ops)])
        else return paginateStream(ops)
      }),
      pull.flatten()
    )
  }
}

// `async function*` supported in Node 10+ and browsers (except IE11)
function toAsyncIter() {
  return async function* (rawOps) {
    const ps = toPullStream()(rawOps)
    for await (let x of pullAwaitable(ps)) yield x
  }
}

module.exports = {
  fromDB,
  query,

  live,
  slowEqual,
  equal,
  slowIncludes,
  includes,
  gt,
  gte,
  lt,
  lte,
  and,
  or,
  deferred,
  liveSeqs,

  seqs,
  offsets,

  descending,
  startFrom,
  paginate,
  toCallback,
  toPullStream,
  toPromise,
  toAsyncIter,

  debug,
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./files":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/files.js","bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","promisify-4loc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisify-4loc/index.js","pull-async":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-async/index.js","pull-awaitable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-awaitable/index.js","pull-cat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cat/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","traverse":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/traverse/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jsesc/jsesc.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict';

const object = {};
const hasOwnProperty = object.hasOwnProperty;
const forOwn = (object, callback) => {
	for (const key in object) {
		if (hasOwnProperty.call(object, key)) {
			callback(key, object[key]);
		}
	}
};

const extend = (destination, source) => {
	if (!source) {
		return destination;
	}
	forOwn(source, (key, value) => {
		destination[key] = value;
	});
	return destination;
};

const forEach = (array, callback) => {
	const length = array.length;
	let index = -1;
	while (++index < length) {
		callback(array[index]);
	}
};

const fourHexEscape = (hex) => {
	return '\\u' + ('0000' + hex).slice(-4);
}

const hexadecimal = (code, lowercase) => {
	let hexadecimal = code.toString(16);
	if (lowercase) return hexadecimal;
	return hexadecimal.toUpperCase();
};

const toString = object.toString;
const isArray = Array.isArray;
const isBuffer = (value) => {
	return typeof Buffer === 'function' && Buffer.isBuffer(value);
};
const isObject = (value) => {
	// This is a very simple check, but it’s good enough for what we need.
	return toString.call(value) == '[object Object]';
};
const isString = (value) => {
	return typeof value == 'string' ||
		toString.call(value) == '[object String]';
};
const isNumber = (value) => {
	return typeof value == 'number' ||
		toString.call(value) == '[object Number]';
};
const isFunction = (value) => {
	return typeof value == 'function';
};
const isMap = (value) => {
	return toString.call(value) == '[object Map]';
};
const isSet = (value) => {
	return toString.call(value) == '[object Set]';
};

/*--------------------------------------------------------------------------*/

// https://mathiasbynens.be/notes/javascript-escapes#single
const singleEscapes = {
	'\\': '\\\\',
	'\b': '\\b',
	'\f': '\\f',
	'\n': '\\n',
	'\r': '\\r',
	'\t': '\\t'
	// `\v` is omitted intentionally, because in IE < 9, '\v' == 'v'.
	// '\v': '\\x0B'
};
const regexSingleEscape = /[\\\b\f\n\r\t]/;

const regexDigit = /[0-9]/;
const regexWhitespace = /[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;

const escapeEverythingRegex = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^]/g;
const escapeNonAsciiRegex = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^ !#-&\(-\[\]-_a-~]/g;

const jsesc = (argument, options) => {
	const increaseIndentation = () => {
		oldIndent = indent;
		++options.indentLevel;
		indent = options.indent.repeat(options.indentLevel)
	};
	// Handle options
	const defaults = {
		'escapeEverything': false,
		'minimal': false,
		'isScriptContext': false,
		'quotes': 'single',
		'wrap': false,
		'es6': false,
		'json': false,
		'compact': true,
		'lowercaseHex': false,
		'numbers': 'decimal',
		'indent': '\t',
		'indentLevel': 0,
		'__inline1__': false,
		'__inline2__': false
	};
	const json = options && options.json;
	if (json) {
		defaults.quotes = 'double';
		defaults.wrap = true;
	}
	options = extend(defaults, options);
	if (
		options.quotes != 'single' &&
		options.quotes != 'double' &&
		options.quotes != 'backtick'
	) {
		options.quotes = 'single';
	}
	const quote = options.quotes == 'double' ?
		'"' :
		(options.quotes == 'backtick' ?
			'`' :
			'\''
		);
	const compact = options.compact;
	const lowercaseHex = options.lowercaseHex;
	let indent = options.indent.repeat(options.indentLevel);
	let oldIndent = '';
	const inline1 = options.__inline1__;
	const inline2 = options.__inline2__;
	const newLine = compact ? '' : '\n';
	let result;
	let isEmpty = true;
	const useBinNumbers = options.numbers == 'binary';
	const useOctNumbers = options.numbers == 'octal';
	const useDecNumbers = options.numbers == 'decimal';
	const useHexNumbers = options.numbers == 'hexadecimal';

	if (json && argument && isFunction(argument.toJSON)) {
		argument = argument.toJSON();
	}

	if (!isString(argument)) {
		if (isMap(argument)) {
			if (argument.size == 0) {
				return 'new Map()';
			}
			if (!compact) {
				options.__inline1__ = true;
				options.__inline2__ = false;
			}
			return 'new Map(' + jsesc(Array.from(argument), options) + ')';
		}
		if (isSet(argument)) {
			if (argument.size == 0) {
				return 'new Set()';
			}
			return 'new Set(' + jsesc(Array.from(argument), options) + ')';
		}
		if (isBuffer(argument)) {
			if (argument.length == 0) {
				return 'Buffer.from([])';
			}
			return 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';
		}
		if (isArray(argument)) {
			result = [];
			options.wrap = true;
			if (inline1) {
				options.__inline1__ = false;
				options.__inline2__ = true;
			}
			if (!inline2) {
				increaseIndentation();
			}
			forEach(argument, (value) => {
				isEmpty = false;
				if (inline2) {
					options.__inline2__ = false;
				}
				result.push(
					(compact || inline2 ? '' : indent) +
					jsesc(value, options)
				);
			});
			if (isEmpty) {
				return '[]';
			}
			if (inline2) {
				return '[' + result.join(', ') + ']';
			}
			return '[' + newLine + result.join(',' + newLine) + newLine +
				(compact ? '' : oldIndent) + ']';
		} else if (isNumber(argument)) {
			if (json) {
				// Some number values (e.g. `Infinity`) cannot be represented in JSON.
				return JSON.stringify(argument);
			}
			if (useDecNumbers) {
				return String(argument);
			}
			if (useHexNumbers) {
				let hexadecimal = argument.toString(16);
				if (!lowercaseHex) {
					hexadecimal = hexadecimal.toUpperCase();
				}
				return '0x' + hexadecimal;
			}
			if (useBinNumbers) {
				return '0b' + argument.toString(2);
			}
			if (useOctNumbers) {
				return '0o' + argument.toString(8);
			}
		} else if (!isObject(argument)) {
			if (json) {
				// For some values (e.g. `undefined`, `function` objects),
				// `JSON.stringify(value)` returns `undefined` (which isn’t valid
				// JSON) instead of `'null'`.
				return JSON.stringify(argument) || 'null';
			}
			return String(argument);
		} else { // it’s an object
			result = [];
			options.wrap = true;
			increaseIndentation();
			forOwn(argument, (key, value) => {
				isEmpty = false;
				result.push(
					(compact ? '' : indent) +
					jsesc(key, options) + ':' +
					(compact ? '' : ' ') +
					jsesc(value, options)
				);
			});
			if (isEmpty) {
				return '{}';
			}
			return '{' + newLine + result.join(',' + newLine) + newLine +
				(compact ? '' : oldIndent) + '}';
		}
	}

	const regex = options.escapeEverything ? escapeEverythingRegex : escapeNonAsciiRegex;
	result = argument.replace(regex, (char, pair, lone, quoteChar, index, string) => {
		if (pair) {
			if (options.minimal) return pair;
			const first = pair.charCodeAt(0);
			const second = pair.charCodeAt(1);
			if (options.es6) {
				// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
				const codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
				const hex = hexadecimal(codePoint, lowercaseHex);
				return '\\u{' + hex + '}';
			}
			return fourHexEscape(hexadecimal(first, lowercaseHex)) + fourHexEscape(hexadecimal(second, lowercaseHex));
		}

		if (lone) {
			return fourHexEscape(hexadecimal(lone.charCodeAt(0), lowercaseHex));
		}

		if (
			char == '\0' &&
			!json &&
			!regexDigit.test(string.charAt(index + 1))
		) {
			return '\\0';
		}

		if (quoteChar) {
			if (quoteChar == quote || options.escapeEverything) {
				return '\\' + quoteChar;
			}
			return quoteChar;
		}

		if (regexSingleEscape.test(char)) {
			// no need for a `hasOwnProperty` check here
			return singleEscapes[char];
		}

		if (options.minimal && !regexWhitespace.test(char)) {
			return char;
		}

		const hex = hexadecimal(char.charCodeAt(0), lowercaseHex);
		if (json || hex.length > 2) {
			return fourHexEscape(hex);
		}

		return '\\x' + ('00' + hex).slice(-2);
	});

	if (quote == '`') {
		result = result.replace(/\$\{/g, '\\${');
	}
	if (options.isScriptContext) {
		// https://mathiasbynens.be/notes/etago
		result = result
			.replace(/<\/(script|style)/gi, '<\\/$1')
			.replace(/<!--/g, json ? '\\u003C!--' : '\\x3C!--');
	}
	if (options.wrap) {
		result = quote + result + quote;
	}
	return result;
};

jsesc.version = '3.0.2';

module.exports = jsesc;

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-codec/lib/encodings.js":[function(require,module,exports){
(function (Buffer){(function (){

exports.utf8 = exports['utf-8'] = {
  encode: function(data){
    return isBinary(data)
      ? data
      : String(data);
  },
  decode: identity,
  buffer: false,
  type: 'utf8'
};

exports.json = {
  encode: JSON.stringify,
  decode: JSON.parse,
  buffer: false,
  type: 'json'
};

exports.binary = {
  encode: function(data){
    return isBinary(data)
      ? data
      : new Buffer(data);      
  },
  decode: identity,
  buffer: true,
  type: 'binary'
};

exports.none = {
  encode: function(data){
    return data;
  },
  decode: function(data){
    return data;
  },
  buffer: false,
  type: 'id'
};

exports.id = exports.none;

var bufferEncodings = [
  'hex',
  'ascii',
  'base64',
  'ucs2',
  'ucs-2',
  'utf16le',
  'utf-16le'
];

bufferEncodings.forEach(function(type){
  exports[type] = {
    encode: function(data){
      return isBinary(data)
        ? data
        : new Buffer(data, type);
    },
    decode: function(buffer){
      return buffer.toString(type);
    },
    buffer: true,
    type: type
  };
});

function identity(value){
  return value;
}

function isBinary(data){
  return data === undefined
    || data === null
    || Buffer.isBuffer(data);
}


}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-errors/errors.js":[function(require,module,exports){
var createError = require('errno').create
var LevelUPError = createError('LevelUPError')
var NotFoundError = createError('NotFoundError', LevelUPError)

NotFoundError.prototype.notFound = true
NotFoundError.prototype.status = 404

module.exports = {
  LevelUPError: LevelUPError,
  InitializationError: createError('InitializationError', LevelUPError),
  OpenError: createError('OpenError', LevelUPError),
  ReadError: createError('ReadError', LevelUPError),
  WriteError: createError('WriteError', LevelUPError),
  NotFoundError: NotFoundError,
  EncodingError: createError('EncodingError', LevelUPError)
}

},{"errno":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/errno/errno.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/index.js":[function(require,module,exports){
var inherits = require('inherits')
var Readable = require('readable-stream').Readable
var extend = require('xtend')

module.exports = ReadStream
inherits(ReadStream, Readable)

function ReadStream (iterator, options) {
  if (!(this instanceof ReadStream)) return new ReadStream(iterator, options)
  options = options || {}
  Readable.call(this, extend(options, {
    objectMode: true
  }))
  this._iterator = iterator
  this._options = options
  this.on('end', this.destroy.bind(this, null, null))
}

ReadStream.prototype._read = function () {
  var self = this
  var options = this._options
  if (this.destroyed) return

  this._iterator.next(function (err, key, value) {
    if (self.destroyed) return
    if (err) return self.destroy(err)

    if (key === undefined && value === undefined) {
      self.push(null)
    } else if (options.keys !== false && options.values === false) {
      self.push(key)
    } else if (options.keys === false && options.values !== false) {
      self.push(value)
    } else {
      self.push({ key: key, value: value })
    }
  })
}

ReadStream.prototype._destroy = function (err, callback) {
  this._iterator.end(function (err2) {
    callback(err || err2)
  })
}

},{"inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","readable-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/readable-browser.js","xtend":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/immutable.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/errors-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_duplex.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js"][0].apply(exports,arguments)
},{"./_stream_readable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_readable.js","./_stream_writable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_writable.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_passthrough.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js"][0].apply(exports,arguments)
},{"./_stream_transform":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_transform.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_readable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/async_iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./internal/streams/buffer_list":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/from":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/from-browser.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","string_decoder/":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/lib/string_decoder.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_transform.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_duplex.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_writable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","util-deprecate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util-deprecate/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/async_iterator.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js"][0].apply(exports,arguments)
},{"./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/buffer_list.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/destroy.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js"][0].apply(exports,arguments)
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/from-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/pipeline.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/errors-browser.js","./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/state.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/stream-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js"][0].apply(exports,arguments)
},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/readable-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js"][0].apply(exports,arguments)
},{"./lib/_stream_duplex.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_duplex.js","./lib/_stream_passthrough.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_passthrough.js","./lib/_stream_readable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_readable.js","./lib/_stream_transform.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_transform.js","./lib/_stream_writable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/_stream_writable.js","./lib/internal/streams/end-of-stream.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./lib/internal/streams/pipeline.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/node_modules/readable-stream/lib/internal/streams/pipeline.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/index.js":[function(require,module,exports){
/* global indexedDB */

'use strict'

module.exports = Level

var AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN
var inherits = require('inherits')
var Iterator = require('./iterator')
var serialize = require('./util/serialize')
var deserialize = require('./util/deserialize')
var support = require('./util/support')
var clear = require('./util/clear')
var createKeyRange = require('./util/key-range')

var DEFAULT_PREFIX = 'level-js-'

function Level (location, opts) {
  if (!(this instanceof Level)) return new Level(location, opts)

  AbstractLevelDOWN.call(this, {
    bufferKeys: support.bufferKeys(indexedDB),
    snapshots: true,
    permanence: true,
    clear: true
  })

  opts = opts || {}

  if (typeof location !== 'string') {
    throw new Error('constructor requires a location string argument')
  }

  this.location = location
  this.prefix = opts.prefix == null ? DEFAULT_PREFIX : opts.prefix
  this.version = parseInt(opts.version || 1, 10)
}

inherits(Level, AbstractLevelDOWN)

Level.prototype.type = 'level-js'

Level.prototype._open = function (options, callback) {
  var req = indexedDB.open(this.prefix + this.location, this.version)
  var self = this

  req.onerror = function () {
    callback(req.error || new Error('unknown error'))
  }

  req.onsuccess = function () {
    self.db = req.result
    callback()
  }

  req.onupgradeneeded = function (ev) {
    var db = ev.target.result

    if (!db.objectStoreNames.contains(self.location)) {
      db.createObjectStore(self.location)
    }
  }
}

Level.prototype.store = function (mode) {
  var transaction = this.db.transaction([this.location], mode)
  return transaction.objectStore(this.location)
}

Level.prototype.await = function (request, callback) {
  var transaction = request.transaction

  // Take advantage of the fact that a non-canceled request error aborts
  // the transaction. I.e. no need to listen for "request.onerror".
  transaction.onabort = function () {
    callback(transaction.error || new Error('aborted by user'))
  }

  transaction.oncomplete = function () {
    callback(null, request.result)
  }
}

Level.prototype._get = function (key, options, callback) {
  var store = this.store('readonly')

  try {
    var req = store.get(key)
  } catch (err) {
    return this._nextTick(callback, err)
  }

  this.await(req, function (err, value) {
    if (err) return callback(err)

    if (value === undefined) {
      // 'NotFound' error, consistent with LevelDOWN API
      return callback(new Error('NotFound'))
    }

    callback(null, deserialize(value, options.asBuffer))
  })
}

Level.prototype._del = function (key, options, callback) {
  var store = this.store('readwrite')

  try {
    var req = store.delete(key)
  } catch (err) {
    return this._nextTick(callback, err)
  }

  this.await(req, callback)
}

Level.prototype._put = function (key, value, options, callback) {
  var store = this.store('readwrite')

  try {
    // Will throw a DataError or DataCloneError if the environment
    // does not support serializing the key or value respectively.
    var req = store.put(value, key)
  } catch (err) {
    return this._nextTick(callback, err)
  }

  this.await(req, callback)
}

Level.prototype._serializeKey = function (key) {
  return serialize(key, this.supports.bufferKeys)
}

Level.prototype._serializeValue = function (value) {
  return serialize(value, true)
}

Level.prototype._iterator = function (options) {
  return new Iterator(this, this.location, options)
}

Level.prototype._batch = function (operations, options, callback) {
  if (operations.length === 0) return this._nextTick(callback)

  var store = this.store('readwrite')
  var transaction = store.transaction
  var index = 0
  var error

  transaction.onabort = function () {
    callback(error || transaction.error || new Error('aborted by user'))
  }

  transaction.oncomplete = function () {
    callback()
  }

  // Wait for a request to complete before making the next, saving CPU.
  function loop () {
    var op = operations[index++]
    var key = op.key

    try {
      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)
    } catch (err) {
      error = err
      transaction.abort()
      return
    }

    if (index < operations.length) {
      req.onsuccess = loop
    }
  }

  loop()
}

Level.prototype._clear = function (options, callback) {
  try {
    var keyRange = createKeyRange(options)
  } catch (e) {
    // The lower key is greater than the upper key.
    // IndexedDB throws an error, but we'll just do nothing.
    return this._nextTick(callback)
  }

  if (options.limit >= 0) {
    // IDBObjectStore#delete(range) doesn't have such an option.
    // Fall back to cursor-based implementation.
    return clear(this, this.location, keyRange, options, callback)
  }

  try {
    var store = this.store('readwrite')
    var req = keyRange ? store.delete(keyRange) : store.clear()
  } catch (err) {
    return this._nextTick(callback, err)
  }

  this.await(req, callback)
}

Level.prototype._close = function (callback) {
  this.db.close()
  this._nextTick(callback)
}

// NOTE: remove in a next major release
Level.prototype.upgrade = function (callback) {
  if (this.status !== 'open') {
    return this._nextTick(callback, new Error('cannot upgrade() before open()'))
  }

  var it = this.iterator()
  var batchOptions = {}
  var self = this

  it._deserializeKey = it._deserializeValue = identity
  next()

  function next (err) {
    if (err) return finish(err)
    it.next(each)
  }

  function each (err, key, value) {
    if (err || key === undefined) {
      return finish(err)
    }

    var newKey = self._serializeKey(deserialize(key, true))
    var newValue = self._serializeValue(deserialize(value, true))

    // To bypass serialization on the old key, use _batch() instead of batch().
    // NOTE: if we disable snapshotting (#86) this could lead to a loop of
    // inserting and then iterating those same entries, because the new keys
    // possibly sort after the old keys.
    self._batch([
      { type: 'del', key: key },
      { type: 'put', key: newKey, value: newValue }
    ], batchOptions, next)
  }

  function finish (err) {
    it.end(function (err2) {
      callback(err || err2)
    })
  }

  function identity (data) {
    return data
  }
}

Level.destroy = function (location, prefix, callback) {
  if (typeof prefix === 'function') {
    callback = prefix
    prefix = DEFAULT_PREFIX
  }
  var request = indexedDB.deleteDatabase(prefix + location)
  request.onsuccess = function () {
    callback()
  }
  request.onerror = function (err) {
    callback(err)
  }
}

},{"./iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/iterator.js","./util/clear":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/clear.js","./util/deserialize":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/deserialize.js","./util/key-range":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/key-range.js","./util/serialize":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/serialize.js","./util/support":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/support.js","abstract-leveldown":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/iterator.js":[function(require,module,exports){
'use strict'

var inherits = require('inherits')
var AbstractIterator = require('abstract-leveldown').AbstractIterator
var createKeyRange = require('./util/key-range')
var deserialize = require('./util/deserialize')
var noop = function () {}

module.exports = Iterator

function Iterator (db, location, options) {
  AbstractIterator.call(this, db)

  this._limit = options.limit
  this._count = 0
  this._callback = null
  this._cache = []
  this._completed = false
  this._aborted = false
  this._error = null
  this._transaction = null

  this._keys = options.keys
  this._values = options.values
  this._keyAsBuffer = options.keyAsBuffer
  this._valueAsBuffer = options.valueAsBuffer

  if (this._limit === 0) {
    this._completed = true
    return
  }

  try {
    var keyRange = createKeyRange(options)
  } catch (e) {
    // The lower key is greater than the upper key.
    // IndexedDB throws an error, but we'll just return 0 results.
    this._completed = true
    return
  }

  this.createIterator(location, keyRange, options.reverse)
}

inherits(Iterator, AbstractIterator)

Iterator.prototype.createIterator = function (location, keyRange, reverse) {
  var self = this
  var transaction = this.db.db.transaction([location], 'readonly')
  var store = transaction.objectStore(location)
  var req = store.openCursor(keyRange, reverse ? 'prev' : 'next')

  req.onsuccess = function (ev) {
    var cursor = ev.target.result
    if (cursor) self.onItem(cursor)
  }

  this._transaction = transaction

  // If an error occurs (on the request), the transaction will abort.
  transaction.onabort = function () {
    self.onAbort(self._transaction.error || new Error('aborted by user'))
  }

  transaction.oncomplete = function () {
    self.onComplete()
  }
}

Iterator.prototype.onItem = function (cursor) {
  this._cache.push(cursor.key, cursor.value)

  if (this._limit <= 0 || ++this._count < this._limit) {
    cursor.continue()
  }

  this.maybeNext()
}

Iterator.prototype.onAbort = function (err) {
  this._aborted = true
  this._error = err
  this.maybeNext()
}

Iterator.prototype.onComplete = function () {
  this._completed = true
  this.maybeNext()
}

Iterator.prototype.maybeNext = function () {
  if (this._callback) {
    this._next(this._callback)
    this._callback = null
  }
}

Iterator.prototype._next = function (callback) {
  if (this._aborted) {
    // The error should be picked up by either next() or end().
    var err = this._error
    this._error = null
    this._nextTick(callback, err)
  } else if (this._cache.length > 0) {
    var key = this._cache.shift()
    var value = this._cache.shift()

    if (this._keys && key !== undefined) {
      key = this._deserializeKey(key, this._keyAsBuffer)
    } else {
      key = undefined
    }

    if (this._values && value !== undefined) {
      value = this._deserializeValue(value, this._valueAsBuffer)
    } else {
      value = undefined
    }

    this._nextTick(callback, null, key, value)
  } else if (this._completed) {
    this._nextTick(callback)
  } else {
    this._callback = callback
  }
}

// Exposed for the v4 to v5 upgrade utility
Iterator.prototype._deserializeKey = deserialize
Iterator.prototype._deserializeValue = deserialize

Iterator.prototype._end = function (callback) {
  if (this._aborted || this._completed) {
    return this._nextTick(callback, this._error)
  }

  // Don't advance the cursor anymore, and the transaction will complete
  // on its own in the next tick. This approach is much cleaner than calling
  // transaction.abort() with its unpredictable event order.
  this.onItem = noop
  this.onAbort = callback
  this.onComplete = callback
}

},{"./util/deserialize":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/deserialize.js","./util/key-range":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/key-range.js","abstract-leveldown":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/abstract-leveldown/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/clear.js":[function(require,module,exports){
'use strict'

module.exports = function clear (db, location, keyRange, options, callback) {
  if (options.limit === 0) return db._nextTick(callback)

  var transaction = db.db.transaction([location], 'readwrite')
  var store = transaction.objectStore(location)
  var count = 0

  transaction.oncomplete = function () {
    callback()
  }

  transaction.onabort = function () {
    callback(transaction.error || new Error('aborted by user'))
  }

  // A key cursor is faster (skips reading values) but not supported by IE
  var method = store.openKeyCursor ? 'openKeyCursor' : 'openCursor'
  var direction = options.reverse ? 'prev' : 'next'

  store[method](keyRange, direction).onsuccess = function (ev) {
    var cursor = ev.target.result

    if (cursor) {
      // Wait for a request to complete before continuing, saving CPU.
      store.delete(cursor.key).onsuccess = function () {
        if (options.limit <= 0 || ++count < options.limit) {
          cursor.continue()
        }
      }
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/deserialize.js":[function(require,module,exports){
(function (global){(function (){
'use strict'

var Buffer = require('buffer').Buffer
var ta2str = (function () {
  if (global.TextDecoder) {
    var decoder = new TextDecoder('utf-8')
    return decoder.decode.bind(decoder)
  } else {
    return function ta2str (ta) {
      return ta2buf(ta).toString()
    }
  }
})()

var ab2str = (function () {
  if (global.TextDecoder) {
    var decoder = new TextDecoder('utf-8')
    return decoder.decode.bind(decoder)
  } else {
    return function ab2str (ab) {
      return Buffer.from(ab).toString()
    }
  }
})()

function ta2buf (ta) {
  var buf = Buffer.from(ta.buffer)

  if (ta.byteLength === ta.buffer.byteLength) {
    return buf
  } else {
    return buf.slice(ta.byteOffset, ta.byteOffset + ta.byteLength)
  }
}

module.exports = function (data, asBuffer) {
  if (data instanceof Uint8Array) {
    return asBuffer ? ta2buf(data) : ta2str(data)
  } else if (data instanceof ArrayBuffer) {
    return asBuffer ? Buffer.from(data) : ab2str(data)
  } else {
    return asBuffer ? Buffer.from(String(data)) : String(data)
  }
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/key-range.js":[function(require,module,exports){
/* global IDBKeyRange */

'use strict'

var ltgt = require('ltgt')
var NONE = {}

module.exports = function createKeyRange (options) {
  var lower = ltgt.lowerBound(options, NONE)
  var upper = ltgt.upperBound(options, NONE)
  var lowerOpen = ltgt.lowerBoundExclusive(options, NONE)
  var upperOpen = ltgt.upperBoundExclusive(options, NONE)

  if (lower !== NONE && upper !== NONE) {
    return IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)
  } else if (lower !== NONE) {
    return IDBKeyRange.lowerBound(lower, lowerOpen)
  } else if (upper !== NONE) {
    return IDBKeyRange.upperBound(upper, upperOpen)
  } else {
    return null
  }
}

},{"ltgt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ltgt/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/serialize.js":[function(require,module,exports){
(function (global){(function (){
'use strict'

var Buffer = require('buffer').Buffer
// Returns either a Uint8Array or Buffer (doesn't matter to
// IndexedDB, because Buffer is a subclass of Uint8Array)
var str2bin = (function () {
  if (global.TextEncoder) {
    var encoder = new TextEncoder('utf-8')
    return encoder.encode.bind(encoder)
  } else {
    return Buffer.from
  }
})()

module.exports = function (data, asBuffer) {
  if (asBuffer) {
    return Buffer.isBuffer(data) ? data : str2bin(String(data))
  } else {
    return String(data)
  }
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/util/support.js":[function(require,module,exports){
'use strict'

var Buffer = require('buffer').Buffer

exports.test = function (key) {
  return function test (impl) {
    try {
      impl.cmp(key, 0)
      return true
    } catch (err) {
      return false
    }
  }
}

// Detect binary key support (IndexedDB Second Edition)
exports.bufferKeys = exports.test(Buffer.alloc(0))

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-packager/level-packager.js":[function(require,module,exports){
var levelup = require('levelup')
var encode = require('encoding-down')

function packager (leveldown) {
  function Level (location, options, callback) {
    if (typeof location === 'function') {
      callback = location
    } else if (typeof options === 'function') {
      callback = options
    }

    if (!isObject(options)) {
      options = isObject(location) ? location : {}
    }

    return levelup(encode(leveldown(location, options), options), options, callback)
  }

  function isObject (o) {
    return typeof o === 'object' && o !== null
  }

  ['destroy', 'repair'].forEach(function (m) {
    if (typeof leveldown[m] === 'function') {
      Level[m] = function () {
        leveldown[m].apply(leveldown, arguments)
      }
    }
  })

  Level.errors = levelup.errors

  return Level
}

module.exports = packager

},{"encoding-down":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/encoding-down/index.js","levelup":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/levelup.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-post/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var ltgt = require('ltgt')

function eq (a, b) {
  if (Buffer.isBuffer(a) && Buffer.isBuffer(b)) {
    return beq(a, b)
  }
  else return a === b
}

module.exports = function post (db, opts, each) {
  if(!each)
    each = opts, opts = {}

  if('function' === typeof db.post)
    return db.post(opts, each)

  var encode = (opts && opts.keyEncoding && opts.keyEncoding.encode)
    || (db.options && db.options.keyEncoding && db.options.keyEncoding.encode)
    || function (x) { return x }

  var _opts = ltgt.toLtgt(opts, {}, encode)

  function cmp (key) {
    return ltgt.contains(_opts, encode(key))
  }

  function onPut (key, val) {
    if(cmp(key))
      each({type: 'put', key: key, value: val})
  }

  function onDel (key, val) {
    if(cmp(key))
      each({type: 'del', key: key, value: val})
  }

  function onBatch (ary) {
    ary.forEach(function (op) {
      if(cmp(op.key))
        each(op)
    })
  }

  db.on('put', onPut)
  db.on('del', onDel)
  db.on('batch', onBatch)

  return function () {
    db.removeListener('put', onPut)
    db.removeListener('del', onDel)
    db.removeListener('batch', onBatch)
  }
}


}).call(this)}).call(this,{"isBuffer":require("../is-buffer/index.js")})
},{"../is-buffer/index.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-buffer/index.js","ltgt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ltgt/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-supports/index.js":[function(require,module,exports){
'use strict'

// For (old) browser support
var xtend = require('xtend')
var assign = require('xtend/mutable')

module.exports = function supports () {
  var manifest = xtend.apply(null, arguments)

  return assign(manifest, {
    // Features of abstract-leveldown
    bufferKeys: manifest.bufferKeys || false,
    snapshots: manifest.snapshots || false,
    permanence: manifest.permanence || false,
    seek: manifest.seek || false,
    clear: manifest.clear || false,

    // Features of abstract-leveldown that levelup doesn't have
    status: manifest.status || false,

    // Features of disk-based implementations
    createIfMissing: manifest.createIfMissing || false,
    errorIfExists: manifest.errorIfExists || false,

    // Features of level(up) that abstract-leveldown doesn't have yet
    deferredOpen: manifest.deferredOpen || false,
    openCallback: manifest.openCallback || false,
    promises: manifest.promises || false,
    streams: manifest.streams || false,
    encodings: manifest.encodings || false,

    // Methods that are not part of abstract-leveldown or levelup
    additionalMethods: xtend(manifest.additionalMethods)
  })
}

},{"xtend":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/immutable.js","xtend/mutable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/mutable.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level/browser.js":[function(require,module,exports){
module.exports = require('level-packager')(require('level-js'))

},{"level-js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-js/index.js","level-packager":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-packager/level-packager.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/batch.js":[function(require,module,exports){
var WriteError = require('level-errors').WriteError
var promisify = require('./promisify')
var getCallback = require('./common').getCallback
var getOptions = require('./common').getOptions

function Batch (levelup) {
  // TODO (next major): remove this._levelup alias
  this.db = this._levelup = levelup
  this.batch = levelup.db.batch()
  this.ops = []
  this.length = 0
}

Batch.prototype.put = function (key, value) {
  try {
    this.batch.put(key, value)
  } catch (e) {
    throw new WriteError(e)
  }

  this.ops.push({ type: 'put', key: key, value: value })
  this.length++

  return this
}

Batch.prototype.del = function (key) {
  try {
    this.batch.del(key)
  } catch (err) {
    throw new WriteError(err)
  }

  this.ops.push({ type: 'del', key: key })
  this.length++

  return this
}

Batch.prototype.clear = function () {
  try {
    this.batch.clear()
  } catch (err) {
    throw new WriteError(err)
  }

  this.ops = []
  this.length = 0

  return this
}

Batch.prototype.write = function (options, callback) {
  var levelup = this._levelup
  var ops = this.ops
  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  options = getOptions(options)

  try {
    this.batch.write(options, function (err) {
      if (err) { return callback(new WriteError(err)) }
      levelup.emit('batch', ops)
      callback()
    })
  } catch (err) {
    throw new WriteError(err)
  }

  return promise
}

module.exports = Batch

},{"./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/common.js","./promisify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/promisify.js","level-errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-errors/errors.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/common.js":[function(require,module,exports){
exports.getCallback = function (options, callback) {
  return typeof options === 'function' ? options : callback
}

exports.getOptions = function (options) {
  return typeof options === 'object' && options !== null ? options : {}
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/levelup.js":[function(require,module,exports){
(function (process){(function (){
var EventEmitter = require('events').EventEmitter
var inherits = require('util').inherits
var extend = require('xtend')
var DeferredLevelDOWN = require('deferred-leveldown')
var IteratorStream = require('level-iterator-stream')
var Batch = require('./batch')
var errors = require('level-errors')
var supports = require('level-supports')
var assert = require('assert')
var promisify = require('./promisify')
var getCallback = require('./common').getCallback
var getOptions = require('./common').getOptions

var WriteError = errors.WriteError
var ReadError = errors.ReadError
var NotFoundError = errors.NotFoundError
var OpenError = errors.OpenError
var InitializationError = errors.InitializationError

// Possible AbstractLevelDOWN#status values:
//  - 'new'     - newly created, not opened or closed
//  - 'opening' - waiting for the database to be opened, post open()
//  - 'open'    - successfully opened the database, available for use
//  - 'closing' - waiting for the database to be closed, post close()
//  - 'closed'  - database has been successfully closed, should not be
//                 used except for another open() operation

function LevelUP (db, options, callback) {
  if (!(this instanceof LevelUP)) {
    return new LevelUP(db, options, callback)
  }

  var error
  var self = this

  EventEmitter.call(this)
  this.setMaxListeners(Infinity)

  if (typeof options === 'function') {
    callback = options
    options = {}
  }

  options = options || {}

  if (!db || typeof db !== 'object') {
    error = new InitializationError('First argument must be an abstract-leveldown compliant store')
    if (typeof callback === 'function') {
      return process.nextTick(callback, error)
    }
    throw error
  }

  assert.strictEqual(typeof db.status, 'string', '.status required, old abstract-leveldown')

  this.options = getOptions(options)
  this._db = db
  this.db = new DeferredLevelDOWN(db)
  this.open(callback || function (err) {
    if (err) self.emit('error', err)
  })

  // Create manifest based on deferred-leveldown's
  this.supports = supports(this.db.supports, {
    status: false,
    deferredOpen: true,
    openCallback: true,
    promises: true,
    streams: true
  })

  // Experimental: enrich levelup interface
  Object.keys(this.supports.additionalMethods).forEach(function (method) {
    if (this[method] != null) return

    // Don't do this.db[method].bind() because this.db is dynamic.
    this[method] = function () {
      return this.db[method].apply(this.db, arguments)
    }
  }, this)
}

LevelUP.prototype.emit = EventEmitter.prototype.emit
LevelUP.prototype.once = EventEmitter.prototype.once
inherits(LevelUP, EventEmitter)

LevelUP.prototype.open = function (opts, callback) {
  var self = this
  var promise

  if (typeof opts === 'function') {
    callback = opts
    opts = null
  }

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (!opts) {
    opts = this.options
  }

  if (this.isOpen()) {
    process.nextTick(callback, null, self)
    return promise
  }

  if (this._isOpening()) {
    this.once('open', function () { callback(null, self) })
    return promise
  }

  this.emit('opening')

  this.db.open(opts, function (err) {
    if (err) {
      return callback(new OpenError(err))
    }
    self.db = self._db
    callback(null, self)
    self.emit('open')
    self.emit('ready')
  })

  return promise
}

LevelUP.prototype.close = function (callback) {
  var self = this
  var promise

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (this.isOpen()) {
    this.db.close(function () {
      self.emit('closed')
      callback.apply(null, arguments)
    })
    this.emit('closing')
    this.db = new DeferredLevelDOWN(this._db)
  } else if (this.isClosed()) {
    process.nextTick(callback)
  } else if (this.db.status === 'closing') {
    this.once('closed', callback)
  } else if (this._isOpening()) {
    this.once('open', function () {
      self.close(callback)
    })
  }

  return promise
}

LevelUP.prototype.isOpen = function () {
  return this.db.status === 'open'
}

LevelUP.prototype._isOpening = function () {
  return this.db.status === 'opening'
}

LevelUP.prototype.isClosed = function () {
  return (/^clos|new/).test(this.db.status)
}

LevelUP.prototype.get = function (key, options, callback) {
  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  this.db.get(key, options, function (err, value) {
    if (err) {
      if ((/notfound/i).test(err) || err.notFound) {
        err = new NotFoundError('Key not found in database [' + key + ']', err)
      } else {
        err = new ReadError(err)
      }
      return callback(err)
    }
    callback(null, value)
  })

  return promise
}

LevelUP.prototype.put = function (key, value, options, callback) {
  var self = this
  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  this.db.put(key, value, options, function (err) {
    if (err) {
      return callback(new WriteError(err))
    }
    self.emit('put', key, value)
    callback()
  })

  return promise
}

LevelUP.prototype.del = function (key, options, callback) {
  var self = this
  var promise

  callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  this.db.del(key, options, function (err) {
    if (err) {
      return callback(new WriteError(err))
    }
    self.emit('del', key)
    callback()
  })

  return promise
}

LevelUP.prototype.batch = function (arr, options, callback) {
  if (!arguments.length) {
    return new Batch(this)
  }

  var self = this
  var promise

  if (typeof arr === 'function') callback = arr
  else callback = getCallback(options, callback)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) { return promise }

  options = getOptions(options)

  this.db.batch(arr, options, function (err) {
    if (err) {
      return callback(new WriteError(err))
    }
    self.emit('batch', arr)
    callback()
  })

  return promise
}

LevelUP.prototype.iterator = function (options) {
  return this.db.iterator(options)
}

LevelUP.prototype.clear = function (options, callback) {
  var self = this
  var promise

  callback = getCallback(options, callback)
  options = getOptions(options)

  if (!callback) {
    callback = promisify()
    promise = callback.promise
  }

  if (maybeError(this, callback)) {
    return promise
  }

  this.db.clear(options, function (err) {
    if (err) {
      return callback(new WriteError(err))
    }
    self.emit('clear', options)
    callback()
  })

  return promise
}

LevelUP.prototype.readStream =
LevelUP.prototype.createReadStream = function (options) {
  options = extend({ keys: true, values: true }, options)
  if (typeof options.limit !== 'number') { options.limit = -1 }
  return new IteratorStream(this.db.iterator(options), options)
}

LevelUP.prototype.keyStream =
LevelUP.prototype.createKeyStream = function (options) {
  return this.createReadStream(extend(options, { keys: true, values: false }))
}

LevelUP.prototype.valueStream =
LevelUP.prototype.createValueStream = function (options) {
  return this.createReadStream(extend(options, { keys: false, values: true }))
}

LevelUP.prototype.toString = function () {
  return 'LevelUP'
}

LevelUP.prototype.type = 'levelup'

function maybeError (db, callback) {
  if (!db._isOpening() && !db.isOpen()) {
    process.nextTick(callback, new ReadError('Database is not open'))
    return true
  }
}

LevelUP.errors = errors
module.exports = LevelUP.default = LevelUP

}).call(this)}).call(this,require('_process'))
},{"./batch":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/batch.js","./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/common.js","./promisify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/promisify.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","assert":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/assert.js","deferred-leveldown":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/deferred-leveldown/deferred-leveldown.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","level-errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-errors/errors.js","level-iterator-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-iterator-stream/index.js","level-supports":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-supports/index.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/util.js","xtend":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/immutable.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/levelup/lib/promisify.js":[function(require,module,exports){
function promisify () {
  var callback
  var promise = new Promise(function (resolve, reject) {
    callback = function callback (err, value) {
      if (err) reject(err)
      else resolve(value)
    }
  })
  callback.promise = promise
  return callback
}

module.exports = promisify

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js":[function(require,module,exports){
!function(e){function t(e,t){"use strict";var r,a=t.ready.then((function(){function a(){if(0!==r._sodium_init())throw new Error("libsodium was not correctly initialized.");for(var t=["crypto_aead_chacha20poly1305_decrypt","crypto_aead_chacha20poly1305_decrypt_detached","crypto_aead_chacha20poly1305_encrypt","crypto_aead_chacha20poly1305_encrypt_detached","crypto_aead_chacha20poly1305_ietf_decrypt","crypto_aead_chacha20poly1305_ietf_decrypt_detached","crypto_aead_chacha20poly1305_ietf_encrypt","crypto_aead_chacha20poly1305_ietf_encrypt_detached","crypto_aead_chacha20poly1305_ietf_keygen","crypto_aead_chacha20poly1305_keygen","crypto_aead_xchacha20poly1305_ietf_decrypt","crypto_aead_xchacha20poly1305_ietf_decrypt_detached","crypto_aead_xchacha20poly1305_ietf_encrypt","crypto_aead_xchacha20poly1305_ietf_encrypt_detached","crypto_aead_xchacha20poly1305_ietf_keygen","crypto_auth","crypto_auth_hmacsha256","crypto_auth_hmacsha256_keygen","crypto_auth_hmacsha256_verify","crypto_auth_hmacsha512","crypto_auth_hmacsha512_keygen","crypto_auth_hmacsha512_verify","crypto_auth_keygen","crypto_auth_verify","crypto_box_beforenm","crypto_box_curve25519xchacha20poly1305_keypair","crypto_box_curve25519xchacha20poly1305_seal","crypto_box_curve25519xchacha20poly1305_seal_open","crypto_box_detached","crypto_box_easy","crypto_box_easy_afternm","crypto_box_keypair","crypto_box_open_detached","crypto_box_open_easy","crypto_box_open_easy_afternm","crypto_box_seal","crypto_box_seal_open","crypto_box_seed_keypair","crypto_core_ristretto255_add","crypto_core_ristretto255_from_hash","crypto_core_ristretto255_is_valid_point","crypto_core_ristretto255_random","crypto_core_ristretto255_scalar_add","crypto_core_ristretto255_scalar_complement","crypto_core_ristretto255_scalar_invert","crypto_core_ristretto255_scalar_mul","crypto_core_ristretto255_scalar_negate","crypto_core_ristretto255_scalar_random","crypto_core_ristretto255_scalar_reduce","crypto_core_ristretto255_scalar_sub","crypto_core_ristretto255_sub","crypto_generichash","crypto_generichash_blake2b_salt_personal","crypto_generichash_final","crypto_generichash_init","crypto_generichash_keygen","crypto_generichash_update","crypto_hash","crypto_hash_sha256","crypto_hash_sha256_final","crypto_hash_sha256_init","crypto_hash_sha256_update","crypto_hash_sha512","crypto_hash_sha512_final","crypto_hash_sha512_init","crypto_hash_sha512_update","crypto_kdf_derive_from_key","crypto_kdf_keygen","crypto_kx_client_session_keys","crypto_kx_keypair","crypto_kx_seed_keypair","crypto_kx_server_session_keys","crypto_onetimeauth","crypto_onetimeauth_final","crypto_onetimeauth_init","crypto_onetimeauth_keygen","crypto_onetimeauth_update","crypto_onetimeauth_verify","crypto_pwhash","crypto_pwhash_scryptsalsa208sha256","crypto_pwhash_scryptsalsa208sha256_ll","crypto_pwhash_scryptsalsa208sha256_str","crypto_pwhash_scryptsalsa208sha256_str_verify","crypto_pwhash_str","crypto_pwhash_str_needs_rehash","crypto_pwhash_str_verify","crypto_scalarmult","crypto_scalarmult_base","crypto_scalarmult_ristretto255","crypto_scalarmult_ristretto255_base","crypto_secretbox_detached","crypto_secretbox_easy","crypto_secretbox_keygen","crypto_secretbox_open_detached","crypto_secretbox_open_easy","crypto_secretstream_xchacha20poly1305_init_pull","crypto_secretstream_xchacha20poly1305_init_push","crypto_secretstream_xchacha20poly1305_keygen","crypto_secretstream_xchacha20poly1305_pull","crypto_secretstream_xchacha20poly1305_push","crypto_secretstream_xchacha20poly1305_rekey","crypto_shorthash","crypto_shorthash_keygen","crypto_shorthash_siphashx24","crypto_sign","crypto_sign_detached","crypto_sign_ed25519_pk_to_curve25519","crypto_sign_ed25519_sk_to_curve25519","crypto_sign_ed25519_sk_to_pk","crypto_sign_ed25519_sk_to_seed","crypto_sign_final_create","crypto_sign_final_verify","crypto_sign_init","crypto_sign_keypair","crypto_sign_open","crypto_sign_seed_keypair","crypto_sign_update","crypto_sign_verify_detached","crypto_stream_chacha20","crypto_stream_chacha20_ietf_xor","crypto_stream_chacha20_ietf_xor_ic","crypto_stream_chacha20_keygen","crypto_stream_chacha20_xor","crypto_stream_chacha20_xor_ic","crypto_stream_keygen","crypto_stream_xchacha20_keygen","crypto_stream_xchacha20_xor","crypto_stream_xchacha20_xor_ic","randombytes_buf","randombytes_buf_deterministic","randombytes_close","randombytes_random","randombytes_set_implementation","randombytes_stir","randombytes_uniform","sodium_version_string"],a=[E,x,k,S,T,w,Y,B,A,K,M,I,N,L,U,O,C,R,P,G,X,D,F,V,H,z,j,q,W,J,Q,Z,$,ee,te,re,ae,_e,ne,se,ce,oe,he,pe,ye,ie,le,ue,de,ve,ge,be,fe,me,Ee,xe,ke,Se,Te,we,Ye,Be,Ae,Ke,Me,Ie,Ne,Le,Ue,Oe,Ce,Re,Pe,Ge,Xe,De,Fe,Ve,He,ze,je,qe,We,Je,Qe,Ze,$e,et,tt,rt,at,_t,nt,st,ct,ot,ht,pt,yt,it,lt,ut,dt,vt,gt,bt,ft,mt,Et,xt,kt,St,Tt,wt,Yt,Bt,At,Kt,Mt,It,Nt,Lt,Ut,Ot,Ct,Rt,Pt,Gt,Xt,Dt,Ft,Vt,Ht,zt,jt,qt],_=0;_<a.length;_++)"function"==typeof r["_"+t[_]]&&(e[t[_]]=a[_]);var n=["SODIUM_LIBRARY_VERSION_MAJOR","SODIUM_LIBRARY_VERSION_MINOR","crypto_aead_chacha20poly1305_ABYTES","crypto_aead_chacha20poly1305_IETF_ABYTES","crypto_aead_chacha20poly1305_IETF_KEYBYTES","crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_IETF_NPUBBYTES","crypto_aead_chacha20poly1305_IETF_NSECBYTES","crypto_aead_chacha20poly1305_KEYBYTES","crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_NPUBBYTES","crypto_aead_chacha20poly1305_NSECBYTES","crypto_aead_chacha20poly1305_ietf_ABYTES","crypto_aead_chacha20poly1305_ietf_KEYBYTES","crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_ietf_NPUBBYTES","crypto_aead_chacha20poly1305_ietf_NSECBYTES","crypto_aead_xchacha20poly1305_IETF_ABYTES","crypto_aead_xchacha20poly1305_IETF_KEYBYTES","crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX","crypto_aead_xchacha20poly1305_IETF_NPUBBYTES","crypto_aead_xchacha20poly1305_IETF_NSECBYTES","crypto_aead_xchacha20poly1305_ietf_ABYTES","crypto_aead_xchacha20poly1305_ietf_KEYBYTES","crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX","crypto_aead_xchacha20poly1305_ietf_NPUBBYTES","crypto_aead_xchacha20poly1305_ietf_NSECBYTES","crypto_auth_BYTES","crypto_auth_KEYBYTES","crypto_auth_hmacsha256_BYTES","crypto_auth_hmacsha256_KEYBYTES","crypto_auth_hmacsha512256_BYTES","crypto_auth_hmacsha512256_KEYBYTES","crypto_auth_hmacsha512_BYTES","crypto_auth_hmacsha512_KEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_MACBYTES","crypto_box_MESSAGEBYTES_MAX","crypto_box_NONCEBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SEALBYTES","crypto_box_SECRETKEYBYTES","crypto_box_SEEDBYTES","crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES","crypto_box_curve25519xchacha20poly1305_MACBYTES","crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX","crypto_box_curve25519xchacha20poly1305_NONCEBYTES","crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES","crypto_box_curve25519xchacha20poly1305_SEALBYTES","crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES","crypto_box_curve25519xchacha20poly1305_SEEDBYTES","crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES","crypto_box_curve25519xsalsa20poly1305_MACBYTES","crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX","crypto_box_curve25519xsalsa20poly1305_NONCEBYTES","crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES","crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES","crypto_box_curve25519xsalsa20poly1305_SEEDBYTES","crypto_core_ed25519_BYTES","crypto_core_ed25519_HASHBYTES","crypto_core_ed25519_NONREDUCEDSCALARBYTES","crypto_core_ed25519_SCALARBYTES","crypto_core_ed25519_UNIFORMBYTES","crypto_core_hchacha20_CONSTBYTES","crypto_core_hchacha20_INPUTBYTES","crypto_core_hchacha20_KEYBYTES","crypto_core_hchacha20_OUTPUTBYTES","crypto_core_hsalsa20_CONSTBYTES","crypto_core_hsalsa20_INPUTBYTES","crypto_core_hsalsa20_KEYBYTES","crypto_core_hsalsa20_OUTPUTBYTES","crypto_core_ristretto255_BYTES","crypto_core_ristretto255_HASHBYTES","crypto_core_ristretto255_NONREDUCEDSCALARBYTES","crypto_core_ristretto255_SCALARBYTES","crypto_core_salsa2012_CONSTBYTES","crypto_core_salsa2012_INPUTBYTES","crypto_core_salsa2012_KEYBYTES","crypto_core_salsa2012_OUTPUTBYTES","crypto_core_salsa20_CONSTBYTES","crypto_core_salsa20_INPUTBYTES","crypto_core_salsa20_KEYBYTES","crypto_core_salsa20_OUTPUTBYTES","crypto_generichash_BYTES","crypto_generichash_BYTES_MAX","crypto_generichash_BYTES_MIN","crypto_generichash_KEYBYTES","crypto_generichash_KEYBYTES_MAX","crypto_generichash_KEYBYTES_MIN","crypto_generichash_blake2b_BYTES","crypto_generichash_blake2b_BYTES_MAX","crypto_generichash_blake2b_BYTES_MIN","crypto_generichash_blake2b_KEYBYTES","crypto_generichash_blake2b_KEYBYTES_MAX","crypto_generichash_blake2b_KEYBYTES_MIN","crypto_generichash_blake2b_PERSONALBYTES","crypto_generichash_blake2b_SALTBYTES","crypto_hash_BYTES","crypto_hash_sha256_BYTES","crypto_hash_sha512_BYTES","crypto_kdf_BYTES_MAX","crypto_kdf_BYTES_MIN","crypto_kdf_CONTEXTBYTES","crypto_kdf_KEYBYTES","crypto_kdf_blake2b_BYTES_MAX","crypto_kdf_blake2b_BYTES_MIN","crypto_kdf_blake2b_CONTEXTBYTES","crypto_kdf_blake2b_KEYBYTES","crypto_kx_PUBLICKEYBYTES","crypto_kx_SECRETKEYBYTES","crypto_kx_SEEDBYTES","crypto_kx_SESSIONKEYBYTES","crypto_onetimeauth_BYTES","crypto_onetimeauth_KEYBYTES","crypto_onetimeauth_poly1305_BYTES","crypto_onetimeauth_poly1305_KEYBYTES","crypto_pwhash_ALG_ARGON2I13","crypto_pwhash_ALG_ARGON2ID13","crypto_pwhash_ALG_DEFAULT","crypto_pwhash_BYTES_MAX","crypto_pwhash_BYTES_MIN","crypto_pwhash_MEMLIMIT_INTERACTIVE","crypto_pwhash_MEMLIMIT_MAX","crypto_pwhash_MEMLIMIT_MIN","crypto_pwhash_MEMLIMIT_MODERATE","crypto_pwhash_MEMLIMIT_SENSITIVE","crypto_pwhash_OPSLIMIT_INTERACTIVE","crypto_pwhash_OPSLIMIT_MAX","crypto_pwhash_OPSLIMIT_MIN","crypto_pwhash_OPSLIMIT_MODERATE","crypto_pwhash_OPSLIMIT_SENSITIVE","crypto_pwhash_PASSWD_MAX","crypto_pwhash_PASSWD_MIN","crypto_pwhash_SALTBYTES","crypto_pwhash_STRBYTES","crypto_pwhash_argon2i_BYTES_MAX","crypto_pwhash_argon2i_BYTES_MIN","crypto_pwhash_argon2i_SALTBYTES","crypto_pwhash_argon2i_STRBYTES","crypto_pwhash_argon2id_BYTES_MAX","crypto_pwhash_argon2id_BYTES_MIN","crypto_pwhash_argon2id_SALTBYTES","crypto_pwhash_argon2id_STRBYTES","crypto_pwhash_scryptsalsa208sha256_BYTES_MAX","crypto_pwhash_scryptsalsa208sha256_BYTES_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_SALTBYTES","crypto_pwhash_scryptsalsa208sha256_STRBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_scalarmult_curve25519_BYTES","crypto_scalarmult_curve25519_SCALARBYTES","crypto_scalarmult_ed25519_BYTES","crypto_scalarmult_ed25519_SCALARBYTES","crypto_scalarmult_ristretto255_BYTES","crypto_scalarmult_ristretto255_SCALARBYTES","crypto_secretbox_KEYBYTES","crypto_secretbox_MACBYTES","crypto_secretbox_MESSAGEBYTES_MAX","crypto_secretbox_NONCEBYTES","crypto_secretbox_xchacha20poly1305_KEYBYTES","crypto_secretbox_xchacha20poly1305_MACBYTES","crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX","crypto_secretbox_xchacha20poly1305_NONCEBYTES","crypto_secretbox_xsalsa20poly1305_KEYBYTES","crypto_secretbox_xsalsa20poly1305_MACBYTES","crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX","crypto_secretbox_xsalsa20poly1305_NONCEBYTES","crypto_secretstream_xchacha20poly1305_ABYTES","crypto_secretstream_xchacha20poly1305_HEADERBYTES","crypto_secretstream_xchacha20poly1305_KEYBYTES","crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX","crypto_secretstream_xchacha20poly1305_NPUBBYTES","crypto_secretstream_xchacha20poly1305_TAG_FINAL","crypto_secretstream_xchacha20poly1305_TAG_MESSAGE","crypto_secretstream_xchacha20poly1305_TAG_PUSH","crypto_secretstream_xchacha20poly1305_TAG_REKEY","crypto_shorthash_BYTES","crypto_shorthash_KEYBYTES","crypto_shorthash_siphash24_BYTES","crypto_shorthash_siphash24_KEYBYTES","crypto_shorthash_siphashx24_BYTES","crypto_shorthash_siphashx24_KEYBYTES","crypto_sign_BYTES","crypto_sign_MESSAGEBYTES_MAX","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_sign_ed25519_BYTES","crypto_sign_ed25519_MESSAGEBYTES_MAX","crypto_sign_ed25519_PUBLICKEYBYTES","crypto_sign_ed25519_SECRETKEYBYTES","crypto_sign_ed25519_SEEDBYTES","crypto_stream_KEYBYTES","crypto_stream_MESSAGEBYTES_MAX","crypto_stream_NONCEBYTES","crypto_stream_chacha20_IETF_KEYBYTES","crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX","crypto_stream_chacha20_IETF_NONCEBYTES","crypto_stream_chacha20_KEYBYTES","crypto_stream_chacha20_MESSAGEBYTES_MAX","crypto_stream_chacha20_NONCEBYTES","crypto_stream_chacha20_ietf_KEYBYTES","crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX","crypto_stream_chacha20_ietf_NONCEBYTES","crypto_stream_salsa2012_KEYBYTES","crypto_stream_salsa2012_MESSAGEBYTES_MAX","crypto_stream_salsa2012_NONCEBYTES","crypto_stream_salsa208_KEYBYTES","crypto_stream_salsa208_MESSAGEBYTES_MAX","crypto_stream_salsa208_NONCEBYTES","crypto_stream_salsa20_KEYBYTES","crypto_stream_salsa20_MESSAGEBYTES_MAX","crypto_stream_salsa20_NONCEBYTES","crypto_stream_xchacha20_KEYBYTES","crypto_stream_xchacha20_MESSAGEBYTES_MAX","crypto_stream_xchacha20_NONCEBYTES","crypto_stream_xsalsa20_KEYBYTES","crypto_stream_xsalsa20_MESSAGEBYTES_MAX","crypto_stream_xsalsa20_NONCEBYTES","crypto_verify_16_BYTES","crypto_verify_32_BYTES","crypto_verify_64_BYTES"];for(_=0;_<n.length;_++)"function"==typeof(c=r["_"+n[_].toLowerCase()])&&(e[n[_]]=c());var s=["SODIUM_VERSION_STRING","crypto_pwhash_STRPREFIX","crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];for(_=0;_<s.length;_++){var c;"function"==typeof(c=r["_"+s[_].toLowerCase()])&&(e[s[_]]=r.UTF8ToString(c()))}}r=t;try{a();var _=new Uint8Array([98,97,108,108,115]),n=e.randombytes_buf(e.crypto_secretbox_NONCEBYTES),s=e.randombytes_buf(e.crypto_secretbox_KEYBYTES),c=e.crypto_secretbox_easy(_,n,s),o=e.crypto_secretbox_open_easy(c,n,s);if(e.memcmp(_,o))return}catch(e){if(null==r.useBackupModule)throw new Error("Both wasm and asm failed to load"+e)}r.useBackupModule(),a()}));function _(e){if("function"==typeof TextEncoder)return(new TextEncoder).encode(e);e=unescape(encodeURIComponent(e));for(var t=new Uint8Array(e.length),r=0,a=e.length;r<a;r++)t[r]=e.charCodeAt(r);return t}function n(e){if("function"==typeof TextDecoder)return new TextDecoder("utf-8",{fatal:!0}).decode(e);var t=Math.ceil(e.length/8192);if(t<=1)try{return decodeURIComponent(escape(String.fromCharCode.apply(null,e)))}catch(e){throw new TypeError("The encoded data was not valid.")}for(var r="",a=0,_=0;_<t;_++){var s=Array.prototype.slice.call(e,8192*_+a,8192*(_+1)+a);if(0!=s.length){var c,o=s.length,h=0;do{var p=s[--o];p>=240?(h=4,c=!0):p>=224?(h=3,c=!0):p>=192?(h=2,c=!0):p<128&&(h=1,c=!0)}while(!c);for(var y=h-(s.length-o),i=0;i<y;i++)a--,s.pop();r+=n(s)}}return r}function s(e){e=m(null,e,"input");for(var t,r,a,_="",n=0;n<e.length;n++)a=87+(r=15&e[n])+(r-10>>8&-39)<<8|87+(t=e[n]>>>4)+(t-10>>8&-39),_+=String.fromCharCode(255&a)+String.fromCharCode(a>>>8);return _}var c={ORIGINAL:1,ORIGINAL_NO_PADDING:3,URLSAFE:5,URLSAFE_NO_PADDING:7};function o(e){if(null==e)return c.URLSAFE_NO_PADDING;if(e!==c.ORIGINAL&&e!==c.ORIGINAL_NO_PADDING&&e!==c.URLSAFE&&e!=c.URLSAFE_NO_PADDING)throw new Error("unsupported base64 variant");return e}function h(e,t){t=o(t),e=m(_,e,"input");var a,_=[],s=0|Math.floor(e.length/3),c=e.length-3*s,h=4*s+(0!==c?0==(2&t)?4:2+(c>>>1):0),p=new l(h+1),y=u(e);return _.push(y),_.push(p.address),0===r._sodium_bin2base64(p.address,p.length,y,e.length,t)&&g(_,"conversion failed"),p.length=h,a=n(p.to_Uint8Array()),v(_),a}function p(e,t){var r=t||"uint8array";if(!y(r))throw new Error(r+" output format is not available");if(e instanceof l){if("uint8array"===r)return e.to_Uint8Array();if("text"===r)return n(e.to_Uint8Array());if("hex"===r)return s(e.to_Uint8Array());if("base64"===r)return h(e.to_Uint8Array(),c.URLSAFE_NO_PADDING);throw new Error('What is output format "'+r+'"?')}if("object"==typeof e){for(var a=Object.keys(e),_={},o=0;o<a.length;o++)_[a[o]]=p(e[a[o]],r);return _}if("string"==typeof e)return e;throw new TypeError("Cannot format output")}function y(e){for(var t=["uint8array","text","hex","base64"],r=0;r<t.length;r++)if(t[r]===e)return!0;return!1}function i(e){if(e){if("string"!=typeof e)throw new TypeError("When defined, the output format must be a string");if(!y(e))throw new Error(e+" is not a supported output format")}}function l(e){this.length=e,this.address=d(e)}function u(e){var t=d(e.length);return r.HEAPU8.set(e,t),t}function d(e){var t=r._malloc(e);if(0===t)throw{message:"_malloc() failed",length:e};return t}function v(e){if(e)for(var t=0;t<e.length;t++)a=e[t],r._free(a);var a}function g(e,t){throw v(e),new Error(t)}function b(e,t){throw v(e),new TypeError(t)}function f(e,t,r){null==t&&b(e,r+" cannot be null or undefined")}function m(e,t,r){return f(e,t,r),t instanceof Uint8Array?t:"string"==typeof t?_(t):void b(e,"unsupported input type for "+r)}function E(e,t,a,_,n,s){var c=[];i(s);var o=null;null!=e&&(o=u(e=m(c,e,"secret_nonce")),e.length,c.push(o)),t=m(c,t,"ciphertext");var h,y=r._crypto_aead_chacha20poly1305_abytes(),d=t.length;d<y&&b(c,"ciphertext is too short"),h=u(t),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,"additional_data")),E=a.length,c.push(f)),_=m(c,_,"public_nonce");var x,k=0|r._crypto_aead_chacha20poly1305_npubbytes();_.length!==k&&b(c,"invalid public_nonce length"),x=u(_),c.push(x),n=m(c,n,"key");var S,T=0|r._crypto_aead_chacha20poly1305_keybytes();n.length!==T&&b(c,"invalid key length"),S=u(n),c.push(S);var w=new l(d-r._crypto_aead_chacha20poly1305_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_chacha20poly1305_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,s);return v(c),B}g(c,"ciphertext cannot be decrypted using that key")}function x(e,t,a,_,n,s,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,"secret_nonce")),e.length,o.push(h));var y=u(t=m(o,t,"ciphertext")),d=t.length;o.push(y),a=m(o,a,"mac");var f,E=0|r._crypto_box_macbytes();a.length!==E&&b(o,"invalid mac length"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,"additional_data")),k=_.length,o.push(x)),n=m(o,n,"public_nonce");var S,T=0|r._crypto_aead_chacha20poly1305_npubbytes();n.length!==T&&b(o,"invalid public_nonce length"),S=u(n),o.push(S),s=m(o,s,"key");var w,Y=0|r._crypto_aead_chacha20poly1305_keybytes();s.length!==Y&&b(o,"invalid key length"),w=u(s),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===r._crypto_aead_chacha20poly1305_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,"ciphertext cannot be decrypted using that key")}function k(e,t,a,_,n,s){var c=[];i(s);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=t&&(y=u(t=m(c,t,"additional_data")),d=t.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|r._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),n=m(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_keybytes();n.length!==S&&b(c,"invalid key length"),k=u(n),c.push(k);var T=new l(h+r._crypto_aead_chacha20poly1305_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_chacha20poly1305_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,s);return v(c),Y}g(c,"invalid usage")}function S(e,t,a,_,n,s){var c=[];i(s);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=t&&(y=u(t=m(c,t,"additional_data")),d=t.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|r._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),n=m(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_keybytes();n.length!==S&&b(c,"invalid key length"),k=u(n),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|r._crypto_aead_chacha20poly1305_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_chacha20poly1305_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},s);return v(c),A}g(c,"invalid usage")}function T(e,t,a,_,n,s){var c=[];i(s);var o=null;null!=e&&(o=u(e=m(c,e,"secret_nonce")),e.length,c.push(o)),t=m(c,t,"ciphertext");var h,y=r._crypto_aead_chacha20poly1305_ietf_abytes(),d=t.length;d<y&&b(c,"ciphertext is too short"),h=u(t),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,"additional_data")),E=a.length,c.push(f)),_=m(c,_,"public_nonce");var x,k=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==k&&b(c,"invalid public_nonce length"),x=u(_),c.push(x),n=m(c,n,"key");var S,T=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==T&&b(c,"invalid key length"),S=u(n),c.push(S);var w=new l(d-r._crypto_aead_chacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_chacha20poly1305_ietf_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,s);return v(c),B}g(c,"ciphertext cannot be decrypted using that key")}function w(e,t,a,_,n,s,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,"secret_nonce")),e.length,o.push(h));var y=u(t=m(o,t,"ciphertext")),d=t.length;o.push(y),a=m(o,a,"mac");var f,E=0|r._crypto_box_macbytes();a.length!==E&&b(o,"invalid mac length"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,"additional_data")),k=_.length,o.push(x)),n=m(o,n,"public_nonce");var S,T=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();n.length!==T&&b(o,"invalid public_nonce length"),S=u(n),o.push(S),s=m(o,s,"key");var w,Y=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==Y&&b(o,"invalid key length"),w=u(s),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===r._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,"ciphertext cannot be decrypted using that key")}function Y(e,t,a,_,n,s){var c=[];i(s);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=t&&(y=u(t=m(c,t,"additional_data")),d=t.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),n=m(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==S&&b(c,"invalid key length"),k=u(n),c.push(k);var T=new l(h+r._crypto_aead_chacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_chacha20poly1305_ietf_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,s);return v(c),Y}g(c,"invalid usage")}function B(e,t,a,_,n,s){var c=[];i(s);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=t&&(y=u(t=m(c,t,"additional_data")),d=t.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|r._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),n=m(c,n,"key");var k,S=0|r._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==S&&b(c,"invalid key length"),k=u(n),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|r._crypto_aead_chacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},s);return v(c),A}g(c,"invalid usage")}function A(e){var t=[];i(e);var a=new l(0|r._crypto_aead_chacha20poly1305_ietf_keybytes()),_=a.address;t.push(_),r._crypto_aead_chacha20poly1305_ietf_keygen(_);var n=p(a,e);return v(t),n}function K(e){var t=[];i(e);var a=new l(0|r._crypto_aead_chacha20poly1305_keybytes()),_=a.address;t.push(_),r._crypto_aead_chacha20poly1305_keygen(_);var n=p(a,e);return v(t),n}function M(e,t,a,_,n,s){var c=[];i(s);var o=null;null!=e&&(o=u(e=m(c,e,"secret_nonce")),e.length,c.push(o)),t=m(c,t,"ciphertext");var h,y=r._crypto_aead_xchacha20poly1305_ietf_abytes(),d=t.length;d<y&&b(c,"ciphertext is too short"),h=u(t),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,"additional_data")),E=a.length,c.push(f)),_=m(c,_,"public_nonce");var x,k=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==k&&b(c,"invalid public_nonce length"),x=u(_),c.push(x),n=m(c,n,"key");var S,T=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==T&&b(c,"invalid key length"),S=u(n),c.push(S);var w=new l(d-r._crypto_aead_xchacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===r._crypto_aead_xchacha20poly1305_ietf_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,s);return v(c),B}g(c,"ciphertext cannot be decrypted using that key")}function I(e,t,a,_,n,s,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,"secret_nonce")),e.length,o.push(h));var y=u(t=m(o,t,"ciphertext")),d=t.length;o.push(y),a=m(o,a,"mac");var f,E=0|r._crypto_box_macbytes();a.length!==E&&b(o,"invalid mac length"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,"additional_data")),k=_.length,o.push(x)),n=m(o,n,"public_nonce");var S,T=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();n.length!==T&&b(o,"invalid public_nonce length"),S=u(n),o.push(S),s=m(o,s,"key");var w,Y=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==Y&&b(o,"invalid key length"),w=u(s),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===r._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,"ciphertext cannot be decrypted using that key")}function N(e,t,a,_,n,s){var c=[];i(s);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=t&&(y=u(t=m(c,t,"additional_data")),d=t.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),n=m(c,n,"key");var k,S=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==S&&b(c,"invalid key length"),k=u(n),c.push(k);var T=new l(h+r._crypto_aead_xchacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===r._crypto_aead_xchacha20poly1305_ietf_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,s);return v(c),Y}g(c,"invalid usage")}function L(e,t,a,_,n,s){var c=[];i(s);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=t&&(y=u(t=m(c,t,"additional_data")),d=t.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|r._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),n=m(c,n,"key");var k,S=0|r._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==S&&b(c,"invalid key length"),k=u(n),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|r._crypto_aead_xchacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===r._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},s);return v(c),A}g(c,"invalid usage")}function U(e){var t=[];i(e);var a=new l(0|r._crypto_aead_xchacha20poly1305_ietf_keybytes()),_=a.address;t.push(_),r._crypto_aead_xchacha20poly1305_ietf_keygen(_);var n=p(a,e);return v(t),n}function O(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"key");var c,o=0|r._crypto_auth_keybytes();t.length!==o&&b(_,"invalid key length"),c=u(t),_.push(c);var h=new l(0|r._crypto_auth_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_auth(y,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function C(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"key");var c,o=0|r._crypto_auth_hmacsha256_keybytes();t.length!==o&&b(_,"invalid key length"),c=u(t),_.push(c);var h=new l(0|r._crypto_auth_hmacsha256_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_auth_hmacsha256(y,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function R(e){var t=[];i(e);var a=new l(0|r._crypto_auth_hmacsha256_keybytes()),_=a.address;t.push(_),r._crypto_auth_hmacsha256_keygen(_);var n=p(a,e);return v(t),n}function P(e,t,a){var _=[];e=m(_,e,"tag");var n,s=0|r._crypto_auth_hmacsha256_bytes();e.length!==s&&b(_,"invalid tag length"),n=u(e),_.push(n);var c=u(t=m(_,t,"message")),o=t.length;_.push(c),a=m(_,a,"key");var h,p=0|r._crypto_auth_hmacsha256_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|r._crypto_auth_hmacsha256_verify(n,c,o,0,h));return v(_),y}function G(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"key");var c,o=0|r._crypto_auth_hmacsha512_keybytes();t.length!==o&&b(_,"invalid key length"),c=u(t),_.push(c);var h=new l(0|r._crypto_auth_hmacsha512_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_auth_hmacsha512(y,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function X(e){var t=[];i(e);var a=new l(0|r._crypto_auth_hmacsha512_keybytes()),_=a.address;t.push(_),r._crypto_auth_hmacsha512_keygen(_);var n=p(a,e);return v(t),n}function D(e,t,a){var _=[];e=m(_,e,"tag");var n,s=0|r._crypto_auth_hmacsha512_bytes();e.length!==s&&b(_,"invalid tag length"),n=u(e),_.push(n);var c=u(t=m(_,t,"message")),o=t.length;_.push(c),a=m(_,a,"key");var h,p=0|r._crypto_auth_hmacsha512_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|r._crypto_auth_hmacsha512_verify(n,c,o,0,h));return v(_),y}function F(e){var t=[];i(e);var a=new l(0|r._crypto_auth_keybytes()),_=a.address;t.push(_),r._crypto_auth_keygen(_);var n=p(a,e);return v(t),n}function V(e,t,a){var _=[];e=m(_,e,"tag");var n,s=0|r._crypto_auth_bytes();e.length!==s&&b(_,"invalid tag length"),n=u(e),_.push(n);var c=u(t=m(_,t,"message")),o=t.length;_.push(c),a=m(_,a,"key");var h,p=0|r._crypto_auth_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|r._crypto_auth_verify(n,c,o,0,h));return v(_),y}function H(e,t,a){var _=[];i(a),e=m(_,e,"publicKey");var n,s=0|r._crypto_box_publickeybytes();e.length!==s&&b(_,"invalid publicKey length"),n=u(e),_.push(n),t=m(_,t,"privateKey");var c,o=0|r._crypto_box_secretkeybytes();t.length!==o&&b(_,"invalid privateKey length"),c=u(t),_.push(c);var h=new l(0|r._crypto_box_beforenmbytes()),y=h.address;if(_.push(y),0==(0|r._crypto_box_beforenm(y,n,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function z(e){var t=[];i(e);var a=new l(0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes()),_=a.address;t.push(_);var n=new l(0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes()),s=n.address;t.push(s),r._crypto_box_curve25519xchacha20poly1305_keypair(_,s);var c=p({publicKey:a,privateKey:n,keyType:"curve25519"},e);return v(t),c}function j(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"publicKey");var c,o=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();t.length!==o&&b(_,"invalid publicKey length"),c=u(t),_.push(c);var h=new l(s+r._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),y=h.address;_.push(y),r._crypto_box_curve25519xchacha20poly1305_seal(y,n,s,0,c);var d=p(h,a);return v(_),d}function q(e,t,a,_){var n=[];i(_),e=m(n,e,"ciphertext");var s,c=r._crypto_box_curve25519xchacha20poly1305_sealbytes(),o=e.length;o<c&&b(n,"ciphertext is too short"),s=u(e),n.push(s),t=m(n,t,"publicKey");var h,y=0|r._crypto_box_curve25519xchacha20poly1305_publickeybytes();t.length!==y&&b(n,"invalid publicKey length"),h=u(t),n.push(h),a=m(n,a,"secretKey");var d,g=0|r._crypto_box_curve25519xchacha20poly1305_secretkeybytes();a.length!==g&&b(n,"invalid secretKey length"),d=u(a),n.push(d);var f=new l(o-r._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),E=f.address;n.push(E),r._crypto_box_curve25519xchacha20poly1305_seal_open(E,s,o,0,h,d);var x=p(f,_);return v(n),x}function W(e,t,a,_,n){var s=[];i(n);var c=u(e=m(s,e,"message")),o=e.length;s.push(c),t=m(s,t,"nonce");var h,y=0|r._crypto_box_noncebytes();t.length!==y&&b(s,"invalid nonce length"),h=u(t),s.push(h),a=m(s,a,"publicKey");var d,f=0|r._crypto_box_publickeybytes();a.length!==f&&b(s,"invalid publicKey length"),d=u(a),s.push(d),_=m(s,_,"privateKey");var E,x=0|r._crypto_box_secretkeybytes();_.length!==x&&b(s,"invalid privateKey length"),E=u(_),s.push(E);var k=new l(0|o),S=k.address;s.push(S);var T=new l(0|r._crypto_box_macbytes()),w=T.address;if(s.push(w),0==(0|r._crypto_box_detached(S,w,c,o,0,h,d,E))){var Y=p({ciphertext:k,mac:T},n);return v(s),Y}g(s,"invalid usage")}function J(e,t,a,_,n){var s=[];i(n);var c=u(e=m(s,e,"message")),o=e.length;s.push(c),t=m(s,t,"nonce");var h,y=0|r._crypto_box_noncebytes();t.length!==y&&b(s,"invalid nonce length"),h=u(t),s.push(h),a=m(s,a,"publicKey");var d,f=0|r._crypto_box_publickeybytes();a.length!==f&&b(s,"invalid publicKey length"),d=u(a),s.push(d),_=m(s,_,"privateKey");var E,x=0|r._crypto_box_secretkeybytes();_.length!==x&&b(s,"invalid privateKey length"),E=u(_),s.push(E);var k=new l(o+r._crypto_box_macbytes()|0),S=k.address;if(s.push(S),0==(0|r._crypto_box_easy(S,c,o,0,h,d,E))){var T=p(k,n);return v(s),T}g(s,"invalid usage")}function Q(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"message")),c=e.length;n.push(s),t=m(n,t,"nonce");var o,h=0|r._crypto_box_noncebytes();t.length!==h&&b(n,"invalid nonce length"),o=u(t),n.push(o),a=m(n,a,"sharedKey");var y,d=0|r._crypto_box_beforenmbytes();a.length!==d&&b(n,"invalid sharedKey length"),y=u(a),n.push(y);var f=new l(c+r._crypto_box_macbytes()|0),E=f.address;if(n.push(E),0==(0|r._crypto_box_easy_afternm(E,s,c,0,o,y))){var x=p(f,_);return v(n),x}g(n,"invalid usage")}function Z(e){var t=[];i(e);var a=new l(0|r._crypto_box_publickeybytes()),_=a.address;t.push(_);var n=new l(0|r._crypto_box_secretkeybytes()),s=n.address;if(t.push(s),0==(0|r._crypto_box_keypair(_,s))){var c={publicKey:p(a,e),privateKey:p(n,e),keyType:"x25519"};return v(t),c}g(t,"internal error")}function $(e,t,a,_,n,s){var c=[];i(s);var o=u(e=m(c,e,"ciphertext")),h=e.length;c.push(o),t=m(c,t,"mac");var y,d=0|r._crypto_box_macbytes();t.length!==d&&b(c,"invalid mac length"),y=u(t),c.push(y),a=m(c,a,"nonce");var f,E=0|r._crypto_box_noncebytes();a.length!==E&&b(c,"invalid nonce length"),f=u(a),c.push(f),_=m(c,_,"publicKey");var x,k=0|r._crypto_box_publickeybytes();_.length!==k&&b(c,"invalid publicKey length"),x=u(_),c.push(x),n=m(c,n,"privateKey");var S,T=0|r._crypto_box_secretkeybytes();n.length!==T&&b(c,"invalid privateKey length"),S=u(n),c.push(S);var w=new l(0|h),Y=w.address;if(c.push(Y),0==(0|r._crypto_box_open_detached(Y,o,y,h,0,f,x,S))){var B=p(w,s);return v(c),B}g(c,"incorrect key pair for the given ciphertext")}function ee(e,t,a,_,n){var s=[];i(n),e=m(s,e,"ciphertext");var c,o=r._crypto_box_macbytes(),h=e.length;h<o&&b(s,"ciphertext is too short"),c=u(e),s.push(c),t=m(s,t,"nonce");var y,d=0|r._crypto_box_noncebytes();t.length!==d&&b(s,"invalid nonce length"),y=u(t),s.push(y),a=m(s,a,"publicKey");var f,E=0|r._crypto_box_publickeybytes();a.length!==E&&b(s,"invalid publicKey length"),f=u(a),s.push(f),_=m(s,_,"privateKey");var x,k=0|r._crypto_box_secretkeybytes();_.length!==k&&b(s,"invalid privateKey length"),x=u(_),s.push(x);var S=new l(h-r._crypto_box_macbytes()|0),T=S.address;if(s.push(T),0==(0|r._crypto_box_open_easy(T,c,h,0,y,f,x))){var w=p(S,n);return v(s),w}g(s,"incorrect key pair for the given ciphertext")}function te(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"ciphertext")),c=e.length;n.push(s),t=m(n,t,"nonce");var o,h=0|r._crypto_box_noncebytes();t.length!==h&&b(n,"invalid nonce length"),o=u(t),n.push(o),a=m(n,a,"sharedKey");var y,d=0|r._crypto_box_beforenmbytes();a.length!==d&&b(n,"invalid sharedKey length"),y=u(a),n.push(y);var f=new l(c-r._crypto_box_macbytes()|0),E=f.address;if(n.push(E),0==(0|r._crypto_box_open_easy_afternm(E,s,c,0,o,y))){var x=p(f,_);return v(n),x}g(n,"incorrect secret key for the given ciphertext")}function re(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"publicKey");var c,o=0|r._crypto_box_publickeybytes();t.length!==o&&b(_,"invalid publicKey length"),c=u(t),_.push(c);var h=new l(s+r._crypto_box_sealbytes()|0),y=h.address;if(_.push(y),0==(0|r._crypto_box_seal(y,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function ae(e,t,a,_){var n=[];i(_),e=m(n,e,"ciphertext");var s,c=r._crypto_box_sealbytes(),o=e.length;o<c&&b(n,"ciphertext is too short"),s=u(e),n.push(s),t=m(n,t,"publicKey");var h,y=0|r._crypto_box_publickeybytes();t.length!==y&&b(n,"invalid publicKey length"),h=u(t),n.push(h),a=m(n,a,"privateKey");var d,f=0|r._crypto_box_secretkeybytes();a.length!==f&&b(n,"invalid privateKey length"),d=u(a),n.push(d);var E=new l(o-r._crypto_box_sealbytes()|0),x=E.address;if(n.push(x),0==(0|r._crypto_box_seal_open(x,s,o,0,h,d))){var k=p(E,_);return v(n),k}g(n,"incorrect key pair for the given ciphertext")}function _e(e,t){var a=[];i(t),e=m(a,e,"seed");var _,n=0|r._crypto_box_seedbytes();e.length!==n&&b(a,"invalid seed length"),_=u(e),a.push(_);var s=new l(0|r._crypto_box_publickeybytes()),c=s.address;a.push(c);var o=new l(0|r._crypto_box_secretkeybytes()),h=o.address;if(a.push(h),0==(0|r._crypto_box_seed_keypair(c,h,_))){var y={publicKey:p(s,t),privateKey:p(o,t),keyType:"x25519"};return v(a),y}g(a,"invalid usage")}function ne(e,t,a){var _=[];i(a),e=m(_,e,"p");var n,s=0|r._crypto_core_ristretto255_bytes();e.length!==s&&b(_,"invalid p length"),n=u(e),_.push(n),t=m(_,t,"q");var c,o=0|r._crypto_core_ristretto255_bytes();t.length!==o&&b(_,"invalid q length"),c=u(t),_.push(c);var h=new l(0|r._crypto_core_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_core_ristretto255_add(y,n,c))){var d=p(h,a);return v(_),d}g(_,"inputs is invalid element")}function se(e,t){var a=[];i(t);var _=u(e=m(a,e,"r"));e.length,a.push(_);var n=new l(0|r._crypto_core_ristretto255_bytes()),s=n.address;if(a.push(s),0==(0|r._crypto_core_ristretto255_from_hash(s,_))){var c=p(n,t);return v(a),c}g(a,"invalid usage")}function ce(e,t){var a=[];i(t);var _=u(e=m(a,e,"point"));e.length,a.push(_);var n=1==(0|r._crypto_core_ristretto255_is_valid_point(_));return v(a),n}function oe(e){var t=[];i(e);var a=new l(0|r._crypto_core_ristretto255_bytes()),_=a.address;t.push(_),r._crypto_core_ristretto255_random(_);var n=p(a,e);return v(t),n}function he(e,t,a){var _=[];i(a),e=m(_,e,"x");var n,s=0|r._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(_,"invalid x length"),n=u(e),_.push(n),t=m(_,t,"y");var c,o=0|r._crypto_core_ristretto255_scalarbytes();t.length!==o&&b(_,"invalid y length"),c=u(t),_.push(c);var h=new l(0|r._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),r._crypto_core_ristretto255_scalar_add(y,n,c);var d=p(h,a);return v(_),d}function pe(e,t){var a=[];i(t);var _=u(e=m(a,e,"s"));e.length,a.push(_);var n=new l(0|r._crypto_core_ristretto255_scalarbytes()),s=n.address;a.push(s),r._crypto_core_ristretto255_scalar_complement(s,_);var c=p(n,t);return v(a),c}function ye(e,t){var a=[];i(t);var _=u(e=m(a,e,"s"));e.length,a.push(_);var n=new l(0|r._crypto_core_ristretto255_scalarbytes()),s=n.address;if(a.push(s),0==(0|r._crypto_core_ristretto255_scalar_invert(s,_))){var c=p(n,t);return v(a),c}g(a,"invalid reciprocate")}function ie(e,t,a){var _=[];i(a),e=m(_,e,"x");var n,s=0|r._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(_,"invalid x length"),n=u(e),_.push(n),t=m(_,t,"y");var c,o=0|r._crypto_core_ristretto255_scalarbytes();t.length!==o&&b(_,"invalid y length"),c=u(t),_.push(c);var h=new l(0|r._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),r._crypto_core_ristretto255_scalar_mul(y,n,c);var d=p(h,a);return v(_),d}function le(e,t){var a=[];i(t);var _=u(e=m(a,e,"s"));e.length,a.push(_);var n=new l(0|r._crypto_core_ristretto255_scalarbytes()),s=n.address;a.push(s),r._crypto_core_ristretto255_scalar_negate(s,_);var c=p(n,t);return v(a),c}function ue(e){var t=[];i(e);var a=new l(0|r._crypto_core_ristretto255_scalarbytes()),_=a.address;t.push(_),r._crypto_core_ristretto255_random(_);var n=p(a,e);return v(t),n}function de(e,t){var a=[];i(t);var _=u(e=m(a,e,"sample"));e.length,a.push(_);var n=new l(0|r._crypto_core_ristretto255_scalarbytes()),s=n.address;a.push(s),r._crypto_core_ristretto255_scalar_reduce(s,_);var c=p(n,t);return v(a),c}function ve(e,t,a){var _=[];i(a),e=m(_,e,"x");var n,s=0|r._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(_,"invalid x length"),n=u(e),_.push(n),t=m(_,t,"y");var c,o=0|r._crypto_core_ristretto255_scalarbytes();t.length!==o&&b(_,"invalid y length"),c=u(t),_.push(c);var h=new l(0|r._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),r._crypto_core_ristretto255_scalar_sub(y,n,c);var d=p(h,a);return v(_),d}function ge(e,t,a){var _=[];i(a),e=m(_,e,"p");var n,s=0|r._crypto_core_ristretto255_bytes();e.length!==s&&b(_,"invalid p length"),n=u(e),_.push(n),t=m(_,t,"q");var c,o=0|r._crypto_core_ristretto255_bytes();t.length!==o&&b(_,"invalid q length"),c=u(t),_.push(c);var h=new l(0|r._crypto_core_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_core_ristretto255_sub(y,n,c))){var d=p(h,a);return v(_),d}g(_,"inputs is invalid element")}function be(e,t,a,_){var n=[];i(_),f(n,e,"hash_length"),("number"!=typeof e||(0|e)!==e||e<0)&&b(n,"hash_length must be an unsigned integer");var s=u(t=m(n,t,"message")),c=t.length;n.push(s);var o=null,h=0;null!=a&&(o=u(a=m(n,a,"key")),h=a.length,n.push(o));var y=new l(e|=0),d=y.address;if(n.push(d),0==(0|r._crypto_generichash(d,e,s,c,0,o,h))){var E=p(y,_);return v(n),E}g(n,"invalid usage")}function fe(e,t,a,_,n){var s=[];i(n),f(s,e,"subkey_len"),("number"!=typeof e||(0|e)!==e||e<0)&&b(s,"subkey_len must be an unsigned integer");var c=null,o=0;null!=t&&(c=u(t=m(s,t,"key")),o=t.length,s.push(c)),a=m(s,a,"id");var h,y=0|r._crypto_generichash_blake2b_saltbytes();a.length!==y&&b(s,"invalid id length"),h=u(a),s.push(h),_=m(s,_,"ctx");var d,E=0|r._crypto_generichash_blake2b_personalbytes();_.length!==E&&b(s,"invalid ctx length"),d=u(_),s.push(d);var x=new l(0|e),k=x.address;if(s.push(k),0==(0|r._crypto_generichash_blake2b_salt_personal(k,e,null,0,0,c,o,h,d))){var S=p(x,n);return v(s),S}g(s,"invalid usage")}function me(e,t,a){var _=[];i(a),f(_,e,"state_address"),f(_,t,"hash_length"),("number"!=typeof t||(0|t)!==t||t<0)&&b(_,"hash_length must be an unsigned integer");var n=new l(t|=0),s=n.address;if(_.push(s),0==(0|r._crypto_generichash_final(e,s,t))){var c=(r._free(e),p(n,a));return v(_),c}g(_,"invalid usage")}function Ee(e,t,a){var _=[];i(a);var n=null,s=0;null!=e&&(n=u(e=m(_,e,"key")),s=e.length,_.push(n)),f(_,t,"hash_length"),("number"!=typeof t||(0|t)!==t||t<0)&&b(_,"hash_length must be an unsigned integer");var c=new l(357).address;if(0==(0|r._crypto_generichash_init(c,n,s,t))){var o=c;return v(_),o}g(_,"invalid usage")}function xe(e){var t=[];i(e);var a=new l(0|r._crypto_generichash_keybytes()),_=a.address;t.push(_),r._crypto_generichash_keygen(_);var n=p(a,e);return v(t),n}function ke(e,t,a){var _=[];i(a),f(_,e,"state_address");var n=u(t=m(_,t,"message_chunk")),s=t.length;_.push(n),0!=(0|r._crypto_generichash_update(e,n,s))&&g(_,"invalid usage"),v(_)}function Se(e,t){var a=[];i(t);var _=u(e=m(a,e,"message")),n=e.length;a.push(_);var s=new l(0|r._crypto_hash_bytes()),c=s.address;if(a.push(c),0==(0|r._crypto_hash(c,_,n,0))){var o=p(s,t);return v(a),o}g(a,"invalid usage")}function Te(e,t){var a=[];i(t);var _=u(e=m(a,e,"message")),n=e.length;a.push(_);var s=new l(0|r._crypto_hash_sha256_bytes()),c=s.address;if(a.push(c),0==(0|r._crypto_hash_sha256(c,_,n,0))){var o=p(s,t);return v(a),o}g(a,"invalid usage")}function we(e,t){var a=[];i(t),f(a,e,"state_address");var _=new l(0|r._crypto_hash_sha256_bytes()),n=_.address;if(a.push(n),0==(0|r._crypto_hash_sha256_final(e,n))){var s=(r._free(e),p(_,t));return v(a),s}g(a,"invalid usage")}function Ye(e){var t=[];i(e);var a=new l(104).address;if(0==(0|r._crypto_hash_sha256_init(a))){var _=a;return v(t),_}g(t,"invalid usage")}function Be(e,t,a){var _=[];i(a),f(_,e,"state_address");var n=u(t=m(_,t,"message_chunk")),s=t.length;_.push(n),0!=(0|r._crypto_hash_sha256_update(e,n,s))&&g(_,"invalid usage"),v(_)}function Ae(e,t){var a=[];i(t);var _=u(e=m(a,e,"message")),n=e.length;a.push(_);var s=new l(0|r._crypto_hash_sha512_bytes()),c=s.address;if(a.push(c),0==(0|r._crypto_hash_sha512(c,_,n,0))){var o=p(s,t);return v(a),o}g(a,"invalid usage")}function Ke(e,t){var a=[];i(t),f(a,e,"state_address");var _=new l(0|r._crypto_hash_sha512_bytes()),n=_.address;if(a.push(n),0==(0|r._crypto_hash_sha512_final(e,n))){var s=(r._free(e),p(_,t));return v(a),s}g(a,"invalid usage")}function Me(e){var t=[];i(e);var a=new l(208).address;if(0==(0|r._crypto_hash_sha512_init(a))){var _=a;return v(t),_}g(t,"invalid usage")}function Ie(e,t,a){var _=[];i(a),f(_,e,"state_address");var n=u(t=m(_,t,"message_chunk")),s=t.length;_.push(n),0!=(0|r._crypto_hash_sha512_update(e,n,s))&&g(_,"invalid usage"),v(_)}function Ne(e,t,a,n,s){var c=[];i(s),f(c,e,"subkey_len"),("number"!=typeof e||(0|e)!==e||e<0)&&b(c,"subkey_len must be an unsigned integer"),f(c,t,"subkey_id"),("number"!=typeof t||(0|t)!==t||t<0)&&b(c,"subkey_id must be an unsigned integer"),"string"!=typeof a&&b(c,"ctx must be a string"),a=_(a+"\0"),null!=h&&a.length-1!==h&&b(c,"invalid ctx length");var o=u(a),h=a.length-1;c.push(o),n=m(c,n,"key");var y,d=0|r._crypto_kdf_keybytes();n.length!==d&&b(c,"invalid key length"),y=u(n),c.push(y);var g=new l(0|e),E=g.address;c.push(E),r._crypto_kdf_derive_from_key(E,e,t,t>>>24>>>8,o,y);var x=p(g,s);return v(c),x}function Le(e){var t=[];i(e);var a=new l(0|r._crypto_kdf_keybytes()),_=a.address;t.push(_),r._crypto_kdf_keygen(_);var n=p(a,e);return v(t),n}function Ue(e,t,a,_){var n=[];i(_),e=m(n,e,"clientPublicKey");var s,c=0|r._crypto_kx_publickeybytes();e.length!==c&&b(n,"invalid clientPublicKey length"),s=u(e),n.push(s),t=m(n,t,"clientSecretKey");var o,h=0|r._crypto_kx_secretkeybytes();t.length!==h&&b(n,"invalid clientSecretKey length"),o=u(t),n.push(o),a=m(n,a,"serverPublicKey");var y,d=0|r._crypto_kx_publickeybytes();a.length!==d&&b(n,"invalid serverPublicKey length"),y=u(a),n.push(y);var f=new l(0|r._crypto_kx_sessionkeybytes()),E=f.address;n.push(E);var x=new l(0|r._crypto_kx_sessionkeybytes()),k=x.address;if(n.push(k),0==(0|r._crypto_kx_client_session_keys(E,k,s,o,y))){var S=p({sharedRx:f,sharedTx:x},_);return v(n),S}g(n,"invalid usage")}function Oe(e){var t=[];i(e);var a=new l(0|r._crypto_kx_publickeybytes()),_=a.address;t.push(_);var n=new l(0|r._crypto_kx_secretkeybytes()),s=n.address;if(t.push(s),0==(0|r._crypto_kx_keypair(_,s))){var c={publicKey:p(a,e),privateKey:p(n,e),keyType:"x25519"};return v(t),c}g(t,"internal error")}function Ce(e,t){var a=[];i(t),e=m(a,e,"seed");var _,n=0|r._crypto_kx_seedbytes();e.length!==n&&b(a,"invalid seed length"),_=u(e),a.push(_);var s=new l(0|r._crypto_kx_publickeybytes()),c=s.address;a.push(c);var o=new l(0|r._crypto_kx_secretkeybytes()),h=o.address;if(a.push(h),0==(0|r._crypto_kx_seed_keypair(c,h,_))){var y={publicKey:p(s,t),privateKey:p(o,t),keyType:"x25519"};return v(a),y}g(a,"internal error")}function Re(e,t,a,_){var n=[];i(_),e=m(n,e,"serverPublicKey");var s,c=0|r._crypto_kx_publickeybytes();e.length!==c&&b(n,"invalid serverPublicKey length"),s=u(e),n.push(s),t=m(n,t,"serverSecretKey");var o,h=0|r._crypto_kx_secretkeybytes();t.length!==h&&b(n,"invalid serverSecretKey length"),o=u(t),n.push(o),a=m(n,a,"clientPublicKey");var y,d=0|r._crypto_kx_publickeybytes();a.length!==d&&b(n,"invalid clientPublicKey length"),y=u(a),n.push(y);var f=new l(0|r._crypto_kx_sessionkeybytes()),E=f.address;n.push(E);var x=new l(0|r._crypto_kx_sessionkeybytes()),k=x.address;if(n.push(k),0==(0|r._crypto_kx_server_session_keys(E,k,s,o,y))){var S=p({sharedRx:f,sharedTx:x},_);return v(n),S}g(n,"invalid usage")}function Pe(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"key");var c,o=0|r._crypto_onetimeauth_keybytes();t.length!==o&&b(_,"invalid key length"),c=u(t),_.push(c);var h=new l(0|r._crypto_onetimeauth_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_onetimeauth(y,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function Ge(e,t){var a=[];i(t),f(a,e,"state_address");var _=new l(0|r._crypto_onetimeauth_bytes()),n=_.address;if(a.push(n),0==(0|r._crypto_onetimeauth_final(e,n))){var s=(r._free(e),p(_,t));return v(a),s}g(a,"invalid usage")}function Xe(e,t){var a=[];i(t);var _=null;null!=e&&(_=u(e=m(a,e,"key")),e.length,a.push(_));var n=new l(144).address;if(0==(0|r._crypto_onetimeauth_init(n,_))){var s=n;return v(a),s}g(a,"invalid usage")}function De(e){var t=[];i(e);var a=new l(0|r._crypto_onetimeauth_keybytes()),_=a.address;t.push(_),r._crypto_onetimeauth_keygen(_);var n=p(a,e);return v(t),n}function Fe(e,t,a){var _=[];i(a),f(_,e,"state_address");var n=u(t=m(_,t,"message_chunk")),s=t.length;_.push(n),0!=(0|r._crypto_onetimeauth_update(e,n,s))&&g(_,"invalid usage"),v(_)}function Ve(e,t,a){var _=[];e=m(_,e,"hash");var n,s=0|r._crypto_onetimeauth_bytes();e.length!==s&&b(_,"invalid hash length"),n=u(e),_.push(n);var c=u(t=m(_,t,"message")),o=t.length;_.push(c),a=m(_,a,"key");var h,p=0|r._crypto_onetimeauth_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|r._crypto_onetimeauth_verify(n,c,o,0,h));return v(_),y}function He(e,t,a,_,n,s,c){var o=[];i(c),f(o,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&b(o,"keyLength must be an unsigned integer");var h=u(t=m(o,t,"password")),y=t.length;o.push(h),a=m(o,a,"salt");var d,E=0|r._crypto_pwhash_saltbytes();a.length!==E&&b(o,"invalid salt length"),d=u(a),o.push(d),f(o,_,"opsLimit"),("number"!=typeof _||(0|_)!==_||_<0)&&b(o,"opsLimit must be an unsigned integer"),f(o,n,"memLimit"),("number"!=typeof n||(0|n)!==n||n<0)&&b(o,"memLimit must be an unsigned integer"),f(o,s,"algorithm"),("number"!=typeof s||(0|s)!==s||s<0)&&b(o,"algorithm must be an unsigned integer");var x=new l(0|e),k=x.address;if(o.push(k),0==(0|r._crypto_pwhash(k,e,0,h,y,0,d,_,0,n,s))){var S=p(x,c);return v(o),S}g(o,"invalid usage")}function ze(e,t,a,_,n,s){var c=[];i(s),f(c,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&b(c,"keyLength must be an unsigned integer");var o=u(t=m(c,t,"password")),h=t.length;c.push(o),a=m(c,a,"salt");var y,d=0|r._crypto_pwhash_scryptsalsa208sha256_saltbytes();a.length!==d&&b(c,"invalid salt length"),y=u(a),c.push(y),f(c,_,"opsLimit"),("number"!=typeof _||(0|_)!==_||_<0)&&b(c,"opsLimit must be an unsigned integer"),f(c,n,"memLimit"),("number"!=typeof n||(0|n)!==n||n<0)&&b(c,"memLimit must be an unsigned integer");var E=new l(0|e),x=E.address;if(c.push(x),0==(0|r._crypto_pwhash_scryptsalsa208sha256(x,e,0,o,h,0,y,_,0,n))){var k=p(E,s);return v(c),k}g(c,"invalid usage")}function je(e,t,a,_,n,s,c){var o=[];i(c);var h=u(e=m(o,e,"password")),y=e.length;o.push(h);var d=u(t=m(o,t,"salt")),E=t.length;o.push(d),f(o,a,"opsLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(o,"opsLimit must be an unsigned integer"),f(o,_,"r"),("number"!=typeof _||(0|_)!==_||_<0)&&b(o,"r must be an unsigned integer"),f(o,n,"p"),("number"!=typeof n||(0|n)!==n||n<0)&&b(o,"p must be an unsigned integer"),f(o,s,"keyLength"),("number"!=typeof s||(0|s)!==s||s<0)&&b(o,"keyLength must be an unsigned integer");var x=new l(0|s),k=x.address;if(o.push(k),0==(0|r._crypto_pwhash_scryptsalsa208sha256_ll(h,y,d,E,a,0,_,n,k,s))){var S=p(x,c);return v(o),S}g(o,"invalid usage")}function qe(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"password")),c=e.length;n.push(s),f(n,t,"opsLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&b(n,"opsLimit must be an unsigned integer"),f(n,a,"memLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(n,"memLimit must be an unsigned integer");var o=new l(0|r._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;if(n.push(o),0==(0|r._crypto_pwhash_scryptsalsa208sha256_str(o,s,c,0,t,0,a))){var h=r.UTF8ToString(o);return v(n),h}g(n,"invalid usage")}function We(e,t,a){var n=[];i(a),"string"!=typeof e&&b(n,"hashed_password must be a string"),e=_(e+"\0"),null!=c&&e.length-1!==c&&b(n,"invalid hashed_password length");var s=u(e),c=e.length-1;n.push(s);var o=u(t=m(n,t,"password")),h=t.length;n.push(o);var p=0==(0|r._crypto_pwhash_scryptsalsa208sha256_str_verify(s,o,h,0));return v(n),p}function Je(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"password")),c=e.length;n.push(s),f(n,t,"opsLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&b(n,"opsLimit must be an unsigned integer"),f(n,a,"memLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(n,"memLimit must be an unsigned integer");var o=new l(0|r._crypto_pwhash_strbytes()).address;if(n.push(o),0==(0|r._crypto_pwhash_str(o,s,c,0,t,0,a))){var h=r.UTF8ToString(o);return v(n),h}g(n,"invalid usage")}function Qe(e,t,a,n){var s=[];i(n),"string"!=typeof e&&b(s,"hashed_password must be a string"),e=_(e+"\0"),null!=o&&e.length-1!==o&&b(s,"invalid hashed_password length");var c=u(e),o=e.length-1;s.push(c),f(s,t,"opsLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&b(s,"opsLimit must be an unsigned integer"),f(s,a,"memLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(s,"memLimit must be an unsigned integer");var h=0!=(0|r._crypto_pwhash_str_needs_rehash(c,t,0,a));return v(s),h}function Ze(e,t,a){var n=[];i(a),"string"!=typeof e&&b(n,"hashed_password must be a string"),e=_(e+"\0"),null!=c&&e.length-1!==c&&b(n,"invalid hashed_password length");var s=u(e),c=e.length-1;n.push(s);var o=u(t=m(n,t,"password")),h=t.length;n.push(o);var p=0==(0|r._crypto_pwhash_str_verify(s,o,h,0));return v(n),p}function $e(e,t,a){var _=[];i(a),e=m(_,e,"privateKey");var n,s=0|r._crypto_scalarmult_scalarbytes();e.length!==s&&b(_,"invalid privateKey length"),n=u(e),_.push(n),t=m(_,t,"publicKey");var c,o=0|r._crypto_scalarmult_scalarbytes();t.length!==o&&b(_,"invalid publicKey length"),c=u(t),_.push(c);var h=new l(0|r._crypto_scalarmult_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_scalarmult(y,n,c))){var d=p(h,a);return v(_),d}g(_,"weak public key")}function et(e,t){var a=[];i(t),e=m(a,e,"privateKey");var _,n=0|r._crypto_scalarmult_scalarbytes();e.length!==n&&b(a,"invalid privateKey length"),_=u(e),a.push(_);var s=new l(0|r._crypto_scalarmult_scalarbytes()),c=s.address;if(a.push(c),0==(0|r._crypto_scalarmult_base(c,_))){var o=p(s,t);return v(a),o}g(a,"insecure scalar")}function tt(e,t,a){var _=[];i(a),e=m(_,e,"scalar");var n,s=0|r._crypto_scalarmult_ristretto255_scalarbytes();e.length!==s&&b(_,"invalid scalar length"),n=u(e),_.push(n),t=m(_,t,"privateKey");var c,o=0|r._crypto_scalarmult_ristretto255_bytes();t.length!==o&&b(_,"invalid privateKey length"),c=u(t),_.push(c);var h=new l(0|r._crypto_scalarmult_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_scalarmult_ristretto255(y,n,c))){var d=p(h,a);return v(_),d}g(_,"input is zero element")}function rt(e,t){var a=[];i(t);var _=u(e=m(a,e,"scalar"));e.length,a.push(_);var n=new l(0|r._crypto_core_ristretto255_bytes()),s=n.address;if(a.push(s),0==(0|r._crypto_scalarmult_ristretto255_base(s,_))){var c=p(n,t);return v(a),c}g(a,"scalar is 0")}function at(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"message")),c=e.length;n.push(s),t=m(n,t,"nonce");var o,h=0|r._crypto_secretbox_noncebytes();t.length!==h&&b(n,"invalid nonce length"),o=u(t),n.push(o),a=m(n,a,"key");var y,d=0|r._crypto_secretbox_keybytes();a.length!==d&&b(n,"invalid key length"),y=u(a),n.push(y);var f=new l(0|c),E=f.address;n.push(E);var x=new l(0|r._crypto_secretbox_macbytes()),k=x.address;if(n.push(k),0==(0|r._crypto_secretbox_detached(E,k,s,c,0,o,y))){var S=p({mac:x,cipher:f},_);return v(n),S}g(n,"invalid usage")}function _t(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"message")),c=e.length;n.push(s),t=m(n,t,"nonce");var o,h=0|r._crypto_secretbox_noncebytes();t.length!==h&&b(n,"invalid nonce length"),o=u(t),n.push(o),a=m(n,a,"key");var y,d=0|r._crypto_secretbox_keybytes();a.length!==d&&b(n,"invalid key length"),y=u(a),n.push(y);var f=new l(c+r._crypto_secretbox_macbytes()|0),E=f.address;if(n.push(E),0==(0|r._crypto_secretbox_easy(E,s,c,0,o,y))){var x=p(f,_);return v(n),x}g(n,"invalid usage")}function nt(e){var t=[];i(e);var a=new l(0|r._crypto_secretbox_keybytes()),_=a.address;t.push(_),r._crypto_secretbox_keygen(_);var n=p(a,e);return v(t),n}function st(e,t,a,_,n){var s=[];i(n);var c=u(e=m(s,e,"ciphertext")),o=e.length;s.push(c),t=m(s,t,"mac");var h,y=0|r._crypto_secretbox_macbytes();t.length!==y&&b(s,"invalid mac length"),h=u(t),s.push(h),a=m(s,a,"nonce");var d,f=0|r._crypto_secretbox_noncebytes();a.length!==f&&b(s,"invalid nonce length"),d=u(a),s.push(d),_=m(s,_,"key");var E,x=0|r._crypto_secretbox_keybytes();_.length!==x&&b(s,"invalid key length"),E=u(_),s.push(E);var k=new l(0|o),S=k.address;if(s.push(S),0==(0|r._crypto_secretbox_open_detached(S,c,h,o,0,d,E))){var T=p(k,n);return v(s),T}g(s,"wrong secret key for the given ciphertext")}function ct(e,t,a,_){var n=[];i(_),e=m(n,e,"ciphertext");var s,c=r._crypto_secretbox_macbytes(),o=e.length;o<c&&b(n,"ciphertext is too short"),s=u(e),n.push(s),t=m(n,t,"nonce");var h,y=0|r._crypto_secretbox_noncebytes();t.length!==y&&b(n,"invalid nonce length"),h=u(t),n.push(h),a=m(n,a,"key");var d,f=0|r._crypto_secretbox_keybytes();a.length!==f&&b(n,"invalid key length"),d=u(a),n.push(d);var E=new l(o-r._crypto_secretbox_macbytes()|0),x=E.address;if(n.push(x),0==(0|r._crypto_secretbox_open_easy(x,s,o,0,h,d))){var k=p(E,_);return v(n),k}g(n,"wrong secret key for the given ciphertext")}function ot(e,t,a){var _=[];i(a),e=m(_,e,"header");var n,s=0|r._crypto_secretstream_xchacha20poly1305_headerbytes();e.length!==s&&b(_,"invalid header length"),n=u(e),_.push(n),t=m(_,t,"key");var c,o=0|r._crypto_secretstream_xchacha20poly1305_keybytes();t.length!==o&&b(_,"invalid key length"),c=u(t),_.push(c);var h=new l(52).address;if(0==(0|r._crypto_secretstream_xchacha20poly1305_init_pull(h,n,c))){var p=h;return v(_),p}g(_,"invalid usage")}function ht(e,t){var a=[];i(t),e=m(a,e,"key");var _,n=0|r._crypto_secretstream_xchacha20poly1305_keybytes();e.length!==n&&b(a,"invalid key length"),_=u(e),a.push(_);var s=new l(52).address,c=new l(0|r._crypto_secretstream_xchacha20poly1305_headerbytes()),o=c.address;if(a.push(o),0==(0|r._crypto_secretstream_xchacha20poly1305_init_push(s,o,_))){var h={state:s,header:p(c,t)};return v(a),h}g(a,"invalid usage")}function pt(e){var t=[];i(e);var a=new l(0|r._crypto_secretstream_xchacha20poly1305_keybytes()),_=a.address;t.push(_),r._crypto_secretstream_xchacha20poly1305_keygen(_);var n=p(a,e);return v(t),n}function yt(e,t,a,_){var n=[];i(_),f(n,e,"state_address"),t=m(n,t,"cipher");var s,c=r._crypto_secretstream_xchacha20poly1305_abytes(),o=t.length;o<c&&b(n,"cipher is too short"),s=u(t),n.push(s);var h=null,y=0;null!=a&&(h=u(a=m(n,a,"ad")),y=a.length,n.push(h));var g=new l(o-r._crypto_secretstream_xchacha20poly1305_abytes()|0),E=g.address;n.push(E);var x,k=(x=d(1),n.push(x),(k=0===r._crypto_secretstream_xchacha20poly1305_pull(e,E,0,x,s,o,0,h,y)&&{tag:r.HEAPU8[x],message:g})&&{message:p(k.message,_),tag:k.tag});return v(n),k}function it(e,t,a,_,n){var s=[];i(n),f(s,e,"state_address");var c=u(t=m(s,t,"message_chunk")),o=t.length;s.push(c);var h=null,y=0;null!=a&&(h=u(a=m(s,a,"ad")),y=a.length,s.push(h)),f(s,_,"tag"),("number"!=typeof _||(0|_)!==_||_<0)&&b(s,"tag must be an unsigned integer");var d=new l(o+r._crypto_secretstream_xchacha20poly1305_abytes()|0),E=d.address;if(s.push(E),0==(0|r._crypto_secretstream_xchacha20poly1305_push(e,E,0,c,o,0,h,y,0,_))){var x=p(d,n);return v(s),x}g(s,"invalid usage")}function lt(e,t){var a=[];return i(t),f(a,e,"state_address"),r._crypto_secretstream_xchacha20poly1305_rekey(e),v(a),!0}function ut(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"key");var c,o=0|r._crypto_shorthash_keybytes();t.length!==o&&b(_,"invalid key length"),c=u(t),_.push(c);var h=new l(0|r._crypto_shorthash_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_shorthash(y,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function dt(e){var t=[];i(e);var a=new l(0|r._crypto_shorthash_keybytes()),_=a.address;t.push(_),r._crypto_shorthash_keygen(_);var n=p(a,e);return v(t),n}function vt(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"key");var c,o=0|r._crypto_shorthash_siphashx24_keybytes();t.length!==o&&b(_,"invalid key length"),c=u(t),_.push(c);var h=new l(0|r._crypto_shorthash_siphashx24_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_shorthash_siphashx24(y,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function gt(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"privateKey");var c,o=0|r._crypto_sign_secretkeybytes();t.length!==o&&b(_,"invalid privateKey length"),c=u(t),_.push(c);var h=new l(e.length+r._crypto_sign_bytes()|0),y=h.address;if(_.push(y),0==(0|r._crypto_sign(y,null,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function bt(e,t,a){var _=[];i(a);var n=u(e=m(_,e,"message")),s=e.length;_.push(n),t=m(_,t,"privateKey");var c,o=0|r._crypto_sign_secretkeybytes();t.length!==o&&b(_,"invalid privateKey length"),c=u(t),_.push(c);var h=new l(0|r._crypto_sign_bytes()),y=h.address;if(_.push(y),0==(0|r._crypto_sign_detached(y,null,n,s,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage")}function ft(e,t){var a=[];i(t),e=m(a,e,"edPk");var _,n=0|r._crypto_sign_publickeybytes();e.length!==n&&b(a,"invalid edPk length"),_=u(e),a.push(_);var s=new l(0|r._crypto_scalarmult_scalarbytes()),c=s.address;if(a.push(c),0==(0|r._crypto_sign_ed25519_pk_to_curve25519(c,_))){var o=p(s,t);return v(a),o}g(a,"invalid key")}function mt(e,t){var a=[];i(t),e=m(a,e,"edSk");var _,n=0|r._crypto_sign_secretkeybytes();e.length!==n&&b(a,"invalid edSk length"),_=u(e),a.push(_);var s=new l(0|r._crypto_scalarmult_scalarbytes()),c=s.address;if(a.push(c),0==(0|r._crypto_sign_ed25519_sk_to_curve25519(c,_))){var o=p(s,t);return v(a),o}g(a,"invalid key")}function Et(e,t){var a=[];i(t),e=m(a,e,"privateKey");var _,n=0|r._crypto_sign_secretkeybytes();e.length!==n&&b(a,"invalid privateKey length"),_=u(e),a.push(_);var s=new l(0|r._crypto_sign_publickeybytes()),c=s.address;if(a.push(c),0==(0|r._crypto_sign_ed25519_sk_to_pk(c,_))){var o=p(s,t);return v(a),o}g(a,"invalid key")}function xt(e,t){var a=[];i(t),e=m(a,e,"privateKey");var _,n=0|r._crypto_sign_secretkeybytes();e.length!==n&&b(a,"invalid privateKey length"),_=u(e),a.push(_);var s=new l(0|r._crypto_sign_seedbytes()),c=s.address;if(a.push(c),0==(0|r._crypto_sign_ed25519_sk_to_seed(c,_))){var o=p(s,t);return v(a),o}g(a,"invalid key")}function kt(e,t,a){var _=[];i(a),f(_,e,"state_address"),t=m(_,t,"privateKey");var n,s=0|r._crypto_sign_secretkeybytes();t.length!==s&&b(_,"invalid privateKey length"),n=u(t),_.push(n);var c=new l(0|r._crypto_sign_bytes()),o=c.address;if(_.push(o),0==(0|r._crypto_sign_final_create(e,o,null,n))){var h=(r._free(e),p(c,a));return v(_),h}g(_,"invalid usage")}function St(e,t,a,_){var n=[];i(_),f(n,e,"state_address"),t=m(n,t,"signature");var s,c=0|r._crypto_sign_bytes();t.length!==c&&b(n,"invalid signature length"),s=u(t),n.push(s),a=m(n,a,"publicKey");var o,h=0|r._crypto_sign_publickeybytes();a.length!==h&&b(n,"invalid publicKey length"),o=u(a),n.push(o);var p=0==(0|r._crypto_sign_final_verify(e,s,o));return v(n),p}function Tt(e){var t=[];i(e);var a=new l(208).address;if(0==(0|r._crypto_sign_init(a))){var _=a;return v(t),_}g(t,"internal error")}function wt(e){var t=[];i(e);var a=new l(0|r._crypto_sign_publickeybytes()),_=a.address;t.push(_);var n=new l(0|r._crypto_sign_secretkeybytes()),s=n.address;if(t.push(s),0==(0|r._crypto_sign_keypair(_,s))){var c={publicKey:p(a,e),privateKey:p(n,e),keyType:"ed25519"};return v(t),c}g(t,"internal error")}function Yt(e,t,a){var _=[];i(a),e=m(_,e,"signedMessage");var n,s=r._crypto_sign_bytes(),c=e.length;c<s&&b(_,"signedMessage is too short"),n=u(e),_.push(n),t=m(_,t,"publicKey");var o,h=0|r._crypto_sign_publickeybytes();t.length!==h&&b(_,"invalid publicKey length"),o=u(t),_.push(o);var y=new l(c-r._crypto_sign_bytes()|0),d=y.address;if(_.push(d),0==(0|r._crypto_sign_open(d,null,n,c,0,o))){var f=p(y,a);return v(_),f}g(_,"incorrect signature for the given public key")}function Bt(e,t){var a=[];i(t),e=m(a,e,"seed");var _,n=0|r._crypto_sign_seedbytes();e.length!==n&&b(a,"invalid seed length"),_=u(e),a.push(_);var s=new l(0|r._crypto_sign_publickeybytes()),c=s.address;a.push(c);var o=new l(0|r._crypto_sign_secretkeybytes()),h=o.address;if(a.push(h),0==(0|r._crypto_sign_seed_keypair(c,h,_))){var y={publicKey:p(s,t),privateKey:p(o,t),keyType:"ed25519"};return v(a),y}g(a,"invalid usage")}function At(e,t,a){var _=[];i(a),f(_,e,"state_address");var n=u(t=m(_,t,"message_chunk")),s=t.length;_.push(n),0!=(0|r._crypto_sign_update(e,n,s))&&g(_,"invalid usage"),v(_)}function Kt(e,t,a){var _=[];e=m(_,e,"signature");var n,s=0|r._crypto_sign_bytes();e.length!==s&&b(_,"invalid signature length"),n=u(e),_.push(n);var c=u(t=m(_,t,"message")),o=t.length;_.push(c),a=m(_,a,"publicKey");var h,p=0|r._crypto_sign_publickeybytes();a.length!==p&&b(_,"invalid publicKey length"),h=u(a),_.push(h);var y=0==(0|r._crypto_sign_verify_detached(n,c,o,0,h));return v(_),y}function Mt(e,t,a,_){var n=[];i(_),f(n,e,"outLength"),("number"!=typeof e||(0|e)!==e||e<0)&&b(n,"outLength must be an unsigned integer"),t=m(n,t,"key");var s,c=0|r._crypto_stream_chacha20_keybytes();t.length!==c&&b(n,"invalid key length"),s=u(t),n.push(s),a=m(n,a,"nonce");var o,h=0|r._crypto_stream_chacha20_noncebytes();a.length!==h&&b(n,"invalid nonce length"),o=u(a),n.push(o);var y=new l(0|e),d=y.address;n.push(d),r._crypto_stream_chacha20(d,e,0,o,s);var g=p(y,_);return v(n),g}function It(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"input_message")),c=e.length;n.push(s),t=m(n,t,"nonce");var o,h=0|r._crypto_stream_chacha20_ietf_noncebytes();t.length!==h&&b(n,"invalid nonce length"),o=u(t),n.push(o),a=m(n,a,"key");var y,d=0|r._crypto_stream_chacha20_ietf_keybytes();a.length!==d&&b(n,"invalid key length"),y=u(a),n.push(y);var f=new l(0|c),E=f.address;if(n.push(E),0===r._crypto_stream_chacha20_ietf_xor(E,s,c,0,o,y)){var x=p(f,_);return v(n),x}g(n,"invalid usage")}function Nt(e,t,a,_,n){var s=[];i(n);var c=u(e=m(s,e,"input_message")),o=e.length;s.push(c),t=m(s,t,"nonce");var h,y=0|r._crypto_stream_chacha20_ietf_noncebytes();t.length!==y&&b(s,"invalid nonce length"),h=u(t),s.push(h),f(s,a,"nonce_increment"),("number"!=typeof a||(0|a)!==a||a<0)&&b(s,"nonce_increment must be an unsigned integer"),_=m(s,_,"key");var d,E=0|r._crypto_stream_chacha20_ietf_keybytes();_.length!==E&&b(s,"invalid key length"),d=u(_),s.push(d);var x=new l(0|o),k=x.address;if(s.push(k),0===r._crypto_stream_chacha20_ietf_xor_ic(k,c,o,0,h,a,d)){var S=p(x,n);return v(s),S}g(s,"invalid usage")}function Lt(e){var t=[];i(e);var a=new l(0|r._crypto_stream_chacha20_keybytes()),_=a.address;t.push(_),r._crypto_stream_chacha20_keygen(_);var n=p(a,e);return v(t),n}function Ut(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"input_message")),c=e.length;n.push(s),t=m(n,t,"nonce");var o,h=0|r._crypto_stream_chacha20_noncebytes();t.length!==h&&b(n,"invalid nonce length"),o=u(t),n.push(o),a=m(n,a,"key");var y,d=0|r._crypto_stream_chacha20_keybytes();a.length!==d&&b(n,"invalid key length"),y=u(a),n.push(y);var f=new l(0|c),E=f.address;if(n.push(E),0===r._crypto_stream_chacha20_xor(E,s,c,0,o,y)){var x=p(f,_);return v(n),x}g(n,"invalid usage")}function Ot(e,t,a,_,n){var s=[];i(n);var c=u(e=m(s,e,"input_message")),o=e.length;s.push(c),t=m(s,t,"nonce");var h,y=0|r._crypto_stream_chacha20_noncebytes();t.length!==y&&b(s,"invalid nonce length"),h=u(t),s.push(h),f(s,a,"nonce_increment"),("number"!=typeof a||(0|a)!==a||a<0)&&b(s,"nonce_increment must be an unsigned integer"),_=m(s,_,"key");var d,E=0|r._crypto_stream_chacha20_keybytes();_.length!==E&&b(s,"invalid key length"),d=u(_),s.push(d);var x=new l(0|o),k=x.address;if(s.push(k),0===r._crypto_stream_chacha20_xor_ic(k,c,o,0,h,a,0,d)){var S=p(x,n);return v(s),S}g(s,"invalid usage")}function Ct(e){var t=[];i(e);var a=new l(0|r._crypto_stream_keybytes()),_=a.address;t.push(_),r._crypto_stream_keygen(_);var n=p(a,e);return v(t),n}function Rt(e){var t=[];i(e);var a=new l(0|r._crypto_stream_xchacha20_keybytes()),_=a.address;t.push(_),r._crypto_stream_xchacha20_keygen(_);var n=p(a,e);return v(t),n}function Pt(e,t,a,_){var n=[];i(_);var s=u(e=m(n,e,"input_message")),c=e.length;n.push(s),t=m(n,t,"nonce");var o,h=0|r._crypto_stream_xchacha20_noncebytes();t.length!==h&&b(n,"invalid nonce length"),o=u(t),n.push(o),a=m(n,a,"key");var y,d=0|r._crypto_stream_xchacha20_keybytes();a.length!==d&&b(n,"invalid key length"),y=u(a),n.push(y);var f=new l(0|c),E=f.address;if(n.push(E),0===r._crypto_stream_xchacha20_xor(E,s,c,0,o,y)){var x=p(f,_);return v(n),x}g(n,"invalid usage")}function Gt(e,t,a,_,n){var s=[];i(n);var c=u(e=m(s,e,"input_message")),o=e.length;s.push(c),t=m(s,t,"nonce");var h,y=0|r._crypto_stream_xchacha20_noncebytes();t.length!==y&&b(s,"invalid nonce length"),h=u(t),s.push(h),f(s,a,"nonce_increment"),("number"!=typeof a||(0|a)!==a||a<0)&&b(s,"nonce_increment must be an unsigned integer"),_=m(s,_,"key");var d,E=0|r._crypto_stream_xchacha20_keybytes();_.length!==E&&b(s,"invalid key length"),d=u(_),s.push(d);var x=new l(0|o),k=x.address;if(s.push(k),0===r._crypto_stream_xchacha20_xor_ic(k,c,o,0,h,a,0,d)){var S=p(x,n);return v(s),S}g(s,"invalid usage")}function Xt(e,t){var a=[];i(t),f(a,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&b(a,"length must be an unsigned integer");var _=new l(0|e),n=_.address;a.push(n),r._randombytes_buf(n,e);var s=p(_,t);return v(a),s}function Dt(e,t,a){var _=[];i(a),f(_,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&b(_,"length must be an unsigned integer"),t=m(_,t,"seed");var n,s=0|r._randombytes_seedbytes();t.length!==s&&b(_,"invalid seed length"),n=u(t),_.push(n);var c=new l(0|e),o=c.address;_.push(o),r._randombytes_buf_deterministic(o,e,n);var h=p(c,a);return v(_),h}function Ft(e){i(e),r._randombytes_close()}function Vt(e){i(e);var t=r._randombytes_random()>>>0;return v([]),t}function Ht(e,t){var a=[];i(t);for(var _=r._malloc(24),n=0;n<6;n++)r.setValue(_+4*n,r.Runtime.addFunction(e[["implementation_name","random","stir","uniform","buf","close"][n]]),"i32");0!=(0|r._randombytes_set_implementation(_))&&g(a,"unsupported implementation"),v(a)}function zt(e){i(e),r._randombytes_stir()}function jt(e,t){var a=[];i(t),f(a,e,"upper_bound"),("number"!=typeof e||(0|e)!==e||e<0)&&b(a,"upper_bound must be an unsigned integer");var _=r._randombytes_uniform(e)>>>0;return v(a),_}function qt(){var e=r._sodium_version_string(),t=r.UTF8ToString(e);return v([]),t}return l.prototype.to_Uint8Array=function(){var e=new Uint8Array(this.length);return e.set(r.HEAPU8.subarray(this.address,this.address+this.length)),e},e.add=function(e,t){if(!(e instanceof Uint8Array&&t instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can added");var r=e.length,a=0,_=0;if(t.length!=e.length)throw new TypeError("Arguments must have the same length");for(_=0;_<r;_++)a>>=8,a+=e[_]+t[_],e[_]=255&a},e.base64_variants=c,e.compare=function(e,t){if(!(e instanceof Uint8Array&&t instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==t.length)throw new TypeError("Only instances of identical length can be compared");for(var r=0,a=1,_=e.length;_-- >0;)r|=t[_]-e[_]>>8&a,a&=(t[_]^e[_])-1>>8;return r+r+a-1},e.from_base64=function(e,t){t=o(t);var a,_=[],n=new l(3*(e=m(_,e,"input")).length/4),s=u(e),c=d(4),h=d(4);return _.push(s),_.push(n.address),_.push(n.result_bin_len_p),_.push(n.b64_end_p),0!==r._sodium_base642bin(n.address,n.length,s,e.length,0,c,h,t)&&g(_,"invalid input"),r.getValue(h,"i32")-s!==e.length&&g(_,"incomplete input"),n.length=r.getValue(c,"i32"),a=n.to_Uint8Array(),v(_),a},e.from_hex=function(e){var t,a=[],_=new l((e=m(a,e,"input")).length/2),n=u(e),s=d(4);return a.push(n),a.push(_.address),a.push(_.hex_end_p),0!==r._sodium_hex2bin(_.address,_.length,n,e.length,0,0,s)&&g(a,"invalid input"),r.getValue(s,"i32")-n!==e.length&&g(a,"incomplete input"),t=_.to_Uint8Array(),v(a),t},e.from_string=_,e.increment=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be incremented");for(var t=256,r=0,a=e.length;r<a;r++)t>>=8,t+=e[r],e[r]=255&t},e.is_zero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be checked");for(var t=0,r=0,a=e.length;r<a;r++)t|=e[r];return 0===t},e.libsodium=t,e.memcmp=function(e,t){if(!(e instanceof Uint8Array&&t instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==t.length)throw new TypeError("Only instances of identical length can be compared");for(var r=0,a=0,_=e.length;a<_;a++)r|=e[a]^t[a];return 0===r},e.memzero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be wiped");for(var t=0,r=e.length;t<r;t++)e[t]=0},e.output_formats=function(){return["uint8array","text","hex","base64"]},e.pad=function(e,t){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((t|=0)<=0)throw new Error("block size must be > 0");var a,_=[],n=d(4),s=1,c=0,o=0|e.length,h=new l(o+t);_.push(n),_.push(h.address);for(var p=h.address,y=h.address+o+t;p<y;p++)r.HEAPU8[p]=e[c],c+=s=1&~((65535&((o-=s)>>>48|o>>>32|o>>>16|o))-1>>16);return 0!==r._sodium_pad(n,h.address,e.length,t,h.length)&&g(_,"internal error"),h.length=r.getValue(n,"i32"),a=h.to_Uint8Array(),v(_),a},e.unpad=function(e,t){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((t|=0)<=0)throw new Error("block size must be > 0");var a=[],_=u(e),n=d(4);return a.push(_),a.push(n),0!==r._sodium_unpad(n,_,e.length,t)&&g(a,"unsupported/invalid padding"),e=(e=new Uint8Array(e)).subarray(0,r.getValue(n,"i32")),v(a),e},e.ready=a,e.symbols=function(){return Object.keys(e).sort()},e.to_base64=h,e.to_hex=s,e.to_string=n,e}var r="object"==typeof e.sodium&&"function"==typeof e.sodium.onload?e.sodium.onload:null;"function"==typeof define&&define.amd?define(["exports","libsodium"],t):"object"==typeof exports&&"string"!=typeof exports.nodeName?t(exports,require("libsodium")):e.sodium=t(e.commonJsStrict={},e.libsodium),r&&e.sodium.ready.then((function(){r(e.sodium)}))}(this);

},{"libsodium":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/libsodium/dist/modules/libsodium.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/libsodium/dist/modules/libsodium.js":[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__dirname){(function (){
!function(A){function I(A){"use strict";var I;void 0===(I=A)&&(I={});var g=I;"object"!=typeof g.sodium&&("object"==typeof global?g=global:"object"==typeof window&&(g=window)),"object"==typeof g.sodium&&"number"==typeof g.sodium.totalMemory&&(I.TOTAL_MEMORY=g.sodium.totalMemory);var B=I;return I.ready=new Promise((function(A,I){(C=B).onAbort=I,C.print=function(A){},C.printErr=function(A){},C.onRuntimeInitialized=function(){try{C._crypto_secretbox_keybytes(),A()}catch(A){I(A)}},C.useBackupModule=function(){var A,I=void 0!==(I={})?I:{},g={};for(A in I)I.hasOwnProperty(A)&&(g[A]=I[A]);var C=[],Q=!1,E=!1,i=!1,n=!1;Q="object"==typeof window,E="function"==typeof importScripts,i="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,n=!Q&&!i&&!E;var a,r,o,e,t="";function c(A){return I.locateFile?I.locateFile(A,t):t+A}i?(t=E?require("path").dirname(t)+"/":__dirname+"/",a=function(A,I){var g=SA(A);return g?I?g:g.toString():(o||(o=require("fs")),e||(e=require("path")),A=e.normalize(A),o.readFileSync(A,I?null:"utf8"))},r=function(A){var I=a(A,!0);return I.buffer||(I=new Uint8Array(I)),l(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),C=process.argv.slice(2),"undefined"!=typeof module&&(module.exports=I),process.on("unhandledRejection",EA),I.inspect=function(){return"[Emscripten Module object]"}):n?("undefined"!=typeof read&&(a=function(A){var I=SA(A);return I?mA(I):read(A)}),r=function(A){var I;return(I=SA(A))?I:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(l("object"==typeof(I=read(A,"binary"))),I)},"undefined"!=typeof scriptArgs?C=scriptArgs:void 0!==arguments&&(C=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(Q||E)&&(E?t=self.location.href:document.currentScript&&(t=document.currentScript.src),t=0!==t.indexOf("blob:")?t.substr(0,t.lastIndexOf("/")+1):"",a=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=SA(A);if(g)return mA(g);throw I}},E&&(r=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=SA(A);if(g)return g;throw I}})),I.print;var f,y=I.printErr||void 0;for(A in g)g.hasOwnProperty(A)&&(I[A]=g[A]);g=null,I.arguments&&(C=I.arguments),I.thisProgram&&I.thisProgram,I.quit&&I.quit,I.wasmBinary&&(f=I.wasmBinary),I.noExitRuntime&&I.noExitRuntime;var s,w={Memory:function(A){this.buffer=new ArrayBuffer(65536*A.initial),this.grow=function(A){return PA(A)}},Table:function(A){var I=new Array(A.initial);return I.grow=function(A){I.length>=22&&EA("Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH."),I.push(null)},I.set=function(A,g){I[A]=g},I.get=function(A){return I[A]},I},Module:function(A){},Instance:function(A,I){this.exports=function(A,I,g){for(var B=new Uint8Array(I.buffer),C=new Uint8Array(123),Q=25;Q>=0;--Q)C[48+Q]=52+Q,C[65+Q]=Q,C[97+Q]=26+Q;function E(A,I,g){for(var B,Q,E=0,i=I,n=g.length,a=I+(3*n>>2)-("="==g[n-2])-("="==g[n-1]);E<n;E+=4)B=C[g.charCodeAt(E+1)],Q=C[g.charCodeAt(E+2)],A[i++]=C[g.charCodeAt(E)]<<2|B>>4,i<a&&(A[i++]=B<<4|Q>>2),i<a&&(A[i++]=Q<<6|C[g.charCodeAt(E+3)])}return C[43]=62,C[47]=63,E(B,1024,"InsgcmV0dXJuIE1vZHVsZS5nZXRSYW5kb21WYWx1ZSgpOyB9IgB7IGlmIChNb2R1bGUuZ2V0UmFuZG9tVmFsdWUgPT09IHVuZGVmaW5lZCkgeyB0cnkgeyB2YXIgd2luZG93XyA9ICdvYmplY3QnID09PSB0eXBlb2Ygd2luZG93ID8gd2luZG93IDogc2VsZjsgdmFyIGNyeXB0b18gPSB0eXBlb2Ygd2luZG93Xy5jcnlwdG8gIT09ICd1bmRlZmluZWQnID8gd2luZG93Xy5jcnlwdG8gOiB3aW5kb3dfLm1zQ3J5cHRvOyB2YXIgcmFuZG9tVmFsdWVzU3RhbmRhcmQgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IG5ldyBVaW50MzJBcnJheSgxKTsgY3J5cHRvXy5nZXRSYW5kb21WYWx1ZXMoYnVmKTsgcmV0dXJuIGJ1ZlswXSA+Pj4gMDsgfTsgcmFuZG9tVmFsdWVzU3RhbmRhcmQoKTsgTW9kdWxlLmdldFJhbmRvbVZhbHVlID0gcmFuZG9tVmFsdWVzU3RhbmRhcmQ7IH0gY2F0Y2ggKGUpIHsgdHJ5IHsgdmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpOyB2YXIgcmFuZG9tVmFsdWVOb2RlSlMgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IGNyeXB0b1sncmFuZG9tQnl0ZXMnXSg0KTsgcmV0dXJuIChidWZbMF0gPDwgMjQgfCBidWZbMV0gPDwgMTYgfCBidWZbMl0gPDwgOCB8IGJ1ZlszXSkgPj4+IDA7IH07IHJhbmRvbVZhbHVlTm9kZUpTKCk7IE1vZHVsZS5nZXRSYW5kb21WYWx1ZSA9IHJhbmRvbVZhbHVlTm9kZUpTOyB9IGNhdGNoIChlKSB7IHRocm93ICdObyBzZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgZm91bmQnOyB9IH0gfSB9AExpYnNvZGl1bURSR2J1Zl9sZW4gPD0gU0laRV9NQVgAcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwByYW5kb21ieXRlcwBTLT5idWZsZW4gPD0gQkxBS0UyQl9CTE9DS0JZVEVTAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGJsYWtlMmJfZmluYWwAAAAAAAAAAAjJvPNn5glqO6fKhIWuZ7sr+JT+cvNuPPE2HV869U+l0YLmrX9SDlEfbD4rjGgFm2u9Qfur2YMfeSF+ExnN4FtvdXRsZW4gPD0gVUlOVDhfTUFYAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAY3J5cHRvX2dlbmVyaWNoYXNoX2JsYWtlMmJfZmluYWwAAAAAAAAAtnhZ/4Vy0wC9bhX/DwpqACnAAQCY6Hn/vDyg/5lxzv8At+L+tA1I/wAAAAAAAAAAsKAO/tPJhv+eGI8Af2k1AGAMvQCn1/v/n0yA/mpl4f8e/AQAkgyu"),E(B,2224,"WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"),E(B,2272,"hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"),E(B,3264,"AQ=="),E(B,3296,"JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="),E(B,3487,""),E(B,34460,"AQ=="),E(B,34496,"AQ=="),E(B,34528,"4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw=="),E(B,34720,"CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gWyKuKNeYL4pCzWXvI5FEN3EvO03sz/vAtbzbiYGl27XpOLVI81vCVjkZ0AW28RHxWZtPGa+kgj+SGIFt2tVeHKtCAgOjmKoH2L5vcEUBW4MSjLLkTr6FMSTitP/Vw30MVW+Je/J0Xb5ysZYWO/6x3oA1Esclpwbcm5Qmac908ZvB0krxnsFpm+TjJU84hke+77XVjIvGncEPZZysd8yhDCR1AitZbyzpLYPkpm6qhHRK1PtBvdypsFy1UxGD2oj5dqvfZu5SUT6YEDK0LW3GMag/IfuYyCcDsOQO777Hf1m/wo+oPfML4MYlpwqTR5Gn1W+CA+BRY8oGcG4OCmcpKRT8L9JGhQq3JybJJlw4IRsu7SrEWvxtLE3fs5WdEw04U95jr4tUcwplqLJ3PLsKanbmru1HLsnCgTs1ghSFLHKSZAPxTKHov6IBMEK8S2YaqJGX+NBwi0vCML5UBqNRbMcYUu/WGeiS0RCpZVUkBpnWKiBxV4U1DvS40bsycKBqEMjQ0rgWwaQZU6tBUQhsNx6Z647fTHdIJ6hIm+G1vLA0Y1rJxbMMHDnLikHjSqrYTnPjY3dPypxbo7iy1vNvLmj8su9d7oKPdGAvF0NvY6V4cqvwoRR4yITsOWQaCALHjCgeYyP6/76Q6b2C3utsUKQVecay96P5vitTcuPyeHHGnGEm6s4+J8oHwsAhx7iG0R7r4M3WfdrqeNFu7n9PffW6bxdyqmfwBqaYyKLFfWMKrg35vgSYPxEbRxwTNQtxG4R9BCP1d9sokyTHQHuryjK8vskVCr6ePEwNEJzEZx1DtkI+y77UxUwqfmX8nCl/Wez61jqrb8tfF1hHSowZRGyA"),E(B,35568,"YjY0X3BvcyA8PSBiNjRfbGVuAHNvZGl1bS9jb2RlY3MuYwBzb2RpdW1fYmluMmJhc2U2NAAkYXJnb24yaWQAJGFyZ29uMmkAJHY9ACRtPQAsdD0ALHA9ACRhcmdvbjJpZCR2PQAkYXJnb24yaSR2PQAkYXJnb24yaWQkACRhcmdvbjJpJA=="),E(B,35728,"U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMBADEuMC4xOA=="),E(B,35773,"QAAAAQAAAAIAAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQ=="),function(A,I,B){var C=I.memory,Q=g,E=new A.Int8Array(B),i=new A.Int16Array(B),n=new A.Int32Array(B),a=new A.Uint8Array(B),r=(new A.Uint16Array(B),new A.Uint32Array(B)),o=(new A.Float32Array(B),new A.Float64Array(B),A.Math.imul),e=(A.Math.fround,A.Math.abs,A.Math.clz32),t=(A.Math.min,A.Math.max,A.Math.floor,A.Math.ceil,A.Math.sqrt,I.abort),c=(A.NaN,A.Infinity,I.a),f=I.b,y=I.c,s=I.d,w=I.e,h=I.f,D=5279472,u=0,p=0,l=0;function F(A,I){var g,B,C,Q,i,r,o,e,t=0,c=0,f=0,y=0,s=0,w=0,h=0,u=0,p=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0,v=0,S=0,N=0,R=0,M=0,d=0,P=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,T=0,W=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,QA=0,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,cA=0,fA=0,yA=0,sA=0,wA=0,hA=0,DA=0,uA=0;for(D=$=D-256|0;aA=(F=BA<<3)+($+128|0)|0,O=a[4+(F=I+F|0)|0]|a[F+5|0]<<8|a[F+6|0]<<16|a[F+7|0]<<24,n[aA>>2]=a[0|F]|a[F+1|0]<<8|a[F+2|0]<<16|a[F+3|0]<<24,n[aA+4>>2]=O,16!=(0|(BA=BA+1|0)););for(F=j($,A,64),n[(I=F)+88>>2]=1595750129,n[I+92>>2]=-1521486534,G=a[(I=A)+88|0]|a[I+89|0]<<8|a[I+90|0]<<16|a[I+91|0]<<24,aA=a[I+92|0]|a[I+93|0]<<8|a[I+94|0]<<16|a[I+95|0]<<24,s=a[I+72|0]|a[I+73|0]<<8|a[I+74|0]<<16|a[I+75|0]<<24,O=a[I+76|0]|a[I+77|0]<<8|a[I+78|0]<<16|a[I+79|0]<<24,rA=a[I+80|0]|a[I+81|0]<<8|a[I+82|0]<<16|a[I+83|0]<<24,eA=a[I+84|0]|a[I+85|0]<<8|a[I+86|0]<<16|a[I+87|0]<<24,CA=n[F+4>>2],$=F,I=(t=n[F+36>>2])+n[F+132>>2]|0,(nA=(f=n[F+32>>2])+(BA=n[F+128>>2])|0)>>>0<BA>>>0&&(I=I+1|0),I=I+CA|0,nA=I=(BA=nA+n[F>>2]|0)>>>0<nA>>>0?I+1|0:I,BA=jg((CA=BA)^(a[(BA=A)+64|0]|a[BA+65|0]<<8|a[BA+66|0]<<16|a[BA+67|0]<<24)^-1377402159,I^(a[BA+68|0]|a[BA+69|0]<<8|a[BA+70|0]<<16|a[BA+71|0]<<24)^1359893119,32),u=I=l,I=I+1779033703|0,(BA=(y=BA)+-205731576|0)>>>0<4089235720&&(I=I+1|0),c=f^(R=BA),f=I,c=jg(c,t^I,24),BA=n[(t=F)+136>>2],I=nA+(w=l)|0,(nA=c+CA|0)>>>0<CA>>>0&&(I=I+1|0),nA=BA+nA|0,I=(g=n[t+140>>2])+I|0,q=jg((_=nA)^y,(L=_>>>0<BA>>>0?I+1|0:I)^u,16),nA=I=l,n[$+96>>2]=q,n[$+100>>2]=I,I=f+I|0,(CA=R+q|0)>>>0<R>>>0&&(I=I+1|0),y=CA,n[F+64>>2]=y,n[$+68>>2]=I,m=I,CA=jg(c^y,w^I,63),u=I=l,n[F+32>>2]=CA,n[F+36>>2]=I,t=n[F+12>>2],H=s,I=(cA=n[F+148>>2])+(s=n[F+44>>2])|0,(w=(f=n[F+144>>2])+(c=n[F+40>>2])|0)>>>0<c>>>0&&(I=I+1|0),I=I+t|0,t=O,O=I=(R=w+n[F+8>>2]|0)>>>0<w>>>0?I+1|0:I,w=t=jg(H^R^725511199,t^I^-1694144372,32),EA=I=l,I=I+-1150833019|0,(t=t+-2067093701|0)>>>0<2227873595&&(I=I+1|0),H=c^t,c=I,s=jg(H,s^I,24),I=O+(h=l)|0,(O=s+R|0)>>>0<R>>>0&&(I=I+1|0),O=(R=n[F+152>>2])+O|0,I=n[F+156>>2]+I|0,AA=jg((v=O)^w,(d=v>>>0<R>>>0?I+1|0:I)^EA,16),w=I=l,n[$+104>>2]=AA,n[$+108>>2]=I,I=c+I|0,(O=t+AA|0)>>>0<t>>>0&&(I=I+1|0),p=O,n[F+72>>2]=p,n[$+76>>2]=I,P=I,R=jg(s^p,h^I,63),t=l,O=n[F+20>>2],H=rA,I=(tA=n[F+164>>2])+(rA=n[F+52>>2])|0,(c=(K=n[F+160>>2])+(s=n[F+48>>2])|0)>>>0<s>>>0&&(I=I+1|0),I=I+O|0,Y=jg(H^(U=$=c+n[F+16>>2]|0)^-79577749,(O=U>>>0<c>>>0?I+1|0:I)^eA^528734635,32),eA=I=l,I=I+1013904242|0,($=Y+-23791573|0)>>>0<4271175723&&(I=I+1|0),H=s^(c=$),s=I,rA=$=jg(H,rA^I,24),EA=I=l,h=eA,I=I+O|0,(O=U+$|0)>>>0<$>>>0&&(I=I+1|0),I=I+(k=B=n[F+172>>2])|0,V=jg((x=$=(eA=n[F+168>>2])+O|0)^Y,(M=x>>>0<O>>>0?I+1|0:I)^h,16),I=s+(Z=l)|0,($=c+V|0)>>>0<c>>>0&&(I=I+1|0),H=I,c=jg((U=$)^rA,I^EA,63),s=l,rA=n[F+28>>2],k=G,I=(C=n[F+180>>2])+(Y=n[F+60>>2])|0,(EA=($=n[F+176>>2])+(G=n[F+56>>2])|0)>>>0<G>>>0&&(I=I+1|0),I=I+rA|0,I=(O=EA+n[F+24>>2]|0)>>>0<EA>>>0?I+1|0:I,EA=O,h=I,J=jg(k^O^327033209,I^aA^1541459225,32),aA=I=l,I=I+-1521486534|0,(O=J+1595750129|0)>>>0<1595750129&&(I=I+1|0),rA=O,G=O=jg(G^O,I^Y,24),k=rA,b=I,N=aA,rA=n[F+188>>2],I=h+(Y=l)|0,(O=G+EA|0)>>>0<EA>>>0&&(I=I+1|0),EA=O,I=I+(S=rA)|0,T=O=(aA=n[F+184>>2])+O|0,EA=jg(O^J,(h=N)^(N=O>>>0<EA>>>0?I+1|0:I),16),S=G,I=(G=l)+b|0,(h=(O=EA)+k|0)>>>0<O>>>0&&(I=I+1|0),J=h,O=I,h=jg(S^h,I^Y,63),Y=l,I=t+L|0,(L=_+R|0)>>>0<R>>>0&&(I=I+1|0),I=I+(k=fA=n[F+196>>2])|0,EA=jg((b=EA)^(k=EA=(wA=n[F+192>>2])+L|0),(_=G)^(G=k>>>0<L>>>0?I+1|0:I),32),L=F,_=I=l,S=R,I=H+I|0,(R=U+(b=EA)|0)>>>0<U>>>0&&(I=I+1|0),H=t,t=I,X=jg(S^R,H^I,24),EA=F,U=n[F+200>>2],S=b,I=G+(b=l)|0,(H=k+X|0)>>>0<k>>>0&&(I=I+1|0),G=U+H|0,I=(yA=n[EA+204>>2])+I|0,sA=G,gA=jg(S^G,(H=_)^(_=G>>>0<U>>>0?I+1|0:I),16),H=I=l,n[L+120>>2]=gA,n[L+124>>2]=I,I=t+I|0,(t=R+gA|0)>>>0<R>>>0&&(I=I+1|0),G=t,n[F+80>>2]=t,n[EA+84>>2]=I,t^=X,X=I,k=jg(t,b^I,63),b=l,EA=s,I=s+d|0,(c=v+(t=c)|0)>>>0<v>>>0&&(I=I+1|0),s=c,I=I+(L=i=n[F+212>>2])|0,nA=jg((S=q)^(q=c=(R=n[F+208>>2])+c|0),(c=c>>>0<s>>>0?I+1|0:I)^nA,32),v=t,I=(t=l)+O|0,(s=(O=nA)+J|0)>>>0<O>>>0&&(I=I+1|0),v=O=jg(v^s,I^EA,24),d=I,r=n[F+220>>2],z=nA,I=(EA=l)+c|0,(nA=q+v|0)>>>0<v>>>0&&(I=I+1|0),I=I+(S=r)|0,t=jg(z^(J=O=(L=n[F+216>>2])+nA|0),(q=J>>>0<nA>>>0?I+1|0:I)^t,16),I=(I=d)+(d=l)|0,(nA=t+s|0)>>>0<t>>>0&&(I=I+1|0),s=I,c=jg((S=nA)^v,I^EA,63),v=l,O=h,z=Y,I=Y+M|0,(h=h+x|0)>>>0<x>>>0&&(I=I+1|0),Y=h,I=I+(W=EA=n[F+228>>2])|0,W=h=(nA=n[F+224>>2])+h|0,AA=jg(h^AA,(M=w)^(w=h>>>0<Y>>>0?I+1|0:I),32),Y=O,I=m+(h=l)|0,(O=y+AA|0)>>>0<y>>>0&&(I=I+1|0),m=O=jg(Y^(y=O),I^z,24),x=I,M=h,QA=n[F+236>>2],I=(Y=l)+w|0,(w=m+W|0)>>>0<m>>>0&&(I=I+1|0),I=I+(IA=QA)|0,z=O=(h=n[F+232>>2])+w|0,w=jg(O^AA,(W=M)^(M=O>>>0<w>>>0?I+1|0:I),16),I=(I=x)+(x=l)|0,(y=y+w|0)>>>0<w>>>0&&(I=I+1|0),AA=y,y=I,Y=jg(AA^m,I^Y,63),m=l,IA=u,I=u+N|0,(u=(W=CA)+T|0)>>>0<W>>>0&&(I=I+1|0),I=I+(Q=n[F+244>>2])|0,N=Z,Z=I=(CA=(O=n[F+240>>2])+u|0)>>>0<u>>>0?I+1|0:I,V=jg((u=CA)^V,N^I,32),N=y,y=t,I=P+(CA=l)|0,(t=p+V|0)>>>0<p>>>0&&(I=I+1|0),p=I,W=jg(t^W,I^IA,24),T=I=l,P=CA,I=I+Z|0,(Z=u+(IA=W)|0)>>>0<u>>>0&&(I=I+1|0),I=I+(oA=e=n[F+252>>2])|0,I=(u=(CA=n[F+248>>2])+Z|0)>>>0<Z>>>0?I+1|0:I,Z=u,W=P,P=I,oA=jg(u^V,W^I,16),V=IA,I=p+(W=l)|0,(u=t+oA|0)>>>0<t>>>0&&(I=I+1|0),IA=u,t=I,V=jg(V^u,I^T,63),T=I=l,u=I,iA=y,I=_+Q|0,(p=(y=O)+sA|0)>>>0<y>>>0&&(I=I+1|0),I=I+u|0,u=y=p+V|0,y=jg(iA^y,(_=d)^(d=y>>>0<p>>>0?I+1|0:I),32),p=F,I=(I=N)+(N=l)|0,(AA=y+AA|0)>>>0<y>>>0&&(I=I+1|0),_=AA,AA=I,iA=T=jg(V^_,T^I,24),hA=I=l,V=I,sA=y,I=d+i|0,(y=u+R|0)>>>0<u>>>0&&(I=I+1|0),u=y,I=I+V|0,o=y=y+T|0,sA=jg(sA^y,(d=N)^(N=y>>>0<u>>>0?I+1|0:I),16),I=AA+(V=l)|0,(y=_+sA|0)>>>0<_>>>0&&(I=I+1|0),_=y,AA=I,u=jg(y^iA,I^hA,63),d=I=l,n[p+32>>2]=u,n[p+36>>2]=I,T=t,iA=w,I=tA+(p=b)|0,(t=K+(y=k)|0)>>>0<K>>>0&&(I=I+1|0),I=I+q|0,w=t=t+J|0,t=jg(iA^t,(k=t>>>0<J>>>0?I+1|0:I)^x,32),q=y,I=(y=l)+T|0,(K=t+IA|0)>>>0<t>>>0&&(I=I+1|0),J=p,p=I,J=x=jg(q^(b=K),J^I,24),q=I=l,K=I,T=t,I=k+fA|0,(t=w+wA|0)>>>0<w>>>0&&(I=I+1|0),w=t,I=I+K|0,k=t=t+x|0,T=jg(T^t,(K=t>>>0<w>>>0?I+1|0:I)^y,16),y=J,I=p+(x=l)|0,(t=b+T|0)>>>0<b>>>0&&(I=I+1|0),J=t,w=q,q=I,w=jg(y^t,w^I,63),t=l,y=c,I=(p=v)+yA|0,(U=c+U|0)>>>0<c>>>0&&(I=I+1|0),I=I+M|0,b=jg((v=c=U+z|0)^oA,(c=c>>>0<z>>>0?I+1|0:I)^W,32),M=y,I=X+(y=l)|0,(U=G+b|0)>>>0<G>>>0&&(I=I+1|0),G=p,p=I,X=M=jg(M^U,G^I,24),z=I=l,G=I,W=b,I=c+e|0,(b=(c=CA)+v|0)>>>0<c>>>0&&(I=I+1|0),I=I+G|0,I=(c=b+M|0)>>>0<b>>>0?I+1|0:I,b=c,v=I,tA=jg(W^c,I^y,16),G=X,I=p+(M=l)|0,(c=U+tA|0)>>>0<U>>>0&&(I=I+1|0),X=c,y=I,p=jg(G^c,I^z,63),U=l,z=m,I=m+QA|0,(Y=(G=Y)+(c=h)|0)>>>0<c>>>0&&(I=I+1|0),I=I+P|0,P=c=Y+Z|0,c=jg(c^gA,(Y=c>>>0<Z>>>0?I+1|0:I)^H,32),m=G,I=(I=s)+(s=l)|0,(G=c+S|0)>>>0<c>>>0&&(I=I+1|0),H=G,S=Z=jg(m^G,I^z,24),z=G=l,m=I,W=c,I=Y+C|0,(Y=(c=$)+P|0)>>>0<c>>>0&&(I=I+1|0),I=I+G|0,P=c=Y+Z|0,Y=jg(W^c,(Z=c>>>0<Y>>>0?I+1|0:I)^s,16),G=S,I=(I=m)+(m=l)|0,(s=(c=Y)+H|0)>>>0<c>>>0&&(I=I+1|0),S=s,s=I,H=jg(G^S,I^z,63),c=l,G=F,z=w,W=t,gA=Y,IA=w,I=N+g|0,(Y=(w=BA)+o|0)>>>0<w>>>0&&(I=I+1|0),I=I+t|0,t=jg(gA^(IA=w=IA+Y|0),(w=w>>>0<Y>>>0?I+1|0:I)^m,32),I=(gA=l)+y|0,(Y=t+X|0)>>>0<t>>>0&&(I=I+1|0),y=Y,Y=I,z=jg(y^z,I^W,24),m=I=l,N=I,I=w+EA|0,(X=(w=nA)+IA|0)>>>0<w>>>0&&(I=I+1|0),I=I+N|0,N=w=X+z|0,oA=jg(t^w,gA^(X=w>>>0<X>>>0?I+1|0:I),16),w=I=l,n[G+120>>2]=oA,n[G+124>>2]=I,G=z,I=I+Y|0,(t=y+oA|0)>>>0<y>>>0&&(I=I+1|0),z=t,y=I,Y=jg(G^t,I^m,63),G=l,m=p,W=U,I=U+K|0,(t=p+k|0)>>>0<k>>>0&&(I=I+1|0),p=t,I=I+(gA=yA=n[F+132>>2])|0,I=(t=(IA=n[F+128>>2])+t|0)>>>0<p>>>0?I+1|0:I,p=t,U=I,t=jg(t^sA,I^V,32),K=m,I=(I=s)+(s=l)|0,(m=t+S|0)>>>0<t>>>0&&(I=I+1|0),V=S=jg(K^(k=m),I^W,24),gA=m=l,K=I,iA=t,I=U+cA|0,(t=f+p|0)>>>0<p>>>0&&(I=I+1|0),p=t,I=I+m|0,S=t=t+S|0,t=jg(iA^t,(W=t>>>0<p>>>0?I+1|0:I)^s,16),I=(p=l)+K|0,(U=t+k|0)>>>0<t>>>0&&(I=I+1|0),K=U,s=U^V,V=I,s=jg(s,I^gA,63),U=l,m=c,gA=T,k=H,I=v+r|0,(H=b+L|0)>>>0<b>>>0&&(I=I+1|0),I=I+c|0,T=H=(T=k)+(b=H)|0,x=jg(gA^H,(c=H>>>0<b>>>0?I+1|0:I)^x,32),v=k,I=AA+(H=l)|0,(k=_+x|0)>>>0<_>>>0&&(I=I+1|0),AA=m=jg(v^k,I^m,24),gA=b=l,v=I,iA=x,_=m,I=c+rA|0,(m=(c=aA)+T|0)>>>0<c>>>0&&(I=I+1|0),I=I+b|0,x=c=_+m|0,H=jg(iA^c,(_=c>>>0<m>>>0?I+1|0:I)^H,16),m=AA,I=(AA=l)+v|0,(k=(c=H)+k|0)>>>0<c>>>0&&(I=I+1|0),v=k,c=I,k=jg(m^k,I^gA,63),b=l,T=d,I=d+B|0,(d=(m=u)+(u=eA)|0)>>>0<u>>>0&&(I=I+1|0),I=I+Z|0,d=I=(u=d+P|0)>>>0<P>>>0?I+1|0:I,gA=jg(u^tA,I^M,32),P=v,M=c,v=t,I=q+(t=l)|0,(c=J+gA|0)>>>0<J>>>0&&(I=I+1|0),q=J=jg(c^m,I^T,24),tA=T=l,m=I,Z=t,I=d+T|0,(d=u+J|0)>>>0<u>>>0&&(I=I+1|0),I=I+(iA=sA=n[F+156>>2])|0,I=(u=(t=n[F+152>>2])+d|0)>>>0<d>>>0?I+1|0:I,d=u,J=Z,Z=I,u=jg(u^gA,J^I,16),T=q,I=(J=l)+m|0,(m=(m=c)+(c=u)|0)>>>0<c>>>0&&(I=I+1|0),q=m,c=I,T=jg(T^m,I^tA,63),gA=I=l,m=I,iA=v,I=X+r|0,(v=N+L|0)>>>0<N>>>0&&(I=I+1|0),N=v,I=I+m|0,m=v=v+T|0,p=jg(iA^v,(N=v>>>0<N>>>0?I+1|0:I)^p,32),v=F,I=(I=M)+(M=l)|0,(X=p+P|0)>>>0<p>>>0&&(I=I+1|0),P=X,X=I,tA=gA=jg(T^P,gA^I,24),iA=I=l,T=I,hA=p,I=N+fA|0,(p=m+wA|0)>>>0<m>>>0&&(I=I+1|0),m=p,I=I+T|0,wA=p=p+gA|0,fA=jg(hA^p,(N=M)^(M=p>>>0<m>>>0?I+1|0:I),16),I=X+(N=l)|0,(p=P+fA|0)>>>0<P>>>0&&(I=I+1|0),P=p,X=I,p=jg(p^tA,I^iA,63),m=I=l,n[v+32>>2]=p,n[v+36>>2]=I,v=Y,T=G,gA=c,I=G+EA|0,(Y=(c=nA)+Y|0)>>>0<c>>>0&&(I=I+1|0),I=I+W|0,I=(c=Y+S|0)>>>0<S>>>0?I+1|0:I,S=c,Y=I,c=jg(c^H,I^AA,32),W=v,I=(H=l)+gA|0,(v=c+q|0)>>>0<c>>>0&&(I=I+1|0),G=v,v=I,W=AA=jg(W^G,I^T,24),gA=I=l,q=I,T=c,I=Y+yA|0,(c=S+IA|0)>>>0<IA>>>0&&(I=I+1|0),Y=c,I=I+q|0,tA=c=c+AA|0,T=jg(T^c,(q=c>>>0<Y>>>0?I+1|0:I)^H,16),I=v+(S=l)|0,(c=G+T|0)>>>0<G>>>0&&(I=I+1|0),AA=c,c^=W,W=I,Y=jg(c,I^gA,63),c=l,v=u,I=B+(G=U)|0,(u=(H=s)+(s=eA)|0)>>>0<s>>>0&&(I=I+1|0),I=I+_|0,u=s=u+x|0,s=jg(v^s,(U=s>>>0<x>>>0?I+1|0:I)^J,32),I=(I=y)+(y=l)|0,(v=s+z|0)>>>0<s>>>0&&(I=I+1|0),J=x=jg((_=H)^(H=v),I^G,24),_=G=l,v=I,z=s,I=U+cA|0,(s=f+u|0)>>>0<u>>>0&&(I=I+1|0),u=s,I=I+G|0,gA=s=s+x|0,U=jg(z^s,(x=s>>>0<u>>>0?I+1|0:I)^y,16),G=J,I=(J=l)+v|0,(y=(s=U)+H|0)>>>0<s>>>0&&(I=I+1|0),v=y,u=I,H=jg(G^y,I^_,63),s=l,I=e+(G=b)|0,(b=(y=k)+(k=CA)|0)>>>0<k>>>0&&(I=I+1|0),k=b+d|0,I=I+Z|0,b=w,w=I=k>>>0<d>>>0?I+1|0:I,Z=jg(k^oA,b^I,32),_=y,I=V+(y=l)|0,(b=K+Z|0)>>>0<K>>>0&&(I=I+1|0),d=G,G=I,_=K=jg(_^b,d^I,24),z=I=l,d=I,I=w+QA|0,(w=h+k|0)>>>0<k>>>0&&(I=I+1|0),k=w,I=I+d|0,K=w=w+K|0,IA=jg(d=w^Z,(Z=w>>>0<k>>>0?I+1|0:I)^y,16),k=_,I=G+(d=l)|0,(y=b+IA|0)>>>0<b>>>0&&(I=I+1|0),_=y,w=I,G=jg(k^y,I^z,63),y=l,k=F,b=Y,z=c,I=M+i|0,(M=(Y=R)+wA|0)>>>0<Y>>>0&&(I=I+1|0),I=I+c|0,I=(Y=(V=b)+M|0)>>>0<M>>>0?I+1|0:I,M=Y,Y=I,c=jg(M^IA,I^d,32),d=b,I=(IA=l)+u|0,(b=c+v|0)>>>0<c>>>0&&(I=I+1|0),u=b,b=I,z=jg(d^u,I^z,24),v=I=l,d=I,I=Y+Q|0,(M=(Y=O)+M|0)>>>0<Y>>>0&&(I=I+1|0),I=I+d|0,yA=Y=M+z|0,oA=jg(c^Y,IA^(M=Y>>>0<M>>>0?I+1|0:I),16),Y=I=l,n[k+120>>2]=oA,n[k+124>>2]=I,k=z,I=I+b|0,(c=u+oA|0)>>>0<u>>>0&&(I=I+1|0),z=c,u=I,k=jg(k^c,I^v,63),b=l,v=H,d=s,c=H,I=q+sA|0,(H=t+tA|0)>>>0<t>>>0&&(I=I+1|0),I=I+s|0,q=c=c+H|0,c=jg(c^fA,(s=c>>>0<H>>>0?I+1|0:I)^N,32),N=v,I=(I=w)+(w=l)|0,(v=c+_|0)>>>0<c>>>0&&(I=I+1|0),IA=N=jg(N^(H=v),I^d,24),V=v=l,d=I,iA=c,I=s+C|0,(s=(c=$)+q|0)>>>0<c>>>0&&(I=I+1|0),I=I+v|0,N=c=s+N|0,c=jg(iA^c,(_=c>>>0<s>>>0?I+1|0:I)^w,16),I=(w=l)+d|0,(H=c+H|0)>>>0<c>>>0&&(I=I+1|0),q=H,s=H^IA,IA=I,s=jg(s,I^V,63),H=l,v=G,d=y,V=G,I=x+rA|0,(x=(G=aA)+gA|0)>>>0<G>>>0&&(I=I+1|0),I=I+y|0,V=G=V+x|0,x=jg(G^T,(y=G>>>0<x>>>0?I+1|0:I)^S,32),S=v,I=X+(G=l)|0,(v=P+x|0)>>>0<P>>>0&&(I=I+1|0),S=X=jg(S^v,I^d,24),T=d=l,P=I,gA=x,I=y+g|0,(x=(y=BA)+V|0)>>>0<y>>>0&&(I=I+1|0),I=I+d|0,I=(y=x+X|0)>>>0<x>>>0?I+1|0:I,x=y,X=I,G=jg(gA^y,I^G,16),d=S,I=(S=l)+P|0,(v=(y=G)+v|0)>>>0<y>>>0&&(I=I+1|0),P=v,y=I,v=jg(d^v,I^T,63),d=l,V=p,T=m,iA=U,I=m+Z|0,(p=p+K|0)>>>0<K>>>0&&(I=I+1|0),U=p,I=I+(gA=fA=n[F+204>>2])|0,I=(p=(wA=n[F+200>>2])+p|0)>>>0<U>>>0?I+1|0:I,U=p,m=I,gA=jg(iA^p,I^J,32),K=y,y=c,I=W+(c=l)|0,(p=AA+gA|0)>>>0<AA>>>0&&(I=I+1|0),V=AA=jg(p^V,I^T,24),T=W=l,Z=p,J=I,I=m+W|0,(m=U+AA|0)>>>0<U>>>0&&(I=I+1|0),I=I+(iA=tA=n[F+164>>2])|0,AA=U=(p=n[F+160>>2])+m|0,U=jg(U^gA,(W=U>>>0<m>>>0?I+1|0:I)^c,16),I=(I=J)+(J=l)|0,(m=(c=U)+Z|0)>>>0<c>>>0&&(I=I+1|0),Z=m,c=I,V=jg(m^V,I^T,63),T=I=l,m=I,gA=y,I=M+rA|0,(M=(y=aA)+yA|0)>>>0<y>>>0&&(I=I+1|0),I=I+m|0,I=(y=M+V|0)>>>0<M>>>0?I+1|0:I,M=y,m=w,w=I,y=jg(gA^y,m^I,32),m=F,I=(I=K)+(K=l)|0,(gA=y+P|0)>>>0<y>>>0&&(I=I+1|0),iA=yA=jg(V^(P=gA),I^T,24),hA=V=l,T=P,gA=I,P=y,I=w+fA|0,(y=M+wA|0)>>>0<M>>>0&&(I=I+1|0),w=y,I=I+V|0,yA=y=y+yA|0,P=jg(P^y,(M=y>>>0<w>>>0?I+1|0:I)^K,16),I=(V=l)+gA|0,(w=(y=P)+T|0)>>>0<y>>>0&&(I=I+1|0),T=w,y=I,w=jg(w^iA,I^hA,63),K=I=l,n[m+32>>2]=w,n[m+36>>2]=I,m=k,gA=b,iA=G,I=b+sA|0,(G=t+k|0)>>>0<t>>>0&&(I=I+1|0),I=I+_|0,I=(t=G+N|0)>>>0<N>>>0?I+1|0:I,N=t,G=I,t=jg(iA^t,I^S,32),I=(I=c)+(c=l)|0,(b=t+Z|0)>>>0<t>>>0&&(I=I+1|0),_=Z=jg((k=b)^m,I^gA,24),S=b=l,m=I,iA=t,I=G+g|0,(G=(t=BA)+N|0)>>>0<t>>>0&&(I=I+1|0),I=I+b|0,gA=t=G+Z|0,G=jg(iA^t,(b=t>>>0<G>>>0?I+1|0:I)^c,16),I=(I=m)+(m=l)|0,(c=(t=G)+k|0)>>>0<t>>>0&&(I=I+1|0),Z=c,N=I,k=jg(c^_,I^S,63),t=l,_=s,S=H,I=H+QA|0,(c=s+h|0)>>>0<s>>>0&&(I=I+1|0),I=I+X|0,s=c=c+x|0,c=jg(c^U,(h=c>>>0<x>>>0?I+1|0:I)^J,32),I=(I=u)+(u=l)|0,(H=c+z|0)>>>0<c>>>0&&(I=I+1|0),U=H,H=I,_=J=jg(U^_,I^S,24),X=I=l,x=I,S=c,I=h+EA|0,(c=s+nA|0)>>>0<s>>>0&&(I=I+1|0),s=c,I=I+x|0,sA=c=c+J|0,QA=jg(S^c,(x=c>>>0<s>>>0?I+1|0:I)^u,16),I=H+(J=l)|0,(c=U+QA|0)>>>0<U>>>0&&(I=I+1|0),H=c,u=I,h=jg(c^_,I^X,63),c=l,I=r+(U=d)|0,(d=(s=v)+(v=L)|0)>>>0<v>>>0&&(I=I+1|0),I=I+W|0,X=v=d+AA|0,_=jg(v^oA,(_=Y)^(Y=v>>>0<AA>>>0?I+1|0:I),32),S=s,I=IA+(s=l)|0,(v=_+q|0)>>>0<q>>>0&&(I=I+1|0),q=U,U=I,S=q=jg(S^v,q^I,24),z=I=l,d=I,W=_,I=Y+Q|0,(_=(Y=O)+X|0)>>>0<Y>>>0&&(I=I+1|0),I=I+d|0,d=Y=_+q|0,AA=jg(W^Y,(_=Y>>>0<_>>>0?I+1|0:I)^s,16),I=U+(X=l)|0,(s=v+AA|0)>>>0<v>>>0&&(I=I+1|0),v=s,q=I,Y=jg(s^S,I^z,63),s=l,U=F,S=k,z=t,I=M+cA|0,(M=f+yA|0)>>>0<f>>>0&&(I=I+1|0),I=I+t|0,t=jg((W=k=M+k|0)^AA,(k=k>>>0<M>>>0?I+1|0:I)^X,32),I=(IA=l)+u|0,(H=t+H|0)>>>0<t>>>0&&(I=I+1|0),M=I,AA=jg((u=H)^S,I^z,24),X=I=l,H=I,I=k+C|0,(S=(k=$)+W|0)>>>0<k>>>0&&(I=I+1|0),I=I+H|0,I=(k=S+AA|0)>>>0<S>>>0?I+1|0:I,S=k,z=I,oA=jg(t^k,IA^I,16),H=I=l,n[U+120>>2]=oA,n[U+124>>2]=I,I=I+M|0,(t=u+oA|0)>>>0<u>>>0&&(I=I+1|0),M=t,u=I,U=jg(t^AA,I^X,63),k=l,X=c,t=h,I=b+B|0,(b=(h=eA)+gA|0)>>>0<h>>>0&&(I=I+1|0),I=I+c|0,AA=h=(W=t)+b|0,P=jg(h^P,(c=h>>>0<b>>>0?I+1|0:I)^V,32),b=t,I=q+(t=l)|0,(h=v+P|0)>>>0<v>>>0&&(I=I+1|0),W=X=jg(b^h,I^X,24),IA=b=l,v=I,V=P,I=c+i|0,(P=(c=R)+AA|0)>>>0<c>>>0&&(I=I+1|0),I=I+b|0,X=c=P+X|0,t=jg(V^c,(q=c>>>0<P>>>0?I+1|0:I)^t,16),I=(P=l)+v|0,(h=t+h|0)>>>0<t>>>0&&(I=I+1|0),AA=h,c=h^W,W=I,b=jg(c,I^IA,63),v=l,IA=s,V=G,h=Y,I=x+tA|0,(Y=(c=p)+sA|0)>>>0<c>>>0&&(I=I+1|0),I=I+s|0,G=c=(G=h)+Y|0,c=jg(V^c,(s=m)^(m=c>>>0<Y>>>0?I+1|0:I),32),s=h,I=(I=y)+(y=l)|0,(h=c+T|0)>>>0<c>>>0&&(I=I+1|0),x=s=jg(s^h,I^IA,24),IA=Y=l,V=I,iA=c,I=m+Y|0,(c=s+G|0)>>>0<G>>>0&&(I=I+1|0),s=c,I=I+(gA=sA=n[F+132>>2])|0,T=c=(Y=n[F+128>>2])+c|0,s=jg(iA^c,(gA=c>>>0<s>>>0?I+1|0:I)^y,16),G=x,I=(x=l)+V|0,(y=(c=s)+h|0)>>>0<c>>>0&&(I=I+1|0),c=I,G=jg(G^y,I^IA,63),m=l,IA=K,I=K+e|0,(K=(h=w)+(w=CA)|0)>>>0<w>>>0&&(I=I+1|0),I=I+_|0,K=I=(w=d+K|0)>>>0<d>>>0?I+1|0:I,d=jg(w^QA,I^J,32),J=y,_=c,y=t,I=N+(t=l)|0,(c=d+Z|0)>>>0<Z>>>0&&(I=I+1|0),V=N=jg(c^h,I^IA,24),QA=IA=l,h=c,Z=I,hA=d,I=K+IA|0,(c=w+N|0)>>>0<w>>>0&&(I=I+1|0),w=c,I=I+(iA=yA=n[F+196>>2])|0,N=c=(d=n[F+192>>2])+c|0,c=jg(hA^c,(IA=c>>>0<w>>>0?I+1|0:I)^t,16),K=V,I=(I=Z)+(Z=l)|0,(w=(t=c)+h|0)>>>0<t>>>0&&(I=I+1|0),V=w,t=I,QA=jg(K^w,I^QA,63),iA=I=l,w=I,K=y,I=z+fA|0,(y=S+wA|0)>>>0<S>>>0&&(I=I+1|0),h=y,I=I+w|0,I=(y=y+QA|0)>>>0<h>>>0?I+1|0:I,h=y,w=P,P=I,y=jg(K^y,w^I,32),w=F,I=(K=l)+_|0,(_=y+J|0)>>>0<y>>>0&&(I=I+1|0),J=_,QA=z=jg(QA^_,I^iA,24),fA=_=l,S=I,iA=y,I=P+sA|0,(y=h+Y|0)>>>0<h>>>0&&(I=I+1|0),h=y,I=I+_|0,wA=y=y+z|0,P=jg(iA^y,(_=y>>>0<h>>>0?I+1|0:I)^K,16),I=(I=S)+(S=l)|0,(h=(y=P)+J|0)>>>0<y>>>0&&(I=I+1|0),J=h,y=I,h=jg(h^QA,I^fA,63),K=I=l,n[w+32>>2]=h,n[w+36>>2]=I,z=k,QA=t,iA=s,I=k+B|0,(s=(w=U)+(t=eA)|0)>>>0<t>>>0&&(I=I+1|0),I=I+q|0,q=t=s+X|0,t=jg(iA^t,(s=t>>>0<X>>>0?I+1|0:I)^x,32),x=w,I=(w=l)+QA|0,(k=t+V|0)>>>0<t>>>0&&(I=I+1|0),U=k,V=z=jg(x^k,I^z,24),QA=k=l,x=U,X=I,U=t,I=s+rA|0,(s=(t=aA)+q|0)>>>0<t>>>0&&(I=I+1|0),I=I+k|0,q=t=s+z|0,U=jg(U^t,(z=t>>>0<s>>>0?I+1|0:I)^w,16),I=(I=X)+(X=l)|0,(s=(t=U)+x|0)>>>0<t>>>0&&(I=I+1|0),x=s,w=I,k=jg(s^V,I^QA,63),t=l,V=v,QA=c,I=v+cA|0,(b=(s=b)+(c=f)|0)>>>0<c>>>0&&(I=I+1|0),I=I+gA|0,b=c=b+T|0,c=jg(QA^c,(v=c>>>0<T>>>0?I+1|0:I)^Z,32),Z=s,I=(s=l)+u|0,(M=c+M|0)>>>0<c>>>0&&(I=I+1|0),u=M,M=I,T=V=jg(Z^u,I^V,24),QA=I=l,Z=I,gA=c,I=v+tA|0,(c=p+b|0)>>>0<b>>>0&&(I=I+1|0),p=c,I=I+Z|0,fA=c=c+V|0,gA=jg(gA^c,(v=c>>>0<p>>>0?I+1|0:I)^s,16),I=M+(Z=l)|0,(c=u+gA|0)>>>0<u>>>0&&(I=I+1|0),b=c,u=I,p=jg(c^T,I^QA,63),c=l,M=m,I=m+i|0,(m=(s=G)+(G=R)|0)>>>0<G>>>0&&(I=I+1|0),I=I+IA|0,IA=G=m+N|0,N=jg(G^oA,(m=H)^(H=G>>>0<N>>>0?I+1|0:I),32),V=s,I=W+(s=l)|0,(G=N+AA|0)>>>0<AA>>>0&&(I=I+1|0),m=I,W=AA=jg(V^G,I^M,24),V=I=l,M=I,T=N,I=H+e|0,(N=(H=CA)+IA|0)>>>0<H>>>0&&(I=I+1|0),I=I+M|0,M=H=N+AA|0,T=jg(T^H,(N=H>>>0<N>>>0?I+1|0:I)^s,16),I=m+(AA=l)|0,(s=G+T|0)>>>0<G>>>0&&(I=I+1|0),m=s,s^=W,W=I,H=jg(s,I^V,63),s=l,G=F,IA=k,V=t,QA=T,T=k,I=_+Q|0,(_=(k=O)+wA|0)>>>0<k>>>0&&(I=I+1|0),I=I+t|0,t=jg(QA^(T=k=T+_|0),(k=k>>>0<_>>>0?I+1|0:I)^AA,32),I=(QA=l)+u|0,(b=t+b|0)>>>0<t>>>0&&(I=I+1|0),_=I,V=jg(b^IA,I^V,24),AA=I=l,u=I,I=k+g|0,(IA=(k=BA)+T|0)>>>0<k>>>0&&(I=I+1|0),I=I+u|0,wA=k=IA+V|0,oA=jg(t^k,QA^(IA=k>>>0<IA>>>0?I+1|0:I),16),u=I=l,n[G+120>>2]=oA,n[G+124>>2]=I,I=I+_|0,(t=b+oA|0)>>>0<b>>>0&&(I=I+1|0),_=t,G=AA,AA=I,G=jg(t^V,G^I,63),k=l,b=c,V=P,t=p,I=z+r|0,(p=L+q|0)>>>0<q>>>0&&(I=I+1|0),P=p,I=I+c|0,q=p=(T=t)+p|0,P=jg(V^p,(c=p>>>0<P>>>0?I+1|0:I)^S,32),S=t,I=W+(t=l)|0,(p=m+P|0)>>>0<m>>>0&&(I=I+1|0),m=b,b=I,z=S=jg(S^p,m^I,24),W=I=l,m=I,V=P,I=c+EA|0,(P=(c=nA)+q|0)>>>0<c>>>0&&(I=I+1|0),I=I+m|0,m=c=P+S|0,c=jg(V^c,(P=c>>>0<P>>>0?I+1|0:I)^t,16),I=b+(q=l)|0,(t=c+p|0)>>>0<p>>>0&&(I=I+1|0),S=t,t^=z,z=I,p=jg(t,I^W,63),b=l,W=H,V=s,T=U,I=v+C|0,(U=(t=$)+fA|0)>>>0<t>>>0&&(I=I+1|0),I=I+s|0,s=t=U+H|0,t=jg(T^t,(U=t>>>0<U>>>0?I+1|0:I)^X,32),I=(I=y)+(y=l)|0,(v=t+J|0)>>>0<t>>>0&&(I=I+1|0),W=X=jg((H=v)^W,I^V,24),V=v=l,J=I,T=t,I=U+yA|0,(t=s+d|0)>>>0<s>>>0&&(I=I+1|0),s=t,I=I+v|0,v=t=t+X|0,s=jg(T^t,(X=t>>>0<s>>>0?I+1|0:I)^y,16),U=W,I=(I=J)+(J=l)|0,(y=(t=s)+H|0)>>>0<t>>>0&&(I=I+1|0),W=y,t=I,U=jg(U^y,I^V,63),H=l,V=h,T=K,iA=gA,I=N+K|0,(y=h+M|0)>>>0<M>>>0&&(I=I+1|0),h=y,I=I+(QA=fA=n[F+156>>2])|0,I=(y=(gA=n[F+152>>2])+y|0)>>>0<h>>>0?I+1|0:I,h=y,K=I,y=jg(iA^y,I^Z,32),M=t,I=(t=l)+w|0,(x=y+x|0)>>>0<y>>>0&&(I=I+1|0),V=N=jg((w=x)^V,I^T,24),QA=T=l,x=I,hA=y,I=K+T|0,(y=h+N|0)>>>0<h>>>0&&(I=I+1|0),h=y,I=I+(iA=tA=n[F+236>>2])|0,K=y=(Z=n[F+232>>2])+y|0,t=jg(hA^y,(N=y>>>0<h>>>0?I+1|0:I)^t,16),y=V,I=(I=x)+(x=l)|0,(w=t+w|0)>>>0<t>>>0&&(I=I+1|0),V=w,T=I,QA=jg(y^w,I^QA,63),iA=I=l,y=I,w=c,I=IA+cA|0,(c=f+wA|0)>>>0<f>>>0&&(I=I+1|0),I=I+y|0,IA=f=c+QA|0,f=jg(w^f,(y=f>>>0<c>>>0?I+1|0:I)^q,32),c=F,I=(w=l)+M|0,(M=f+W|0)>>>0<f>>>0&&(I=I+1|0),QA=W=jg(QA^(h=M),I^iA,24),cA=M=l,q=I,iA=f,I=y+EA|0,(y=(f=nA)+IA|0)>>>0<f>>>0&&(I=I+1|0),I=I+M|0,M=f=y+W|0,w=jg(iA^f,(W=f>>>0<y>>>0?I+1|0:I)^w,16),I=(I=q)+(q=l)|0,(y=(f=w)+h|0)>>>0<f>>>0&&(I=I+1|0),IA=y,f=y^QA,QA=I,y=jg(f,I^cA,63),h=I=l,n[c+32>>2]=y,n[c+36>>2]=I,iA=s,I=C+(c=k)|0,(G=(f=G)+(s=$)|0)>>>0<s>>>0&&(I=I+1|0),I=I+P|0,m=jg(iA^(P=s=G+m|0),(s=s>>>0<m>>>0?I+1|0:I)^J,32),k=f,I=T+(f=l)|0,(G=m+V|0)>>>0<V>>>0&&(I=I+1|0),J=c,c=I,V=J=jg(k^G,J^I,24),cA=I=l,k=I,T=m,I=s+i|0,(m=(s=R)+P|0)>>>0<s>>>0&&(I=I+1|0),I=I+k|0,wA=s=m+J|0,T=jg(T^s,(m=s>>>0<m>>>0?I+1|0:I)^f,16),I=c+(P=l)|0,(f=G+T|0)>>>0<G>>>0&&(I=I+1|0),J=f,c=f^V,V=I,G=jg(c,I^cA,63),k=l,iA=t,I=sA+(c=b)|0,(t=Y+(f=p)|0)>>>0<Y>>>0&&(I=I+1|0),I=I+X|0,s=I=(t=t+v|0)>>>0<v>>>0?I+1|0:I,b=jg(iA^t,I^x,32),v=f,I=AA+(f=l)|0,(p=b+_|0)>>>0<_>>>0&&(I=I+1|0),_=c,c=I,x=v=jg(v^p,_^I,24),_=I=l,Y=I,I=s+r|0,(s=t+L|0)>>>0<t>>>0&&(I=I+1|0),I=I+Y|0,cA=t=s+v|0,AA=jg(v=t^b,(b=t>>>0<s>>>0?I+1|0:I)^f,16),I=c+(v=l)|0,(f=p+AA|0)>>>0<p>>>0&&(I=I+1|0),Y=f,c=I,L=jg(f^x,I^_,63),f=l,I=yA+(s=H)|0,(p=d+(t=U)|0)>>>0<d>>>0&&(I=I+1|0),I=I+N|0,d=p=p+K|0,H=jg(p^oA,(H=u)^(u=p>>>0<K>>>0?I+1|0:I),32),U=t,I=z+(t=l)|0,(p=H+S|0)>>>0<S>>>0&&(I=I+1|0),_=s,s=I,x=K=jg(U^p,_^I,24),N=I=l,U=I,_=H,I=u+fA|0,(u=d+gA|0)>>>0<gA>>>0&&(I=I+1|0),H=u,I=I+U|0,I=(u=u+K|0)>>>0<H>>>0?I+1|0:I,H=u,d=I,X=jg(_^u,I^t,16),I=s+(U=l)|0,(t=p+X|0)>>>0<p>>>0&&(I=I+1|0),K=t,s=I,u=jg(t^x,I^N,63),t=l,p=F,x=G,N=k,_=c,I=k+W|0,(c=G+M|0)>>>0<M>>>0&&(I=I+1|0),G=c,I=I+(S=n[F+164>>2])|0,M=c=c+n[F+160>>2]|0,c=jg(c^X,(k=U)^(U=c>>>0<G>>>0?I+1|0:I),32),I=(I=_)+(_=l)|0,(G=c+Y|0)>>>0<c>>>0&&(I=I+1|0),k=I,N=jg(G^x,I^N,24),x=I=l,Y=I,I=U+tA|0,(U=M+Z|0)>>>0<Z>>>0&&(I=I+1|0),M=U,I=I+Y|0,gA=U=U+N|0,z=jg(c^U,_^(M=U>>>0<M>>>0?I+1|0:I),16),Y=I=l,n[p+120>>2]=z,n[p+124>>2]=I,I=I+k|0,(c=G+z|0)>>>0<G>>>0&&(I=I+1|0),G=c,k=I,p=jg(c^N,I^x,63),U=l,x=f,_=w,c=L,I=m+rA|0,(L=(w=aA)+wA|0)>>>0<w>>>0&&(I=I+1|0),I=I+f|0,f=jg(_^(Z=w=(S=c)+L|0),(w=w>>>0<L>>>0?I+1|0:I)^q,32),m=c,I=(c=l)+s|0,(L=f+K|0)>>>0<f>>>0&&(I=I+1|0),N=K=jg(m^(s=L),I^x,24),_=L=l,m=I,S=f,I=w+B|0,(w=(f=eA)+Z|0)>>>0<f>>>0&&(I=I+1|0),I=I+L|0,K=f=w+K|0,f=jg(S^f,(x=f>>>0<w>>>0?I+1|0:I)^c,16),I=(I=m)+(m=l)|0,(s=(c=f)+s|0)>>>0<c>>>0&&(I=I+1|0),Z=s,c=I,s=jg(s^N,I^_,63),w=l,L=u,N=t,_=u,I=b+e|0,(b=(u=CA)+cA|0)>>>0<u>>>0&&(I=I+1|0),I=I+t|0,X=u=_+b|0,_=jg(u^T,(t=u>>>0<b>>>0?I+1|0:I)^P,32),S=L,I=QA+(u=l)|0,(L=_+IA|0)>>>0<IA>>>0&&(I=I+1|0),b=I,q=N=jg(S^L,I^N,24),S=I=l,P=I,T=N,I=t+Q|0,(N=(t=O)+X|0)>>>0<t>>>0&&(I=I+1|0),I=I+P|0,P=t=T+N|0,W=jg(t^_,(N=t>>>0<N>>>0?I+1|0:I)^u,16),I=b+(_=l)|0,(t=L+W|0)>>>0<L>>>0&&(I=I+1|0),b=t,t=I,u=jg(b^q,I^S,63),L=l,q=h,I=h+g|0,(h=(X=y)+(y=BA)|0)>>>0<y>>>0&&(I=I+1|0),I=I+d|0,h=I=(y=h+H|0)>>>0<H>>>0?I+1|0:I,S=jg(y^AA,I^v,32),H=t,I=V+(t=l)|0,(v=J+S|0)>>>0<J>>>0&&(I=I+1|0),d=I,q=J=jg(v^X,I^q,24),IA=I=l,I=I+h|0,(h=y+J|0)>>>0<y>>>0&&(I=I+1|0),I=I+(X=n[F+204>>2])|0,J=y=h+n[F+200>>2]|0,AA=jg(y^S,(X=y>>>0<h>>>0?I+1|0:I)^t,16),y=q,I=d+(q=l)|0,(t=v+AA|0)>>>0<v>>>0&&(I=I+1|0),h=t,v=I,d=jg(y^t,I^IA,63),S=I=l,t=I,V=f,I=M+EA|0,(y=(f=nA)+gA|0)>>>0<f>>>0&&(I=I+1|0),I=I+t|0,M=f=y+d|0,f=jg(V^f,(y=f>>>0<y>>>0?I+1|0:I)^m,32),t=F,I=(I=H)+(H=l)|0,(m=f+b|0)>>>0<f>>>0&&(I=I+1|0),b=m,m=I,V=S=jg(d^b,S^I,24),T=I=l,d=I,IA=f,I=y+B|0,(y=(f=eA)+M|0)>>>0<f>>>0&&(I=I+1|0),I=I+d|0,d=f=y+S|0,IA=jg(IA^f,(S=H)^(H=f>>>0<y>>>0?I+1|0:I),16),I=m+(M=l)|0,(f=b+IA|0)>>>0<b>>>0&&(I=I+1|0),b=f,m=I,f=jg(f^V,I^T,63),y=I=l,n[t+32>>2]=f,n[t+36>>2]=I,S=U,I=U+g|0,(U=(t=p)+(p=BA)|0)>>>0<p>>>0&&(I=I+1|0),I=I+x|0,K=jg((x=p=U+K|0)^W,(p=p>>>0<K>>>0?I+1|0:I)^_,32),_=t,I=v+(t=l)|0,(U=h+K|0)>>>0<h>>>0&&(I=I+1|0),h=U,U=I,S=_=jg(_^h,I^S,24),V=I=l,v=I,W=K,I=p+e|0,(K=(p=CA)+x|0)>>>0<p>>>0&&(I=I+1|0),I=I+v|0,T=p=K+_|0,W=jg(W^p,(v=p>>>0<K>>>0?I+1|0:I)^t,16),I=U+(K=l)|0,(t=h+W|0)>>>0<h>>>0&&(I=I+1|0),U=t,x=I,h=jg(t^S,I^V,63),p=l,_=w,I=w+Q|0,(w=(t=s)+(s=O)|0)>>>0<s>>>0&&(I=I+1|0),I=I+N|0,w=I=(s=w+P|0)>>>0<P>>>0?I+1|0:I,q=jg(s^AA,I^q,32),S=t,I=k+(P=l)|0,(t=G+q|0)>>>0<G>>>0&&(I=I+1|0),G=t,k=I,N=t=jg(S^t,I^_,24),_=I=l,S=q,I=w+I|0,(t=t+s|0)>>>0<s>>>0&&(I=I+1|0),s=t,I=I+(AA=n[F+236>>2])|0,q=t=t+n[F+232>>2]|0,V=jg(S^t,(w=P)^(P=t>>>0<s>>>0?I+1|0:I),16),w=N,I=k+(N=l)|0,(t=G+V|0)>>>0<G>>>0&&(I=I+1|0),G=t,s=I,w=jg(w^t,I^_,63),t=l,k=u,S=c,I=X+(_=L)|0,(c=u+J|0)>>>0<J>>>0&&(I=I+1|0),u=c,I=I+(AA=n[F+164>>2])|0,J=c=c+n[F+160>>2]|0,c=jg(c^z,(u=c>>>0<u>>>0?I+1|0:I)^Y,32),X=k,I=(L=l)+S|0,(k=c+Z|0)>>>0<c>>>0&&(I=I+1|0),Y=k,k=I,X=_=jg(X^Y,I^_,24),S=I=l,Z=I,z=c,I=u+i|0,(u=(c=R)+J|0)>>>0<c>>>0&&(I=I+1|0),I=I+Z|0,gA=c=u+_|0,z=jg(z^c,(Z=c>>>0<u>>>0?I+1|0:I)^L,16),I=k+(J=l)|0,(c=Y+z|0)>>>0<Y>>>0&&(I=I+1|0),k=c,c=I,u=jg(k^X,I^S,63),L=l,Y=F,_=h,X=p,S=s,QA=z,I=p+H|0,(s=h+d|0)>>>0<d>>>0&&(I=I+1|0),h=s,I=I+(AA=n[F+132>>2])|0,z=s=s+n[F+128>>2]|0,s=jg(QA^s,(h=s>>>0<h>>>0?I+1|0:I)^J,32),d=_,I=(_=l)+S|0,(H=s+G|0)>>>0<s>>>0&&(I=I+1|0),p=H,H=I,J=jg(d^p,I^X,24),G=I=l,d=I,I=h+rA|0,(X=(h=aA)+z|0)>>>0<h>>>0&&(I=I+1|0),I=I+d|0,QA=h=X+J|0,AA=jg(s^h,_^(d=h>>>0<X>>>0?I+1|0:I),16),s=I=l,n[Y+120>>2]=AA,n[Y+124>>2]=I,I=I+H|0,(h=p+AA|0)>>>0<p>>>0&&(I=I+1|0),H=h,p=G,G=I,h=jg(h^J,p^I,63),p=l,Y=w,J=t,_=c,S=w,I=v+C|0,(w=(c=$)+T|0)>>>0<c>>>0&&(I=I+1|0),I=I+t|0,X=c=S+w|0,c=jg(c^IA,(w=c>>>0<w>>>0?I+1|0:I)^M,32),S=Y,I=(Y=l)+_|0,(k=(t=c)+k|0)>>>0<t>>>0&&(I=I+1|0),v=I,M=t=jg(S^k,I^J,24),J=I=l,z=c,I=w+I|0,(c=t+X|0)>>>0<t>>>0&&(I=I+1|0),I=I+(S=n[F+156>>2])|0,_=t=c+n[F+152>>2]|0,z=jg(z^t,(X=t>>>0<c>>>0?I+1|0:I)^Y,16),I=v+(Y=l)|0,(t=k+z|0)>>>0<k>>>0&&(I=I+1|0),k=t,v=I,c=jg(t^M,I^J,63),w=l,I=P+(M=L)|0,(u=q+(t=u)|0)>>>0<q>>>0&&(I=I+1|0),L=u,I=I+(J=n[F+204>>2])|0,L=I=(u=u+n[F+200>>2]|0)>>>0<L>>>0?I+1|0:I,J=jg(u^W,I^K,32),S=t,I=m+(P=l)|0,(t=b+J|0)>>>0<b>>>0&&(I=I+1|0),b=t,m=I,K=t=jg(S^t,I^M,24),M=I=l,q=J,I=L+I|0,(t=t+u|0)>>>0<u>>>0&&(I=I+1|0),u=t,I=I+(S=n[F+148>>2])|0,J=t=t+n[F+144>>2]|0,W=jg(q^t,(S=P)^(P=t>>>0<u>>>0?I+1|0:I),16),u=K,I=m+(K=l)|0,(t=b+W|0)>>>0<b>>>0&&(I=I+1|0),b=I,u=jg(u^t,I^M,63),L=l,m=f,M=y,I=y+Z|0,(y=f+gA|0)>>>0<f>>>0&&(I=I+1|0),I=I+(q=n[F+196>>2])|0,q=f=y+n[F+192>>2]|0,N=jg(f^V,(y=f>>>0<y>>>0?I+1|0:I)^N,32),S=m,I=x+(m=l)|0,(f=U+N|0)>>>0<U>>>0&&(I=I+1|0),U=f,M=f=jg(S^f,I^M,24),Z=I,V=n[F+220>>2],S=N,I=(x=l)+y|0,(y=f+q|0)>>>0<f>>>0&&(I=I+1|0),I=I+(IA=V)|0,q=f=(N=n[F+216>>2])+y|0,y=jg(S^f,(T=m)^(m=f>>>0<y>>>0?I+1|0:I),16),S=M,I=(M=l)+Z|0,(U=(f=y)+U|0)>>>0<f>>>0&&(I=I+1|0),f=x,x=I,Z=f=jg(S^U,f^I,63),S=I=l,I=d+I|0,(d=f+QA|0)>>>0<f>>>0&&(I=I+1|0),I=I+(T=n[F+236>>2])|0,T=f=d+n[F+232>>2]|0,IA=jg(f^z,(IA=Y)^(Y=f>>>0<d>>>0?I+1|0:I),32),I=b+(d=l)|0,(f=t+IA|0)>>>0<t>>>0&&(I=I+1|0),b=f,t=f^Z,Z=I,f=jg(t,I^S,24),t=F,S=f,z=I=l,I=Y+I|0,(Y=f+T|0)>>>0<f>>>0&&(I=I+1|0),I=I+V|0,V=f=Y+N|0,IA=jg(f^IA,(Y=d)^(d=f>>>0<N>>>0?I+1|0:I),16),I=Z+(N=l)|0,(f=b+IA|0)>>>0<b>>>0&&(I=I+1|0),b=f,Z=I,f=jg(f^S,I^z,63),Y=I=l,n[t+32>>2]=f,n[t+36>>2]=I,S=p,I=p+rA|0,(p=(t=h)+(h=aA)|0)>>>0<h>>>0&&(I=I+1|0),I=I+X|0,_=jg((X=h=p+_|0)^W,(h=h>>>0<_>>>0?I+1|0:I)^K,32),K=t,I=x+(t=l)|0,(p=U+_|0)>>>0<U>>>0&&(I=I+1|0),U=I,z=x=jg(K^p,I^S,24),W=I=l,K=I,S=x,I=h+Q|0,(x=(h=O)+X|0)>>>0<h>>>0&&(I=I+1|0),I=I+K|0,T=h=S+x|0,S=jg(h^_,(K=h>>>0<x>>>0?I+1|0:I)^t,16),I=U+(x=l)|0,(t=p+S|0)>>>0<p>>>0&&(I=I+1|0),_=t,X=I,h=jg(t^z,I^W,63),t=l,U=w,z=y,I=w+EA|0,(y=(p=c)+(c=nA)|0)>>>0<c>>>0&&(I=I+1|0),I=I+P|0,I=(c=y+J|0)>>>0<J>>>0?I+1|0:I,J=c,c=I,P=jg(z^J,I^M,32),I=G+(y=l)|0,(w=H+P|0)>>>0<H>>>0&&(I=I+1|0),H=w^p,p=I,M=H=jg(H,I^U,24),W=I=l,U=I,G=H,I=c+g|0,(H=(c=BA)+J|0)>>>0<c>>>0&&(I=I+1|0),I=I+U|0,I=(c=G+H|0)>>>0<H>>>0?I+1|0:I,H=c,G=I,z=jg(c^P,I^y,16),I=p+(P=l)|0,(c=w+z|0)>>>0<w>>>0&&(I=I+1|0),p=c,U=I,y=jg(c^M,I^W,63),c=l,I=m+(M=L)|0,(u=q+(w=u)|0)>>>0<q>>>0&&(I=I+1|0),L=u,I=I+(J=n[F+156>>2])|0,L=I=(u=u+n[F+152>>2]|0)>>>0<L>>>0?I+1|0:I,J=jg(u^AA,I^s,32),m=w,I=v+(w=l)|0,(s=k+J|0)>>>0<k>>>0&&(I=I+1|0),k=s,v=I,m=s=jg(m^s,I^M,24),M=I=l,I=L+I|0,(s=s+u|0)>>>0<u>>>0&&(I=I+1|0),u=s,I=I+(AA=n[F+204>>2])|0,gA=s=s+n[F+200>>2]|0,q=jg(q=s^J,(J=s>>>0<u>>>0?I+1|0:I)^w,16),I=v+(L=l)|0,(s=k+q|0)>>>0<k>>>0&&(I=I+1|0),k=s,v=I,s=jg(s^m,I^M,63),u=l,w=F,m=h,M=t,W=h,I=d+B|0,(d=(h=eA)+V|0)>>>0<h>>>0&&(I=I+1|0),I=I+t|0,d=jg((t=h=W+d|0)^q,(h=L)^(L=t>>>0<d>>>0?I+1|0:I),32),I=U+(q=l)|0,(h=p+d|0)>>>0<p>>>0&&(I=I+1|0),p=I,M=jg(h^m,I^M,24),I=L+(U=l)|0,(L=t+M|0)>>>0<t>>>0&&(I=I+1|0),t=(t=L)+(L=n[F+128>>2])|0,I=n[F+132>>2]+I|0,V=t,AA=jg(d^t,q^(m=t>>>0<L>>>0?I+1|0:I),16),L=I=l,n[w+120>>2]=AA,n[w+124>>2]=I,I=p+I|0,(t=h+AA|0)>>>0<h>>>0&&(I=I+1|0),d=t,t^=M,M=I,w=jg(t,I^U,63),h=l,p=c,t=y,I=K+e|0,(U=(y=CA)+T|0)>>>0<y>>>0&&(I=I+1|0),I=I+c|0,q=y=(q=t)+U|0,K=jg(y^IA,(c=y>>>0<U>>>0?I+1|0:I)^N,32),N=t,I=v+(y=l)|0,(t=k+K|0)>>>0<k>>>0&&(I=I+1|0),U=t,k=p,p=I,k=t=jg(N^t,k^I,24),v=I=l,T=K,I=c+I|0,(c=t+q|0)>>>0<t>>>0&&(I=I+1|0),I=I+(W=n[F+164>>2])|0,K=t=c+n[F+160>>2]|0,c=jg(T^t,(N=t>>>0<c>>>0?I+1|0:I)^y,16),q=k,I=p+(y=l)|0,(t=c+U|0)>>>0<U>>>0&&(I=I+1|0),k=t,p=v,v=I,p=jg(q^t,p^I,63),U=l,q=u,I=u+G|0,(s=H+(t=s)|0)>>>0<H>>>0&&(I=I+1|0),u=s,I=I+(W=n[F+196>>2])|0,x=jg((T=S)^(S=s=s+n[F+192>>2]|0),(s=s>>>0<u>>>0?I+1|0:I)^x,32),G=t,I=Z+(t=l)|0,(u=b+x|0)>>>0<b>>>0&&(I=I+1|0),H=I,Z=b=jg(G^u,I^q,24),q=I=l,G=I,T=b,I=s+C|0,(b=(s=$)+S|0)>>>0<s>>>0&&(I=I+1|0),I=I+G|0,G=s=T+b|0,W=jg(s^x,(b=s>>>0<b>>>0?I+1|0:I)^t,16),I=H+(x=l)|0,(t=u+W|0)>>>0<u>>>0&&(I=I+1|0),H=t,t=I,s=jg(H^Z,I^q,63),u=l,Z=f,q=Y,I=Y+J|0,(Y=f+gA|0)>>>0<f>>>0&&(I=I+1|0),I=I+(S=n[F+148>>2])|0,S=jg((T=z)^(z=f=Y+n[F+144>>2]|0),(f=f>>>0<Y>>>0?I+1|0:I)^P,32),Y=t,I=X+(t=l)|0,(P=_+S|0)>>>0<_>>>0&&(I=I+1|0),_=P^Z,Z=I,X=_=jg(_,I^q,24),q=I=l,J=I,T=_,I=f+i|0,(_=(f=R)+z|0)>>>0<f>>>0&&(I=I+1|0),I=I+J|0,J=f=T+_|0,IA=jg(f^S,(_=f>>>0<_>>>0?I+1|0:I)^t,16),t=X,I=Z+(X=l)|0,(f=P+IA|0)>>>0<P>>>0&&(I=I+1|0),P=f,Z=I,q=jg(t^f,I^q,63),S=I=l,f=I,T=c,I=m+C|0,(c=(t=$)+V|0)>>>0<t>>>0&&(I=I+1|0),I=I+f|0,z=t=c+q|0,f=jg(T^t,(c=t>>>0<c>>>0?I+1|0:I)^y,32),t=F,I=(y=l)+Y|0,(H=f+H|0)>>>0<f>>>0&&(I=I+1|0),Y=H,H=I,S=q=jg(q^Y,S^I,24),T=I=l,m=I,V=f,I=c+e|0,(c=(f=CA)+z|0)>>>0<f>>>0&&(I=I+1|0),I=I+m|0,cA=f=c+q|0,V=jg(V^f,(m=f>>>0<c>>>0?I+1|0:I)^y,16),c=S,I=H+(q=l)|0,(f=Y+V|0)>>>0<Y>>>0&&(I=I+1|0),S=f,z=I,y=jg(c^f,I^T,63),Y=I=l,n[t+32>>2]=y,n[t+36>>2]=I,I=Q+(t=h)|0,(w=(f=w)+(c=O)|0)>>>0<c>>>0&&(I=I+1|0),I=I+N|0,w=I=(c=w+K|0)>>>0<K>>>0?I+1|0:I,x=jg(c^W,I^x,32),N=f,I=Z+(h=l)|0,(f=P+x|0)>>>0<P>>>0&&(I=I+1|0),H=f,P=t,t=I,P=f=jg(N^f,P^I,24),K=I=l,I=w+I|0,(f=c+f|0)>>>0<c>>>0&&(I=I+1|0),I=I+(N=n[F+204>>2])|0,W=f=(c=f)+n[F+200>>2]|0,gA=jg(w=f^x,(x=f>>>0<c>>>0?I+1|0:I)^h,16),c=P,I=t+(P=l)|0,(f=H+gA|0)>>>0<H>>>0&&(I=I+1|0),Z=f,t=K,K=I,w=jg(c^f,t^I,63),f=l,I=b+(c=U)|0,(h=G+(t=p)|0)>>>0<G>>>0&&(I=I+1|0),p=h,I=I+(H=n[F+220>>2])|0,p=I=(h=h+n[F+216>>2]|0)>>>0<p>>>0?I+1|0:I,N=jg(h^IA,I^X,32),G=t,I=M+(U=l)|0,(t=N+d|0)>>>0<d>>>0&&(I=I+1|0),H=t,b=c,c=I,G=t=jg(G^t,b^I,24),b=I=l,I=p+I|0,(t=t+h|0)>>>0<h>>>0&&(I=I+1|0),h=t,I=I+(M=n[F+156>>2])|0,IA=t=t+n[F+152>>2]|0,QA=jg(t^N,(d=t>>>0<h>>>0?I+1|0:I)^U,16),I=c+(M=l)|0,(t=H+QA|0)>>>0<H>>>0&&(I=I+1|0),p=t,U=I,t=jg(t^G,I^b,63),h=l,H=u,I=u+_|0,(s=J+(c=s)|0)>>>0<J>>>0&&(I=I+1|0),u=s,I=I+(G=n[F+132>>2])|0,u=I=(s=s+n[F+128>>2]|0)>>>0<u>>>0?I+1|0:I,N=jg(s^AA,I^L,32),b=c,I=v+(L=l)|0,(c=k+N|0)>>>0<k>>>0&&(I=I+1|0),G=c,k=H,H=I,k=c=jg(b^c,k^I,24),b=I=l,I=u+I|0,(c=c+s|0)>>>0<s>>>0&&(I=I+1|0),s=c,I=I+(J=n[F+196>>2])|0,v=c=c+n[F+192>>2]|0,J=jg(u=c^N,(N=c>>>0<s>>>0?I+1|0:I)^L,16),I=H+(L=l)|0,(c=G+J|0)>>>0<G>>>0&&(I=I+1|0),H=c,G=I,u=jg(c^k,I^b,63),c=l,s=F,k=w,b=f,_=w,I=m+EA|0,(m=(w=nA)+cA|0)>>>0<w>>>0&&(I=I+1|0),I=I+f|0,_=jg((f=w=_+m|0)^J,(w=L)^(L=f>>>0<m>>>0?I+1|0:I),32),I=U+(AA=l)|0,(w=p+_|0)>>>0<p>>>0&&(I=I+1|0),p=w,U=I,X=jg(w^k,I^b,24),k=F,w=n[F+144>>2],I=L+(b=l)|0,(L=f+X|0)>>>0<f>>>0&&(I=I+1|0),L=(f=w)+L|0,I=(m=n[k+148>>2])+I|0,T=jg(k=_^(J=L),AA^(_=J>>>0<f>>>0?I+1|0:I),16),L=I=l,n[s+120>>2]=T,n[s+124>>2]=I,k=X,I=U+I|0,(f=p+T|0)>>>0<p>>>0&&(I=I+1|0),X=f,s=I,p=jg(k^f,I^b,63),U=l,f=t,k=h,I=h+x|0,(h=t+W|0)>>>0<t>>>0&&(I=I+1|0),I=I+(b=n[F+236>>2])|0,b=jg((x=t=h+n[F+232>>2]|0)^V,(t=t>>>0<h>>>0?I+1|0:I)^q,32),q=f,I=G+(f=l)|0,(h=b+H|0)>>>0<H>>>0&&(I=I+1|0),H=I,q=k=jg(q^h,I^k,24),W=I=l,G=I,V=b,b=k,I=t+rA|0,(k=(t=aA)+x|0)>>>0<t>>>0&&(I=I+1|0),I=I+G|0,b=t=b+k|0,t=jg(V^t,(x=t>>>0<k>>>0?I+1|0:I)^f,16),G=q,I=H+(q=l)|0,(f=t+h|0)>>>0<h>>>0&&(I=I+1|0),AA=f,H=W,W=I,h=jg(G^f,H^I,63),H=l,G=c,f=u,I=d+g|0,(k=(u=BA)+IA|0)>>>0<u>>>0&&(I=I+1|0),I=I+c|0,V=jg((c=u=(V=f)+k|0)^gA,(u=c>>>0<k>>>0?I+1|0:I)^P,32),P=f,I=z+(k=l)|0,(f=S+V|0)>>>0<S>>>0&&(I=I+1|0),d=f,P=f=jg(P^f,I^G,24),S=I,z=I=n[F+164>>2],IA=I,I=u+(G=l)|0,(f=c+f|0)>>>0<c>>>0&&(I=I+1|0),I=I+IA|0,IA=f=(cA=n[F+160>>2])+(c=f)|0,u=jg(u=f^V,(V=f>>>0<c>>>0?I+1|0:I)^k,16),k=P,I=(P=l)+S|0,(c=(f=u)+d|0)>>>0<f>>>0&&(I=I+1|0),f=I,G=jg(k^c,I^G,63),k=l,S=Y,I=Y+i|0,(Y=(d=y)+(y=R)|0)>>>0<y>>>0&&(I=I+1|0),I=I+N|0,M=jg((N=y=Y+v|0)^QA,(y=y>>>0<v>>>0?I+1|0:I)^M,32),I=K+(Y=l)|0,(v=M+Z|0)>>>0<Z>>>0&&(I=I+1|0),K=v^d,d=I,gA=Z=jg(K,I^S,24),QA=I=l,K=I,S=M,I=y+B|0,(M=(y=eA)+N|0)>>>0<y>>>0&&(I=I+1|0),I=I+K|0,K=y=M+Z|0,S=jg(S^y,(N=Y)^(Y=y>>>0<M>>>0?I+1|0:I),16),I=d+(M=l)|0,(y=v+S|0)>>>0<v>>>0&&(I=I+1|0),v=I,gA=jg(y^gA,I^QA,63),QA=I=l,d=I,N=t,I=_+i|0,(R=R+J|0)>>>0<J>>>0&&(I=I+1|0),I=I+d|0,d=R=(t=R)+gA|0,R=jg(N^R,(Z=R>>>0<t>>>0?I+1|0:I)^q,32),I=(N=l)+f|0,(t=(f=R)+c|0)>>>0<f>>>0&&(I=I+1|0),c=t,J=I,f=jg(gA^t,QA^I,24),t=F,_=f,q=I=l,gA=R,I=Z+I|0,(R=f+d|0)>>>0<d>>>0&&(I=I+1|0),I=I+m|0,QA=R=(f=R)+w|0,gA=jg(gA^R,(m=R>>>0<f>>>0?I+1|0:I)^N,16),I=J+(d=l)|0,(R=c+gA|0)>>>0<c>>>0&&(I=I+1|0),Z=R,c=I,R=jg(R^_,I^q,63),w=I=l,n[t+32>>2]=R,n[t+36>>2]=I,_=u,I=x+(t=U)|0,(u=b+(f=p)|0)>>>0<b>>>0&&(I=I+1|0),p=u,I=I+(N=n[F+196>>2])|0,P=jg(_^(x=u=u+n[F+192>>2]|0),(u=u>>>0<p>>>0?I+1|0:I)^P,32),U=f,I=v+(p=l)|0,(f=y+P|0)>>>0<y>>>0&&(I=I+1|0),y=f,v=t,t=I,U=f=jg(U^f,v^I,24),b=I=l,I=u+I|0,(u=f+x|0)>>>0<f>>>0&&(I=I+1|0),I=I+z|0,q=f=u+cA|0,z=jg(f^P,(v=f>>>0<u>>>0?I+1|0:I)^p,16),I=t+(P=l)|0,(f=y+z|0)>>>0<y>>>0&&(I=I+1|0),x=f,y=I,u=jg(f^U,I^b,63),f=l,p=h,I=rA+(U=H)|0,(h=(t=aA)+h|0)>>>0<t>>>0&&(I=I+1|0),I=I+V|0,b=t=h+IA|0,t=jg(t^S,(h=t>>>0<IA>>>0?I+1|0:I)^M,32),_=p,I=(I=s)+(s=l)|0,(H=t+X|0)>>>0<t>>>0&&(I=I+1|0),p=H,H=U,U=I,N=M=jg(_^p,H^I,24),J=I=l,H=I,_=t,I=h+C|0,(h=(t=$)+b|0)>>>0<t>>>0&&(I=I+1|0),I=I+H|0,H=t=h+M|0,S=jg(_^t,(b=t>>>0<h>>>0?I+1|0:I)^s,16),I=U+(M=l)|0,(t=p+S|0)>>>0<p>>>0&&(I=I+1|0),U=t,s=I,t=jg(t^N,I^J,63),h=l,N=k,I=k+g|0,(k=(p=G)+(G=BA)|0)>>>0<G>>>0&&(I=I+1|0),I=I+Y|0,J=G=k+K|0,K=jg(G^T,(k=L)^(L=G>>>0<K>>>0?I+1|0:I),32),k=p,I=W+(p=l)|0,(Y=K+AA|0)>>>0<AA>>>0&&(I=I+1|0),G=I,_=N=jg(k^Y,I^N,24),AA=I=l,k=I,X=K,I=L+B|0,(K=(L=eA)+J|0)>>>0<L>>>0&&(I=I+1|0),I=I+k|0,IA=L=K+N|0,X=jg(X^L,(k=L>>>0<K>>>0?I+1|0:I)^p,16),I=G+(K=l)|0,(L=Y+X|0)>>>0<Y>>>0&&(I=I+1|0),N=I,L=jg((G=L)^_,I^AA,63),p=l,Y=F,J=u,_=f,V=u,I=m+e|0,(m=(u=CA)+QA|0)>>>0<u>>>0&&(I=I+1|0),I=I+f|0,m=I=(u=V+m|0)>>>0<m>>>0?I+1|0:I,f=jg(u^X,I^K,32),I=(X=l)+s|0,(U=f+U|0)>>>0<f>>>0&&(I=I+1|0),AA=U,U=I,J=jg(AA^J,I^_,24),I=m+(K=l)|0,(s=u+J|0)>>>0<u>>>0&&(I=I+1|0),s=(u=n[F+216>>2])+s|0,I=n[F+220>>2]+I|0,V=s,s=jg(f^s,X^(m=s>>>0<u>>>0?I+1|0:I),16),u=I=l,n[Y+120>>2]=s,n[Y+124>>2]=I,_=J,I=I+U|0,(Y=(f=s)+AA|0)>>>0<f>>>0&&(I=I+1|0),J=Y,f=K,K=I,f=jg(_^Y,f^I,63),Y=l,U=t,_=h,I=h+v|0,(h=t+q|0)>>>0<t>>>0&&(I=I+1|0),I=I+(X=n[F+204>>2])|0,d=jg((X=t=h+n[F+200>>2]|0)^gA,(t=t>>>0<h>>>0?I+1|0:I)^d,32),v=U,I=N+(h=l)|0,(U=G+d|0)>>>0<G>>>0&&(I=I+1|0),G=I,_=N=jg(v^U,I^_,24),q=I=l,v=I,W=d,I=t+Q|0,(d=(t=O)+X|0)>>>0<t>>>0&&(I=I+1|0),I=I+v|0,T=t=d+N|0,AA=jg(W^t,(v=t>>>0<d>>>0?I+1|0:I)^h,16),I=G+(d=l)|0,(t=U+AA|0)>>>0<U>>>0&&(I=I+1|0),G=t,t=I,h=jg(G^_,I^q,63),U=l,_=p,X=c,q=I=n[F+156>>2],c=I,I=p+b|0,(L=H+(N=L)|0)>>>0<H>>>0&&(I=I+1|0),I=I+c|0,c=jg((W=z)^(z=L=(gA=n[F+152>>2])+(p=L)|0),(L=L>>>0<p>>>0?I+1|0:I)^P,32),I=(p=l)+X|0,(b=c+Z|0)>>>0<c>>>0&&(I=I+1|0),H=b,b=I,N=Z=jg(H^N,I^_,24),_=I=l,P=I,X=c,I=L+EA|0,(L=(c=nA)+z|0)>>>0<c>>>0&&(I=I+1|0),I=I+P|0,P=c=L+Z|0,W=jg(X^c,(Z=c>>>0<L>>>0?I+1|0:I)^p,16),X=N,I=b+(N=l)|0,(c=H+W|0)>>>0<H>>>0&&(I=I+1|0),p=c,H=I,c=jg(X^c,I^_,63),L=l,_=w,X=y,z=S,I=w+k|0,(w=(b=R)+IA|0)>>>0<b>>>0&&(I=I+1|0),I=I+(y=n[F+236>>2])|0,S=R=w+n[F+232>>2]|0,y=jg(z^R,(w=R>>>0<w>>>0?I+1|0:I)^M,32),R=b,I=(k=l)+X|0,(b=y+x|0)>>>0<y>>>0&&(I=I+1|0),M=R=jg(R^b,I^_,24),_=I,z=n[F+132>>2],QA=y,I=(x=l)+w|0,(w=R+S|0)>>>0<R>>>0&&(I=I+1|0),I=I+(IA=z)|0,X=R=(y=n[F+128>>2])+w|0,w=jg(QA^R,(S=k)^(k=R>>>0<w>>>0?I+1|0:I),16),R=M,I=(M=l)+_|0,(b=w+b|0)>>>0<w>>>0&&(I=I+1|0),_=x,x=I,_=R=jg(R^b,_^I,63),S=I=l,IA=AA,I=m+I|0,(m=R+V|0)>>>0<R>>>0&&(I=I+1|0),I=I+z|0,AA=R=y+m|0,z=jg(IA^R,(y=R>>>0<y>>>0?I+1|0:I)^d,32),R=F,I=H+(m=l)|0,(H=p+z|0)>>>0<p>>>0&&(I=I+1|0),p=H,H=I,S=_=jg(p^_,I^S,24),V=I=l,d=I,IA=_,I=y+g|0,(_=(y=BA)+AA|0)>>>0<y>>>0&&(I=I+1|0),I=I+d|0,d=y=IA+_|0,IA=jg(y^z,(IA=m)^(m=y>>>0<_>>>0?I+1|0:I),16),AA=S,I=H+(_=l)|0,(y=p+IA|0)>>>0<p>>>0&&(I=I+1|0),S=y,z=I,y=jg(AA^y,I^V,63),p=I=l,n[R+32>>2]=y,n[R+36>>2]=I,R=f,H=Y,I=Y+v|0,(Y=f+T|0)>>>0<f>>>0&&(I=I+1|0),I=I+(AA=n[F+148>>2])|0,N=jg((AA=f=Y+n[F+144>>2]|0)^W,(f=f>>>0<Y>>>0?I+1|0:I)^N,32),v=R,I=x+(Y=l)|0,(R=b+N|0)>>>0<b>>>0&&(I=I+1|0),b=R,R=H,H=I,R=jg(v^b,R^I,24),x=I=l,I=f+I|0,(f=(v=R)+AA|0)>>>0<v>>>0&&(I=I+1|0),I=I+q|0,V=R=f+gA|0,q=jg(q=R^N,(N=R>>>0<f>>>0?I+1|0:I)^Y,16),f=v,I=H+(v=l)|0,(R=b+q|0)>>>0<b>>>0&&(I=I+1|0),H=x,x=I,Y=jg(f^(b=R),H^I,63),H=l,R=h,T=w,I=Z+(f=U)|0,(w=h+P|0)>>>0<P>>>0&&(I=I+1|0),I=I+(AA=n[F+164>>2])|0,P=jg(T^(Z=w=(h=w)+n[F+160>>2]|0),(w=w>>>0<h>>>0?I+1|0:I)^M,32),U=R,I=K+(R=l)|0,(h=P+J|0)>>>0<J>>>0&&(I=I+1|0),M=f,f=I,M=K=jg(U^h,M^I,24),J=I=l,U=I,W=P,I=w+B|0,(P=(w=eA)+Z|0)>>>0<w>>>0&&(I=I+1|0),I=I+U|0,T=w=P+K|0,W=jg(W^w,(U=w>>>0<P>>>0?I+1|0:I)^R,16),I=f+(P=l)|0,(R=h+W|0)>>>0<h>>>0&&(I=I+1|0),K=I,R=jg((h=R)^M,I^J,63),w=l,M=c,Z=L,I=L+C|0,(c=(f=$)+c|0)>>>0<f>>>0&&(I=I+1|0),I=I+k|0,k=f=c+X|0,f=jg(f^s,(c=f>>>0<X>>>0?I+1|0:I)^u,32),I=(I=t)+(t=l)|0,(u=f+G|0)>>>0<f>>>0&&(I=I+1|0),s=u,u=I,M=G=jg(s^M,I^Z,24),Z=I=l,L=I,J=f,I=c+rA|0,(c=(f=aA)+k|0)>>>0<f>>>0&&(I=I+1|0),I=I+L|0,G=f=c+G|0,J=jg(J^f,(k=f>>>0<c>>>0?I+1|0:I)^t,16),t=M,I=u+(L=l)|0,(f=s+J|0)>>>0<s>>>0&&(I=I+1|0),M=f,c=I,s=jg(t^f,I^Z,63),f=l,Z=H,I=H+m|0,(Y=d+(u=Y)|0)>>>0<d>>>0&&(I=I+1|0),H=Y,I=I+(X=n[(t=F)+196>>2])|0,I=(Y=Y+n[t+192>>2]|0)>>>0<H>>>0?I+1|0:I,H=L,L=I,d=jg(Y^J,H^I,32),m=u,I=K+(J=l)|0,(u=h+d|0)>>>0<h>>>0&&(I=I+1|0),H=I,K=jg(m^(h=u),I^Z,24),I=L+(m=l)|0,(u=Y+K|0)>>>0<Y>>>0&&(I=I+1|0),u=(L=n[F+200>>2])+u|0,I=n[F+204>>2]+I|0,gA=u,AA=jg(d^u,J^(Y=u>>>0<L>>>0?I+1|0:I),16),u=I=l,n[t+120>>2]=AA,n[t+124>>2]=I,I=I+H|0,(t=h+AA|0)>>>0<h>>>0&&(I=I+1|0),H=t,h=m,m=I,t=jg(t^K,h^I,63),L=l,d=w,K=c,I=w+N|0,(w=(h=R)+V|0)>>>0<h>>>0&&(I=I+1|0),I=I+(c=QA=n[F+212>>2])|0,J=R=(Z=n[F+208>>2])+w|0,c=jg(R^IA,(w=R>>>0<w>>>0?I+1|0:I)^_,32),_=h,I=(h=l)+K|0,(K=c+M|0)>>>0<c>>>0&&(I=I+1|0),R=d,d=I,M=R=jg(_^K,R^I,24),N=I=l,_=c,I=w+I|0,(c=R+J|0)>>>0<R>>>0&&(I=I+1|0),I=I+(X=n[F+220>>2])|0,IA=R=c+n[F+216>>2]|0,c=jg(_^R,(J=R>>>0<c>>>0?I+1|0:I)^h,16),w=M,I=d+(M=l)|0,(R=c+K|0)>>>0<K>>>0&&(I=I+1|0),d=R,K=I,w=jg(w^R,I^N,63),h=l,R=s,N=f,_=q,q=s,I=U+EA|0,(U=(s=nA)+T|0)>>>0<s>>>0&&(I=I+1|0),I=I+f|0,q=s=q+U|0,X=jg(_^s,(f=s>>>0<U>>>0?I+1|0:I)^v,32),_=R,I=z+(s=l)|0,(R=S+X|0)>>>0<S>>>0&&(I=I+1|0),v=I,N=R=jg(_^(U=R),I^N,24),_=I=l,S=X,I=f+I|0,(f=R+q|0)>>>0<R>>>0&&(I=I+1|0),I=I+(z=n[F+236>>2])|0,X=R=f+n[F+232>>2]|0,S=jg(S^R,(q=R>>>0<f>>>0?I+1|0:I)^s,16),s=N,I=v+(N=l)|0,(R=U+S|0)>>>0<U>>>0&&(I=I+1|0),U=I,R=jg(s^(f=R),I^_,63),s=l,_=p,I=p+Q|0,(p=(v=y)+(y=O)|0)>>>0<y>>>0&&(I=I+1|0),I=I+k|0,P=jg((z=y=p+G|0)^W,(y=y>>>0<G>>>0?I+1|0:I)^P,32),I=x+(p=l)|0,(G=b+P|0)>>>0<b>>>0&&(I=I+1|0),k=I,x=v=jg(G^v,I^_,24),W=I=l,b=I,_=v,I=y+e|0,(v=(y=CA)+z|0)>>>0<y>>>0&&(I=I+1|0),I=I+b|0,_=jg((z=y=_+v|0)^P,(y=y>>>0<v>>>0?I+1|0:I)^p,16),I=k+(p=l)|0,(k=G+_|0)>>>0<G>>>0&&(I=I+1|0),G=k,k=I,v=jg(G^x,I^W,63),P=I=l,b=I,x=c,I=Y+Q|0,(c=O+gA|0)>>>0<O>>>0&&(I=I+1|0),I=I+b|0,W=O=c+v|0,x=jg(x^O,(c=O>>>0<c>>>0?I+1|0:I)^M,32),I=U+(Y=l)|0,(O=f+x|0)>>>0<f>>>0&&(I=I+1|0),b=I,O=jg(v^(U=O),P^I,24),f=F,P=I=l,I=c+I|0,(c=(v=O)+W|0)>>>0<v>>>0&&(I=I+1|0),I=I+QA|0,W=O=c+Z|0,M=jg(O^x,(c=Y)^(Y=O>>>0<Z>>>0?I+1|0:I),16),c=v,I=b+(v=l)|0,(O=U+M|0)>>>0<U>>>0&&(I=I+1|0),b=I,O=jg(c^(U=O),I^P,63),c=I=l,n[f+32>>2]=O,n[f+36>>2]=I,f=t,I=(P=L)+J|0,(L=t+IA|0)>>>0<t>>>0&&(I=I+1|0),I=I+(x=n[F+164>>2])|0,Z=jg((J=t=L+n[F+160>>2]|0)^S,(t=t>>>0<L>>>0?I+1|0:I)^N,32),S=f,I=k+(L=l)|0,(f=G+Z|0)>>>0<G>>>0&&(I=I+1|0),G=f,k=I,P=f=jg(S^f,I^P,24),x=I=l,I=t+I|0,(t=f+J|0)>>>0<f>>>0&&(I=I+1|0),I=I+(S=n[F+196>>2])|0,S=f=t+n[F+192>>2]|0,Z=jg(f^Z,(N=L)^(L=f>>>0<t>>>0?I+1|0:I),16),I=k+(IA=l)|0,(f=G+Z|0)>>>0<G>>>0&&(I=I+1|0),G=f,k=I,x=jg(f^P,I^x,63),f=l,P=h,I=h+q|0,(w=X+(t=w)|0)>>>0<X>>>0&&(I=I+1|0),I=I+(N=n[F+204>>2])|0,N=jg((J=w=(h=w)+n[F+200>>2]|0)^_,(w=w>>>0<h>>>0?I+1|0:I)^p,32),_=t,I=m+(t=l)|0,(h=H+N|0)>>>0<H>>>0&&(I=I+1|0),p=I,P=m=jg(_^h,I^P,24),_=I=l,H=I,I=w+e|0,(w=J+CA|0)>>>0<CA>>>0&&(I=I+1|0),I=I+H|0,N=jg((X=CA=w+m|0)^N,(w=X>>>0<w>>>0?I+1|0:I)^t,16),I=p+(H=l)|0,(CA=h+N|0)>>>0<h>>>0&&(I=I+1|0),p=I,CA=jg((h=CA)^P,I^_,63),t=l,m=R,P=s,I=y+s|0,(s=R+z|0)>>>0<R>>>0&&(I=I+1|0),I=I+(J=n[F+236>>2])|0,J=jg((_=R=s+n[F+232>>2]|0)^AA,(R=R>>>0<s>>>0?I+1|0:I)^u,32),I=K+(s=l)|0,(y=d+J|0)>>>0<d>>>0&&(I=I+1|0),u=I,P=d=jg(y^m,I^P,24),q=I=l,m=I,I=R+C|0,(R=_+$|0)>>>0<$>>>0&&(I=I+1|0),I=I+m|0,K=jg((m=$=R+d|0)^J,(d=m>>>0<R>>>0?I+1|0:I)^s,16),I=u+(J=l)|0,($=y+K|0)>>>0<y>>>0&&(I=I+1|0),u=I,R=jg((y=$)^P,I^q,63),s=l,$=F,I=Y+g|0,(Y=W+BA|0)>>>0<BA>>>0&&(I=I+1|0),I=I+(P=f)|0,_=EA,EA=I=(BA=Y+x|0)>>>0<Y>>>0?I+1|0:I,I=_+I|0,(Y=BA+nA|0)>>>0<BA>>>0&&(I=I+1|0),nA=I,EA=jg(K^BA,J^EA,32),I=p+(P=l)|0,(BA=h+EA|0)>>>0<h>>>0&&(I=I+1|0),h=f,f=I,BA=jg((p=BA)^x,h^I,24),I=(K=l)+nA|0,(h=Y+BA|0)>>>0<BA>>>0&&(I=I+1|0),n[$>>2]=h,n[$+4>>2]=I,nA=I,$=jg(h^EA,I^P,16),I=l,n[F+120>>2]=$,n[F+124>>2]=I,I=f+I|0,(f=p+$|0)>>>0<$>>>0&&(I=I+1|0),n[F+80>>2]=f,n[F+84>>2]=I,DA=F,uA=jg(f^BA,I^K,63),n[DA+40>>2]=uA,n[F+44>>2]=l,BA=F,f=t,I=t+L|0,(t=($=CA)+S|0)>>>0<$>>>0&&(I=I+1|0),I=I+(EA=n[F+132>>2])|0,t=I=(CA=t+n[F+128>>2]|0)>>>0<t>>>0?I+1|0:I,EA=jg(CA^M,I^v,32),p=$,I=u+(L=l)|0,($=y+EA|0)>>>0<y>>>0&&(I=I+1|0),y=$,$=I,f=jg(p^y,I^f,24),I=t+(u=l)|0,(t=f+CA|0)>>>0<CA>>>0&&(I=I+1|0),CA=(p=t)+(t=n[F+144>>2])|0,I=n[F+148>>2]+I|0,I=CA>>>0<t>>>0?I+1|0:I,n[BA+8>>2]=CA,n[BA+12>>2]=I,BA=jg(CA^EA,I^L,16),I=l,n[F+96>>2]=BA,n[F+100>>2]=I,I=I+$|0,($=y+BA|0)>>>0<BA>>>0&&(I=I+1|0),n[F+88>>2]=$,n[F+92>>2]=I,DA=F,uA=jg(f^$,I^u,63),n[DA+48>>2]=uA,n[F+52>>2]=l,BA=F,I=s+w|0,(f=R+X|0)>>>0<R>>>0&&(I=I+1|0),I=I+(CA=n[F+220>>2])|0,CA=I=($=f+n[F+216>>2]|0)>>>0<f>>>0?I+1|0:I,I=I+rA|0,(f=$+aA|0)>>>0<$>>>0&&(I=I+1|0),t=f,aA=I,f=jg($^Z,IA^CA,32),u=R,I=b+(R=l)|0,($=f+U|0)>>>0<U>>>0&&(I=I+1|0),CA=I,$=jg(u^(y=$),I^s,24),I=(s=l)+aA|0,(t=t+$|0)>>>0<$>>>0&&(I=I+1|0),n[BA+16>>2]=t,n[BA+20>>2]=I,BA=jg(f^t,I^R,16),I=l,n[F+104>>2]=BA,n[F+108>>2]=I,I=I+CA|0,(CA=y+BA|0)>>>0<BA>>>0&&(I=I+1|0),BA=CA,n[F+64>>2]=BA,n[F+68>>2]=I,DA=F,uA=jg($^BA,I^s,63),n[DA+56>>2]=uA,n[F+60>>2]=l,BA=F,aA=c,I=c+B|0,(CA=($=O)+eA|0)>>>0<$>>>0&&(I=I+1|0),I=I+d|0,CA=I=(O=m+CA|0)>>>0<m>>>0?I+1|0:I,eA=jg(O^N,I^H,32),t=$,I=k+(f=l)|0,($=G+eA|0)>>>0<G>>>0&&(I=I+1|0),c=aA,aA=I,R=jg(t^$,c^I,24),I=CA+(t=l)|0,(CA=R+O|0)>>>0<O>>>0&&(I=I+1|0),O=(c=CA)+(CA=n[F+152>>2])|0,I=n[F+156>>2]+I|0,I=O>>>0<CA>>>0?I+1|0:I,n[BA+24>>2]=O,n[BA+28>>2]=I,O=jg(O^eA,I^f,16),n[F+112>>2]=O,I=l,n[F+116>>2]=I,I=I+aA|0,(aA=$+O|0)>>>0<$>>>0&&(I=I+1|0),$=aA,n[F+72>>2]=$,n[BA+76>>2]=I,DA=F,uA=jg(R^$,I^t,63),n[DA+32>>2]=uA,n[F+36>>2]=l,I=A,BA=n[F+68>>2]^(a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24)^nA,$=n[F+64>>2]^(a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24)^h,E[0|I]=$,E[I+1|0]=$>>>8,E[I+2|0]=$>>>16,E[I+3|0]=$>>>24,E[I+4|0]=BA,E[I+5|0]=BA>>>8,E[I+6|0]=BA>>>16,E[I+7|0]=BA>>>24,BA=1;I=($=BA<<3)+A|0,aA=$=F+$|0,O=n[$>>2]^(a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24),CA=n[($=$- -64|0)>>2],$=n[$+4>>2]^n[aA+4>>2]^(a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24),aA=O^CA,E[0|I]=aA,E[I+1|0]=aA>>>8,E[I+2|0]=aA>>>16,E[I+3|0]=aA>>>24,E[I+4|0]=$,E[I+5|0]=$>>>8,E[I+6|0]=$>>>16,E[I+7|0]=$>>>24,8!=(0|(BA=BA+1|0)););D=F+256|0}function G(A,I,g,B){var C=0,Q=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0,v=0,S=0,N=0,R=0,M=0,d=0,P=0,J=0,x=0;for(function(A,I){for(var g=0,B=0,C=0,Q=0,E=0;Q=C=(B=g<<3)+A|0,E=zA(I+B|0),n[Q>>2]=E,n[C+4>>2]=l,16!=(0|(g=g+1|0)););}(g,I),I=j(B,A,64),E=n[g>>2],a=n[g+4>>2],B=0;;){if(C=jg(k=n[(Q=I)+32>>2],c=n[Q+36>>2],14),o=l,C=jg(k,c,18)^C,t=l^o,i=E,E=jg(k,c,41)^C,C=(l^t)+a|0,C=(o=i+E|0)>>>0<E>>>0?C+1|0:C,E=o,h=n[Q+48>>2],E=(t=n[(a=34784+(J=B<<3)|0)>>2])+E|0,C=n[a+4>>2]+C|0,C=E>>>0<t>>>0?C+1|0:C,E=(a=h^((_=n[Q+40>>2])^h)&k)+E|0,C=(((y=n[Q+52>>2])^(G=n[Q+44>>2]))&c^y)+C|0,C=E>>>0<a>>>0?C+1|0:C,o=(a=E)+(E=n[Q+56>>2])|0,C=n[Q+60>>2]+C|0,C=o>>>0<E>>>0?C+1|0:C,a=o+(t=n[Q+24>>2])|0,E=C,C=C+n[Q+28>>2]|0,D=C=(i=a)>>>0<t>>>0?C+1|0:C,n[Q+24>>2]=i,n[Q+28>>2]=C,C=jg(f=n[Q>>2],a=n[Q+4>>2],28),t=l,C=jg(f,a,34)^C,s=l^t,t=o+(jg(f,a,39)^C)|0,C=E+(l^s)|0,C=t>>>0<o>>>0?C+1|0:C,o=(r=t)+(t=f&((s=n[Q+16>>2])|(E=n[Q+8>>2]))|E&s)|0,C=(a&((e=n[Q+20>>2])|(w=n[Q+12>>2]))|e&w)+C|0,C=o>>>0<t>>>0?C+1|0:C,t=o,o=C,n[Q+56>>2]=t,n[Q+60>>2]=C,r=s,C=jg(i,D,14),s=l,u=jg(i,D,18)^C,m=l^s,C=((c^G)&D^G)+y|0,(h=(s=(k^_)&i^_)+h|0)>>>0<s>>>0&&(C=C+1|0),s=h,h=jg(i,D,41)^u,C=(l^m)+C|0,C=(s=s+h|0)>>>0<h>>>0?C+1|0:C,s=(u=n[(y=m=(h=(1|B)<<3)+g|0)>>2])+s|0,C=n[y+4>>2]+C|0,C=s>>>0<u>>>0?C+1|0:C,s=(y=n[(h=h+34784|0)>>2])+s|0,C=n[h+4>>2]+C|0,y=C=s>>>0<y>>>0?C+1|0:C,C=C+e|0,(r=(e=s)+r|0)>>>0<e>>>0&&(C=C+1|0),e=r,h=C,n[Q+16>>2]=r,n[Q+20>>2]=C,r=I,C=jg(t,o,28),Q=l,u=jg(t,o,34)^C,p=l^Q,C=((a|w)&o|a&w)+y|0,(s=(Q=(E|f)&t|E&f)+s|0)>>>0<Q>>>0&&(C=C+1|0),Q=s,s=jg(t,o,39)^u,C=(l^p)+C|0,C=(Q=Q+s|0)>>>0<s>>>0?C+1|0:C,s=Q,Q=C,n[r+48>>2]=s,n[r+52>>2]=C,u=I,r=E,C=jg(e,h,14),E=l,y=jg(e,h,18)^C,p=l^E,C=((c^D)&h^c)+G|0,(_=(E=(i^k)&e^k)+_|0)>>>0<E>>>0&&(C=C+1|0),y=jg(e,h,41)^y,C=(l^p)+C|0,C=(E=y+_|0)>>>0<y>>>0?C+1|0:C,E=(G=n[(_=S=(y=(2|B)<<3)+g|0)>>2])+E|0,C=n[_+4>>2]+C|0,C=E>>>0<G>>>0?C+1|0:C,E=(_=n[(y=y+34784|0)>>2])+E|0,C=n[y+4>>2]+C|0,y=w,w=C=E>>>0<_>>>0?C+1|0:C,C=y+C|0,(y=E+r|0)>>>0<E>>>0&&(C=C+1|0),r=y,y=C,n[u+8>>2]=r,n[u+12>>2]=C,C=jg(s,Q,28),_=l,G=jg(s,Q,34)^C,_^=l,C=((a|o)&Q|a&o)+w|0,(w=(w=E)+(E=(t|f)&s|t&f)|0)>>>0<E>>>0&&(C=C+1|0),E=w,w=jg(s,Q,39)^G,C=(l^_)+C|0,C=(E=E+w|0)>>>0<w>>>0?C+1|0:C,w=E,E=C,n[u+40>>2]=w,n[u+44>>2]=C,_=I,u=a,C=jg(r,y,14),a=l,G=jg(r,y,18)^C,p=l^a,C=(D^(h^D)&y)+c|0,(c=(a=i^(i^e)&r)+k|0)>>>0<a>>>0&&(C=C+1|0),a=c,c=jg(r,y,41)^G,C=(l^p)+C|0,C=(a=a+c|0)>>>0<c>>>0?C+1|0:C,a=(p=n[(G=k=(c=(3|B)<<3)+g|0)>>2])+a|0,C=n[G+4>>2]+C|0,C=a>>>0<p>>>0?C+1|0:C,a=(G=n[(c=c+34784|0)>>2])+a|0,C=n[c+4>>2]+C|0,G=C=a>>>0<G>>>0?C+1|0:C,C=C+u|0,(c=a+f|0)>>>0<a>>>0&&(C=C+1|0),u=C,n[_>>2]=c,n[_+4>>2]=C,C=jg(w,E,28),f=l,p=jg(w,E,34)^C,f^=l,C=((Q|o)&E|Q&o)+G|0,(G=(F=a)+(a=(t|s)&w|t&s)|0)>>>0<a>>>0&&(C=C+1|0),a=G,G=jg(w,E,39)^p,C=(l^f)+C|0,f=a=a+G|0,a=C=a>>>0<G>>>0?C+1|0:C,n[_+32>>2]=f,n[_+36>>2]=C,G=o,C=jg(c,u,14),o=l,p=jg(c,u,18)^C,F=l^o,C=D+(h^(y^h)&u)|0,(o=i+(e^(r^e)&c)|0)>>>0<i>>>0&&(C=C+1|0),i=jg(c,u,41)^p,C=(l^F)+C|0,C=(o=i+o|0)>>>0<i>>>0?C+1|0:C,o=(p=n[(D=d=(i=(4|B)<<3)+g|0)>>2])+o|0,C=n[D+4>>2]+C|0,C=o>>>0<p>>>0?C+1|0:C,o=(D=n[(i=i+34784|0)>>2])+o|0,C=n[i+4>>2]+C|0,i=G,G=C=o>>>0<D>>>0?C+1|0:C,C=i+C|0,(i=o+t|0)>>>0<o>>>0&&(C=C+1|0),D=C,n[_+56>>2]=i,n[_+60>>2]=C,C=jg(f,a,28),t=l,p=jg(f,a,34)^C,t^=l,C=((Q|E)&a|Q&E)+G|0,(G=(F=o)+(o=(s|w)&f|s&w)|0)>>>0<o>>>0&&(C=C+1|0),o=G,G=jg(f,a,39)^p,C=(l^t)+C|0,t=o=o+G|0,o=C=o>>>0<G>>>0?C+1|0:C,n[_+24>>2]=t,n[_+28>>2]=C,G=I,p=Q,C=jg(i,D,14),Q=l,_=jg(i,D,18)^C,F=l^Q,C=h+(y^(y^u)&D)|0,(Q=e+(r^(r^c)&i)|0)>>>0<e>>>0&&(C=C+1|0),e=jg(i,D,41)^_,C=(l^F)+C|0,C=(Q=e+Q|0)>>>0<e>>>0?C+1|0:C,Q=(F=n[(h=_=(e=(5|B)<<3)+g|0)>>2])+Q|0,C=n[h+4>>2]+C|0,C=Q>>>0<F>>>0?C+1|0:C,Q=(h=n[(e=e+34784|0)>>2])+Q|0,C=n[e+4>>2]+C|0,e=p,p=C=Q>>>0<h>>>0?C+1|0:C,C=e+C|0,(e=Q+s|0)>>>0<Q>>>0&&(C=C+1|0),h=C,n[G+48>>2]=e,n[G+52>>2]=C,C=jg(t,o,28),s=l,F=jg(t,o,34)^C,s^=l,C=((E|a)&o|E&a)+p|0,(p=(p=Q)+(Q=(f|w)&t|f&w)|0)>>>0<Q>>>0&&(C=C+1|0),Q=p,p=jg(t,o,39)^F,C=(l^s)+C|0,s=Q=Q+p|0,Q=C=Q>>>0<p>>>0?C+1|0:C,n[G+16>>2]=s,n[G+20>>2]=C,p=E,C=jg(e,h,14),E=l,F=jg(e,h,18)^C,N=l^E,C=y+(u^(D^u)&h)|0,(E=r+(c^(i^c)&e)|0)>>>0<r>>>0&&(C=C+1|0),r=jg(e,h,41)^F,C=(l^N)+C|0,C=(E=r+E|0)>>>0<r>>>0?C+1|0:C,E=(F=n[(y=x=(r=(6|B)<<3)+g|0)>>2])+E|0,C=n[y+4>>2]+C|0,C=E>>>0<F>>>0?C+1|0:C,E=(y=n[(r=r+34784|0)>>2])+E|0,C=n[r+4>>2]+C|0,r=p,p=C=E>>>0<y>>>0?C+1|0:C,C=r+C|0,(r=E+w|0)>>>0<E>>>0&&(C=C+1|0),y=C,n[G+40>>2]=r,n[G+44>>2]=C,C=jg(s,Q,28),w=l,F=jg(s,Q,34)^C,w^=l,C=((a|o)&Q|a&o)+p|0,(p=(p=E)+(E=(t|f)&s|t&f)|0)>>>0<E>>>0&&(C=C+1|0),E=p,p=jg(s,Q,39)^F,C=(l^w)+C|0,w=E=E+p|0,E=C=E>>>0<p>>>0?C+1|0:C,n[G+8>>2]=w,n[G+12>>2]=C,p=I,F=a,C=jg(r,y,14),a=l,G=jg(r,y,18)^C,N=l^a,C=u+(D^(h^D)&y)|0,(a=c+(i^(i^e)&r)|0)>>>0<c>>>0&&(C=C+1|0),c=jg(r,y,41)^G,C=(l^N)+C|0,C=(a=c+a|0)>>>0<c>>>0?C+1|0:C,a=(N=n[(u=G=(c=(7|B)<<3)+g|0)>>2])+a|0,C=n[u+4>>2]+C|0,C=a>>>0<N>>>0?C+1|0:C,a=(u=n[(c=c+34784|0)>>2])+a|0,C=n[c+4>>2]+C|0,c=F,F=C=a>>>0<u>>>0?C+1|0:C,C=c+C|0,(c=a+f|0)>>>0<a>>>0&&(C=C+1|0),u=C,n[p+32>>2]=c,n[p+36>>2]=C,C=jg(w,E,28),f=l,N=jg(w,E,34)^C,f^=l,C=((Q|o)&E|Q&o)+F|0,(F=(F=a)+(a=(t|s)&w|t&s)|0)>>>0<a>>>0&&(C=C+1|0),a=F,F=jg(w,E,39)^N,C=(l^f)+C|0,f=a=a+F|0,a=C=a>>>0<F>>>0?C+1|0:C,n[p>>2]=f,n[p+4>>2]=C,F=o,C=jg(c,u,14),o=l,N=jg(c,u,18)^C,U=l^o,C=D+(h^(y^h)&u)|0,(o=i+(e^(r^e)&c)|0)>>>0<i>>>0&&(C=C+1|0),i=jg(c,u,41)^N,C=(l^U)+C|0,C=(o=i+o|0)>>>0<i>>>0?C+1|0:C,o=(U=n[(D=N=(i=(8|B)<<3)+g|0)>>2])+o|0,C=n[D+4>>2]+C|0,C=o>>>0<U>>>0?C+1|0:C,o=(D=n[(i=i+34784|0)>>2])+o|0,C=n[i+4>>2]+C|0,i=F,F=C=o>>>0<D>>>0?C+1|0:C,C=i+C|0,(i=o+t|0)>>>0<o>>>0&&(C=C+1|0),D=C,n[p+24>>2]=i,n[p+28>>2]=C,C=jg(f,a,28),t=l,U=jg(f,a,34)^C,t^=l,C=((Q|E)&a|Q&E)+F|0,(F=(F=o)+(o=(s|w)&f|s&w)|0)>>>0<o>>>0&&(C=C+1|0),o=F,F=jg(f,a,39)^U,C=(l^t)+C|0,t=o=o+F|0,o=C=o>>>0<F>>>0?C+1|0:C,n[p+56>>2]=t,n[p+60>>2]=C,F=I,U=Q,C=jg(i,D,14),Q=l,p=jg(i,D,18)^C,v=l^Q,C=h+(y^(y^u)&D)|0,(Q=e+(r^(r^c)&i)|0)>>>0<e>>>0&&(C=C+1|0),e=jg(i,D,41)^p,C=(l^v)+C|0,C=(Q=e+Q|0)>>>0<e>>>0?C+1|0:C,Q=(v=n[(h=p=(e=(9|B)<<3)+g|0)>>2])+Q|0,C=n[h+4>>2]+C|0,C=Q>>>0<v>>>0?C+1|0:C,Q=(h=n[(e=e+34784|0)>>2])+Q|0,C=n[e+4>>2]+C|0,e=U,U=C=Q>>>0<h>>>0?C+1|0:C,C=e+C|0,(e=Q+s|0)>>>0<Q>>>0&&(C=C+1|0),h=C,n[F+16>>2]=e,n[F+20>>2]=C,C=jg(t,o,28),s=l,v=jg(t,o,34)^C,s^=l,C=((E|a)&o|E&a)+U|0,(U=(U=Q)+(Q=(f|w)&t|f&w)|0)>>>0<Q>>>0&&(C=C+1|0),Q=U,U=jg(t,o,39)^v,C=(l^s)+C|0,s=Q=Q+U|0,Q=C=Q>>>0<U>>>0?C+1|0:C,n[F+48>>2]=s,n[F+52>>2]=C,v=E,C=jg(e,h,14),E=l,U=jg(e,h,18)^C,Y=l^E,C=y+(u^(D^u)&h)|0,(E=r+(c^(i^c)&e)|0)>>>0<r>>>0&&(C=C+1|0),r=jg(e,h,41)^U,C=(l^Y)+C|0,C=(E=r+E|0)>>>0<r>>>0?C+1|0:C,E=(Y=n[(y=U=(r=(10|B)<<3)+g|0)>>2])+E|0,C=n[y+4>>2]+C|0,C=E>>>0<Y>>>0?C+1|0:C,E=(y=n[(r=r+34784|0)>>2])+E|0,C=n[r+4>>2]+C|0,r=C=E>>>0<y>>>0?C+1|0:C,C=C+v|0,(y=E+w|0)>>>0<E>>>0&&(C=C+1|0),w=y,y=C,n[F+8>>2]=w,n[F+12>>2]=C,C=jg(s,Q,28),v=l,Y=jg(s,Q,34)^C,v^=l,C=((a|o)&Q|a&o)+r|0,(r=(r=E)+(E=(t|f)&s|t&f)|0)>>>0<E>>>0&&(C=C+1|0),E=r,r=jg(s,Q,39)^Y,C=(l^v)+C|0,r=C=(E=E+r|0)>>>0<r>>>0?C+1|0:C,n[F+40>>2]=E,n[F+44>>2]=C,v=I,Y=a,C=jg(w,y,14),a=l,F=jg(w,y,18)^C,b=l^a,C=u+(D^(h^D)&y)|0,(a=c+(i^(i^e)&w)|0)>>>0<c>>>0&&(C=C+1|0),c=jg(w,y,41)^F,C=(l^b)+C|0,C=(a=c+a|0)>>>0<c>>>0?C+1|0:C,a=(b=n[(u=F=(c=(11|B)<<3)+g|0)>>2])+a|0,C=n[u+4>>2]+C|0,C=a>>>0<b>>>0?C+1|0:C,a=(u=n[(c=c+34784|0)>>2])+a|0,C=n[c+4>>2]+C|0,c=C=a>>>0<u>>>0?C+1|0:C,C=C+Y|0,(u=a+f|0)>>>0<a>>>0&&(C=C+1|0),f=u,u=C,n[v>>2]=f,n[v+4>>2]=C,C=jg(E,r,28),Y=l,b=jg(E,r,34)^C,Y^=l,C=((Q|o)&r|Q&o)+c|0,(c=(c=a)+(a=(t|s)&E|t&s)|0)>>>0<a>>>0&&(C=C+1|0),a=c,c=jg(E,r,39)^b,C=(l^Y)+C|0,c=C=(a=a+c|0)>>>0<c>>>0?C+1|0:C,n[v+32>>2]=a,n[v+36>>2]=C,Y=I,b=o,C=jg(f,u,14),o=l,v=jg(f,u,18)^C,R=l^o,C=D+(h^(y^h)&u)|0,(o=i+(e^(e^w)&f)|0)>>>0<i>>>0&&(C=C+1|0),i=jg(f,u,41)^v,C=(l^R)+C|0,C=(o=i+o|0)>>>0<i>>>0?C+1|0:C,o=(R=n[(D=v=(i=(12|B)<<3)+g|0)>>2])+o|0,C=n[D+4>>2]+C|0,C=o>>>0<R>>>0?C+1|0:C,o=(D=n[(i=i+34784|0)>>2])+o|0,C=n[i+4>>2]+C|0,i=b,b=C=o>>>0<D>>>0?C+1|0:C,C=i+C|0,(i=o+t|0)>>>0<o>>>0&&(C=C+1|0),R=i,i=C,n[Y+56>>2]=R,n[Y+60>>2]=C,D=I,C=jg(a,c,28),t=l,Y=jg(a,c,34)^C,t^=l,C=((Q|r)&c|Q&r)+b|0,(b=(b=o)+(o=(E|s)&a|E&s)|0)>>>0<o>>>0&&(C=C+1|0),Y=jg(a,c,39)^Y,C=(l^t)+C|0,b=o=Y+b|0,t=C=o>>>0<Y>>>0?C+1|0:C,n[D+24>>2]=o,n[D+28>>2]=C,o=I,D=s,Y=Q,C=jg(R,i,14),Q=l,s=jg(R,i,18)^C,H=l^Q,C=h+(y^(y^u)&i)|0,(Q=e+(w^(f^w)&R)|0)>>>0<e>>>0&&(C=C+1|0),s=jg(R,i,41)^s,C=(l^H)+C|0,C=(Q=s+Q|0)>>>0<s>>>0?C+1|0:C,Q=(H=n[(s=(e=(13|B)<<3)+g|0)>>2])+Q|0,C=n[s+4>>2]+C|0,C=Q>>>0<H>>>0?C+1|0:C,Q=(h=n[(e=e+34784|0)>>2])+Q|0,C=n[e+4>>2]+C|0,h=C=Q>>>0<h>>>0?C+1|0:C,C=C+Y|0,(D=Q+D|0)>>>0<Q>>>0&&(C=C+1|0),Y=D,e=C,n[o+48>>2]=D,n[o+52>>2]=C,C=jg(b,t,28),D=l,H=jg(b,t,34)^C,D^=l,C=((r|c)&t|r&c)+h|0,(h=(h=Q)+(Q=(E|a)&b|E&a)|0)>>>0<Q>>>0&&(C=C+1|0),Q=h,h=jg(b,t,39)^H,C=(l^D)+C|0,C=(Q=Q+h|0)>>>0<h>>>0?C+1|0:C,h=Q,Q=C,n[o+16>>2]=h,n[o+20>>2]=C,C=jg(Y,e,14),D=l,H=jg(Y,e,18)^C,D^=l,C=y+(u^(i^u)&e)|0,(y=w+(f^(f^R)&Y)|0)>>>0<w>>>0&&(C=C+1|0),w=y,y=jg(Y,e,41)^H,C=(l^D)+C|0,C=(w=w+y|0)>>>0<y>>>0?C+1|0:C,w=(M=n[(D=(y=(14|B)<<3)+g|0)>>2])+w|0,C=n[D+4>>2]+C|0,C=w>>>0<M>>>0?C+1|0:C,w=(H=n[(y=y+34784|0)>>2])+w|0,C=n[y+4>>2]+C|0,C=w>>>0<H>>>0?C+1|0:C,H=w,w=C,C=r+C|0,(r=E+H|0)>>>0<E>>>0&&(C=C+1|0),y=r,E=C,n[o+40>>2]=r,n[o+44>>2]=C,C=jg(h,Q,28),r=l,M=jg(h,Q,34)^C,r^=l,C=((t|c)&Q|t&c)+w|0,(H=(w=(a|b)&h|a&b)+H|0)>>>0<w>>>0&&(C=C+1|0),w=H,H=jg(h,Q,39)^M,C=(l^r)+C|0,C=(w=w+H|0)>>>0<H>>>0?C+1|0:C,H=w,r=C,n[o+8>>2]=w,n[o+12>>2]=C,C=jg(y,E,14),w=l,M=jg(y,E,18)^C,w^=l,C=u+(i^(i^e)&E)|0,(i=f+(R^(Y^R)&y)|0)>>>0<f>>>0&&(C=C+1|0),f=jg(y,E,41)^M,C=(l^w)+C|0,C=(E=f+i|0)>>>0<f>>>0?C+1|0:C,E=(e=n[(i=w=(f=(15|B)<<3)+g|0)>>2])+E|0,C=n[i+4>>2]+C|0,C=E>>>0<e>>>0?C+1|0:C,E=(i=n[(f=f+34784|0)>>2])+E|0,C=n[f+4>>2]+C|0,f=E,C=c+(E=E>>>0<i>>>0?C+1|0:C)|0,(i=a+f|0)>>>0<a>>>0&&(C=C+1|0),n[o+32>>2]=i,n[o+36>>2]=C,C=jg(H,r,28),o=l,a=jg(H,r,34)^C,i=l^o,C=((Q|t)&r|Q&t)+E|0,(E=(Q=(h|b)&H|h&b)+f|0)>>>0<Q>>>0&&(C=C+1|0),Q=(Q=E)+(E=jg(H,r,39)^a)|0,C=(l^i)+C|0,n[(o=I)>>2]=Q,n[o+4>>2]=Q>>>0<E>>>0?C+1|0:C,64==(0|B)){for(;o=g=(B=P<<3)+A|0,B=(Q=n[(C=I+B|0)>>2])+n[o>>2]|0,C=n[o+4>>2]+n[C+4>>2]|0,n[o>>2]=B,n[o+4>>2]=B>>>0<Q>>>0?C+1|0:C,8!=(0|(P=P+1|0)););break}f=((B=B+16|0)<<3)+g|0,Y=o=n[D+4>>2],C=o>>>6|0,o=((63&o)<<26|(b=n[D>>2])>>>6)^jg(b,o,19),C^=l,o=jg(b,Y,61)^o,C=(a=n[p+4>>2])+(l^C)|0,(Q=(Q=o)+(o=y=n[p>>2])|0)>>>0<o>>>0&&(C=C+1|0),o=(i=Q)+(E=n[(Q=g+J|0)>>2])|0,C=n[Q+4>>2]+C|0,o=(i=o)>>>0<E>>>0?C+1|0:C,E=Q=n[m+4>>2],C=Q>>>7|0,Q=((127&Q)<<25|(t=n[m>>2])>>>7)^jg(t,Q,1),C^=l,r=i,i=jg(t,E,8)^Q,C=(l^C)+o|0,r=Q=r+i|0,Q=C=Q>>>0<i>>>0?C+1|0:C,n[f>>2]=r,n[f+4>>2]=C,C=n[(i=m)+76>>2]+E|0,(E=(o=n[i+72>>2])+t|0)>>>0<o>>>0&&(C=C+1|0),f=E,E=C,C=(o=t=n[w+4>>2])>>>6|0,t=((63&o)<<26|(h=n[w>>2])>>>6)^jg(h,o,19),C^=l,e=f,f=jg(h,o,61)^t,C=(l^C)+E|0,c=t=e+f|0,E=t>>>0<f>>>0?C+1|0:C,t=e=n[m+12>>2],C=e>>>7|0,e=((127&e)<<25|(f=n[m+8>>2])>>>7)^jg(f,e,1),C^=l,u=c,c=jg(f,t,8)^e,C=(l^C)+E|0,C=(e=u+c|0)>>>0<c>>>0?C+1|0:C,c=e,E=C,n[i+128>>2]=e,n[i+132>>2]=C,i=S,e=t,C=jg(r,Q,19),u=l,t=C,C=Q>>>6|0,Q=jg(r,Q,61)^t^((63&Q)<<26|r>>>6),r=f,C=(t=n[F+4>>2])+(l^C^u)|0,(f=(f=Q)+(Q=u=n[F>>2])|0)>>>0<Q>>>0&&(C=C+1|0),C=C+e|0,m=Q=r+f|0,Q=Q>>>0<f>>>0?C+1|0:C,f=e=n[k+4>>2],C=e>>>7|0,e=((127&e)<<25|(r=n[k>>2])>>>7)^jg(r,e,1),C^=l,H=m,m=jg(r,f,8)^e,C=(l^C)+Q|0,C=(e=H+m|0)>>>0<m>>>0?C+1|0:C,m=e,Q=C,n[i+128>>2]=e,n[i+132>>2]=C,C=n[(e=k)+76>>2]+f|0,(i=(f=n[e+72>>2])+r|0)>>>0<f>>>0&&(C=C+1|0),f=i,i=C,C=jg(c,E,19),r=l,H=f,f=C,C=E>>>6|0,f=jg(c,E,61)^f^((63&E)<<26|c>>>6),C=(l^C^r)+i|0,c=E=H+f|0,E=E>>>0<f>>>0?C+1|0:C,f=r=n[k+12>>2],C=r>>>7|0,r=((127&r)<<25|(i=n[k+8>>2])>>>7)^jg(i,r,1),C^=l,k=c,c=jg(i,f,8)^r,C=(l^C)+E|0,C=(r=k+c|0)>>>0<c>>>0?C+1|0:C,c=r,E=C,n[e+128>>2]=r,n[e+132>>2]=C,e=d,r=f,C=jg(m,Q,19),k=l,f=C,C=Q>>>6|0,Q=jg(m,Q,61)^f^((63&Q)<<26|m>>>6),H=i,C=(f=n[s+4>>2])+(l^C^k)|0,(i=(i=Q)+(Q=m=n[s>>2])|0)>>>0<Q>>>0&&(C=C+1|0),C=C+r|0,S=Q=H+i|0,Q=Q>>>0<i>>>0?C+1|0:C,C=(i=k=n[_+4>>2])>>>7|0,k=((127&i)<<25|(r=n[_>>2])>>>7)^jg(r,i,1),C^=l,H=S,S=jg(r,i,8)^k,C=(l^C)+Q|0,Q=C=(k=H+S|0)>>>0<S>>>0?C+1|0:C,n[e+128>>2]=k,n[e+132>>2]=C,C=n[(e=_)+76>>2]+i|0,(r=(i=n[e+72>>2])+r|0)>>>0<i>>>0&&(C=C+1|0),i=r,r=C,C=jg(c,E,19),S=l,H=i,i=C,C=E>>>6|0,i=jg(c,E,61)^i^((63&E)<<26|c>>>6),C=(l^C^S)+r|0,c=E=H+i|0,E=E>>>0<i>>>0?C+1|0:C,C=(i=r=n[_+12>>2])>>>7|0,r=((127&i)<<25|(S=n[_+8>>2])>>>7)^jg(S,i,1),C^=l,_=c,c=jg(S,i,8)^r,C=(l^C)+E|0,_=r=_+c|0,E=C=r>>>0<c>>>0?C+1|0:C,n[e+128>>2]=r,n[e+132>>2]=C,e=x,r=i,C=jg(k,Q,19),d=l,i=C,C=Q>>>6|0,i=jg(k,Q,61)^i^((63&Q)<<26|k>>>6),C=(l^C^d)+o|0,C=(Q=i+h|0)>>>0<i>>>0?C+1|0:C,i=Q,C=C+r|0,k=Q=Q+S|0,Q=Q>>>0<i>>>0?C+1|0:C,C=(i=c=n[G+4>>2])>>>7|0,c=((127&i)<<25|(r=n[G>>2])>>>7)^jg(r,i,1),C^=l,H=k,k=jg(r,i,8)^c,C=(l^C)+Q|0,Q=C=(c=H+k|0)>>>0<k>>>0?C+1|0:C,n[e+128>>2]=c,n[e+132>>2]=C,C=n[(e=G)+76>>2]+i|0,(r=(i=n[e+72>>2])+r|0)>>>0<i>>>0&&(C=C+1|0),i=r,r=C,C=jg(_,E,19),k=l,H=i,i=C,C=E>>>6|0,i=jg(_,E,61)^i^((63&E)<<26|_>>>6),C=(l^C^k)+r|0,k=E=H+i|0,E=E>>>0<i>>>0?C+1|0:C,C=(i=r=n[G+12>>2])>>>7|0,r=((127&i)<<25|(_=n[G+8>>2])>>>7)^jg(_,i,1),C^=l,G=k,k=jg(_,i,8)^r,C=(l^C)+E|0,C=(r=G+k|0)>>>0<k>>>0?C+1|0:C,k=r,E=C,n[e+128>>2]=r,n[e+132>>2]=C,r=i,C=jg(c,Q,19),G=l,i=C,C=Q>>>6|0,Q=(Q=jg(c,Q,61)^i^((63&Q)<<26|c>>>6))+(i=n[(e=N)+72>>2])|0,C=n[e+76>>2]+(l^C^G)|0,C=Q>>>0<i>>>0?C+1|0:C,i=Q,C=C+r|0,i=C=(Q=Q+_|0)>>>0<i>>>0?C+1|0:C,C=jg(y,a,1),r=l,G=Q,c=C,C=(Q=a)>>>7|0,c=c^((127&Q)<<25|y>>>7)^jg(y,Q,8),C=(l^C^r)+i|0,r=Q=G+c|0,Q=C=Q>>>0<c>>>0?C+1|0:C,n[e+128>>2]=r,n[e+132>>2]=C,C=n[(i=p)+76>>2]+a|0,(e=(a=n[i+72>>2])+y|0)>>>0<a>>>0&&(C=C+1|0),a=e,e=C,C=jg(k,E,19),c=l,y=a,a=C,C=E>>>6|0,a=jg(k,E,61)^a^((63&E)<<26|k>>>6),C=(l^C^c)+e|0,c=E=y+a|0,E=E>>>0<a>>>0?C+1|0:C,C=(a=e=n[p+12>>2])>>>7|0,e=((127&a)<<25|(y=n[p+8>>2])>>>7)^jg(y,a,1),C^=l,p=c,c=jg(y,a,8)^e,C=(l^C)+E|0,C=(e=p+c|0)>>>0<c>>>0?C+1|0:C,c=e,E=C,n[i+128>>2]=e,n[i+132>>2]=C,e=a,C=jg(r,Q,19),k=l,a=C,C=Q>>>6|0,Q=(Q=jg(r,Q,61)^a^((63&Q)<<26|r>>>6))+(a=n[(i=U)+72>>2])|0,C=n[i+76>>2]+(l^C^k)|0,C=Q>>>0<a>>>0?C+1|0:C,a=Q,C=C+e|0,a=C=(Q=Q+y|0)>>>0<a>>>0?C+1|0:C,C=jg(u,t,1),e=l,y=Q,r=C,C=(Q=t)>>>7|0,r=r^((127&Q)<<25|u>>>7)^jg(u,Q,8),C=(l^C^e)+a|0,e=Q=y+r|0,Q=C=Q>>>0<r>>>0?C+1|0:C,n[i+128>>2]=e,n[i+132>>2]=C,C=n[(i=F)+76>>2]+t|0,(t=(a=n[i+72>>2])+u|0)>>>0<a>>>0&&(C=C+1|0),a=t,t=C,C=jg(c,E,19),r=l,y=a,a=C,C=E>>>6|0,a=jg(c,E,61)^a^((63&E)<<26|c>>>6),C=(l^C^r)+t|0,r=E=y+a|0,E=E>>>0<a>>>0?C+1|0:C,C=(a=t=n[F+12>>2])>>>7|0,t=((127&a)<<25|(c=n[F+8>>2])>>>7)^jg(c,a,1),C^=l,y=r,r=jg(c,a,8)^t,C=(l^C)+E|0,C=(t=y+r|0)>>>0<r>>>0?C+1|0:C,r=t,E=C,n[i+128>>2]=r,n[i+132>>2]=C,i=a,C=jg(e,Q,19),y=l,a=C,C=Q>>>6|0,Q=(Q=jg(e,Q,61)^a^((63&Q)<<26|e>>>6))+(a=n[(t=v)+72>>2])|0,C=n[t+76>>2]+(l^C^y)|0,C=Q>>>0<a>>>0?C+1|0:C,a=Q,C=C+i|0,a=C=(Q=Q+c|0)>>>0<a>>>0?C+1|0:C,C=jg(m,f,1),i=l,c=Q,e=C,C=(Q=f)>>>7|0,e=e^((127&Q)<<25|m>>>7)^jg(m,Q,8),C=(l^C^i)+a|0,i=Q=c+e|0,Q=C=Q>>>0<e>>>0?C+1|0:C,n[t+128>>2]=i,n[t+132>>2]=C,C=n[(a=s)+76>>2]+f|0,(f=(t=n[a+72>>2])+m|0)>>>0<t>>>0&&(C=C+1|0),t=f,f=C,C=jg(r,E,19),e=l,c=t,t=C,C=E>>>6|0,t=jg(r,E,61)^t^((63&E)<<26|r>>>6),C=(l^C^e)+f|0,e=E=c+t|0,E=E>>>0<t>>>0?C+1|0:C,f=t=n[s+12>>2],C=t>>>7|0,t=((127&t)<<25|(s=n[s+8>>2])>>>7)^jg(s,t,1),C^=l,s=jg(s,f,8)^t,C=(l^C)+E|0,f=t=s+e|0,E=C=t>>>0<s>>>0?C+1|0:C,n[a+128>>2]=t,n[a+132>>2]=C,C=n[(a=D)+76>>2]+Y|0,(s=(t=n[a+72>>2])+b|0)>>>0<t>>>0&&(C=C+1|0),t=s,s=C,C=jg(i,Q,19),e=l,r=t,t=C,C=Q>>>6|0,t=jg(i,Q,61)^t^((63&Q)<<26|i>>>6),C=(l^C^e)+s|0,t=C=(Q=r+t|0)>>>0<t>>>0?C+1|0:C,C=jg(h,o,1),s=l,r=Q,i=C,C=(Q=o)>>>7|0,Q=r+(i=i^((127&Q)<<25|h>>>7)^jg(h,Q,8))|0,C=(l^C^s)+t|0,n[a+128>>2]=Q,n[a+132>>2]=Q>>>0<i>>>0?C+1|0:C,C=n[(Q=w)+76>>2]+o|0,(a=(o=n[Q+72>>2])+h|0)>>>0<o>>>0&&(C=C+1|0),o=a,a=C,C=jg(f,E,19),t=l,i=C,C=E>>>6|0,E=jg(f,E,61)^i^((63&E)<<26|f>>>6),C=(l^C^t)+a|0,s=o=E+o|0,o=o>>>0<E>>>0?C+1|0:C,C=(a=t=n[w+12>>2])>>>7|0,t=((127&a)<<25|(E=n[w+8>>2])>>>7)^jg(E,a,1),C^=l,t=(i=s)+(s=jg(E,a,8)^t)|0,C=(l^C)+o|0,n[Q+128>>2]=t,n[Q+132>>2]=t>>>0<s>>>0?C+1|0:C}}function k(A){var I,g,B,C,Q,i,n,r,o,e,t,c,f,y,s,w,h,D,u,p=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0,v=0,S=0,N=0,R=0,M=0,d=0,P=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,T=0,W=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,QA=0,EA=0,iA=0;y=Cg(A),s=a[A+2|0]|a[A+3|0]<<8|a[A+4|0]<<16|a[A+5|0]<<24,w=Cg(A+5|0),h=l,gA=a[A+7|0]|a[A+8|0]<<8|a[A+9|0]<<16|a[A+10|0]<<24,BA=a[A+10|0]|a[A+11|0]<<8|a[A+12|0]<<16|a[A+13|0]<<24,D=Cg(A+13|0),CA=l,M=a[A+15|0]|a[A+16|0]<<8|a[A+17|0]<<16|a[A+18|0]<<24,O=Cg(A+18|0),d=l,U=Cg(A+21|0),H=a[A+23|0]|a[A+24|0]<<8|a[A+25|0]<<16|a[A+26|0]<<24,_=Cg(A+26|0),G=l,IA=a[A+28|0]|a[A+29|0]<<8|a[A+30|0]<<16|a[A+31|0]<<24,X=a[A+31|0]|a[A+32|0]<<8|a[A+33|0]<<16|a[A+34|0]<<24,j=Cg(A+34|0),W=l,P=a[A+36|0]|a[A+37|0]<<8|a[A+38|0]<<16|a[A+39|0]<<24,z=Cg(A+39|0),x=l,b=Cg(A+42|0),k=a[A+44|0]|a[A+45|0]<<8|a[A+46|0]<<16|a[A+47|0]<<24,u=A,F=Cg(A+47|0),p=xg(I=2097151&((3&(Y=l))<<30|F>>>2),0,136657,0),F=l,(p=(G=2097151&((3&G)<<30|_>>>2))+p|0)>>>0<G>>>0&&(F=F+1|0),_=(G=xg(g=(a[A+49|0]|a[A+50|0]<<8|a[A+51|0]<<16|a[A+52|0]<<24)>>>7&2097151,0,-997805,-1))+p|0,p=l+F|0,p=_>>>0<G>>>0?p+1|0:p,F=xg(B=(a[A+52|0]|a[A+53|0]<<8|a[A+54|0]<<16|a[A+55|0]<<24)>>>4&2097151,0,654183,0),G=l+p|0,G=(_=F+_|0)>>>0<F>>>0?G+1|0:G,p=_,F=Cg(A+55|0),_=p+(F=xg(C=2097151&((1&(_=l))<<31|F>>>1),0,470296,0))|0,p=l+G|0,p=_>>>0<F>>>0?p+1|0:p,G=xg(Q=(a[A+57|0]|a[A+58|0]<<8|a[A+59|0]<<16|a[A+60|0]<<24)>>>6&2097151,0,666643,0),F=l+p|0,S=F=(_=G+_|0)>>>0<G>>>0?F+1|0:F,G=F,m=k>>>5&2097151,F=2097151&b,k=xg(i=(a[A+60|0]|a[A+61|0]<<8|a[A+62|0]<<16|a[A+63|0]<<24)>>>3|0,0,-683901,-1)+F|0,p=l,b=k,N=p=k>>>0<F>>>0?p+1|0:p,R=(p=k)- -1048576|0,K=k=N-((p>>>0<4293918720)+-1|0)|0,p=k>>21,r=m=(k=(2097151&k)<<11|R>>>21)+m|0,T=F=m>>>0<k>>>0?p+1|0:p,p=xg(m,F,-683901,-1),F=l+G|0,Z=Y=p+_|0,v=Y>>>0<p>>>0?F+1|0:F,F=xg(I,0,-997805,-1),p=l,(F=(G=H>>>5&2097151)+F|0)>>>0<G>>>0&&(p=p+1|0),Y=(G=F)+(F=xg(g,0,654183,0))|0,G=l+p|0,G=Y>>>0<F>>>0?G+1|0:G,p=xg(B,0,470296,0),F=l+G|0,F=(Y=p+Y|0)>>>0<p>>>0?F+1|0:F,G=xg(C,0,666643,0),p=l+F|0,G=(H=Y=G+Y|0)>>>0<G>>>0?p+1|0:p,p=2097151&U,Y=xg(I,0,654183,0)+p|0,F=l,F=Y>>>0<p>>>0?F+1|0:F,k=(p=Y)+(Y=xg(g,0,470296,0))|0,p=l+F|0,p=k>>>0<Y>>>0?p+1|0:p,Y=xg(B,0,666643,0),F=l+p|0,m=k=Y+k|0,k=F=k>>>0<Y>>>0?F+1|0:F,$=(p=m)- -1048576|0,J=Y=F-((p>>>0<4293918720)+-1|0)|0,G=(p=Y>>>21|0)+G|0,U=G=(H=Y=(F=(2097151&Y)<<11|$>>>21)+H|0)>>>0<F>>>0?G+1|0:G,q=(p=H)- -1048576|0,c=_- -1048576|0,S=S-((_>>>0<4293918720)+-1|0)|0,F=(p=(G=L=G-((p>>>0<4293918720)+-1|0)|0)>>21)+v|0,S=(F=(L=(_=(2097151&G)<<11|q>>>21)+Z|0)>>>0<_>>>0?F+1|0:F)-(((_=L)>>>0<(p=-2097152&c)>>>0)+(Y=S)|0)|0,QA=(p=_-p|0)-(F=-2097152&(f=p- -1048576|0))|0,EA=S-((p>>>0<F>>>0)+(_=S-((p>>>0<4293918720)+-1|0)|0)|0)|0,F=xg(r,T,136657,0)+H|0,p=U+l|0,p=F>>>0<H>>>0?p+1|0:p,AA=(H=F)-(F=-2097152&q)|0,Z=p-((H>>>0<F>>>0)+G|0)|0,S=b-(p=-2097152&R)|0,v=N-((b>>>0<p>>>0)+K|0)|0,p=xg(i,0,136657,0),F=l,(p=(G=2097151&((7&x)<<29|z>>>3))+p|0)>>>0<G>>>0&&(F=F+1|0),H=(G=xg(Q,0,-683901,-1))+p|0,p=l+F|0,b=H,H=H>>>0<G>>>0?p+1|0:p,p=xg(C,0,-683901,-1),F=l,(p=(G=P>>>6&2097151)+p|0)>>>0<G>>>0&&(F=F+1|0),U=(G=p)+(p=xg(i,0,-997805,-1))|0,G=l+F|0,G=U>>>0<p>>>0?G+1|0:G,F=xg(Q,0,136657,0),p=l+G|0,q=F=(R=p=(U=F+U|0)>>>0<F>>>0?p+1|0:p)-(((p=U)>>>0<4293918720)+-1|0)|0,p=(2097151&F)<<11|(z=p- -1048576|0)>>>21,F=(F>>21)+H|0,N=F=(b=p+b|0)>>>0<p>>>0?F+1|0:F,L=(p=b)- -1048576|0,K=F=F-((p>>>0<4293918720)+-1|0)|0,p=(G=F>>21)+v|0,o=H=(F=(2097151&F)<<11|L>>>21)+S|0,V=p=H>>>0<F>>>0?p+1|0:p,F=xg(H,p,-683901,-1),p=l+Z|0,iA=G=F+AA|0,P=G>>>0<F>>>0?p+1|0:p,v=m,p=xg(I,0,470296,0),F=l,(p=(G=2097151&((7&d)<<29|O>>>3))+p|0)>>>0<G>>>0&&(F=F+1|0),G=p,p=xg(g,0,666643,0),F=l+F|0,S=G=G+p|0,G=G>>>0<p>>>0?F+1|0:F,F=xg(I,0,666643,0),p=l,(F=(H=M>>>6&2097151)+F|0)>>>0<H>>>0&&(p=p+1|0),m=F,d=H=(M=p)-(((p=F)>>>0<4293918720)+-1|0)|0,F=(F=H>>>21|0)+G|0,x=F=(H=(p=(2097151&H)<<11|(AA=p- -1048576|0)>>>21)+S|0)>>>0<p>>>0?F+1|0:F,O=F-(((p=H)>>>0<4293918720)+-1|0)|0,Z=p- -1048576|0,n=b-(p=-2097152&L)|0,e=G=N-((b>>>0<p>>>0)+K|0)|0,p=((S=O)>>>21|0)+k|0,p=(v=(b=(2097151&S)<<11|Z>>>21)+v|0)>>>0<b>>>0?p+1|0:p,v=(k=xg(r,T,-997805,-1))+((b=v)-(F=-2097152&$)|0)|0,F=l+(p-((8191&J)+(b>>>0<F>>>0)|0)|0)|0,F=v>>>0<k>>>0?F+1|0:F,p=xg(o,V,136657,0),F=l+F|0,F=(k=p+v|0)>>>0<p>>>0?F+1|0:F,G=xg(n,G,-683901,-1),p=l+F|0,N=p=(k=G+k|0)>>>0<G>>>0?p+1|0:p,L=(p=k)- -1048576|0,K=G=N-((p>>>0<4293918720)+-1|0)|0,F=(p=G>>21)+P|0,v=F=(b=(G=(2097151&G)<<11|L>>>21)+iA|0)>>>0<G>>>0?F+1|0:F,J=(p=G=b)- -1048576|0,p=(p=(b=P=F-((p>>>0<4293918720)+-1|0)|0)>>21)+EA|0,QA=P=(F=(2097151&b)<<11|J>>>21)+QA|0,P=P>>>0<F>>>0?p+1|0:p,EA=G-(p=-2097152&J)|0,iA=v-((G>>>0<p>>>0)+b|0)|0,O=k-(p=-2097152&L)|0,$=N-((k>>>0<p>>>0)+K|0)|0,p=xg(r,T,654183,0),G=l+(x-((8191&S)+(H>>>0<(F=-2097152&Z)>>>0)|0)|0)|0,G=(k=p+(H-F|0)|0)>>>0<p>>>0?G+1|0:G,F=xg(o,V,-997805,-1),p=l+G|0,p=(k=F+k|0)>>>0<F>>>0?p+1|0:p,G=xg(n,e,136657,0),F=l+p|0,L=k=G+k|0,b=k>>>0<G>>>0?F+1|0:F,J=U-(p=-2097152&z)|0,x=R-((U>>>0<p>>>0)+q|0)|0,F=xg(B,0,-683901,-1),p=l,(F=(G=2097151&((1&W)<<31|j>>>1))+F|0)>>>0<G>>>0&&(p=p+1|0),G=F,F=xg(C,0,136657,0),p=l+p|0,p=(G=G+F|0)>>>0<F>>>0?p+1|0:p,k=(F=G)+(G=xg(i,0,654183,0))|0,F=l+p|0,F=k>>>0<G>>>0?F+1|0:F,p=xg(Q,0,-997805,-1),F=l+F|0,U=G=p+k|0,k=G>>>0<p>>>0?F+1|0:F,p=xg(g,0,-683901,-1),G=l,(p=(F=X>>>4&2097151)+p|0)>>>0<F>>>0&&(G=G+1|0),H=(F=xg(B,0,136657,0))+p|0,p=l+G|0,p=H>>>0<F>>>0?p+1|0:p,G=xg(C,0,-997805,-1),F=l+p|0,F=(H=G+H|0)>>>0<G>>>0?F+1|0:F,G=xg(i,0,470296,0),p=l+F|0,p=(H=G+H|0)>>>0<G>>>0?p+1|0:p,G=xg(Q,0,654183,0),F=l+p|0,N=F=(H=G+H|0)>>>0<G>>>0?F+1|0:F,q=(p=H)- -1048576|0,K=G=F-((p>>>0<4293918720)+-1|0)|0,p=(p=G>>21)+k|0,k=G=(F=(2097151&G)<<11|q>>>21)+U|0,v=p=G>>>0<F>>>0?p+1|0:p,S=(p=G)- -1048576|0,U=G=v-((p>>>0<4293918720)+-1|0)|0,F=(p=G>>21)+x|0,t=R=(G=(2097151&G)<<11|S>>>21)+J|0,X=F=R>>>0<G>>>0?F+1|0:F,p=xg(R,F,-683901,-1),G=l+b|0,x=F=p+L|0,b=F>>>0<p>>>0?G+1|0:G,j=k-(p=-2097152&S)|0,W=U=v-((k>>>0<p>>>0)+U|0)|0,G=(p=xg(r,T,470296,0))+(m-(F=-2097152&AA)|0)|0,F=l+(M-((2047&d)+(m>>>0<F>>>0)|0)|0)|0,F=G>>>0<p>>>0?F+1|0:F,p=xg(o,V,654183,0),F=l+F|0,F=(G=p+G|0)>>>0<p>>>0?F+1|0:F,k=(p=xg(n,e,-997805,-1))+G|0,G=l+F|0,G=k>>>0<p>>>0?G+1|0:G,F=xg(R,X,136657,0),p=l+G|0,p=(k=F+k|0)>>>0<F>>>0?p+1|0:p,G=xg(j,U,-683901,-1),F=l+p|0,v=F=(k=G+k|0)>>>0<G>>>0?F+1|0:F,d=(p=k)- -1048576|0,U=G=F-((p>>>0<4293918720)+-1|0)|0,p=(p=G>>21)+b|0,b=p=(G=(F=(2097151&G)<<11|d>>>21)+x|0)>>>0<F>>>0?p+1|0:p,S=(p=G)- -1048576|0,F=(p=(m=x=b-((p>>>0<4293918720)+-1|0)|0)>>21)+$|0,O=M=(x=(2097151&m)<<11|S>>>21)+O|0,x=M>>>0<x>>>0?F+1|0:F,$=G-(p=-2097152&S)|0,z=b-((G>>>0<p>>>0)+m|0)|0,L=k-(p=-2097152&d)|0,R=v-((k>>>0<p>>>0)+U|0)|0,F=xg(r,T,666643,0),p=l,(F=(G=2097151&((1&CA)<<31|D>>>1))+F|0)>>>0<G>>>0&&(p=p+1|0),k=(G=xg(o,V,470296,0))+F|0,F=l+p|0,F=k>>>0<G>>>0?F+1|0:F,G=xg(n,e,654183,0),p=l+F|0,p=(k=G+k|0)>>>0<G>>>0?p+1|0:p,F=xg(t,X,-997805,-1),G=l+p|0,G=(k=F+k|0)>>>0<F>>>0?G+1|0:G,p=xg(j,W,136657,0),F=l+G|0,U=k=p+k|0,m=k>>>0<p>>>0?F+1|0:F,b=H-(p=-2097152&q)|0,H=N-((H>>>0<p>>>0)+K|0)|0,p=xg(I,0,-683901,-1),F=l,(p=(G=IA>>>7&2097151)+p|0)>>>0<G>>>0&&(F=F+1|0),k=(G=p)+(p=xg(g,0,136657,0))|0,G=l+F|0,G=k>>>0<p>>>0?G+1|0:G,F=xg(B,0,-997805,-1),p=l+G|0,p=(k=F+k|0)>>>0<F>>>0?p+1|0:p,G=xg(C,0,654183,0),F=l+p|0,F=(k=G+k|0)>>>0<G>>>0?F+1|0:F,G=xg(i,0,666643,0),p=l+F|0,p=(k=G+k|0)>>>0<G>>>0?p+1|0:p,G=xg(Q,0,470296,0),F=l+p|0,p=F=(k=G+k|0)>>>0<G>>>0?F+1|0:F,F=Y>>21,k=(Y=(2097151&Y)<<11|c>>>21)+(G=k)|0,G=p+F|0,K=G=k>>>0<Y>>>0?G+1|0:G,N=(p=k)- -1048576|0,v=G=G-((p>>>0<4293918720)+-1|0)|0,p=(F=G>>21)+H|0,T=Y=(G=(2097151&G)<<11|N>>>21)+b|0,J=p=Y>>>0<G>>>0?p+1|0:p,p=xg(Y,p,-683901,-1),F=l+m|0,m=G=p+U|0,Y=G>>>0<p>>>0?F+1|0:F,p=xg(o,V,666643,0),G=l,(p=(F=BA>>>4&2097151)+p|0)>>>0<F>>>0&&(G=G+1|0),H=(F=xg(n,e,470296,0))+p|0,p=l+G|0,p=H>>>0<F>>>0?p+1|0:p,G=xg(t,X,654183,0),F=l+p|0,F=(H=G+H|0)>>>0<G>>>0?F+1|0:F,p=xg(j,W,-997805,-1),F=l+F|0,F=(G=p+H|0)>>>0<p>>>0?F+1|0:F,H=(p=G)+(G=xg(T,J,136657,0))|0,p=l+F|0,U=p=H>>>0<G>>>0?p+1|0:p,M=(p=H)- -1048576|0,b=G=U-((p>>>0<4293918720)+-1|0)|0,p=(F=G>>21)+Y|0,G=p=(Y=m=(G=(2097151&G)<<11|M>>>21)+m|0)>>>0<G>>>0?p+1|0:p,d=(p=Y)- -1048576|0,p=(F=(m=S=G-((p>>>0<4293918720)+-1|0)|0)>>21)+R|0,AA=q=(S=(2097151&m)<<11|d>>>21)+L|0,S=q>>>0<S>>>0?p+1|0:p,p=k-(F=-2097152&N)|0,k=K-((k>>>0<F>>>0)+v|0)|0,v=p,p=(p=_>>21)+k|0,N=p=(k=_=v+(F=(2097151&_)<<11|f>>>21)|0)>>>0<F>>>0?p+1|0:p,q=(p=k)- -1048576|0,K=_=N-((p>>>0<4293918720)+-1|0)|0,R=p=_>>21,p=xg(V=(2097151&_)<<11|q>>>21,p,-683901,-1),F=l+G|0,F=(_=p+Y|0)>>>0<p>>>0?F+1|0:F,Z=(G=_)-(p=-2097152&d)|0,L=F-((G>>>0<p>>>0)+m|0)|0,F=xg(V,R,136657,0)+H|0,p=U+l|0,p=F>>>0<H>>>0?p+1|0:p,IA=(G=F)-(F=-2097152&M)|0,M=p-((G>>>0<F>>>0)+b|0)|0,p=xg(n,e,666643,0),F=l,(p=(G=gA>>>7&2097151)+p|0)>>>0<G>>>0&&(F=F+1|0),_=(G=p)+(p=xg(t,X,470296,0))|0,G=l+F|0,G=_>>>0<p>>>0?G+1|0:G,F=xg(j,W,654183,0),p=l+G|0,p=(_=F+_|0)>>>0<F>>>0?p+1|0:p,F=xg(T,J,-997805,-1),p=l+p|0,b=G=F+_|0,G=G>>>0<F>>>0?p+1|0:p,p=xg(t,X,666643,0),F=l,(p=(_=2097151&((3&h)<<30|w>>>2))+p|0)>>>0<_>>>0&&(F=F+1|0),_=p,p=xg(j,W,470296,0),F=l+F|0,F=(_=_+p|0)>>>0<p>>>0?F+1|0:F,Y=(p=_)+(_=xg(T,J,654183,0))|0,p=l+F|0,m=p=Y>>>0<_>>>0?p+1|0:p,d=(p=_=Y)- -1048576|0,p=(F=(H=Y=m-((p>>>0<4293918720)+-1|0)|0)>>21)+G|0,U=b=(Y=(2097151&H)<<11|d>>>21)+b|0,G=p=b>>>0<Y>>>0?p+1|0:p,b=(p=b)- -1048576|0,p=(F=(Y=v=G-((p>>>0<4293918720)+-1|0)|0)>>21)+M|0,gA=X=(v=(2097151&Y)<<11|b>>>21)+IA|0,v=X>>>0<v>>>0?p+1|0:p,p=xg(V,R,-997805,-1),G=l+G|0,G=(F=p+U|0)>>>0<p>>>0?G+1|0:G,BA=F-(p=-2097152&b)|0,CA=G-((F>>>0<p>>>0)+Y|0)|0,p=xg(V,R,654183,0)+_|0,F=m+l|0,F=p>>>0<_>>>0?F+1|0:F,IA=(G=p)-(p=-2097152&d)|0,X=F-((G>>>0<p>>>0)+H|0)|0,p=xg(j,W,666643,0),G=l,(p=(F=s>>>5&2097151)+p|0)>>>0<F>>>0&&(G=G+1|0),_=(F=xg(T,J,470296,0))+p|0,p=l+G|0,H=_,G=_>>>0<F>>>0?p+1|0:p,F=2097151&y,_=xg(T,J,666643,0)+F|0,p=l,Y=_,b=_=(U=p=_>>>0<F>>>0?p+1|0:p)-(((p=_)>>>0<4293918720)+-1|0)|0,G=(F=_>>21)+G|0,m=G=(_=(p=(2097151&_)<<11|(M=p- -1048576|0)>>>21)+H|0)>>>0<p>>>0?G+1|0:G,d=(p=_)- -1048576|0,H=G=G-((p>>>0<4293918720)+-1|0)|0,p=(F=G>>21)+X|0,G=p=(J=(G=(2097151&G)<<11|d>>>21)+IA|0)>>>0<G>>>0?p+1|0:p,p=xg(V,R,470296,0)+_|0,F=m+l|0,H=(F=p>>>0<_>>>0?F+1|0:F)-(((m=p)>>>0<(_=-2097152&d)>>>0)+H|0)|0,m=p=p-_|0,_=(F=xg(V,R,666643,0))+(Y-(p=-2097152&M)|0)|0,p=l+(U-((Y>>>0<p>>>0)+b|0)|0)|0,Y=_,F=(F=(p=_>>>0<F>>>0?p+1|0:p)>>21)+H|0,W=_=m+(p=(2097151&p)<<11|_>>>21)|0,G=(p=(F=_>>>0<p>>>0?F+1|0:F)>>21)+G|0,H=_=(F=(2097151&F)<<11|_>>>21)+J|0,F=(G=(p=_)>>>0<F>>>0?G+1|0:G)>>21,G=(2097151&G)<<11|p>>>21,p=F+CA|0,b=_=G+BA|0,G=(p=(F=_)>>>0<G>>>0?p+1|0:p)>>21,p=(2097151&p)<<11|F>>>21,F=G+v|0,v=_=p+gA|0,p=(p=(F=(G=_)>>>0<p>>>0?F+1|0:F)>>21)+L|0,J=G=(F=(2097151&F)<<11|G>>>21)+Z|0,F=(F=(p=G>>>0<F>>>0?p+1|0:p)>>21)+S|0,R=G=(p=(2097151&p)<<11|G>>>21)+AA|0,p=(F=G>>>0<p>>>0?F+1|0:F)>>21,F=(2097151&F)<<11|G>>>21,G=p+z|0,M=_=F+$|0,F=(G=(p=_)>>>0<F>>>0?G+1|0:G)>>21,G=(2097151&G)<<11|p>>>21,p=F+x|0,d=_=G+O|0,G=(p=(F=_)>>>0<G>>>0?p+1|0:p)>>21,p=(2097151&p)<<11|F>>>21,F=G+iA|0,x=_=p+EA|0,p=(p=(F=(G=_)>>>0<p>>>0?F+1|0:F)>>21)+P|0,S=G=(F=(2097151&F)<<11|G>>>21)+QA|0,F=(p=G>>>0<F>>>0?p+1|0:p)>>21,_=(2097151&p)<<11|G>>>21,p=k-(G=-2097152&q)|0,G=(N-((k>>>0<G>>>0)+K|0)|0)+F|0,K=_=_+p|0,P=(2097151&(G=(F=_)>>>0<p>>>0?G+1|0:G))<<11|F>>>21,U=p=G>>21,F=2097151&Y,G=xg(P,p,666643,0)+F|0,p=l,m=G,_=p=G>>>0<F>>>0?p+1|0:p,E[0|u]=G,E[A+1|0]=(255&p)<<24|G>>>8,p=2097151&W,G=xg(P,U,470296,0)+p|0,F=l,F=G>>>0<p>>>0?F+1|0:F,Y=G,k=(2097151&(G=_))<<11|m>>>21,G=(p=G>>21)+F|0,G=(N=Y+k|0)>>>0<k>>>0?G+1|0:G,k=N,E[A+4|0]=(2047&G)<<21|k>>>11,p=F=G,G=k,E[A+3|0]=(7&p)<<29|G>>>3,G=2097151&H,H=xg(P,U,654183,0)+G|0,p=l,p=H>>>0<G>>>0?p+1|0:p,G=H,H=(2097151&F)<<11|k>>>21,F=(F>>21)+p|0,F=(N=G+H|0)>>>0<H>>>0?F+1|0:F,H=N,p=F,E[A+6|0]=(63&p)<<26|H>>>6,Y=0,G=31&((65535&_)<<16|m>>>16),F=m=2097151&k,E[A+2|0]=G|F<<5,G=2097151&b,k=xg(P,U,-997805,-1)+G|0,F=l,G=F=k>>>0<G>>>0?F+1|0:F,G=(F=p>>21)+G|0,b=k=(p=(2097151&p)<<11|H>>>21)+k|0,G=k>>>0<p>>>0?G+1|0:G,E[A+9|0]=(511&G)<<23|k>>>9,p=F=G,G=k,E[A+8|0]=(1&p)<<31|G>>>1,k=0,G=H&=2097151,E[A+5|0]=(524287&Y)<<13|m>>>19|G<<2,G=2097151&v,Y=xg(P,U,136657,0)+G|0,p=l,p=(p=Y>>>0<G>>>0?p+1|0:p)+(G=F>>21)|0,m=Y=(F=(2097151&F)<<11|b>>>21)+Y|0,p=Y>>>0<F>>>0?p+1|0:p,F=Y,E[A+12|0]=(4095&p)<<20|F>>>12,G=p,E[A+11|0]=(15&p)<<28|F>>>4,Y=0,F=v=2097151&b,E[A+7|0]=(16383&k)<<18|H>>>14|F<<7,p=2097151&J,k=xg(P,U,-683901,-1)+p|0,F=l,F=k>>>0<p>>>0?F+1|0:F,F=(p=G>>21)+F|0,H=k=(G=(2097151&G)<<11|m>>>21)+k|0,p=F=k>>>0<G>>>0?F+1|0:F,E[A+14|0]=(127&p)<<25|k>>>7,k=0,G=b=2097151&m,E[A+10|0]=(131071&Y)<<15|v>>>17|G<<4,F=p>>21,G=(m=(p=(2097151&p)<<11|H>>>21)+(2097151&R)|0)>>>0<p>>>0?F+1|0:F,E[A+17|0]=(1023&G)<<22|m>>>10,p=G,G=m,E[A+16|0]=(3&p)<<30|G>>>2,G=U=2097151&H,E[A+13|0]=(1048575&k)<<12|b>>>20|G<<1,G=(2097151&p)<<11|m>>>21,p>>=21,p=(H=G+(2097151&M)|0)>>>0<G>>>0?p+1|0:p,F=H,E[A+20|0]=(8191&p)<<19|F>>>13,E[A+19|0]=(31&p)<<27|F>>>5,F=b=2097151&m,E[A+15|0]=(32767&Y)<<17|U>>>15|F<<6,_=(2097151&p)<<11|H>>>21,p=F=p>>21,_=p=(U=_+(2097151&d)|0)>>>0<_>>>0?p+1|0:p,E[A+21|0]=U,p=H,E[A+18|0]=(262143&k)<<14|b>>>18|p<<3,p=_,E[A+22|0]=(255&p)<<24|U>>>8,G=p,p>>=21,G=(H=(Y=(2097151&G)<<11|U>>>21)+(2097151&x)|0)>>>0<Y>>>0?p+1|0:p,E[(F=A)+25|0]=(2047&G)<<21|H>>>11,p=G,G=H,E[F+24|0]=(7&p)<<29|G>>>3,G=F,Y=(2097151&p)<<11|H>>>21,p>>=21,F=p=(k=m=Y+(2097151&S)|0)>>>0<Y>>>0?p+1|0:p,E[G+27|0]=(63&p)<<26|k>>>6,Y=0,p=m=2097151&H,E[G+23|0]=31&((65535&_)<<16|U>>>16)|p<<5,F=(p=F)>>21,F=(_=(p=(2097151&p)<<11|k>>>21)+(2097151&K)|0)>>>0<p>>>0?F+1|0:F,G=_,E[A+31|0]=(131071&F)<<15|G>>>17,p=F,E[A+30|0]=(511&p)<<23|G>>>9,E[A+29|0]=(1&p)<<31|G>>>1,F=0,k&=2097151,E[A+26|0]=(524287&Y)<<13|m>>>19|k<<2,E[A+28|0]=(16383&F)<<18|k>>>14|G<<7}function _(A){var I,g=0,B=0,C=0,Q=0,E=0,i=0,o=0,e=0,c=0,f=0,y=0,s=0,w=0;D=I=D-16|0;A:{I:{g:{B:{C:{Q:{E:{i:{n:{a:{r:{o:{if((A|=0)>>>0<=244){if(3&(g=(Q=n[8961])>>>(A=(i=A>>>0<11?16:A+11&-8)>>>3|0)|0)){A=(g=n[35892+(E=(B=A+(1&(-1^g))|0)<<3)>>2])+8|0,(0|(C=n[g+8>>2]))!=(0|(E=E+35884|0))?(n[C+12>>2]=E,n[E+8>>2]=C):(s=35844,w=ng(-2,B)&Q,n[s>>2]=w),B<<=3,n[g+4>>2]=3|B,n[4+(g=g+B|0)>>2]=1|n[g+4>>2];break A}if(i>>>0<=(e=n[8963])>>>0)break o;if(g){B=g=(A=(0-(A=(0-(B=2<<A)|B)&g<<A)&A)-1|0)>>>12&16,B|=g=(A=A>>>g|0)>>>5&8,B|=g=(A=A>>>g|0)>>>2&4,g=n[35892+(C=(B=((B|=g=(A=A>>>g|0)>>>1&2)|(g=(A=A>>>g|0)>>>1&1))+(A>>>g|0)|0)<<3)>>2],(0|(A=n[g+8>>2]))!=(0|(C=C+35884|0))?(n[A+12>>2]=C,n[C+8>>2]=A):(Q=ng(-2,B)&Q,n[8961]=Q),A=g+8|0,n[g+4>>2]=3|i,E=(B<<=3)-i|0,n[4+(o=g+i|0)>>2]=1|E,n[g+B>>2]=E,e&&(g=35884+((B=e>>>3|0)<<3)|0,C=n[8966],(B=1<<B)&Q?B=n[g+8>>2]:(n[8961]=B|Q,B=g),n[g+8>>2]=C,n[B+12>>2]=C,n[C+12>>2]=g,n[C+8>>2]=B),n[8966]=o,n[8963]=E;break A}if(!(f=n[8962]))break o;for(B=g=(A=(f&0-f)-1|0)>>>12&16,B|=g=(A=A>>>g|0)>>>5&8,B|=g=(A=A>>>g|0)>>>2&4,g=n[36148+(((B|=g=(A=A>>>g|0)>>>1&2)|(g=(A=A>>>g|0)>>>1&1))+(A>>>g|0)<<2)>>2],C=(-8&n[g+4>>2])-i|0,B=g;(A=n[B+16>>2])||(A=n[B+20>>2]);)C=(B=(E=(-8&n[A+4>>2])-i|0)>>>0<C>>>0)?E:C,g=B?A:g,B=A;if((y=g+i|0)>>>0<=g>>>0)break r;if(c=n[g+24>>2],(0|(E=n[g+12>>2]))!=(0|g)){A=n[g+8>>2],n[A+12>>2]=E,n[E+8>>2]=A;break I}if(!(A=n[(B=g+20|0)>>2])){if(!(A=n[g+16>>2]))break a;B=g+16|0}for(;o=B,E=A,(A=n[(B=A+20|0)>>2])||(B=E+16|0,A=n[E+16>>2]););n[o>>2]=0;break I}if(i=-1,!(A>>>0>4294967231)&&(i=-8&(g=A+11|0),e=n[8962])){B=0-i|0,Q=0,(g=g>>>8|0)&&(Q=31,i>>>0>16777215||(Q=28+((A=((Q=(g<<=C=g+1048320>>>16&8)<<(A=g+520192>>>16&4))<<(g=Q+245760>>>16&2)>>>15|0)-(g|A|C)|0)<<1|i>>>A+21&1)|0));e:{t:{if(C=n[36148+(Q<<2)>>2])for(g=i<<(31==(0|Q)?0:25-(Q>>>1|0)|0),A=0;;){if(!((o=(-8&n[C+4>>2])-i|0)>>>0>=B>>>0||(E=C,B=o))){B=0,A=C;break t}if(o=n[C+20>>2],C=n[16+((g>>>29&4)+C|0)>>2],A=o?(0|o)==(0|C)?A:o:A,g<<=0!=(0|C),!C)break}else A=0;if(!(A|E)){if(!(A=(0-(A=2<<Q)|A)&e))break o;C=g=(A=(A&0-A)-1|0)>>>12&16,C|=g=(A=A>>>g|0)>>>5&8,C|=g=(A=A>>>g|0)>>>2&4,A=n[36148+(((C|=g=(A=A>>>g|0)>>>1&2)|(g=(A=A>>>g|0)>>>1&1))+(A>>>g|0)<<2)>>2]}if(!A)break e}for(;B=(g=(C=(-8&n[A+4>>2])-i|0)>>>0<B>>>0)?C:B,E=g?A:E,A=(g=n[A+16>>2])||n[A+20>>2];);}if(!(!E|B>>>0>=n[8963]-i>>>0)){if((Q=E+i|0)>>>0<=E>>>0)break r;if(c=n[E+24>>2],(0|E)!=(0|(g=n[E+12>>2]))){A=n[E+8>>2],n[A+12>>2]=g,n[g+8>>2]=A;break g}if(!(A=n[(C=E+20|0)>>2])){if(!(A=n[E+16>>2]))break n;C=E+16|0}for(;o=C,g=A,(A=n[(C=A+20|0)>>2])||(C=g+16|0,A=n[g+16>>2]););n[o>>2]=0;break g}}}if((g=n[8963])>>>0>=i>>>0){A=n[8966],(B=g-i|0)>>>0>=16?(n[8963]=B,C=A+i|0,n[8966]=C,n[C+4>>2]=1|B,n[A+g>>2]=B,n[A+4>>2]=3|i):(n[8966]=0,n[8963]=0,n[A+4>>2]=3|g,n[4+(g=A+g|0)>>2]=1|n[g+4>>2]),A=A+8|0;break A}if((C=n[8964])>>>0>i>>>0){g=C-i|0,n[8964]=g,B=(A=n[8967])+i|0,n[8967]=B,n[B+4>>2]=1|g,n[A+4>>2]=3|i,A=A+8|0;break A}if(A=0,B=E=i+47|0,n[9079]?g=n[9081]:(n[9082]=-1,n[9083]=-1,n[9080]=4096,n[9081]=4096,n[9079]=I+12&-16^1431655768,n[9084]=0,n[9072]=0,g=4096),(B=(Q=B+g|0)&(o=0-g|0))>>>0<=i>>>0)break A;if((g=n[9071])&&(c=(e=n[9069])+B|0)>>>0<=e>>>0|c>>>0>g>>>0)break A;if(4&a[36288])break Q;o:{e:{if(g=n[8967])for(A=36292;;){if((e=n[A>>2])+n[A+4>>2]>>>0>g>>>0&&e>>>0<=g>>>0)break e;if(!(A=n[A+8>>2]))break}if(-1==(0|(g=FI(0))))break E;if(Q=B,(C=(A=n[9080])+-1|0)&g&&(Q=(B-g|0)+(g+C&0-A)|0),Q>>>0<=i>>>0|Q>>>0>2147483646)break E;if((A=n[9071])&&(o=(C=n[9069])+Q|0)>>>0<=C>>>0|o>>>0>A>>>0)break E;if((0|g)!=(0|(A=FI(Q))))break o;break C}if((Q=o&Q-C)>>>0>2147483646)break E;if((0|(g=FI(Q)))==(n[A>>2]+n[A+4>>2]|0))break i;A=g}if(!(-1==(0|A)|i+48>>>0<=Q>>>0)){if((g=(g=n[9081])+(E-Q|0)&0-g)>>>0>2147483646){g=A;break C}if(-1!=(0|FI(g))){Q=g+Q|0,g=A;break C}FI(0-Q|0);break E}if(g=A,-1!=(0|A))break C;break E}t()}E=0;break I}g=0;break g}if(-1!=(0|g))break C}n[9072]=4|n[9072]}if(B>>>0>2147483646)break B;if((g=FI(B))>>>0>=(A=FI(0))>>>0|-1==(0|g)|-1==(0|A))break B;if((Q=A-g|0)>>>0<=i+40>>>0)break B}A=n[9069]+Q|0,n[9069]=A,A>>>0>r[9070]&&(n[9070]=A);C:{Q:{E:{if(B=n[8967]){for(A=36292;;){if(((C=n[A>>2])+(E=n[A+4>>2])|0)==(0|g))break E;if(!(A=n[A+8>>2]))break}break Q}for(g>>>0>=(A=n[8965])>>>0&&A||(n[8965]=g),A=0,n[9074]=Q,n[9073]=g,n[8969]=-1,n[8970]=n[9079],n[9076]=0;C=35884+(B=A<<3)|0,n[B+35892>>2]=C,n[B+35896>>2]=C,32!=(0|(A=A+1|0)););C=(A=Q+-40|0)-(B=g+8&7?-8-g&7:0)|0,n[8964]=C,B=g+B|0,n[8967]=B,n[B+4>>2]=1|C,n[4+(A+g|0)>>2]=40,n[8968]=n[9083];break C}if(!(8&a[A+12|0]|g>>>0<=B>>>0|C>>>0>B>>>0)){n[A+4>>2]=Q+E,g=(A=B+8&7?-8-B&7:0)+B|0,n[8967]=g,A=(C=n[8964]+Q|0)-A|0,n[8964]=A,n[g+4>>2]=1|A,n[4+(B+C|0)>>2]=40,n[8968]=n[9083];break C}}g>>>0<(E=n[8965])>>>0&&(n[8965]=g,E=0),C=g+Q|0,A=36292;Q:{E:{i:{n:{a:{r:{for(;;){if((0|C)!=n[A>>2]){if(A=n[A+8>>2])continue;break r}break}if(!(8&a[A+12|0]))break a}for(A=36292;;){if((C=n[A>>2])>>>0<=B>>>0&&(E=C+n[A+4>>2]|0)>>>0>B>>>0)break n;A=n[A+8>>2]}}if(n[A>>2]=g,n[A+4>>2]=n[A+4>>2]+Q,n[4+(c=(g+8&7?-8-g&7:0)+g|0)>>2]=3|i,A=((g=C+(C+8&7?-8-C&7:0)|0)-c|0)-i|0,o=i+c|0,(0|g)==(0|B)){n[8967]=o,A=n[8964]+A|0,n[8964]=A,n[o+4>>2]=1|A;break E}if(n[8966]==(0|g)){n[8966]=o,A=n[8963]+A|0,n[8963]=A,n[o+4>>2]=1|A,n[A+o>>2]=A;break E}if(1==(3&(B=n[g+4>>2]))){f=-8&B;a:if(B>>>0<=255){if(E=B>>>3|0,B=n[g+8>>2],(0|(C=n[g+12>>2]))==(0|B)){s=35844,w=n[8961]&ng(-2,E),n[s>>2]=w;break a}n[B+12>>2]=C,n[C+8>>2]=B}else{if(e=n[g+24>>2],(0|(Q=n[g+12>>2]))==(0|g))if((i=n[(C=g+20|0)>>2])||(i=n[(C=g+16|0)>>2])){for(;B=C,(i=n[(C=(Q=i)+20|0)>>2])||(C=Q+16|0,i=n[Q+16>>2]););n[B>>2]=0}else Q=0;else B=n[g+8>>2],n[B+12>>2]=Q,n[Q+8>>2]=B;if(e){B=n[g+28>>2];r:{if(n[(C=36148+(B<<2)|0)>>2]==(0|g)){if(n[C>>2]=Q,Q)break r;s=35848,w=n[8962]&ng(-2,B),n[s>>2]=w;break a}if(n[e+(n[e+16>>2]==(0|g)?16:20)>>2]=Q,!Q)break a}n[Q+24>>2]=e,(B=n[g+16>>2])&&(n[Q+16>>2]=B,n[B+24>>2]=Q),(B=n[g+20>>2])&&(n[Q+20>>2]=B,n[B+24>>2]=Q)}}g=g+f|0,A=A+f|0}if(n[g+4>>2]=-2&n[g+4>>2],n[o+4>>2]=1|A,n[A+o>>2]=A,A>>>0<=255){A=35884+((g=A>>>3|0)<<3)|0,(B=n[8961])&(g=1<<g)?g=n[A+8>>2]:(n[8961]=g|B,g=A),n[A+8>>2]=o,n[g+12>>2]=o,n[o+12>>2]=A,n[o+8>>2]=g;break E}if(g=0,(C=A>>>8|0)&&(g=31,A>>>0>16777215||(g=28+((g=((i=(C<<=E=C+1048320>>>16&8)<<(g=C+520192>>>16&4))<<(C=i+245760>>>16&2)>>>15|0)-(C|g|E)|0)<<1|A>>>g+21&1)|0)),n[(B=o)+28>>2]=g,n[o+16>>2]=0,n[o+20>>2]=0,B=36148+(g<<2)|0,(C=n[8962])&(E=1<<g)){for(C=A<<(31==(0|g)?0:25-(g>>>1|0)|0),g=n[B>>2];;){if(B=g,(-8&n[g+4>>2])==(0|A))break i;if(g=C>>>29|0,C<<=1,!(g=n[16+(E=(4&g)+B|0)>>2]))break}n[E+16>>2]=o}else n[8962]=C|E,n[B>>2]=o;n[o+24>>2]=B,n[o+12>>2]=o,n[o+8>>2]=o;break E}for(o=(A=Q+-40|0)-(C=g+8&7?-8-g&7:0)|0,n[8964]=o,C=g+C|0,n[8967]=C,n[C+4>>2]=1|o,n[4+(A+g|0)>>2]=40,n[8968]=n[9083],n[(C=(A=(E+(E+-39&7?39-E&7:0)|0)-47|0)>>>0<B+16>>>0?B:A)+4>>2]=27,A=n[9076],n[C+16>>2]=n[9075],n[C+20>>2]=A,A=n[9074],n[C+8>>2]=n[9073],n[C+12>>2]=A,n[9075]=C+8,n[9074]=Q,n[9073]=g,n[9076]=0,A=C+24|0;n[A+4>>2]=7,g=A+8|0,A=A+4|0,E>>>0>g>>>0;);if((0|B)==(0|C))break C;if(n[C+4>>2]=-2&n[C+4>>2],E=C-B|0,n[B+4>>2]=1|E,n[C>>2]=E,E>>>0<=255){A=35884+((g=E>>>3|0)<<3)|0,(C=n[8961])&(g=1<<g)?g=n[A+8>>2]:(n[8961]=g|C,g=A),n[A+8>>2]=B,n[g+12>>2]=B,n[B+12>>2]=A,n[B+8>>2]=g;break C}if(n[B+16>>2]=0,n[B+20>>2]=0,A=0,(C=E>>>8|0)&&(A=31,E>>>0>16777215||(A=28+((A=((o=(C<<=Q=C+1048320>>>16&8)<<(A=C+520192>>>16&4))<<(C=o+245760>>>16&2)>>>15|0)-(C|A|Q)|0)<<1|E>>>A+21&1)|0)),n[(g=B)+28>>2]=A,g=36148+(A<<2)|0,(C=n[8962])&(Q=1<<A)){for(A=E<<(31==(0|A)?0:25-(A>>>1|0)|0),g=n[g>>2];;){if(C=g,(0|E)==(-8&n[g+4>>2]))break Q;if(g=A>>>29|0,A<<=1,!(g=n[16+(Q=C+(4&g)|0)>>2]))break}n[Q+16>>2]=B,n[B+24>>2]=C}else n[8962]=C|Q,n[g>>2]=B,n[B+24>>2]=g;n[B+12>>2]=B,n[B+8>>2]=B;break C}A=n[B+8>>2],n[A+12>>2]=o,n[B+8>>2]=o,n[o+24>>2]=0,n[o+12>>2]=B,n[o+8>>2]=A}A=c+8|0;break A}A=n[C+8>>2],n[A+12>>2]=B,n[C+8>>2]=B,n[B+24>>2]=0,n[B+12>>2]=C,n[B+8>>2]=A}if(!((A=n[8964])>>>0<=i>>>0)){g=A-i|0,n[8964]=g,B=(A=n[8967])+i|0,n[8967]=B,n[B+4>>2]=1|g,n[A+4>>2]=3|i,A=A+8|0;break A}}n[8960]=48,A=0;break A}g:if(c){A=n[E+28>>2];B:{if(n[(C=36148+(A<<2)|0)>>2]==(0|E)){if(n[C>>2]=g,g)break B;e=ng(-2,A)&e,n[8962]=e;break g}if(n[c+(n[c+16>>2]==(0|E)?16:20)>>2]=g,!g)break g}n[g+24>>2]=c,(A=n[E+16>>2])&&(n[g+16>>2]=A,n[A+24>>2]=g),(A=n[E+20>>2])&&(n[g+20>>2]=A,n[A+24>>2]=g)}g:if(B>>>0<=15)A=B+i|0,n[E+4>>2]=3|A,n[4+(A=A+E|0)>>2]=1|n[A+4>>2];else if(n[E+4>>2]=3|i,n[Q+4>>2]=1|B,n[B+Q>>2]=B,B>>>0<=255)A=35884+((g=B>>>3|0)<<3)|0,(B=n[8961])&(g=1<<g)?g=n[A+8>>2]:(n[8961]=g|B,g=A),n[A+8>>2]=Q,n[g+12>>2]=Q,n[Q+12>>2]=A,n[Q+8>>2]=g;else{A=0,(C=B>>>8|0)&&(A=31,B>>>0>16777215||(A=28+((A=((o=(C<<=i=C+1048320>>>16&8)<<(A=C+520192>>>16&4))<<(C=o+245760>>>16&2)>>>15|0)-(C|A|i)|0)<<1|B>>>A+21&1)|0)),n[(g=Q)+28>>2]=A,n[Q+16>>2]=0,n[Q+20>>2]=0,g=36148+(A<<2)|0;B:{if((C=1<<A)&e){for(A=B<<(31==(0|A)?0:25-(A>>>1|0)|0),i=n[g>>2];;){if((-8&n[(g=i)+4>>2])==(0|B))break B;if(C=A>>>29|0,A<<=1,!(i=n[16+(C=(4&C)+g|0)>>2]))break}n[C+16>>2]=Q}else n[8962]=C|e,n[g>>2]=Q;n[Q+24>>2]=g,n[Q+12>>2]=Q,n[Q+8>>2]=Q;break g}A=n[g+8>>2],n[A+12>>2]=Q,n[g+8>>2]=Q,n[Q+24>>2]=0,n[Q+12>>2]=g,n[Q+8>>2]=A}A=E+8|0;break A}I:if(c){A=n[g+28>>2];g:{if(n[(B=36148+(A<<2)|0)>>2]==(0|g)){if(n[B>>2]=E,E)break g;s=35848,w=ng(-2,A)&f,n[s>>2]=w;break I}if(n[c+(n[c+16>>2]==(0|g)?16:20)>>2]=E,!E)break I}n[E+24>>2]=c,(A=n[g+16>>2])&&(n[E+16>>2]=A,n[A+24>>2]=E),(A=n[g+20>>2])&&(n[E+20>>2]=A,n[A+24>>2]=E)}C>>>0<=15?(A=C+i|0,n[g+4>>2]=3|A,n[4+(A=A+g|0)>>2]=1|n[A+4>>2]):(n[g+4>>2]=3|i,n[y+4>>2]=1|C,n[C+y>>2]=C,e&&(A=35884+((B=e>>>3|0)<<3)|0,E=n[8966],(B=1<<B)&Q?B=n[A+8>>2]:(n[8961]=B|Q,B=A),n[A+8>>2]=E,n[B+12>>2]=E,n[E+12>>2]=A,n[E+8>>2]=B),n[8966]=y,n[8963]=C),A=g+8|0}return D=I+16|0,0|A}function H(A,I,g){var B,C,Q,E,i,a,r,e,t,c,f,y,s,w,h,D,u,p,F,G,k,_,H,Y,b,m,U,v,S,N,R,M,d,P,J,x,L,K,q,X,V,T,W,j,Z,O,z,$,AA,IA,gA,BA,CA,QA,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,cA=0,fA=0,yA=0,sA=0,wA=0,hA=0,DA=0,uA=0,pA=0,lA=0,FA=0,GA=0,kA=0,_A=0,HA=0,YA=0,bA=0;eA=A,e=EA=_A=n[g+4>>2],t=EA>>31,L=EA=(DA=n[I+20>>2])<<1,EA=xg(e,t,EA,H=EA>>31),nA=l,iA=EA,B=EA=n[g>>2],C=EA>>31,c=EA=n[I+24>>2],rA=xg(B,C,EA,Q=EA>>31),EA=l+nA|0,EA=(iA=iA+rA|0)>>>0<rA>>>0?EA+1|0:EA,nA=iA,Y=iA=oA=n[g+8>>2],u=iA>>31,f=iA=n[I+16>>2],iA=nA+(rA=xg(oA,u,iA,E=iA>>31))|0,nA=l+EA|0,nA=iA>>>0<rA>>>0?nA+1|0:nA,K=EA=pA=n[g+12>>2],p=EA>>31,q=EA=(sA=n[I+12>>2])<<1,EA=(rA=xg(pA,p,EA,b=EA>>31))+iA|0,iA=l+nA|0,iA=EA>>>0<rA>>>0?iA+1|0:iA,nA=EA,O=EA=uA=n[g+16>>2],k=EA>>31,y=EA=n[I+8>>2],rA=xg(uA,k,EA,i=EA>>31),EA=l+iA|0,EA=(nA=nA+rA|0)>>>0<rA>>>0?EA+1|0:EA,aA=nA,z=iA=fA=n[g+20>>2],m=iA>>31,X=iA=(tA=n[I+4>>2])<<1,nA=xg(fA,m,iA,U=iA>>31),EA=l+EA|0,EA=(iA=aA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=iA,$=iA=yA=n[g+24>>2],V=iA>>31,s=iA=n[I>>2],rA=xg(yA,V,iA,a=iA>>31),iA=l+EA|0,iA=(nA=nA+rA|0)>>>0<rA>>>0?iA+1|0:iA,lA=n[g+28>>2],F=EA=o(lA,19),G=EA>>31,T=EA=(wA=n[I+36>>2])<<1,EA=(rA=xg(F,G,EA,v=EA>>31))+nA|0,nA=l+iA|0,nA=EA>>>0<rA>>>0?nA+1|0:nA,iA=EA,hA=n[g+32>>2],FA=EA=o(hA,19),GA=EA>>31,w=EA=n[I+32>>2],rA=xg(FA,GA,EA,r=EA>>31),EA=l+nA|0,EA=(iA=iA+rA|0)>>>0<rA>>>0?EA+1|0:EA,nA=iA,AA=n[g+36>>2],h=g=o(AA,19),D=g>>31,W=g=(I=n[I+28>>2])<<1,iA=xg(h,D,g,S=g>>31),EA=l+EA|0,cA=g=nA+iA|0,g=g>>>0<iA>>>0?EA+1|0:EA,EA=xg(f,E,e,t),iA=l,DA=xg(B,C,rA=DA,N=rA>>31),nA=l+iA|0,nA=(EA=DA+EA|0)>>>0<DA>>>0?nA+1|0:nA,DA=sA,sA=xg(oA,u,sA,R=sA>>31),iA=l+nA|0,iA=(EA=sA+EA|0)>>>0<sA>>>0?iA+1|0:iA,nA=(sA=xg(y,i,pA,p))+EA|0,EA=l+iA|0,EA=nA>>>0<sA>>>0?EA+1|0:EA,iA=nA,sA=tA,nA=xg(uA,k,tA,M=tA>>31),EA=l+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=xg(s,a,fA,m),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=iA,d=iA=o(yA,19),iA=nA+(wA=xg(iA,_=iA>>31,tA=wA,P=tA>>31))|0,nA=l+EA|0,nA=iA>>>0<wA>>>0?nA+1|0:nA,EA=(wA=xg(w,r,F,G))+iA|0,iA=l+nA|0,iA=EA>>>0<wA>>>0?iA+1|0:iA,wA=I,I=(nA=xg(FA,GA,I,J=I>>31))+EA|0,EA=l+iA|0,EA=I>>>0<nA>>>0?EA+1|0:EA,iA=xg(h,D,c,Q),EA=l+EA|0,HA=I=iA+I|0,I=I>>>0<iA>>>0?EA+1|0:EA,EA=xg(e,t,q,b),nA=l,iA=(yA=xg(B,C,f,E))+EA|0,EA=l+nA|0,EA=iA>>>0<yA>>>0?EA+1|0:EA,yA=xg(y,i,oA,u),nA=l+EA|0,nA=(iA=yA+iA|0)>>>0<yA>>>0?nA+1|0:nA,EA=(yA=xg(pA,p,X,U))+iA|0,iA=l+nA|0,iA=EA>>>0<yA>>>0?iA+1|0:iA,nA=(yA=xg(s,a,uA,k))+EA|0,EA=l+iA|0,EA=nA>>>0<yA>>>0?EA+1|0:EA,aA=nA,j=iA=o(fA,19),nA=xg(iA,x=iA>>31,T,v),EA=l+EA|0,EA=(iA=aA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=xg(w,r,d,_),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,fA=xg(F,G,W,S),nA=l+EA|0,nA=(iA=fA+iA|0)>>>0<fA>>>0?nA+1|0:nA,EA=(fA=xg(FA,GA,c,Q))+iA|0,iA=l+nA|0,iA=EA>>>0<fA>>>0?iA+1|0:iA,nA=(fA=xg(h,D,L,H))+EA|0,EA=l+iA|0,EA=nA>>>0<fA>>>0?EA+1|0:EA,fA=nA,gA=EA,(iA=nA+33554432|0)>>>0<33554432&&(EA=EA+1|0),yA=iA,BA=EA,nA=HA,HA=(67108863&EA)<<6|iA>>>26,EA=(EA>>26)+I|0,EA=(nA=nA+HA|0)>>>0<HA>>>0?EA+1|0:EA,HA=nA,nA=EA,(I=HA+16777216|0)>>>0<16777216&&(nA=nA+1|0),CA=I,EA=g+(iA=nA>>25)|0,EA=(I=(nA=(33554431&nA)<<7|I>>>25)+cA|0)>>>0<nA>>>0?EA+1|0:EA,(I=(g=I)+33554432|0)>>>0<33554432&&(EA=EA+1|0),YA=I,I=EA,EA=-67108864&YA,n[eA+24>>2]=g-EA,cA=A,g=xg(e,t,X,U),EA=l,iA=xg(B,C,y,i),nA=l+EA|0,nA=(g=iA+g|0)>>>0<iA>>>0?nA+1|0:nA,iA=xg(s,a,Y,u),EA=l+nA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,nA=g,eA=g=o(pA,19),iA=xg(g,pA=g>>31,T,v),EA=l+EA|0,EA=(g=nA+iA|0)>>>0<iA>>>0?EA+1|0:EA,iA=g,IA=g=o(uA,19),g=iA+(nA=xg(w,r,g,Z=g>>31))|0,iA=l+EA|0,iA=g>>>0<nA>>>0?iA+1|0:iA,nA=xg(W,S,j,x),EA=l+iA|0,EA=(g=nA+g|0)>>>0<nA>>>0?EA+1|0:EA,iA=xg(c,Q,d,_),nA=l+EA|0,nA=(g=iA+g|0)>>>0<iA>>>0?nA+1|0:nA,iA=xg(F,G,L,H),EA=l+nA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,iA=xg(FA,GA,f,E),EA=l+EA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,nA=xg(h,D,q,b),iA=l+EA|0,aA=g=nA+g|0,g=g>>>0<nA>>>0?iA+1|0:iA,EA=xg(s,a,e,t),nA=l,iA=(uA=xg(B,C,sA,M))+EA|0,EA=l+nA|0,EA=iA>>>0<uA>>>0?EA+1|0:EA,nA=iA,uA=iA=o(oA,19),iA=nA+(oA=xg(iA,kA=iA>>31,tA,P))|0,nA=l+EA|0,nA=iA>>>0<oA>>>0?nA+1|0:nA,oA=xg(w,r,eA,pA),EA=l+nA|0,EA=(iA=oA+iA|0)>>>0<oA>>>0?EA+1|0:EA,nA=xg(IA,Z,wA,J),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(oA=xg(c,Q,j,x))+iA|0,iA=l+EA|0,iA=nA>>>0<oA>>>0?iA+1|0:iA,oA=xg(d,_,rA,N),EA=l+iA|0,EA=(nA=oA+nA|0)>>>0<oA>>>0?EA+1|0:EA,iA=(oA=xg(f,E,F,G))+nA|0,nA=l+EA|0,nA=iA>>>0<oA>>>0?nA+1|0:nA,oA=xg(FA,GA,DA,R),EA=l+nA|0,EA=(iA=oA+iA|0)>>>0<oA>>>0?EA+1|0:EA,nA=xg(h,D,y,i),EA=l+EA|0,bA=iA=nA+iA|0,oA=iA>>>0<nA>>>0?EA+1|0:EA,EA=xg(EA=o(_A,19),EA>>31,T,v),iA=l,nA=xg(B,C,s,a),iA=l+iA|0,iA=(EA=nA+EA|0)>>>0<nA>>>0?iA+1|0:iA,nA=(_A=xg(w,r,uA,kA))+EA|0,EA=l+iA|0,iA=(eA=xg(eA,pA,W,S))+nA|0,nA=l+(nA>>>0<_A>>>0?EA+1|0:EA)|0,nA=iA>>>0<eA>>>0?nA+1|0:nA,eA=xg(c,Q,IA,Z),EA=l+nA|0,EA=(iA=eA+iA|0)>>>0<eA>>>0?EA+1|0:EA,nA=xg(L,H,j,x),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(eA=xg(f,E,d,_))+iA|0,iA=l+EA|0,iA=nA>>>0<eA>>>0?iA+1|0:iA,eA=xg(F,G,q,b),EA=l+iA|0,EA=(nA=eA+nA|0)>>>0<eA>>>0?EA+1|0:EA,iA=(eA=xg(FA,GA,y,i))+nA|0,nA=l+EA|0,nA=iA>>>0<eA>>>0?nA+1|0:nA,eA=xg(h,D,X,U),EA=l+nA|0,EA=(iA=eA+iA|0)>>>0<eA>>>0?EA+1|0:EA,eA=iA,_A=EA,(iA=iA+33554432|0)>>>0<33554432&&(EA=EA+1|0),pA=iA,uA=EA,kA=(67108863&EA)<<6|iA>>>26,iA=(nA=EA>>26)+oA|0,oA=EA=kA+bA|0,nA=aA,EA=EA>>>0<kA>>>0?iA+1|0:iA,(iA=oA+16777216|0)>>>0<16777216&&(EA=EA+1|0),QA=iA,aA=(33554431&EA)<<7|iA>>>25,EA=(EA>>25)+g|0,EA=(iA=nA+aA|0)>>>0<aA>>>0?EA+1|0:EA,(g=iA+33554432|0)>>>0<33554432&&(EA=EA+1|0),kA=g,g=EA,EA=-67108864&kA,n[cA+8>>2]=iA-EA,aA=A,EA=xg(c,Q,e,t),nA=l,iA=(cA=xg(B,C,wA,J))+EA|0,EA=l+nA|0,EA=iA>>>0<cA>>>0?EA+1|0:EA,nA=xg(Y,u,rA,N),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=xg(f,E,K,p),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,cA=xg(O,k,DA,R),nA=l+EA|0,nA=(iA=cA+iA|0)>>>0<cA>>>0?nA+1|0:nA,EA=(cA=xg(y,i,z,m))+iA|0,iA=l+nA|0,iA=EA>>>0<cA>>>0?iA+1|0:iA,nA=(cA=xg(sA,M,$,V))+EA|0,EA=l+iA|0,EA=nA>>>0<cA>>>0?EA+1|0:EA,iA=nA,nA=xg(s,a,cA=lA,bA=cA>>31),EA=l+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=xg(FA,GA,tA,P),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,lA=xg(h,D,w,r),nA=l+EA|0,nA=(iA=lA+iA|0)>>>0<lA>>>0?nA+1|0:nA,EA=I>>26,I=(lA=(67108863&I)<<6|YA>>>26)+iA|0,iA=EA+nA|0,EA=iA=I>>>0<lA>>>0?iA+1|0:iA,(I=(nA=I)+16777216|0)>>>0<16777216&&(EA=EA+1|0),YA=I,I=EA,EA=-33554432&YA,n[aA+28>>2]=nA-EA,lA=A,EA=xg(y,i,e,t),iA=l,aA=xg(B,C,DA,R),nA=l+iA|0,nA=(EA=aA+EA|0)>>>0<aA>>>0?nA+1|0:nA,aA=xg(Y,u,sA,M),iA=l+nA|0,iA=(EA=aA+EA|0)>>>0<aA>>>0?iA+1|0:iA,nA=(aA=xg(s,a,K,p))+EA|0,EA=l+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=xg(IA,Z,tA,P),EA=l+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=xg(w,r,j,x),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,aA=xg(d,_,wA,J),nA=l+EA|0,nA=(iA=aA+iA|0)>>>0<aA>>>0?nA+1|0:nA,EA=(aA=xg(c,Q,F,G))+iA|0,iA=l+nA|0,iA=EA>>>0<aA>>>0?iA+1|0:iA,nA=(aA=xg(FA,GA,rA,N))+EA|0,EA=l+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=xg(h,D,f,E),EA=l+EA|0,aA=iA=iA+nA|0,EA=(EA=iA>>>0<nA>>>0?EA+1|0:EA)+(iA=g>>26)|0,nA=EA=(g=aA+(nA=(67108863&g)<<6|kA>>>26)|0)>>>0<nA>>>0?EA+1|0:EA,(g=(iA=g)+16777216|0)>>>0<16777216&&(nA=nA+1|0),FA=g,g=nA,EA=-33554432&FA,n[lA+12>>2]=iA-EA,EA=xg(e,t,W,S),nA=l,iA=(aA=xg(B,C,w,r))+EA|0,EA=l+nA|0,EA=iA>>>0<aA>>>0?EA+1|0:EA,nA=xg(c,Q,Y,u),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,aA=xg(K,p,L,H),nA=l+EA|0,nA=(iA=aA+iA|0)>>>0<aA>>>0?nA+1|0:nA,EA=(aA=xg(f,E,O,k))+iA|0,iA=l+nA|0,iA=EA>>>0<aA>>>0?iA+1|0:iA,nA=(aA=xg(q,b,z,m))+EA|0,EA=l+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=xg(y,i,$,V),EA=l+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=xg(cA,bA,X,U),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,hA=xg(s,a,aA=hA,GA=aA>>31),nA=l+EA|0,nA=(iA=hA+iA|0)>>>0<hA>>>0?nA+1|0:nA,EA=(hA=xg(h,D,T,v))+iA|0,iA=l+nA|0,iA=EA>>>0<hA>>>0?iA+1|0:iA,hA=EA,EA=(EA=I>>25)+iA|0,EA=(I=hA+(nA=(33554431&I)<<7|YA>>>25)|0)>>>0<nA>>>0?EA+1|0:EA,(I=(iA=I)+33554432|0)>>>0<33554432&&(EA=EA+1|0),hA=I,I=EA,EA=-67108864&hA,n[lA+32>>2]=iA-EA,nA=iA=fA-(EA=-67108864&yA)|0,EA=(EA=gA-((fA>>>0<EA>>>0)+BA|0)|0)+(iA=g>>25)|0,EA=(g=nA+(fA=(33554431&g)<<7|FA>>>25)|0)>>>0<fA>>>0?EA+1|0:EA,(iA=g+33554432|0)>>>0<33554432&&(EA=EA+1|0),nA=(HA-(-33554432&CA)|0)+((67108863&EA)<<6|iA>>>26)|0,n[A+20>>2]=nA,EA=-67108864&iA,n[A+16>>2]=g-EA,EA=xg(w,r,e,t),nA=l,iA=(tA=xg(B,C,tA,P))+EA|0,EA=l+nA|0,EA=iA>>>0<tA>>>0?EA+1|0:EA,nA=(tA=xg(Y,u,wA,J))+iA|0,iA=l+EA|0,iA=nA>>>0<tA>>>0?iA+1|0:iA,EA=(tA=xg(c,Q,K,p))+nA|0,nA=l+iA|0,iA=(rA=xg(O,k,rA,N))+EA|0,EA=l+(EA>>>0<tA>>>0?nA+1|0:nA)|0,EA=iA>>>0<rA>>>0?EA+1|0:EA,nA=xg(f,E,z,m),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=xg(DA,R,$,V),EA=l+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(rA=xg(y,i,cA,bA))+iA|0,iA=l+EA|0,iA=nA>>>0<rA>>>0?iA+1|0:iA,EA=(rA=xg(aA,GA,sA,M))+nA|0,nA=l+iA|0,nA=EA>>>0<rA>>>0?nA+1|0:nA,iA=(rA=xg(s,a,AA,AA>>31))+EA|0,EA=l+nA|0,g=iA,EA=(EA=iA>>>0<rA>>>0?EA+1|0:EA)+(iA=I>>26)|0,EA=(I=g+(nA=(67108863&I)<<6|hA>>>26)|0)>>>0<nA>>>0?EA+1|0:EA,nA=g=I,(I=g+16777216|0)>>>0<16777216&&(EA=EA+1|0),I=-33554432&(iA=I),n[A+36>>2]=g-I,g=A,nA=oA-(-33554432&QA)|0,rA=eA-(I=-67108864&pA)|0,DA=_A-((eA>>>0<I>>>0)+uA|0)|0,EA=xg((33554431&(I=EA))<<7|iA>>>25,EA>>=25,19,0),iA=l+DA|0,aA=g,EA=iA=(I=EA+rA|0)>>>0<EA>>>0?iA+1|0:iA,(g=I+33554432|0)>>>0<33554432&&(EA=EA+1|0),iA=((67108863&EA)<<6|(iA=g)>>>26)+nA|0,n[aA+4>>2]=iA,iA=A,A=-67108864&g,n[iA>>2]=I-A}function Y(A,I){var g,B,C,Q,E,i,a,r,e,t,c,f,y,s,w,h,D,u,p,F,G,k,_,H,Y,b,m,U,v,S,N,R,M,d,P,J,x,L=0,K=0,q=0,X=0,V=0,T=0,W=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,QA=0,EA=0,iA=0,nA=0;iA=A,Q=L=(V=n[I+12>>2])<<1,E=L>>31,i=L=(Z=n[I+4>>2])<<1,L=xg(Q,E,L,g=L>>31),q=l,K=L,k=L=IA=n[I+8>>2],X=xg(L,$=L>>31,L,$),L=l+q|0,L=(K=K+X|0)>>>0<X>>>0?L+1|0:L,X=K,a=K=BA=n[I+16>>2],r=K>>31,e=K=(CA=n[I>>2])<<1,q=xg(a,r,K,B=K>>31),L=l+L|0,L=(K=X+q|0)>>>0<q>>>0?L+1|0:L,W=K,q=n[I+28>>2],p=K=o(q,38),v=q,X=xg(K,h=K>>31,q,_=q>>31),L=l+L|0,L=(K=W+X|0)>>>0<X>>>0?L+1|0:L,T=K,W=n[I+32>>2],j=xg(c=K=o(W,19),f=K>>31,K=(X=n[I+24>>2])<<1,K>>31),K=l+L|0,K=(O=T+j|0)>>>0<j>>>0?K+1|0:K,T=O,AA=n[I+36>>2],t=L=o(AA,38),C=L>>31,D=I=(O=n[I+20>>2])<<1,j=xg(L,C,I,s=I>>31),I=l+K|0,H=(L=T+j|0)<<1,d=L=(L>>>0<j>>>0?I+1|0:I)<<1|L>>>31,(I=H+33554432|0)>>>0<33554432&&(L=L+1|0),S=I,P=L,I=L>>26,L=(67108863&L)<<6|S>>>26,K=xg(i,g,a,r),j=l,T=L,u=L=IA<<1,QA=V,V=xg(L,w=L>>31,V,Y=V>>31),L=l+j|0,L=(K=V+K|0)>>>0<V>>>0?L+1|0:L,IA=O,V=(j=xg(O,F=O>>31,e,B))+K|0,K=l+L|0,K=V>>>0<j>>>0?K+1|0:K,gA=V,N=L=q<<1,V=xg(c,f,L,b=L>>31),L=l+K|0,L=(q=gA+V|0)>>>0<V>>>0?L+1|0:L,K=q,V=X,q=xg(t,C,X,y=X>>31),L=l+L|0,L=(K=K+q|0)>>>0<q>>>0?L+1|0:L,q=K,I=I+(K=L<<1|K>>>31)|0,EA=L=T+(q<<=1)|0,L=L>>>0<q>>>0?I+1|0:I,(I=EA+16777216|0)>>>0<16777216&&(L=L+1|0),J=I,I=(33554431&L)<<7|I>>>25,q=L>>25,L=xg(Q,E,QA,Y),K=l,T=I,I=(j=xg(a,r,u,w))+L|0,L=l+K|0,L=I>>>0<j>>>0?L+1|0:L,K=xg(i,g,D,s),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=(j=xg(e,B,V,y))+I|0,I=l+L|0,I=K>>>0<j>>>0?I+1|0:I,j=W,W=xg(c,f,W,G=W>>31),L=l+I|0,L=(K=W+K|0)>>>0<W>>>0?L+1|0:L,I=(W=xg(t,C,N,b))+K|0,K=l+L|0,I=((L=I)>>>0<W>>>0?K+1|0:K)<<1|L>>>31,W=L<<1,L=I+q|0,L=(K=T+W|0)>>>0<W>>>0?L+1|0:L,(K=(I=K)+33554432|0)>>>0<33554432&&(L=L+1|0),gA=K,q=L,L=-67108864&K,n[iA+24>>2]=I-L,W=A,I=xg(I=o(O,38),I>>31,IA,F),L=l,T=I,O=xg(I=CA,K=I>>31,I,K),K=l+L|0,K=(I=T+O|0)>>>0<O>>>0?K+1|0:K,L=I,z=I=o(X,19),m=I>>31,R=I=BA<<1,I=L+(X=xg(z,m,I,U=I>>31))|0,L=l+K|0,L=I>>>0<X>>>0?L+1|0:L,K=xg(Q,E,p,h),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=(X=xg(c,f,u,w))+I|0,I=l+L|0,I=K>>>0<X>>>0?I+1|0:I,X=xg(i,g,t,C),L=l+I|0,iA=L=((I=K=X+K|0)>>>0<X>>>0?L+1|0:L)<<1|I>>>31,K=L,(I=33554432+(O=I<<1)|0)>>>0<33554432&&(K=K+1|0),CA=I,BA=K,I=(67108863&K)<<6|I>>>26,X=K>>26,L=xg(z,m,D,s),K=l,nA=I,I=(Z=xg(e,B,T=Z,M=T>>31))+L|0,L=l+K|0,L=I>>>0<Z>>>0?L+1|0:L,K=(Z=xg(a,r,p,h))+I|0,I=l+L|0,I=K>>>0<Z>>>0?I+1|0:I,Z=xg(c,f,Q,E),L=l+I|0,L=(K=Z+K|0)>>>0<Z>>>0?L+1|0:L,I=(Z=xg(t,C,k,$))+K|0,K=l+L|0,I=((L=I)>>>0<Z>>>0?K+1|0:K)<<1|L>>>31,Z=L<<1,L=I+X|0,L=(K=nA+Z|0)>>>0<Z>>>0?L+1|0:L,Z=K,(I=K+16777216|0)>>>0<16777216&&(L=L+1|0),nA=I,K=I,I=L>>25,L=(33554431&L)<<7|K>>>25,X=I,I=xg(e,B,k,$),K=l,x=L,T=xg(i,g,T,M),L=l+K|0,L=(I=T+I|0)>>>0<T>>>0?L+1|0:L,T=xg(z,m,V,y),K=l+L|0,K=(I=T+I|0)>>>0<T>>>0?K+1|0:K,T=xg(D,s,p,h),L=l+K|0,L=(I=T+I|0)>>>0<T>>>0?L+1|0:L,K=xg(c,f,R,U),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=(T=xg(t,C,Q,E))+I|0,I=l+L|0,L=(L=(I=K>>>0<T>>>0?I+1|0:I)<<1|K>>>31)+X|0,K=L=(I=x+(K<<=1)|0)>>>0<K>>>0?L+1|0:L,(L=I+33554432|0)>>>0<33554432&&(K=K+1|0),T=L,X=K,L&=-67108864,n[W+8>>2]=I-L,I=xg(u,w,IA,F),K=l,L=(z=xg(a,r,Q,E))+I|0,I=l+K|0,I=L>>>0<z>>>0?I+1|0:I,K=(z=xg(i,g,V,y))+L|0,L=l+I|0,L=K>>>0<z>>>0?L+1|0:L,I=(z=xg(e,B,v,_))+K|0,K=l+L|0,K=I>>>0<z>>>0?K+1|0:K,z=xg(t,C,j,G),L=l+K|0,L=(L=(L=(I=z+I|0)>>>0<z>>>0?L+1|0:L)<<1|I>>>31)+(K=q>>26)|0,K=I=(q=(67108863&q)<<6|gA>>>26)+(I<<1)|0,I=L=I>>>0<q>>>0?L+1|0:L,(L=K+16777216|0)>>>0<16777216&&(I=I+1|0),gA=L,q=I,I=-33554432&L,n[W+28>>2]=K-I,I=xg(e,B,QA,Y),L=l,K=xg(i,g,k,$),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=xg(V,y,p,h),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=($=xg(c,f,D,s))+I|0,I=l+L|0,I=K>>>0<$>>>0?I+1|0:I,L=($=xg(t,C,a,r))+K|0,K=l+I|0,I=L,L=(L>>>0<$>>>0?K+1|0:K)<<1|L>>>31,K=I<<1,L=(I=X>>26)+L|0,L=(K=K+(X=(67108863&X)<<6|T>>>26)|0)>>>0<X>>>0?L+1|0:L,(K=(I=K)+16777216|0)>>>0<16777216&&(L=L+1|0),QA=K,X=L,L=-33554432&K,n[W+12>>2]=I-L,$=A,I=xg(V,y,u,w),L=l,K=xg(a,r,a,r),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=xg(Q,E,D,s),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=xg(i,g,N,b),L=l+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=(W=xg(e,B,j,G))+I|0,I=l+L|0,I=K>>>0<W>>>0?I+1|0:I,L=(AA=xg(t,C,W=AA,T=W>>31))+K|0,K=l+I|0,I=L,L=(L>>>0<AA>>>0?K+1|0:K)<<1|L>>>31,K=I<<1,L=(I=q>>25)+L|0,L=(K=K+(q=(33554431&q)<<7|gA>>>25)|0)>>>0<q>>>0?L+1|0:L,(K=(I=K)+33554432|0)>>>0<33554432&&(L=L+1|0),AA=K,q=L,L=-67108864&K,n[$+32>>2]=I-L,L=X>>25,K=(X=(33554431&X)<<7|QA>>>25)+(H-(I=-67108864&S)|0)|0,I=L+(d-((H>>>0<I>>>0)+P|0)|0)|0,L=I=K>>>0<X>>>0?I+1|0:I,(I=K+33554432|0)>>>0<33554432&&(L=L+1|0),X=((67108863&L)<<6|I>>>26)+(EA=EA-(-33554432&J)|0)|0,n[$+20>>2]=X,I&=-67108864,n[A+16>>2]=K-I,I=xg(Q,E,V,y),K=l,L=(V=xg(IA,F,R,U))+I|0,I=l+K|0,I=L>>>0<V>>>0?I+1|0:I,K=(V=xg(u,w,v,_))+L|0,L=l+I|0,L=K>>>0<V>>>0?L+1|0:L,I=(V=xg(i,g,j,G))+K|0,K=l+L|0,K=I>>>0<V>>>0?K+1|0:K,V=xg(e,B,W,T),L=l+K|0,L=(L=(L=(I=V+I|0)>>>0<V>>>0?L+1|0:L)<<1|I>>>31)+(K=q>>26)|0,L=(I=(q=(67108863&q)<<6|AA>>>26)+(I<<1)|0)>>>0<q>>>0?L+1|0:L,K=I,q=I,X=I,I=L,(L=K+16777216|0)>>>0<16777216&&(I=I+1|0),K=-33554432&L,n[A+36>>2]=q-K,q=A,X=Z-(-33554432&nA)|0,I=(L=xg((33554431&I)<<7|L>>>25,I>>25,19,0))+(O-(K=-67108864&CA)|0)|0,K=l+(iA-((O>>>0<K>>>0)+BA|0)|0)|0,K=I>>>0<L>>>0?K+1|0:K,L=I,V=q,I=K,(K=L+33554432|0)>>>0<33554432&&(I=I+1|0),q=((67108863&I)<<6|K>>>26)+X|0,n[V+4>>2]=q,I=A,A=-67108864&K,n[I>>2]=L-A}function b(A,I,g){var B,C=0,Q=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,u=0,p=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0,v=0,S=0,N=0,R=0,M=0,d=0,P=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,T=0,W=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0;for(D=B=D-2048|0,BB(B+1024|0,I),YI(B+1024|0,A),BB(B,B+1024|0),YI(B,g),I=0;e=n[(i=(B+1024|0)+(96|(A=M<<7))|0)>>2],Q=n[i+4>>2],a=k=jg((C=e)^(e=MI(e=n[(r=o=A+(B+1024|0)|0)>>2],a=n[r+4>>2],E=n[(r=(B+1024|0)+(32|A)|0)>>2],t=n[r+4>>2])),(a=Q)^(Q=l),32),y=e,w=Q,C=jg((k=MI(C=n[(Q=e=(B+1024|0)+(64|A)|0)>>2],s=n[Q+4>>2],k,Q=l))^E,(C=t)^(t=l),24),E=jg(a^(S=MI(y,w,C,s=l)),(U=l)^Q,16),a=Q=l,n[i>>2]=E,n[i+4>>2]=Q,t=MI(k,t,E,Q),h=Q=l,n[e>>2]=t,n[e+4>>2]=Q,k=jg(C^t,Q^s,63),s=Q=l,n[r>>2]=k,n[r+4>>2]=Q,C=n[(Q=m=(B+1024|0)+(104|A)|0)>>2],b=n[Q+4>>2],_=n[(Q=(B+1024|0)+(72|A)|0)>>2],f=n[Q+4>>2],c=C,u=MI(u=n[(C=w=(B+1024|0)+(8|A)|0)>>2],F=n[C+4>>2],y=n[(C=G=(B+1024|0)+(40|A)|0)>>2],v=n[C+4>>2]),C=MI(_,f,P=jg(c^u,(C=b)^(b=l),32),F=l),Z=MI(c=u,b,v=jg(_=C^y,(y=l)^v,24),u=l),C=MI(C,y,b=jg(Z^P,(O=l)^F,16),z=l),y=P=l,n[Q>>2]=C,n[Q+4>>2]=y,v=jg(C^v,y^u,63),u=l,J=n[(F=P=(B+1024|0)+(112|A)|0)>>2],N=n[F+4>>2],H=n[(F=(B+1024|0)+(80|A)|0)>>2],L=n[F+4>>2],d=jg((f=J)^(Y=MI(Y=n[(_=J=(B+1024|0)+(16|A)|0)>>2],p=n[_+4>>2],R=n[(c=_=(B+1024|0)+(48|A)|0)>>2],c=n[c+4>>2])),(p=N)^(N=l),32),c=jg(H=(f=MI(H,L,d,p=l))^R,c^(R=l),24),IA=jg(($=MI(Y,H=N,c,N=l))^d,(AA=l)^p,16),N=jg(c^(L=MI(f,R,IA,gA=l)),(V=l)^N,63),c=l,d=n[(Y=R=(B+1024|0)+(120|A)|0)>>2],p=n[Y+4>>2],q=n[(f=Y=(B+1024|0)+(88|A)|0)>>2],j=n[f+4>>2],x=jg((X=d)^(W=MI(T=n[(f=d=(B+1024|0)+(24|A)|0)>>2],x=n[f+4>>2],H=n[(A=(B+1024|0)+(56|A)|0)>>2],f=n[A+4>>2])),(T=p)^(p=l),32),f=jg(X=(q=MI(q,j,x,K=l))^H,f^(H=l),24),X=H,x=jg((H=MI(W,H=p,f,p=l))^x,(W=l)^K,16),p=jg(f^(q=MI(q,X,x,K=l)),(j=l)^p,63),f=l,X=L,T=V,L=jg(x^(S=MI(S,U,v,u)),K^(U=l),32),v=jg((x=MI(X,T,L,V=l))^v,(K=l)^u,24),u=MI(u=S,U,v,S=l),U=l,n[o>>2]=u,n[o+4>>2]=U,o=jg(u^L,V^U,16),u=l,n[R>>2]=o,n[R+4>>2]=u,o=MI(x,K,o,u),u=l,n[F>>2]=o,n[F+4>>2]=u,BA=G,CA=jg(o^v,u^S,63),n[BA>>2]=CA,n[G+4>>2]=l,G=jg((o=MI(Z,O,N,c))^E,(u=a)^(a=l),32),E=jg((u=MI(q,j,G,v=l))^N,(F=l)^c,24),o=MI(o,c=a,E,a=l),c=N=l,n[w>>2]=o,n[w+4>>2]=c,o=jg(o^G,c^v,16),w=l,n[i>>2]=o,n[i+4>>2]=w,i=MI(u,F,o,w),n[Y>>2]=i,o=l,n[Y+4>>2]=o,BA=_,CA=jg(E^i,o^a,63),n[BA>>2]=CA,n[_+4>>2]=l,w=t,E=MI($,AA,p,f),h=MI(w,h,o=jg(b^E,z^(t=l),32),a=l),E=MI(E,c=t,i=jg(h^p,(w=l)^f,24),t=l),G=l,n[J>>2]=E,n[J+4>>2]=G,E=jg(E^o,a^G,16),o=l,n[m>>2]=E,n[m+4>>2]=o,E=MI(h,w,E,o),n[e>>2]=E,a=e,e=l,n[a+4>>2]=e,BA=A,CA=jg(E^i,e^t,63),n[BA>>2]=CA,n[A+4>>2]=l,A=k,i=MI(H,W,k,s),k=MI(C,y,E=jg(IA^i,gA^(e=l),32),t=l),i=MI(i,a=e,A=jg(A^k,(C=l)^s,24),e=l),o=l,n[d>>2]=i,n[d+4>>2]=o,i=jg(E^i,t^o,16),E=l,n[P>>2]=i,n[P+4>>2]=E,i=MI(k,C,i,E),n[Q>>2]=i,C=Q,Q=l,n[C+4>>2]=Q,BA=r,CA=jg(A^i,Q^e,63),n[BA>>2]=CA,n[r+4>>2]=l,8!=(0|(M=M+1|0)););for(;r=n[(i=768+(A=(Q=I<<4)+(B+1024|0)|0)|0)>>2],i=n[i+4>>2],C=r,r=n[A+256>>2],e=n[A+260>>2],t=jg(C^(E=MI(n[A>>2],n[A+4>>2],r,e)),(t=i)^(i=l),32),a=i,i=l,k=jg((C=r)^(r=MI(n[A+512>>2],n[A+516>>2],t,i)),(s=e)^(e=l),24),i=jg(t^(b=MI(E,a,k,C=l)),(y=l)^i,16),E=t=l,n[A+768>>2]=i,n[A+772>>2]=E,r=MI(r,e,i,E),t=e=l,n[A+512>>2]=r,n[A+516>>2]=e,e=jg(r^k,C^e,63),k=C=l,n[A+256>>2]=e,n[A+260>>2]=C,M=n[A+780>>2],w=n[A+520>>2],c=n[A+524>>2],s=n[A+776>>2],Q=C=(B+1024|0)+(8|Q)|0,o=n[A+264>>2],a=n[A+268>>2],h=MI(n[Q>>2],n[Q+4>>2],o,a),Q=MI(w,c,s=jg(s^h,(Q=M)^(M=l),32),m=l),v=MI(w=h,M,a=jg(c=Q^o,a^(o=l),24),h=l),Q=MI(Q,o,M=jg(v^s,(u=l)^m,16),P=l),o=s=l,n[A+520>>2]=Q,n[A+524>>2]=o,a=jg(Q^a,o^h,63),h=l,s=n[A+900>>2],_=n[A+640>>2],f=n[A+644>>2],F=n[A+896>>2],m=n[A+384>>2],w=n[A+388>>2],F=jg(F^(G=MI(n[A+128>>2],n[A+132>>2],m,w)),(c=s)^(s=l),32),w=jg(c=(_=MI(_,f,F,J=l))^m,w^(m=l),24),c=_,_=jg((_=F)^(F=MI(G,f=s,w,s=l)),(f=J)^(J=l),16),s=jg(w^(c=MI(c,m,_,N=l)),(R=l)^s,63),m=l,w=n[A+908>>2],S=n[A+648>>2],U=n[A+652>>2],p=n[A+904>>2],G=n[A+392>>2],Y=n[A+396>>2],p=jg(p^(d=MI(n[A+136>>2],n[A+140>>2],G,Y)),(f=w)^(w=l),32),H=Y=jg(U=(S=MI(S,U,p,f=l))^G,Y^(G=l),24),p=jg((Y=MI(d,U=w,Y,w=l))^p,(d=l)^f,16),w=jg(H^(S=MI(S,G,p,f=l)),(U=l)^w,63),G=l,H=c,L=R,c=jg(p^(b=MI(b,y,a,h)),f^(y=l),32),a=jg((p=MI(H,L,c,R=l))^a,(f=l)^h,24),h=MI(h=b,y,a,b=l),y=l,n[A>>2]=h,n[A+4>>2]=y,h=jg(h^c,R^y,16),y=l,n[A+904>>2]=h,n[A+908>>2]=y,h=MI(p,f,h,y),y=l,n[A+640>>2]=h,n[A+644>>2]=y,BA=A,CA=jg(a^h,y^b,63),n[BA+264>>2]=CA,n[A+268>>2]=l,y=s,h=jg((a=MI(v,u,s,m))^i,(s=E)^(E=l),32),i=jg(y^(b=MI(S,U,h,s=l)),(c=m)^(m=l),24),E=MI(y=a,E,i,a=l),y=l,n[C>>2]=E,n[C+4>>2]=y,E=jg(E^h,s^y,16),C=l,n[A+768>>2]=E,n[A+772>>2]=C,E=MI(b,m,E,C),n[A+648>>2]=E,C=l,n[A+652>>2]=C,BA=A,CA=jg(E^i,C^a,63),n[BA+384>>2]=CA,n[A+388>>2]=l,a=r,s=t,r=MI(F,J,w,G),M=MI(a,s,t=jg(M^r,P^(E=l),32),C=l),r=MI(r,s=E,i=jg(M^w,(a=l)^G,24),E=l),h=l,n[A+128>>2]=r,n[A+132>>2]=h,r=jg(r^t,C^h,16),C=t=l,n[A+776>>2]=r,n[A+780>>2]=C,r=MI(M,a,r,C),n[A+512>>2]=r,t=l,n[A+516>>2]=t,BA=A,CA=jg(i^r,E^t,63),n[BA+392>>2]=CA,n[A+396>>2]=l,C=e,t=Q,Q=jg(_^(r=MI(Y,d,e,k)),N^(e=l),32),i=jg(C^(t=MI(t,o,Q,E=l)),(a=k)^(k=l),24),r=MI(r,C=e,i,e=l),C=l,n[A+136>>2]=r,n[A+140>>2]=C,r=jg(Q^r,E^C,16),Q=l,n[A+896>>2]=r,n[A+900>>2]=Q,r=MI(t,k,r,Q),n[A+520>>2]=r,Q=l,n[A+524>>2]=Q,BA=A,CA=jg(i^r,Q^e,63),n[BA+256>>2]=CA,n[A+260>>2]=l,8!=(0|(I=I+1|0)););BB(g,B),YI(g,B+1024|0),D=B+2048|0}function m(A,I,g){var B,C=0,Q=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,u=0,p=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0,v=0,S=0,N=0,R=0,M=0,d=0,P=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,T=0,W=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0;for(D=B=D-2048|0,BB(B+1024|0,I),YI(B+1024|0,A),BB(B,B+1024|0),I=0;e=n[(i=(B+1024|0)+(96|(A=M<<7))|0)>>2],Q=n[i+4>>2],a=k=jg((C=e)^(e=MI(e=n[(r=o=A+(B+1024|0)|0)>>2],a=n[r+4>>2],E=n[(r=(B+1024|0)+(32|A)|0)>>2],t=n[r+4>>2])),(a=Q)^(Q=l),32),y=e,w=Q,C=jg((k=MI(C=n[(Q=e=(B+1024|0)+(64|A)|0)>>2],s=n[Q+4>>2],k,Q=l))^E,(C=t)^(t=l),24),E=jg(a^(S=MI(y,w,C,s=l)),(U=l)^Q,16),a=Q=l,n[i>>2]=E,n[i+4>>2]=Q,t=MI(k,t,E,Q),h=Q=l,n[e>>2]=t,n[e+4>>2]=Q,k=jg(C^t,Q^s,63),s=Q=l,n[r>>2]=k,n[r+4>>2]=Q,C=n[(Q=m=(B+1024|0)+(104|A)|0)>>2],b=n[Q+4>>2],_=n[(Q=(B+1024|0)+(72|A)|0)>>2],f=n[Q+4>>2],c=C,u=MI(u=n[(C=w=(B+1024|0)+(8|A)|0)>>2],F=n[C+4>>2],y=n[(C=G=(B+1024|0)+(40|A)|0)>>2],v=n[C+4>>2]),C=MI(_,f,P=jg(c^u,(C=b)^(b=l),32),F=l),Z=MI(c=u,b,v=jg(_=C^y,(y=l)^v,24),u=l),C=MI(C,y,b=jg(Z^P,(O=l)^F,16),z=l),y=P=l,n[Q>>2]=C,n[Q+4>>2]=y,v=jg(C^v,y^u,63),u=l,J=n[(F=P=(B+1024|0)+(112|A)|0)>>2],N=n[F+4>>2],H=n[(F=(B+1024|0)+(80|A)|0)>>2],L=n[F+4>>2],d=jg((f=J)^(Y=MI(Y=n[(_=J=(B+1024|0)+(16|A)|0)>>2],p=n[_+4>>2],R=n[(c=_=(B+1024|0)+(48|A)|0)>>2],c=n[c+4>>2])),(p=N)^(N=l),32),c=jg(H=(f=MI(H,L,d,p=l))^R,c^(R=l),24),IA=jg(($=MI(Y,H=N,c,N=l))^d,(AA=l)^p,16),N=jg(c^(L=MI(f,R,IA,gA=l)),(V=l)^N,63),c=l,d=n[(Y=R=(B+1024|0)+(120|A)|0)>>2],p=n[Y+4>>2],q=n[(f=Y=(B+1024|0)+(88|A)|0)>>2],j=n[f+4>>2],x=jg((X=d)^(W=MI(T=n[(f=d=(B+1024|0)+(24|A)|0)>>2],x=n[f+4>>2],H=n[(A=(B+1024|0)+(56|A)|0)>>2],f=n[A+4>>2])),(T=p)^(p=l),32),f=jg(X=(q=MI(q,j,x,K=l))^H,f^(H=l),24),X=H,x=jg((H=MI(W,H=p,f,p=l))^x,(W=l)^K,16),p=jg(f^(q=MI(q,X,x,K=l)),(j=l)^p,63),f=l,X=L,T=V,L=jg(x^(S=MI(S,U,v,u)),K^(U=l),32),v=jg((x=MI(X,T,L,V=l))^v,(K=l)^u,24),u=MI(u=S,U,v,S=l),U=l,n[o>>2]=u,n[o+4>>2]=U,o=jg(u^L,V^U,16),u=l,n[R>>2]=o,n[R+4>>2]=u,o=MI(x,K,o,u),u=l,n[F>>2]=o,n[F+4>>2]=u,BA=G,CA=jg(o^v,u^S,63),n[BA>>2]=CA,n[G+4>>2]=l,G=jg((o=MI(Z,O,N,c))^E,(u=a)^(a=l),32),E=jg((u=MI(q,j,G,v=l))^N,(F=l)^c,24),o=MI(o,c=a,E,a=l),c=N=l,n[w>>2]=o,n[w+4>>2]=c,o=jg(o^G,c^v,16),w=l,n[i>>2]=o,n[i+4>>2]=w,i=MI(u,F,o,w),n[Y>>2]=i,o=l,n[Y+4>>2]=o,BA=_,CA=jg(E^i,o^a,63),n[BA>>2]=CA,n[_+4>>2]=l,w=t,E=MI($,AA,p,f),h=MI(w,h,o=jg(b^E,z^(t=l),32),a=l),E=MI(E,c=t,i=jg(h^p,(w=l)^f,24),t=l),G=l,n[J>>2]=E,n[J+4>>2]=G,E=jg(E^o,a^G,16),o=l,n[m>>2]=E,n[m+4>>2]=o,E=MI(h,w,E,o),n[e>>2]=E,a=e,e=l,n[a+4>>2]=e,BA=A,CA=jg(E^i,e^t,63),n[BA>>2]=CA,n[A+4>>2]=l,A=k,i=MI(H,W,k,s),k=MI(C,y,E=jg(IA^i,gA^(e=l),32),t=l),i=MI(i,a=e,A=jg(A^k,(C=l)^s,24),e=l),o=l,n[d>>2]=i,n[d+4>>2]=o,i=jg(E^i,t^o,16),E=l,n[P>>2]=i,n[P+4>>2]=E,i=MI(k,C,i,E),n[Q>>2]=i,C=Q,Q=l,n[C+4>>2]=Q,BA=r,CA=jg(A^i,Q^e,63),n[BA>>2]=CA,n[r+4>>2]=l,8!=(0|(M=M+1|0)););for(;r=n[(i=768+(A=(Q=I<<4)+(B+1024|0)|0)|0)>>2],i=n[i+4>>2],C=r,r=n[A+256>>2],e=n[A+260>>2],t=jg(C^(E=MI(n[A>>2],n[A+4>>2],r,e)),(t=i)^(i=l),32),a=i,i=l,k=jg((C=r)^(r=MI(n[A+512>>2],n[A+516>>2],t,i)),(s=e)^(e=l),24),i=jg(t^(b=MI(E,a,k,C=l)),(y=l)^i,16),E=t=l,n[A+768>>2]=i,n[A+772>>2]=E,r=MI(r,e,i,E),t=e=l,n[A+512>>2]=r,n[A+516>>2]=e,e=jg(r^k,C^e,63),k=C=l,n[A+256>>2]=e,n[A+260>>2]=C,M=n[A+780>>2],w=n[A+520>>2],c=n[A+524>>2],s=n[A+776>>2],Q=C=(B+1024|0)+(8|Q)|0,o=n[A+264>>2],a=n[A+268>>2],h=MI(n[Q>>2],n[Q+4>>2],o,a),Q=MI(w,c,s=jg(s^h,(Q=M)^(M=l),32),m=l),v=MI(w=h,M,a=jg(c=Q^o,a^(o=l),24),h=l),Q=MI(Q,o,M=jg(v^s,(u=l)^m,16),P=l),o=s=l,n[A+520>>2]=Q,n[A+524>>2]=o,a=jg(Q^a,o^h,63),h=l,s=n[A+900>>2],_=n[A+640>>2],f=n[A+644>>2],F=n[A+896>>2],m=n[A+384>>2],w=n[A+388>>2],F=jg(F^(G=MI(n[A+128>>2],n[A+132>>2],m,w)),(c=s)^(s=l),32),w=jg(c=(_=MI(_,f,F,J=l))^m,w^(m=l),24),c=_,_=jg((_=F)^(F=MI(G,f=s,w,s=l)),(f=J)^(J=l),16),s=jg(w^(c=MI(c,m,_,N=l)),(R=l)^s,63),m=l,w=n[A+908>>2],S=n[A+648>>2],U=n[A+652>>2],p=n[A+904>>2],G=n[A+392>>2],Y=n[A+396>>2],p=jg(p^(d=MI(n[A+136>>2],n[A+140>>2],G,Y)),(f=w)^(w=l),32),H=Y=jg(U=(S=MI(S,U,p,f=l))^G,Y^(G=l),24),p=jg((Y=MI(d,U=w,Y,w=l))^p,(d=l)^f,16),w=jg(H^(S=MI(S,G,p,f=l)),(U=l)^w,63),G=l,H=c,L=R,c=jg(p^(b=MI(b,y,a,h)),f^(y=l),32),a=jg((p=MI(H,L,c,R=l))^a,(f=l)^h,24),h=MI(h=b,y,a,b=l),y=l,n[A>>2]=h,n[A+4>>2]=y,h=jg(h^c,R^y,16),y=l,n[A+904>>2]=h,n[A+908>>2]=y,h=MI(p,f,h,y),y=l,n[A+640>>2]=h,n[A+644>>2]=y,BA=A,CA=jg(a^h,y^b,63),n[BA+264>>2]=CA,n[A+268>>2]=l,y=s,h=jg((a=MI(v,u,s,m))^i,(s=E)^(E=l),32),i=jg(y^(b=MI(S,U,h,s=l)),(c=m)^(m=l),24),E=MI(y=a,E,i,a=l),y=l,n[C>>2]=E,n[C+4>>2]=y,E=jg(E^h,s^y,16),C=l,n[A+768>>2]=E,n[A+772>>2]=C,E=MI(b,m,E,C),n[A+648>>2]=E,C=l,n[A+652>>2]=C,BA=A,CA=jg(E^i,C^a,63),n[BA+384>>2]=CA,n[A+388>>2]=l,a=r,s=t,r=MI(F,J,w,G),M=MI(a,s,t=jg(M^r,P^(E=l),32),C=l),r=MI(r,s=E,i=jg(M^w,(a=l)^G,24),E=l),h=l,n[A+128>>2]=r,n[A+132>>2]=h,r=jg(r^t,C^h,16),C=t=l,n[A+776>>2]=r,n[A+780>>2]=C,r=MI(M,a,r,C),n[A+512>>2]=r,t=l,n[A+516>>2]=t,BA=A,CA=jg(i^r,E^t,63),n[BA+392>>2]=CA,n[A+396>>2]=l,C=e,t=Q,Q=jg(_^(r=MI(Y,d,e,k)),N^(e=l),32),i=jg(C^(t=MI(t,o,Q,E=l)),(a=k)^(k=l),24),r=MI(r,C=e,i,e=l),C=l,n[A+136>>2]=r,n[A+140>>2]=C,r=jg(Q^r,E^C,16),Q=l,n[A+896>>2]=r,n[A+900>>2]=Q,r=MI(t,k,r,Q),n[A+520>>2]=r,Q=l,n[A+524>>2]=Q,BA=A,CA=jg(i^r,Q^e,63),n[BA+256>>2]=CA,n[A+260>>2]=l,8!=(0|(I=I+1|0)););BB(g,B),YI(g,B+1024|0),D=B+2048|0}function U(A,I){var g,B,C,Q,E,i,a,r,e,t,c,f,y,s,w,h,D,u,p,F,G,k,_,H,Y,b,m,U,v,S,N,R,M,d,P,J,x=0,L=0,K=0,q=0,X=0,V=0,T=0,W=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,QA=0;V=A,t=L=(x=n[I+12>>2])<<1,W=x,x=xg(L,Q=L>>31,x,H=x>>31),K=l,L=x,E=x=CA=n[I+16>>2],i=x>>31,D=x=(Z=n[I+8>>2])<<1,X=xg(E,i,x,y=x>>31),x=l+K|0,x=(L=L+X|0)>>>0<X>>>0?x+1|0:x,K=L,s=L=(X=n[I+20>>2])<<1,w=L>>31,a=L=(O=n[I+4>>2])<<1,q=xg(s,w,L,g=L>>31),L=l+x|0,L=(K=K+q|0)>>>0<q>>>0?L+1|0:L,u=x=T=n[I+24>>2],c=x>>31,r=x=(gA=n[I>>2])<<1,q=xg(T,c,x,B=x>>31),x=l+L|0,x=(K=q+K|0)>>>0<q>>>0?x+1|0:x,j=K,L=n[I+32>>2],h=K=o(L,19),Y=L,K=xg(K,f=K>>31,L,G=L>>31),x=l+x|0,x=(L=j+K|0)>>>0<K>>>0?x+1|0:x,j=L,$=n[I+36>>2],e=L=o($,38),C=L>>31,N=I=(K=n[I+28>>2])<<1,q=xg(L,C,I,b=I>>31),I=l+x|0,AA=L=j+q|0,z=L>>>0<q>>>0?I+1|0:I,I=xg(a,g,E,i),x=l,L=xg(D,y,W,H),x=l+x|0,x=(I=L+I|0)>>>0<L>>>0?x+1|0:x,m=X,q=xg(X,k=X>>31,r,B),L=l+x|0,L=(I=q+I|0)>>>0<q>>>0?L+1|0:L,q=xg(h,f,N,b),x=l+L|0,x=(I=q+I|0)>>>0<q>>>0?x+1|0:x,L=xg(e,C,T,c),x=l+x|0,j=I=L+I|0,BA=I>>>0<L>>>0?x+1|0:x,I=xg(a,g,t,Q),L=l,x=(Z=xg(q=Z,p=q>>31,q,p))+I|0,I=l+L|0,I=x>>>0<Z>>>0?I+1|0:I,L=(Z=xg(r,B,E,i))+x|0,x=l+I|0,x=L>>>0<Z>>>0?x+1|0:x,_=I=o(K,38),Z=K,I=(K=xg(I,F=I>>31,K,U=K>>31))+L|0,L=l+x|0,L=I>>>0<K>>>0?L+1|0:L,I=(x=I)+(K=xg(h,f,I=T<<1,I>>31))|0,x=l+L|0,x=I>>>0<K>>>0?x+1|0:x,L=xg(e,C,s,w),x=l+x|0,v=I=L+I|0,d=x=I>>>0<L>>>0?x+1|0:x,I=x,(x=v+33554432|0)>>>0<33554432&&(I=I+1|0),R=x,P=I,x=(x=I>>26)+BA|0,BA=I=(L=(67108863&I)<<6|R>>>26)+j|0,L=I>>>0<L>>>0?x+1|0:x,(I=I+16777216|0)>>>0<16777216&&(L=L+1|0),J=I,x=(x=L>>25)+z|0,x=(I=(L=(33554431&L)<<7|I>>>25)+AA|0)>>>0<L>>>0?x+1|0:x,L=I,I=x,(x=L+33554432|0)>>>0<33554432&&(I=I+1|0),j=x,K=I,I=-67108864&x,n[V+24>>2]=L-I,z=A,I=xg(r,B,q,p),x=l,O=xg(a,g,V=O,IA=V>>31),L=l+x|0,L=(I=O+I|0)>>>0<O>>>0?L+1|0:L,x=I,O=I=o(T,19),I=x+(T=xg(I,AA=I>>31,u,c))|0,x=l+L|0,x=I>>>0<T>>>0?x+1|0:x,L=(T=xg(s,w,_,F))+I|0,I=l+x|0,I=L>>>0<T>>>0?I+1|0:I,M=x=CA<<1,T=xg(h,f,x,S=x>>31),x=l+I|0,x=(L=T+L|0)>>>0<T>>>0?x+1|0:x,I=L,L=xg(e,C,t,Q),x=l+x|0,QA=I=I+L|0,T=I>>>0<L>>>0?x+1|0:x,I=xg(s,w,O,AA),x=l,V=xg(r,B,V,IA),L=l+x|0,L=(I=V+I|0)>>>0<V>>>0?L+1|0:L,V=xg(E,i,_,F),x=l+L|0,x=(I=V+I|0)>>>0<V>>>0?x+1|0:x,L=(V=xg(h,f,t,Q))+I|0,I=l+x|0,I=L>>>0<V>>>0?I+1|0:I,V=xg(e,C,q,p),x=l+I|0,IA=L=V+L|0,V=L>>>0<V>>>0?x+1|0:x,I=xg(I=o(X,38),I>>31,m,k),x=l,X=I,L=xg(I=gA,L=I>>31,I,L),x=l+x|0,x=(I=X+L|0)>>>0<L>>>0?x+1|0:x,X=xg(O,AA,M,S),L=l+x|0,L=(I=X+I|0)>>>0<X>>>0?L+1|0:L,X=xg(t,Q,_,F),x=l+L|0,x=(I=X+I|0)>>>0<X>>>0?x+1|0:x,L=(X=xg(h,f,D,y))+I|0,I=l+x|0,I=L>>>0<X>>>0?I+1|0:I,X=xg(a,g,e,C),x=l+I|0,O=L=X+L|0,AA=x=L>>>0<X>>>0?x+1|0:x,(I=L+33554432|0)>>>0<33554432&&(x=x+1|0),gA=I,CA=x,L=(I=x>>26)+V|0,V=x=(X=(67108863&x)<<6|gA>>>26)+IA|0,x=x>>>0<X>>>0?L+1|0:L,(I=V+16777216|0)>>>0<16777216&&(x=x+1|0),IA=I,X=(33554431&x)<<7|I>>>25,x=(x>>25)+T|0,x=(L=X+QA|0)>>>0<X>>>0?x+1|0:x,(L=(I=L)+33554432|0)>>>0<33554432&&(x=x+1|0),T=L,X=x,x=-67108864&L,n[z+8>>2]=I-x,I=xg(D,y,m,k),x=l,L=xg(E,i,t,Q),x=l+x|0,x=(I=L+I|0)>>>0<L>>>0?x+1|0:x,L=xg(a,g,u,c),x=l+x|0,x=(I=L+I|0)>>>0<L>>>0?x+1|0:x,L=xg(r,B,Z,U),x=l+x|0,x=(I=L+I|0)>>>0<L>>>0?x+1|0:x,L=(QA=xg(e,C,Y,G))+I|0,I=l+x|0,x=K>>26,K=(j=(67108863&K)<<6|j>>>26)+L|0,L=(I=L>>>0<QA>>>0?I+1|0:I)+x|0,x=L=K>>>0<j>>>0?L+1|0:L,(L=(I=K)+16777216|0)>>>0<16777216&&(x=x+1|0),j=L,K=x,x=-33554432&L,n[z+28>>2]=I-x,I=xg(r,B,W,H),L=l,x=(q=xg(a,g,q,p))+I|0,I=l+L|0,I=x>>>0<q>>>0?I+1|0:I,q=xg(u,c,_,F),L=l+I|0,L=(x=q+x|0)>>>0<q>>>0?L+1|0:L,I=(q=xg(h,f,s,w))+x|0,x=l+L|0,x=I>>>0<q>>>0?x+1|0:x,L=xg(e,C,E,i),x=l+x|0,x=(x=(I=L+I|0)>>>0<L>>>0?x+1|0:x)+(L=X>>26)|0,L=I=(X=(67108863&X)<<6|T>>>26)+I|0,I=x=I>>>0<X>>>0?x+1|0:x,(x=L+16777216|0)>>>0<16777216&&(I=I+1|0),T=x,X=I,I=-33554432&x,n[z+12>>2]=L-I,q=A,I=xg(u,c,D,y),x=l,L=xg(E,i,E,i),x=l+x|0,x=(I=L+I|0)>>>0<L>>>0?x+1|0:x,L=xg(t,Q,s,w),x=l+x|0,x=(I=L+I|0)>>>0<L>>>0?x+1|0:x,L=(W=xg(a,g,N,b))+I|0,I=l+x|0,I=L>>>0<W>>>0?I+1|0:I,x=(W=xg(r,B,Y,G))+L|0,L=l+I|0,L=x>>>0<W>>>0?L+1|0:L,I=($=xg(e,C,W=$,z=W>>31))+x|0,x=l+L|0,x=I>>>0<$>>>0?x+1|0:x,L=I,x=(I=K>>25)+x|0,x=(L=L+(K=(33554431&K)<<7|j>>>25)|0)>>>0<K>>>0?x+1|0:x,(L=(I=L)+33554432|0)>>>0<33554432&&(x=x+1|0),$=L,K=x,x=-67108864&L,n[q+32>>2]=I-x,x=X>>25,L=(X=(33554431&X)<<7|T>>>25)+(v-(I=-67108864&R)|0)|0,I=x+(d-((v>>>0<I>>>0)+P|0)|0)|0,x=I=L>>>0<X>>>0?I+1|0:I,(I=L+33554432|0)>>>0<33554432&&(x=x+1|0),X=((67108863&x)<<6|I>>>26)+(BA=BA-(-33554432&J)|0)|0,n[q+20>>2]=X,I&=-67108864,n[A+16>>2]=L-I,X=A,I=xg(t,Q,u,c),L=l,x=(q=xg(m,k,M,S))+I|0,I=l+L|0,I=x>>>0<q>>>0?I+1|0:I,L=(q=xg(D,y,Z,U))+x|0,x=l+I|0,x=L>>>0<q>>>0?x+1|0:x,I=(q=xg(a,g,Y,G))+L|0,L=l+x|0,L=I>>>0<q>>>0?L+1|0:L,q=xg(r,B,W,z),x=l+L|0,L=I=q+I|0,x=(I=I>>>0<q>>>0?x+1|0:x)+(x=K>>26)|0,x=(L=(K=(67108863&K)<<6|$>>>26)+L|0)>>>0<K>>>0?x+1|0:x,K=L,T=L,I=x,(x=L+16777216|0)>>>0<16777216&&(I=I+1|0),L=-33554432&x,n[X+36>>2]=K-L,q=xg((33554431&I)<<7|x>>>25,I>>25,19,0),x=l+(AA-((O>>>0<(L=-67108864&gA)>>>0)+CA|0)|0)|0,L=I=q+(O-L|0)|0,I=I>>>0<q>>>0?x+1|0:x,(x=L+33554432|0)>>>0<33554432&&(I=I+1|0),K=(V-(-33554432&IA)|0)+((67108863&I)<<6|x>>>26)|0,n[A+4>>2]=K,I=A,A=-67108864&x,n[I>>2]=L-A}function v(A){var I=0,g=0,B=0,C=0,Q=0,E=0,i=0,a=0,o=0;A:if(A|=0){Q=(B=A+-8|0)+(A=-8&(g=n[A+-4>>2]))|0;I:if(!(1&g)){if(!(3&g))break A;if((B=B-(g=n[B>>2])|0)>>>0<r[8965])break A;if(A=A+g|0,n[8966]==(0|B)){if(3==(3&(g=n[Q+4>>2])))return n[8963]=A,n[Q+4>>2]=-2&g,n[B+4>>2]=1|A,void(n[A+B>>2]=A)}else{if(g>>>0<=255){if(C=n[B+8>>2],g=g>>>3|0,(0|(I=n[B+12>>2]))==(0|C)){a=35844,o=n[8961]&ng(-2,g),n[a>>2]=o;break I}n[C+12>>2]=I,n[I+8>>2]=C;break I}if(i=n[B+24>>2],(0|B)==(0|(g=n[B+12>>2])))if((I=n[(C=B+20|0)>>2])||(I=n[(C=B+16|0)>>2])){for(;E=C,(I=n[(C=(g=I)+20|0)>>2])||(C=g+16|0,I=n[g+16>>2]););n[E>>2]=0}else g=0;else I=n[B+8>>2],n[I+12>>2]=g,n[g+8>>2]=I;if(!i)break I;C=n[B+28>>2];g:{if(n[(I=36148+(C<<2)|0)>>2]==(0|B)){if(n[I>>2]=g,g)break g;a=35848,o=n[8962]&ng(-2,C),n[a>>2]=o;break I}if(n[i+(n[i+16>>2]==(0|B)?16:20)>>2]=g,!g)break I}if(n[g+24>>2]=i,(I=n[B+16>>2])&&(n[g+16>>2]=I,n[I+24>>2]=g),!(I=n[B+20>>2]))break I;n[g+20>>2]=I,n[I+24>>2]=g}}if(!(Q>>>0<=B>>>0)&&1&(g=n[Q+4>>2])){I:{if(!(2&g)){if(n[8967]==(0|Q)){if(n[8967]=B,A=n[8964]+A|0,n[8964]=A,n[B+4>>2]=1|A,n[8966]!=(0|B))break A;return n[8963]=0,void(n[8966]=0)}if(n[8966]==(0|Q))return n[8966]=B,A=n[8963]+A|0,n[8963]=A,n[B+4>>2]=1|A,void(n[A+B>>2]=A);A=(-8&g)+A|0;g:if(g>>>0<=255){if(g=g>>>3|0,(0|(I=n[Q+8>>2]))==(0|(C=n[Q+12>>2]))){a=35844,o=n[8961]&ng(-2,g),n[a>>2]=o;break g}n[I+12>>2]=C,n[C+8>>2]=I}else{if(i=n[Q+24>>2],(0|Q)==(0|(g=n[Q+12>>2])))if((I=n[(C=Q+20|0)>>2])||(I=n[(C=Q+16|0)>>2])){for(;E=C,(I=n[(C=(g=I)+20|0)>>2])||(C=g+16|0,I=n[g+16>>2]););n[E>>2]=0}else g=0;else I=n[Q+8>>2],n[I+12>>2]=g,n[g+8>>2]=I;if(i){C=n[Q+28>>2];B:{if(n[(I=36148+(C<<2)|0)>>2]==(0|Q)){if(n[I>>2]=g,g)break B;a=35848,o=n[8962]&ng(-2,C),n[a>>2]=o;break g}if(n[i+(n[i+16>>2]==(0|Q)?16:20)>>2]=g,!g)break g}n[g+24>>2]=i,(I=n[Q+16>>2])&&(n[g+16>>2]=I,n[I+24>>2]=g),(I=n[Q+20>>2])&&(n[g+20>>2]=I,n[I+24>>2]=g)}}if(n[B+4>>2]=1|A,n[A+B>>2]=A,n[8966]!=(0|B))break I;return void(n[8963]=A)}n[Q+4>>2]=-2&g,n[B+4>>2]=1|A,n[A+B>>2]=A}if(A>>>0<=255)return g=35884+((A=A>>>3|0)<<3)|0,(I=n[8961])&(A=1<<A)?A=n[g+8>>2]:(n[8961]=A|I,A=g),n[g+8>>2]=B,n[A+12>>2]=B,n[B+12>>2]=g,void(n[B+8>>2]=A);n[B+16>>2]=0,n[B+20>>2]=0,I=0,(C=A>>>8|0)&&(I=31,A>>>0>16777215||(I=(g=C)<<(C=C+1048320>>>16&8),I=28+((I=((I<<=i=I+520192>>>16&4)<<(E=I+245760>>>16&2)>>>15|0)-(E|C|i)|0)<<1|A>>>I+21&1)|0)),n[(Q=B)+28>>2]=I,E=36148+(I<<2)|0;I:{g:{if((C=n[8962])&(g=1<<I)){for(C=A<<(31==(0|I)?0:25-(I>>>1|0)|0),g=n[E>>2];;){if(I=g,(-8&n[g+4>>2])==(0|A))break g;if(g=C>>>29|0,C<<=1,!(g=n[16+(E=I+(4&g)|0)>>2]))break}n[E+16>>2]=B,n[B+24>>2]=I}else n[8962]=g|C,n[E>>2]=B,n[B+24>>2]=E;n[B+12>>2]=B,n[B+8>>2]=B;break I}A=n[I+8>>2],n[A+12>>2]=B,n[I+8>>2]=B,n[B+24>>2]=0,n[B+12>>2]=I,n[B+8>>2]=A}if(A=n[8969]+-1|0,n[8969]=A,!A){for(B=36300;B=(A=n[B>>2])+8|0,A;);n[8969]=-1}}}}function S(A,I){var g=0,B=0,C=0,Q=0,E=0,i=0,a=0,r=0;Q=A+I|0;A:{I:if(!(1&(g=n[A+4>>2]))){if(!(3&g))break A;if(I=(g=n[A>>2])+I|0,(0|(A=A-g|0))==n[8966]){if(3==(3&(g=n[Q+4>>2])))return n[8963]=I,n[Q+4>>2]=-2&g,n[A+4>>2]=1|I,void(n[Q>>2]=I)}else{if(g>>>0<=255){if(C=g>>>3|0,g=n[A+8>>2],(0|(B=n[A+12>>2]))==(0|g)){a=35844,r=n[8961]&ng(-2,C),n[a>>2]=r;break I}n[g+12>>2]=B,n[B+8>>2]=g;break I}if(i=n[A+24>>2],(0|(g=n[A+12>>2]))==(0|A))if((C=n[(B=A+20|0)>>2])||(C=n[(B=A+16|0)>>2])){for(;E=B,(C=n[(B=(g=C)+20|0)>>2])||(B=g+16|0,C=n[g+16>>2]););n[E>>2]=0}else g=0;else B=n[A+8>>2],n[B+12>>2]=g,n[g+8>>2]=B;if(!i)break I;B=n[A+28>>2];g:{if(n[(C=36148+(B<<2)|0)>>2]==(0|A)){if(n[C>>2]=g,g)break g;a=35848,r=n[8962]&ng(-2,B),n[a>>2]=r;break I}if(n[i+(n[i+16>>2]==(0|A)?16:20)>>2]=g,!g)break I}if(n[g+24>>2]=i,(B=n[A+16>>2])&&(n[g+16>>2]=B,n[B+24>>2]=g),!(B=n[A+20>>2]))break I;n[g+20>>2]=B,n[B+24>>2]=g}}I:{if(!(2&(g=n[Q+4>>2]))){if(n[8967]==(0|Q)){if(n[8967]=A,I=n[8964]+I|0,n[8964]=I,n[A+4>>2]=1|I,n[8966]!=(0|A))break A;return n[8963]=0,void(n[8966]=0)}if(n[8966]==(0|Q))return n[8966]=A,I=n[8963]+I|0,n[8963]=I,n[A+4>>2]=1|I,void(n[A+I>>2]=I);I=(-8&g)+I|0;g:if(g>>>0<=255){if(C=g>>>3|0,g=n[Q+8>>2],(0|(B=n[Q+12>>2]))==(0|g)){a=35844,r=n[8961]&ng(-2,C),n[a>>2]=r;break g}n[g+12>>2]=B,n[B+8>>2]=g}else{if(i=n[Q+24>>2],(0|Q)==(0|(g=n[Q+12>>2])))if((C=n[(B=Q+20|0)>>2])||(C=n[(B=Q+16|0)>>2])){for(;E=B,(C=n[(B=(g=C)+20|0)>>2])||(B=g+16|0,C=n[g+16>>2]););n[E>>2]=0}else g=0;else B=n[Q+8>>2],n[B+12>>2]=g,n[g+8>>2]=B;if(i){B=n[Q+28>>2];B:{if(n[(C=36148+(B<<2)|0)>>2]==(0|Q)){if(n[C>>2]=g,g)break B;a=35848,r=n[8962]&ng(-2,B),n[a>>2]=r;break g}if(n[i+(n[i+16>>2]==(0|Q)?16:20)>>2]=g,!g)break g}n[g+24>>2]=i,(B=n[Q+16>>2])&&(n[g+16>>2]=B,n[B+24>>2]=g),(B=n[Q+20>>2])&&(n[g+20>>2]=B,n[B+24>>2]=g)}}if(n[A+4>>2]=1|I,n[A+I>>2]=I,n[8966]!=(0|A))break I;return void(n[8963]=I)}n[Q+4>>2]=-2&g,n[A+4>>2]=1|I,n[A+I>>2]=I}if(I>>>0<=255)return I=35884+((g=I>>>3|0)<<3)|0,(B=n[8961])&(g=1<<g)?g=n[I+8>>2]:(n[8961]=g|B,g=I),n[I+8>>2]=A,n[g+12>>2]=A,n[A+12>>2]=I,void(n[A+8>>2]=g);n[A+16>>2]=0,n[A+20>>2]=0,g=0,(C=I>>>8|0)&&(g=31,I>>>0>16777215||(g=28+((g=((Q=(C<<=E=C+1048320>>>16&8)<<(g=C+520192>>>16&4))<<(C=Q+245760>>>16&2)>>>15|0)-(C|g|E)|0)<<1|I>>>g+21&1)|0)),n[(B=A)+28>>2]=g,C=36148+(g<<2)|0;I:{if((B=n[8962])&(E=1<<g)){for(B=I<<(31==(0|g)?0:25-(g>>>1|0)|0),g=n[C>>2];;){if(C=g,(-8&n[g+4>>2])==(0|I))break I;if(g=B>>>29|0,B<<=1,!(g=n[16+(E=C+(4&g)|0)>>2]))break}n[E+16>>2]=A}else n[8962]=B|E,n[C>>2]=A;return n[A+24>>2]=C,n[A+12>>2]=A,void(n[A+8>>2]=A)}I=n[C+8>>2],n[I+12>>2]=A,n[C+8>>2]=A,n[A+24>>2]=0,n[A+12>>2]=C,n[A+8>>2]=I}}function N(A,I,g,B,C){var Q,i,r,o,e,t,c,f,y,s,w,h,u,p,l,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0,v=0,S=0,N=0,R=0,M=0,d=0,P=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,T=0,W=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0;for(D=Q=D+-64|0,i=n[A+60>>2],r=n[A+56>>2],L=n[A+52>>2],K=n[A+48>>2],o=n[A+44>>2],e=n[A+40>>2],t=n[A+36>>2],c=n[A+32>>2],f=n[A+28>>2],y=n[A+24>>2],s=n[A+20>>2],w=n[A+16>>2],h=n[A+12>>2],u=n[A+8>>2],p=n[A+4>>2],l=n[A>>2];;){if(!C&B>>>0>63|C>>>0>0)_=g;else{if(F=0,_=G=eA(Q,0,64),B|C)for(;E[F+G|0]=a[I+F|0],!C&B>>>0>(F=F+1|0)>>>0|C>>>0>0;);I=_,V=g}for(q=20,m=l,U=p,v=u,S=h,F=w,G=s,g=y,N=f,H=c,Y=t,R=e,M=i,d=r,k=L,P=K,x=o;b=F,m=gB((F=F+m|0)^P,16),P=gB(b^(H=m+H|0),12),b=H,H=gB((H=m)^(m=F+P|0),8),F=gB(P^(J=b+H|0),7),b=G,U=gB((G=G+U|0)^k,16),k=gB(b^(Y=U+Y|0),12),b=Y,Y=gB((Y=U)^(U=G+k|0),8),G=gB(k^(X=b+Y|0),7),k=g,v=gB((g=g+v|0)^d,16),b=d=gB(k^(R=v+R|0),12),d=gB((k=v)^(v=g+d|0),8),g=gB(b^(R=d+R|0),7),k=N,S=gB((N=N+S|0)^M,16),x=k=gB(k^(M=S+x|0),12),b=M,M=gB((M=S)^(S=N+k|0),8),N=gB(x^(k=b+M|0),7),b=R,R=gB((m=G+m|0)^M,16),G=gB((P=b+R|0)^G,12),M=gB(R^(m=G+m|0),8),G=gB(G^(R=P+M|0),7),H=gB((U=g+U|0)^H,16),g=gB((k=H+k|0)^g,12),P=gB(H^(U=g+U|0),8),g=gB(g^(x=k+P|0),7),H=gB((v=N+v|0)^Y,16),N=gB((Y=H+J|0)^N,12),k=gB(H^(v=N+v|0),8),N=gB(N^(H=Y+k|0),7),Y=gB((S=F+S|0)^d,16),F=gB((J=Y+X|0)^F,12),d=gB(Y^(S=F+S|0),8),F=gB(F^(Y=J+d|0),7),q=q+-2|0;);if(q=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,J=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24,X=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24,T=a[I+16|0]|a[I+17|0]<<8|a[I+18|0]<<16|a[I+19|0]<<24,W=a[I+20|0]|a[I+21|0]<<8|a[I+22|0]<<16|a[I+23|0]<<24,j=a[I+24|0]|a[I+25|0]<<8|a[I+26|0]<<16|a[I+27|0]<<24,Z=a[I+28|0]|a[I+29|0]<<8|a[I+30|0]<<16|a[I+31|0]<<24,O=a[I+32|0]|a[I+33|0]<<8|a[I+34|0]<<16|a[I+35|0]<<24,z=a[I+36|0]|a[I+37|0]<<8|a[I+38|0]<<16|a[I+39|0]<<24,$=a[I+40|0]|a[I+41|0]<<8|a[I+42|0]<<16|a[I+43|0]<<24,AA=a[I+44|0]|a[I+45|0]<<8|a[I+46|0]<<16|a[I+47|0]<<24,IA=a[I+48|0]|a[I+49|0]<<8|a[I+50|0]<<16|a[I+51|0]<<24,gA=a[I+52|0]|a[I+53|0]<<8|a[I+54|0]<<16|a[I+55|0]<<24,BA=a[I+56|0]|a[I+57|0]<<8|a[I+58|0]<<16|a[I+59|0]<<24,b=a[I+60|0]|a[I+61|0]<<8|a[I+62|0]<<16|a[I+63|0]<<24,fg(_,m+l^(a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24)),fg(_+4|0,U+p^q),fg(_+8|0,v+u^J),fg(_+12|0,S+h^X),fg(_+16|0,F+w^T),fg(_+20|0,G+s^W),fg(_+24|0,g+y^j),fg(_+28|0,N+f^Z),fg(_+32|0,H+c^O),fg(_+36|0,Y+t^z),fg(_+40|0,$^R+e),fg(_+44|0,AA^x+o),fg(_+48|0,IA^P+K),fg(_+52|0,gA^k+L),fg(_+56|0,BA^d+r),fg(_+60|0,b^M+i),L=((F=K+1|0)>>>0<K>>>0)+L|0,!C&B>>>0<=64|C>>>0<0){if(!(!B|!C&B>>>0>63|C>>>0>0))for(G=0;E[G+V|0]=a[_+G|0],(0|B)!=(0|(G=G+1|0)););n[A+52>>2]=L,n[A+48>>2]=F,D=Q- -64|0;break}I=I- -64|0,g=_- -64|0,C=C+-1|0,(B=B+-64|0)>>>0<4294967232&&(C=C+1|0),K=F}}function R(A,I,g,B){var C=0,Q=0,E=0,i=0,r=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0;if(Q=n[A+36>>2],i=n[A+32>>2],t=n[A+28>>2],E=n[A+24>>2],e=n[A+20>>2],!B&g>>>0>=16|B>>>0>0)for(_=!a[A+80|0]<<24,y=n[A+4>>2],H=o(y,5),u=n[A+8>>2],k=o(u,5),F=n[A+12>>2],G=o(F,5),C=n[A+16>>2],p=o(C,5),Y=C,s=n[A>>2];C=xg(r=((a[I+3|0]|a[I+4|0]<<8|a[I+5|0]<<16|a[I+6|0]<<24)>>>2&67108863)+E|0,0,F,0),E=l,f=xg(e=(67108863&(a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24))+e|0,0,Y,0),E=l+E|0,E=(C=f+C|0)>>>0<f>>>0?E+1|0:E,t=(f=xg(w=((a[I+6|0]|a[I+7|0]<<8|a[I+8|0]<<16|a[I+9|0]<<24)>>>4&67108863)+t|0,0,u,0))+C|0,C=l+E|0,i=xg(h=((a[I+9|0]|a[I+10|0]<<8|a[I+11|0]<<16|a[I+12|0]<<24)>>>6|0)+i|0,0,y,0),C=l+(t>>>0<f>>>0?C+1|0:C)|0,C=(E=i+t|0)>>>0<i>>>0?C+1|0:C,Q=xg(D=((a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24)>>>8|_)+Q|0,0,s,0),C=l+C|0,b=E=Q+E|0,t=E>>>0<Q>>>0?C+1|0:C,C=xg(r,0,u,0),E=l,i=xg(e,0,F,0),Q=l+E|0,Q=(C=i+C|0)>>>0<i>>>0?Q+1|0:Q,i=xg(w,0,y,0),E=l+Q|0,E=(C=i+C|0)>>>0<i>>>0?E+1|0:E,Q=(i=xg(h,0,s,0))+C|0,C=l+E|0,C=Q>>>0<i>>>0?C+1|0:C,E=Q,Q=xg(D,0,p,0),C=l+C|0,m=E=E+Q|0,f=E>>>0<Q>>>0?C+1|0:C,C=xg(r,0,y,0),Q=l,E=(i=xg(e,0,u,0))+C|0,C=l+Q|0,C=E>>>0<i>>>0?C+1|0:C,i=xg(w,0,s,0),Q=l+C|0,Q=(E=i+E|0)>>>0<i>>>0?Q+1|0:Q,C=(i=xg(h,0,p,0))+E|0,E=l+Q|0,E=C>>>0<i>>>0?E+1|0:E,Q=(i=xg(D,0,G,0))+C|0,C=l+E|0,U=Q,i=Q>>>0<i>>>0?C+1|0:C,C=xg(r,0,s,0),Q=l,E=(c=xg(e,0,y,0))+C|0,C=l+Q|0,C=E>>>0<c>>>0?C+1|0:C,Q=xg(w,0,p,0),C=l+C|0,C=(E=Q+E|0)>>>0<Q>>>0?C+1|0:C,c=xg(h,0,G,0),Q=l+C|0,Q=(E=c+E|0)>>>0<c>>>0?Q+1|0:Q,C=(c=xg(D,0,k,0))+E|0,E=l+Q|0,E=C>>>0<c>>>0?E+1|0:E,c=C,C=xg(r,0,p,0),r=l,Q=(e=xg(e,0,s,0))+C|0,C=l+r|0,C=Q>>>0<e>>>0?C+1|0:C,r=xg(w,0,G,0),C=l+C|0,C=(Q=r+Q|0)>>>0<r>>>0?C+1|0:C,r=xg(h,0,k,0),C=l+C|0,C=(Q=r+Q|0)>>>0<r>>>0?C+1|0:C,r=(e=xg(D,0,H,0))+Q|0,Q=l+C|0,(Q=(C=(67108863&(Q=r>>>0<e>>>0?Q+1|0:Q))<<6|(C=r)>>>26)+c|0)>>>0<C>>>0&&(E=E+1|0),e=Q,C=i,(Q=(E=(67108863&E)<<6|Q>>>26)+U|0)>>>0<E>>>0&&(C=C+1|0),i=Q,Q=f,(E=(C=(67108863&C)<<6|i>>>26)+m|0)>>>0<C>>>0&&(Q=Q+1|0),C=E,E=t,(t=(Q=(67108863&Q)<<6|C>>>26)+b|0)>>>0<Q>>>0&&(E=E+1|0),E=(67108863&e)+((r=o((67108863&E)<<6|(Q=t)>>>26,5)+(67108863&r)|0)>>>26|0)|0,t=67108863&i,i=67108863&C,Q&=67108863,e=67108863&r,I=I+16|0,C=B+-1|0,(g=g+-16|0)>>>0<4294967280&&(C=C+1|0),B=C,!C&g>>>0>15|C>>>0>0;);n[A+20>>2]=e,n[A+36>>2]=Q,n[A+32>>2]=i,n[A+28>>2]=t,n[A+24>>2]=E}function M(A,I,g){var B,C,Q,i,n=0,r=0,o=0,e=0,t=0;return D=Q=D-160|0,ig(I,g,32,0),E[0|I]=248&a[0|I],E[I+31|0]=63&a[I+31|0]|64,tA(Q,I),NI(A,Q),r=a[(C=g)+8|0]|a[C+9|0]<<8|a[C+10|0]<<16|a[C+11|0]<<24,n=a[C+12|0]|a[C+13|0]<<8|a[C+14|0]<<16|a[C+15|0]<<24,o=a[C+16|0]|a[C+17|0]<<8|a[C+18|0]<<16|a[C+19|0]<<24,e=a[C+20|0]|a[C+21|0]<<8|a[C+22|0]<<16|a[C+23|0]<<24,t=a[0|C]|a[C+1|0]<<8|a[C+2|0]<<16|a[C+3|0]<<24,g=a[C+4|0]|a[C+5|0]<<8|a[C+6|0]<<16|a[C+7|0]<<24,B=I,i=a[C+28|0]|a[C+29|0]<<8|a[C+30|0]<<16|a[C+31|0]<<24,I=a[C+24|0]|a[C+25|0]<<8|a[C+26|0]<<16|a[C+27|0]<<24,E[B+24|0]=I,E[B+25|0]=I>>>8,E[B+26|0]=I>>>16,E[B+27|0]=I>>>24,E[B+28|0]=i,E[B+29|0]=i>>>8,E[B+30|0]=i>>>16,E[B+31|0]=i>>>24,E[B+16|0]=o,E[B+17|0]=o>>>8,E[B+18|0]=o>>>16,E[B+19|0]=o>>>24,E[B+20|0]=e,E[B+21|0]=e>>>8,E[B+22|0]=e>>>16,E[B+23|0]=e>>>24,E[B+8|0]=r,E[B+9|0]=r>>>8,E[B+10|0]=r>>>16,E[B+11|0]=r>>>24,E[B+12|0]=n,E[B+13|0]=n>>>8,E[B+14|0]=n>>>16,E[B+15|0]=n>>>24,E[0|B]=t,E[B+1|0]=t>>>8,E[B+2|0]=t>>>16,E[B+3|0]=t>>>24,E[B+4|0]=g,E[B+5|0]=g>>>8,E[B+6|0]=g>>>16,E[B+7|0]=g>>>24,o=a[(n=A)+8|0]|a[n+9|0]<<8|a[n+10|0]<<16|a[n+11|0]<<24,e=a[n+12|0]|a[n+13|0]<<8|a[n+14|0]<<16|a[n+15|0]<<24,t=a[n+16|0]|a[n+17|0]<<8|a[n+18|0]<<16|a[n+19|0]<<24,g=a[n+20|0]|a[n+21|0]<<8|a[n+22|0]<<16|a[n+23|0]<<24,I=a[0|n]|a[n+1|0]<<8|a[n+2|0]<<16|a[n+3|0]<<24,A=a[n+4|0]|a[n+5|0]<<8|a[n+6|0]<<16|a[n+7|0]<<24,r=a[n+28|0]|a[n+29|0]<<8|a[n+30|0]<<16|a[n+31|0]<<24,n=a[n+24|0]|a[n+25|0]<<8|a[n+26|0]<<16|a[n+27|0]<<24,E[B+56|0]=n,E[B+57|0]=n>>>8,E[B+58|0]=n>>>16,E[B+59|0]=n>>>24,E[B+60|0]=r,E[B+61|0]=r>>>8,E[B+62|0]=r>>>16,E[B+63|0]=r>>>24,E[B+48|0]=t,E[B+49|0]=t>>>8,E[B+50|0]=t>>>16,E[B+51|0]=t>>>24,E[B+52|0]=g,E[B+53|0]=g>>>8,E[B+54|0]=g>>>16,E[B+55|0]=g>>>24,E[B+40|0]=o,E[B+41|0]=o>>>8,E[B+42|0]=o>>>16,E[B+43|0]=o>>>24,E[B+44|0]=e,E[B+45|0]=e>>>8,E[B+46|0]=e>>>16,E[B+47|0]=e>>>24,E[B+32|0]=I,E[B+33|0]=I>>>8,E[B+34|0]=I>>>16,E[B+35|0]=I>>>24,E[B+36|0]=A,E[B+37|0]=A>>>8,E[B+38|0]=A>>>16,E[B+39|0]=A>>>24,D=Q+160|0,0}function d(A,I){var g,B,C,Q,E,i,a,r,o,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0,F=0,G=0,k=0,_=0;p=t=n[(e=I)+4>>2],D=t>>31,F=t=n[e+8>>2],B=t>>31,h=t=n[e+12>>2],u=t>>31,G=t=n[e+16>>2],C=t>>31,w=t=n[e+20>>2],s=t>>31,k=t=n[e+24>>2],Q=t>>31,E=t=n[e>>2],i=t>>31,f=A,y=t=xg(e=n[e+36>>2],e>>31,121666,0),e=l,(t=t+16777216|0)>>>0<16777216&&(e=e+1|0),g=t,t=e,a=y-(-33554432&g)|0,c=xg(e=n[I+32>>2],e>>31,121666,0),r=l,y=xg(I=n[I+28>>2],I>>31,121666,0),e=l,_=c,(I=y+16777216|0)>>>0<16777216&&(e=e+1|0),o=I,c=I,I=(I=e>>25)+r|0,I=(e=_+(c=(33554431&e)<<7|c>>>25)|0)>>>0<c>>>0?I+1|0:I,c=e,_=f,e=I,(I=c+33554432|0)>>>0<33554432&&(e=e+1|0),f=((67108863&e)<<6|I>>>26)+a|0,n[_+36>>2]=f,I&=-67108864,n[A+32>>2]=c-I,f=y-(-33554432&o)|0,e=xg(k,Q,121666,0),k=l,y=xg(w,s,121666,0),I=l,c=e,(e=y+16777216|0)>>>0<16777216&&(I=I+1|0),w=e,s=e,e=(e=I>>25)+k|0,e=(I=c+(s=(33554431&I)<<7|s>>>25)|0)>>>0<s>>>0?e+1|0:e,(c=I+33554432|0)>>>0<33554432&&(e=e+1|0),f=f+((67108863&e)<<6|c>>>26)|0,n[A+28>>2]=f,e=-67108864&c,n[A+24>>2]=I-e,f=A,w=y-(-33554432&w)|0,I=xg(G,C,121666,0),G=l,y=xg(h,u,121666,0),e=l,c=I,(I=y+16777216|0)>>>0<16777216&&(e=e+1|0),h=I,u=(33554431&e)<<7|I>>>25,e=(e>>25)+G|0,s=f,I=e=(c=c+u|0)>>>0<u>>>0?e+1|0:e,(e=c+33554432|0)>>>0<33554432&&(I=I+1|0),f=((67108863&I)<<6|e>>>26)+w|0,n[s+20>>2]=f,I=-67108864&e,n[A+16>>2]=c-I,f=A,h=y-(-33554432&h)|0,e=xg(F,B,121666,0),F=l,y=xg(p,D,121666,0),I=l,c=e,(e=y+16777216|0)>>>0<16777216&&(I=I+1|0),p=e,D=(33554431&I)<<7|e>>>25,I=(I>>25)+F|0,w=f,e=I=(c=c+D|0)>>>0<D>>>0?I+1|0:I,(I=c+33554432|0)>>>0<33554432&&(e=e+1|0),f=((67108863&e)<<6|I>>>26)+h|0,n[w+12>>2]=f,I&=-67108864,n[A+8>>2]=c-I,I=xg((33554431&t)<<7|g>>>25,t>>25,19,0),e=l,f=y-(-33554432&p)|0,t=xg(E,i,121666,0),e=l+e|0,e=(I=t+I|0)>>>0<t>>>0?e+1|0:e,(t=I+33554432|0)>>>0<33554432&&(e=e+1|0),y=f+((67108863&e)<<6|t>>>26)|0,n[A+4>>2]=y,e=A,A=-67108864&t,n[e>>2]=I-A}function P(A,I,g){var B,C=0,Q=0,i=0;D=B=D+-64|0;A:{if(!(!g|g>>>0>=65)){if(C=-1,!(a[A+80|0]|a[A+81|0]<<8|a[A+82|0]<<16|a[A+83|0]<<24|a[A+84|0]|a[A+85|0]<<8|a[A+86|0]<<16|a[A+87|0]<<24)){if(Q=A,(C=a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24)>>>0>=129){if(wA(A,128),F(A,i=A+96|0),C=(a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24)-128|0,E[A+352|0]=C,E[A+353|0]=C>>>8,E[A+354|0]=C>>>16,E[A+355|0]=C>>>24,C>>>0>=129)break A;j(i,A+224|0,C),C=a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24}wA(Q,C),a[A+356|0]&&(E[A+88|0]=-1,E[A+89|0]=16777215,E[A+90|0]=65535,E[A+91|0]=255,E[A+92|0]=-1,E[A+93|0]=16777215,E[A+94|0]=65535,E[A+95|0]=255),E[A+80|0]=-1,E[A+81|0]=16777215,E[A+82|0]=65535,E[A+83|0]=255,E[A+84|0]=-1,E[A+85|0]=16777215,E[A+86|0]=65535,E[A+87|0]=255,eA((C=A+96|0)+(Q=a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24)|0,0,256-Q|0),F(A,C),LI(B,a[0|A]|a[A+1|0]<<8|a[A+2|0]<<16|a[A+3|0]<<24,a[A+4|0]|a[A+5|0]<<8|a[A+6|0]<<16|a[A+7|0]<<24),LI(8|B,a[A+8|0]|a[A+9|0]<<8|a[A+10|0]<<16|a[A+11|0]<<24,a[A+12|0]|a[A+13|0]<<8|a[A+14|0]<<16|a[A+15|0]<<24),LI(B+16|0,a[A+16|0]|a[A+17|0]<<8|a[A+18|0]<<16|a[A+19|0]<<24,a[A+20|0]|a[A+21|0]<<8|a[A+22|0]<<16|a[A+23|0]<<24),LI(B+24|0,a[A+24|0]|a[A+25|0]<<8|a[A+26|0]<<16|a[A+27|0]<<24,a[A+28|0]|a[A+29|0]<<8|a[A+30|0]<<16|a[A+31|0]<<24),LI(B+32|0,a[A+32|0]|a[A+33|0]<<8|a[A+34|0]<<16|a[A+35|0]<<24,a[A+36|0]|a[A+37|0]<<8|a[A+38|0]<<16|a[A+39|0]<<24),LI(B+40|0,a[A+40|0]|a[A+41|0]<<8|a[A+42|0]<<16|a[A+43|0]<<24,a[A+44|0]|a[A+45|0]<<8|a[A+46|0]<<16|a[A+47|0]<<24),LI(B+48|0,a[A+48|0]|a[A+49|0]<<8|a[A+50|0]<<16|a[A+51|0]<<24,a[A+52|0]|a[A+53|0]<<8|a[A+54|0]<<16|a[A+55|0]<<24),LI(B+56|0,a[A+56|0]|a[A+57|0]<<8|a[A+58|0]<<16|a[A+59|0]<<24,a[A+60|0]|a[A+61|0]<<8|a[A+62|0]<<16|a[A+63|0]<<24),j(I,B,g),KI(A,64),KI(C,256),C=0}return D=B- -64|0,C}Gg(),t()}c(1854,1886,306,1931),t()}function J(A,I){var g,B,C,Q,E,i,r,o,e,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0,F=0,G=0;g=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,p=Cg(I+4|0),t=l,D=Cg(I+7|0),f=l,u=Cg(I+10|0),c=l,B=Cg(I+13|0),h=l,y=a[I+16|0]|a[I+17|0]<<8|a[I+18|0]<<16|a[I+19|0]<<24,C=Cg(I+20|0),F=l,Q=Cg(I+23|0),E=l,i=Cg(I+26|0),r=l,o=Cg(I+29|0),I=c<<3|u>>>29,G=c=u<<3,(c=c+16777216|0)>>>0<16777216&&(I=I+1|0),u=c,c=I,f=I=f<<5|D>>>27,e=w=A,w=s=D<<5,t=I=t<<6|(D=p)>>>26,(I=16777216+(D<<=6)|0)>>>0<16777216&&(t=t+1|0),p=I,s=I,I=(I=t>>25)+f|0,I=(t=w+(s=(33554431&t)<<7|s>>>25)|0)>>>0<s>>>0?I+1|0:I,(f=t+33554432|0)>>>0<33554432&&(I=I+1|0),w=(G-(-33554432&u)|0)+((67108863&I)<<6|f>>>26)|0,n[e+12>>2]=w,I=-67108864&f,n[A+8>>2]=t-I,I=0,(y=(f=y)+16777216|0)>>>0<16777216&&(I=1),w=y,y=I,G=f-(-33554432&w)|0,I=h<<2|(f=B)>>>30,h=f<<2,f=I,I=c>>25,c=(s=h)+(h=(33554431&c)<<7|u>>>25)|0,I=I+f|0,s=t=A,t=I=c>>>0<h>>>0?I+1|0:I,(I=c+33554432|0)>>>0<33554432&&(t=t+1|0),f=((67108863&t)<<6|I>>>26)+G|0,n[s+20>>2]=f,I&=-67108864,n[A+16>>2]=c-I,s=(t=C)<<7,I=(I=F<<7|t>>>25)+(t=y>>25)|0,I=(y=s+(f=(33554431&y)<<7|w>>>25)|0)>>>0<f>>>0?I+1|0:I,y=t=y,(t=t+33554432|0)>>>0<33554432&&(I=I+1|0),f=t,t=I,I=-67108864&f,n[(c=A)+24>>2]=y-I,I=E<<5|(c=Q)>>>27,F=c<<=5,(c=c+16777216|0)>>>0<16777216&&(I=I+1|0),h=c,c=I,t=(F-(-33554432&h)|0)+((67108863&t)<<6|f>>>26)|0,n[(y=A)+28>>2]=t,f=(t=i)<<4,t=I=r<<4|t>>>28,I=(I=c>>25)+t|0,I=(c=(w=f)+(f=(33554431&c)<<7|h>>>25)|0)>>>0<f>>>0?I+1|0:I,c=t=c,(t=t+33554432|0)>>>0<33554432&&(I=I+1|0),f=t,t=I,I=-67108864&f,n[y+32>>2]=c-I,I=0,c=y=(y=o)<<2&33554428,(y=y+16777216|0)>>>0<16777216&&(I=I+1|0),c=(c-(33554432&y)|0)+((67108863&t)<<6|f>>>26)|0,n[A+36>>2]=c,y=xg((33554431&I)<<7|y>>>25,I>>>25|0,19,0),I=l,I=(t=y+g|0)>>>0<y>>>0?I+1|0:I,(c=t+33554432|0)>>>0<33554432&&(I=I+1|0),y=(D-(-33554432&p)|0)+((67108863&I)<<6|c>>>26)|0,n[A+4>>2]=y,I=A,A=-67108864&c,n[I>>2]=t-A}function x(A,I,g,B){var C,Q=0,i=0;D=C=D-16|0,Q=-31;A:{I:{g:{B:switch(B+-1|0){case 1:if(I>>>0<13)break I;B=a[35660]|a[35661]<<8|a[35662]<<16|a[35663]<<24,Q=a[35656]|a[35657]<<8|a[35658]<<16|a[35659]<<24,E[0|A]=Q,E[A+1|0]=Q>>>8,E[A+2|0]=Q>>>16,E[A+3|0]=Q>>>24,E[A+4|0]=B,E[A+5|0]=B>>>8,E[A+6|0]=B>>>16,E[A+7|0]=B>>>24,B=a[35665]|a[35666]<<8|a[35667]<<16|a[35668]<<24,Q=a[35661]|a[35662]<<8|a[35663]<<16|a[35664]<<24,E[A+5|0]=Q,E[A+6|0]=Q>>>8,E[A+7|0]=Q>>>16,E[A+8|0]=Q>>>24,E[A+9|0]=B,E[A+10|0]=B>>>8,E[A+11|0]=B>>>16,E[A+12|0]=B>>>24,i=-12,B=12;break g;case 0:break B;default:break A}if(I>>>0<12)break I;B=a[35673]|a[35674]<<8|a[35675]<<16|a[35676]<<24,Q=a[35669]|a[35670]<<8|a[35671]<<16|a[35672]<<24,E[0|A]=Q,E[A+1|0]=Q>>>8,E[A+2|0]=Q>>>16,E[A+3|0]=Q>>>24,E[A+4|0]=B,E[A+5|0]=B>>>8,E[A+6|0]=B>>>16,E[A+7|0]=B>>>24,B=a[35677]|a[35678]<<8|a[35679]<<16|a[35680]<<24,E[A+8|0]=B,E[A+9|0]=B>>>8,E[A+10|0]=B>>>16,E[A+11|0]=B>>>24,i=-11,B=11}if(Q=DA(g))break A;if(oI(C+5|0,19),!((Q=I+i|0)>>>0<=(I=VA(C+5|0))>>>0)&&(A=j(A+B|0,C+5|0,I+1|0),!((B=Q-I|0)>>>0<4)&&(E[0|(A=A+I|0)]=4025636,E[A+1|0]=15725,E[A+2|0]=61,E[A+3|0]=0,oI(C+5|0,n[g+44>>2]),!((B=B+-3|0)>>>0<=(I=VA(C+5|0))>>>0)&&(A=j(A+3|0,C+5|0,I+1|0),!((B=B-I|0)>>>0<4)&&(E[0|(A=A+I|0)]=4027436,E[A+1|0]=15732,E[A+2|0]=61,E[A+3|0]=0,oI(C+5|0,n[g+40>>2]),!((B=B+-3|0)>>>0<=(I=VA(C+5|0))>>>0)&&(A=j(A+3|0,C+5|0,I+1|0),!((B=B-I|0)>>>0<4)&&(E[0|(A=A+I|0)]=4026412,E[A+1|0]=15728,E[A+2|0]=61,E[A+3|0]=0,oI(C+5|0,n[g+48>>2]),!((B=B+-3|0)>>>0<=(I=VA(C+5|0))>>>0)&&(A=j(A+3|0,C+5|0,I+1|0),!((B=B-I|0)>>>0<2)&&(E[0|(A=A+I|0)]=36,E[A+1|0]=0,AA(A=A+1|0,I=B+-1|0,n[g+16>>2],n[g+20>>2],3)))))))))){if(Q=-31,(B=(B=I)-(I=VA(A))|0)>>>0<2)break A;return E[0|(A=A+I|0)]=36,E[A+1|0]=0,A=AA(A+1|0,B+-1|0,n[g>>2],n[g+4>>2],3),D=C+16|0,A?0:-31}}Q=-31}return D=C+16|0,Q}function L(A,I,g,B){var C,Q=0;C=Q=D,D=Q=Q-576&-64,n[Q+188>>2]=0,fg(Q+188|0,I);A:if(I>>>0<=64){if((0|vI(Q+192|0,0,0,I))<0)break A;if((0|Tg(Q+192|0,Q+188|0,4,0))<0)break A;if((0|Tg(Q+192|0,g,B,0))<0)break A;og(Q+192|0,A,I)}else if(!((0|vI(Q+192|0,0,0,64))<0||(0|Tg(Q+192|0,Q+188|0,4,0))<0||(0|Tg(Q+192|0,g,B,0))<0||(0|og(Q+192|0,Q+112|0,64))<0)){if(g=n[Q+116>>2],B=n[Q+112>>2],E[0|A]=B,E[A+1|0]=B>>>8,E[A+2|0]=B>>>16,E[A+3|0]=B>>>24,E[A+4|0]=g,E[A+5|0]=g>>>8,E[A+6|0]=g>>>16,E[A+7|0]=g>>>24,g=n[Q+124>>2],B=n[Q+120>>2],E[A+8|0]=B,E[A+9|0]=B>>>8,E[A+10|0]=B>>>16,E[A+11|0]=B>>>24,E[A+12|0]=g,E[A+13|0]=g>>>8,E[A+14|0]=g>>>16,E[A+15|0]=g>>>24,g=n[Q+140>>2],B=n[Q+136>>2],E[A+24|0]=B,E[A+25|0]=B>>>8,E[A+26|0]=B>>>16,E[A+27|0]=B>>>24,E[A+28|0]=g,E[A+29|0]=g>>>8,E[A+30|0]=g>>>16,E[A+31|0]=g>>>24,g=n[Q+132>>2],B=n[Q+128>>2],E[A+16|0]=B,E[A+17|0]=B>>>8,E[A+18|0]=B>>>16,E[A+19|0]=B>>>24,E[A+20|0]=g,E[A+21|0]=g>>>8,E[A+22|0]=g>>>16,E[A+23|0]=g>>>24,A=A+32|0,(I=I+-32|0)>>>0>=65)for(;;){if(j(Q+48|0,Q+112|0,64),(0|Ag(Q+112|0,64,Q+48|0,64,0,0,0))<0)break A;if(g=n[Q+116>>2],B=n[Q+112>>2],E[0|A]=B,E[A+1|0]=B>>>8,E[A+2|0]=B>>>16,E[A+3|0]=B>>>24,E[A+4|0]=g,E[A+5|0]=g>>>8,E[A+6|0]=g>>>16,E[A+7|0]=g>>>24,g=n[Q+124>>2],B=n[Q+120>>2],E[A+8|0]=B,E[A+9|0]=B>>>8,E[A+10|0]=B>>>16,E[A+11|0]=B>>>24,E[A+12|0]=g,E[A+13|0]=g>>>8,E[A+14|0]=g>>>16,E[A+15|0]=g>>>24,g=n[Q+140>>2],B=n[Q+136>>2],E[A+24|0]=B,E[A+25|0]=B>>>8,E[A+26|0]=B>>>16,E[A+27|0]=B>>>24,E[A+28|0]=g,E[A+29|0]=g>>>8,E[A+30|0]=g>>>16,E[A+31|0]=g>>>24,g=n[Q+132>>2],B=n[Q+128>>2],E[A+16|0]=B,E[A+17|0]=B>>>8,E[A+18|0]=B>>>16,E[A+19|0]=B>>>24,E[A+20|0]=g,E[A+21|0]=g>>>8,E[A+22|0]=g>>>16,E[A+23|0]=g>>>24,A=A+32|0,!((I=I+-32|0)>>>0>64))break}j(Q+48|0,Q+112|0,64),(0|Ag(Q+112|0,I,Q+48|0,64,0,0,0))<0||j(A,Q+112|0,I)}KI(Q+192|0,384),D=C}function K(A,I,g){var B=0,C=0,Q=0,E=0,i=0,n=0,r=0,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0;for(Q=2036477234,e=857760878,t=1634760805,E=1797285236,o=a[0|g]|a[g+1|0]<<8|a[g+2|0]<<16|a[g+3|0]<<24,B=a[g+4|0]|a[g+5|0]<<8|a[g+6|0]<<16|a[g+7|0]<<24,C=a[g+8|0]|a[g+9|0]<<8|a[g+10|0]<<16|a[g+11|0]<<24,n=a[g+12|0]|a[g+13|0]<<8|a[g+14|0]<<16|a[g+15|0]<<24,f=a[g+16|0]|a[g+17|0]<<8|a[g+18|0]<<16|a[g+19|0]<<24,y=a[g+20|0]|a[g+21|0]<<8|a[g+22|0]<<16|a[g+23|0]<<24,w=a[g+24|0]|a[g+25|0]<<8|a[g+26|0]<<16|a[g+27|0]<<24,h=a[g+28|0]|a[g+29|0]<<8|a[g+30|0]<<16|a[g+31|0]<<24,g=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,c=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,i=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24,I=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24;r=o,t=gB((s=g)^(g=o+t|0),16),r=f=gB(r^(o=t+f|0),12),f=gB((s=t)^(t=g+f|0),8),o=gB(r^(D=f+o|0),7),r=B,e=gB((g=B+e|0)^c,16),r=c=gB(r^(B=e+y|0),12),c=gB((s=e)^(e=g+c|0),8),g=gB(r^(y=c+B|0),7),r=C,B=gB((Q=Q+C|0)^i,16),r=i=gB(r^(C=B+w|0),12),s=gB(B^(i=Q+i|0),8),Q=gB(r^(B=s+C|0),7),E=gB((C=I)^(I=E+n|0),16),n=gB((C=E+h|0)^n,12),I=gB(E^(u=I+n|0),8),E=gB(n^(C=I+C|0),7),r=B,B=gB((B=I)^(I=g+t|0),16),g=gB((n=r+B|0)^g,12),I=gB(B^(t=I+g|0),8),B=gB(g^(w=n+I|0),7),r=C,C=gB((g=Q+e|0)^f,16),Q=gB((n=r+C|0)^Q,12),g=gB(C^(e=g+Q|0),8),C=gB(Q^(h=n+g|0),7),n=gB((Q=E+i|0)^c,16),E=gB((i=n+D|0)^E,12),c=gB(n^(Q=Q+E|0),8),n=gB(E^(f=i+c|0),7),i=gB((E=o+u|0)^s,16),o=gB((y=i+y|0)^o,12),i=gB(i^(E=E+o|0),8),o=gB(o^(y=y+i|0),7),10!=(0|(p=p+1|0)););fg(A,t),fg(A+4|0,e),fg(A+8|0,Q),fg(A+12|0,E),fg(A+16|0,g),fg(A+20|0,c),fg(A+24|0,i),fg(A+28|0,I)}function q(A){var I,g=0,B=0;D=I=D-48|0,g=a[28+(A|=0)|0]|a[A+29|0]<<8|a[A+30|0]<<16|a[A+31|0]<<24,n[I+24>>2]=a[A+24|0]|a[A+25|0]<<8|a[A+26|0]<<16|a[A+27|0]<<24,n[I+28>>2]=g,g=a[A+20|0]|a[A+21|0]<<8|a[A+22|0]<<16|a[A+23|0]<<24,n[I+16>>2]=a[A+16|0]|a[A+17|0]<<8|a[A+18|0]<<16|a[A+19|0]<<24,n[I+20>>2]=g,g=a[A+4|0]|a[A+5|0]<<8|a[A+6|0]<<16|a[A+7|0]<<24,n[I>>2]=a[0|A]|a[A+1|0]<<8|a[A+2|0]<<16|a[A+3|0]<<24,n[I+4>>2]=g,g=a[A+12|0]|a[A+13|0]<<8|a[A+14|0]<<16|a[A+15|0]<<24,n[I+8>>2]=a[A+8|0]|a[A+9|0]<<8|a[A+10|0]<<16|a[A+11|0]<<24,n[I+12>>2]=g,g=a[A+40|0]|a[A+41|0]<<8|a[A+42|0]<<16|a[A+43|0]<<24,n[I+32>>2]=a[A+36|0]|a[A+37|0]<<8|a[A+38|0]<<16|a[A+39|0]<<24,n[I+36>>2]=g,Q[n[8956]](I,I,40,0,A+32|0,0,A),g=n[I+28>>2],B=n[I+24>>2],E[A+24|0]=B,E[A+25|0]=B>>>8,E[A+26|0]=B>>>16,E[A+27|0]=B>>>24,E[A+28|0]=g,E[A+29|0]=g>>>8,E[A+30|0]=g>>>16,E[A+31|0]=g>>>24,g=n[I+20>>2],B=n[I+16>>2],E[A+16|0]=B,E[A+17|0]=B>>>8,E[A+18|0]=B>>>16,E[A+19|0]=B>>>24,E[A+20|0]=g,E[A+21|0]=g>>>8,E[A+22|0]=g>>>16,E[A+23|0]=g>>>24,g=n[I+12>>2],B=n[I+8>>2],E[A+8|0]=B,E[A+9|0]=B>>>8,E[A+10|0]=B>>>16,E[A+11|0]=B>>>24,E[A+12|0]=g,E[A+13|0]=g>>>8,E[A+14|0]=g>>>16,E[A+15|0]=g>>>24,g=n[I+4>>2],B=n[I>>2],E[0|A]=B,E[A+1|0]=B>>>8,E[A+2|0]=B>>>16,E[A+3|0]=B>>>24,E[A+4|0]=g,E[A+5|0]=g>>>8,E[A+6|0]=g>>>16,E[A+7|0]=g>>>24,g=n[I+36>>2],B=n[I+32>>2],E[A+36|0]=B,E[A+37|0]=B>>>8,E[A+38|0]=B>>>16,E[A+39|0]=B>>>24,E[A+40|0]=g,E[A+41|0]=g>>>8,E[A+42|0]=g>>>16,E[A+43|0]=g>>>24,hg(A),D=I+48|0}function X(A,I,g){var B=0,C=0,Q=0,E=0,i=0,n=0,r=0,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0;for(C=2036477234,Q=857760878,E=1634760805,i=1797285236,w=20,o=a[0|g]|a[g+1|0]<<8|a[g+2|0]<<16|a[g+3|0]<<24,s=a[g+4|0]|a[g+5|0]<<8|a[g+6|0]<<16|a[g+7|0]<<24,h=a[g+8|0]|a[g+9|0]<<8|a[g+10|0]<<16|a[g+11|0]<<24,f=a[g+12|0]|a[g+13|0]<<8|a[g+14|0]<<16|a[g+15|0]<<24,e=a[g+16|0]|a[g+17|0]<<8|a[g+18|0]<<16|a[g+19|0]<<24,n=a[g+20|0]|a[g+21|0]<<8|a[g+22|0]<<16|a[g+23|0]<<24,t=a[g+24|0]|a[g+25|0]<<8|a[g+26|0]<<16|a[g+27|0]<<24,c=a[g+28|0]|a[g+29|0]<<8|a[g+30|0]<<16|a[g+31|0]<<24,g=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,r=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,B=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24,I=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24;D=B,B=gB(E+n|0,7)^f,y=D^gB(B+E|0,9),u=gB(B+y|0,13)^n,f=gB(y+u|0,18),I=gB(Q+o|0,7)^I,t=gB(I+Q|0,9)^t,o=gB(I+t|0,13)^o,l=gB(t+o|0,18),c=gB(g+C|0,7)^c,n=gB(c+C|0,9)^s,p=gB(n+c|0,13)^g,F=gB(n+p|0,18),g=gB(i+e|0,7)^h,r=gB(g+i|0,9)^r,e=gB(g+r|0,13)^e,D=gB(r+e|0,18),o=gB((E^=f)+g|0,7)^o,s=gB(o+E|0,9)^n,h=gB(o+s|0,13)^g,E=gB(s+h|0,18)^E,g=gB((Q^=l)+B|0,7)^p,r=gB(g+Q|0,9)^r,f=gB(g+r|0,13)^B,Q=gB(r+f|0,18)^Q,e=gB((C^=F)+I|0,7)^e,B=gB(e+C|0,9)^y,I=gB(B+e|0,13)^I,C=gB(I+B|0,18)^C,n=gB((i^=D)+c|0,7)^u,t=gB(n+i|0,9)^t,c=gB(n+t|0,13)^c,i=gB(t+c|0,18)^i,y=w>>>0>2,w=w+-2|0,y;);return fg(A,E),fg(A+4|0,Q),fg(A+8|0,C),fg(A+12|0,i),fg(A+16|0,g),fg(A+20|0,r),fg(A+24|0,B),fg(A+28|0,I),0}function V(A,I,g,B,C,Q,i){var r,o,e,t,c,f,y,s=0;return D=r=D-560|0,Ng(r+352|0,i),ig(r+288|0,Q,32,0),W(r+352|0,r+320|0,32,0),W(r+352|0,g,B,C),ag(r+352|0,r+224|0),o=a[(s=Q)+32|0]|a[s+33|0]<<8|a[s+34|0]<<16|a[s+35|0]<<24,e=a[s+36|0]|a[s+37|0]<<8|a[s+38|0]<<16|a[s+39|0]<<24,t=a[s+40|0]|a[s+41|0]<<8|a[s+42|0]<<16|a[s+43|0]<<24,c=a[s+44|0]|a[s+45|0]<<8|a[s+46|0]<<16|a[s+47|0]<<24,f=a[s+48|0]|a[s+49|0]<<8|a[s+50|0]<<16|a[s+51|0]<<24,Q=a[s+52|0]|a[s+53|0]<<8|a[s+54|0]<<16|a[s+55|0]<<24,y=a[s+60|0]|a[s+61|0]<<8|a[s+62|0]<<16|a[s+63|0]<<24,s=a[s+56|0]|a[s+57|0]<<8|a[s+58|0]<<16|a[s+59|0]<<24,E[A+56|0]=s,E[A+57|0]=s>>>8,E[A+58|0]=s>>>16,E[A+59|0]=s>>>24,E[A+60|0]=y,E[A+61|0]=y>>>8,E[A+62|0]=y>>>16,E[A+63|0]=y>>>24,E[A+48|0]=f,E[A+49|0]=f>>>8,E[A+50|0]=f>>>16,E[A+51|0]=f>>>24,E[A+52|0]=Q,E[A+53|0]=Q>>>8,E[A+54|0]=Q>>>16,E[A+55|0]=Q>>>24,E[A+40|0]=t,E[A+41|0]=t>>>8,E[A+42|0]=t>>>16,E[A+43|0]=t>>>24,E[A+44|0]=c,E[A+45|0]=c>>>8,E[A+46|0]=c>>>16,E[A+47|0]=c>>>24,E[0|(Q=A+32|0)]=o,E[Q+1|0]=o>>>8,E[Q+2|0]=o>>>16,E[Q+3|0]=o>>>24,E[Q+4|0]=e,E[Q+5|0]=e>>>8,E[Q+6|0]=e>>>16,E[Q+7|0]=e>>>24,k(r+224|0),tA(r,r+224|0),NI(A,r),Ng(r+352|0,i),W(r+352|0,A,64,0),W(r+352|0,g,B,C),ag(r+352|0,r+160|0),k(r+160|0),E[r+288|0]=248&a[r+288|0],E[r+319|0]=63&a[r+319|0]|64,function(A,I,g,B){var C,Q,i,n,r,o,e,t,c,f,y,s,w,h,D,u,p,F,G,k,_,H,Y,b,m,U,v,S,N,R,M,d,P,J,x,L,K,q,X,V,T,W,j,Z,O,z,$,AA,IA,gA=0,BA=0,CA=0,QA=0,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,cA=0,fA=0,yA=0,sA=0,wA=0,hA=0,DA=0,uA=0,pA=0,lA=0,FA=0,GA=0,kA=0,_A=0,HA=0,YA=0,bA=0,mA=0,UA=0,vA=0,SA=0,NA=0,RA=0,MA=0,dA=0,PA=0,JA=0,xA=0,LA=0,KA=0,qA=0,XA=0,VA=0,TA=0,WA=0,jA=0,ZA=0,OA=0,zA=0;JA=Cg(I),FA=a[I+2|0]|a[I+3|0]<<8|a[I+4|0]<<16|a[I+5|0]<<24,WA=Cg(I+5|0),HA=l,sA=a[I+7|0]|a[I+8|0]<<8|a[I+9|0]<<16|a[I+10|0]<<24,wA=a[I+10|0]|a[I+11|0]<<8|a[I+12|0]<<16|a[I+13|0]<<24,mA=Cg(I+13|0),yA=l,eA=a[I+15|0]|a[I+16|0]<<8|a[I+17|0]<<16|a[I+18|0]<<24,qA=Cg(I+18|0),cA=l,YA=Cg(I+21|0),nA=a[I+23|0]|a[I+24|0]<<8|a[I+25|0]<<16|a[I+26|0]<<24,rA=Cg(I+26|0),QA=l,gA=a[I+28|0]|a[I+29|0]<<8|a[I+30|0]<<16|a[I+31|0]<<24,RA=Cg(g),GA=a[(I=g)+2|0]|a[I+3|0]<<8|a[I+4|0]<<16|a[I+5|0]<<24,XA=Cg(I+5|0),oA=l,hA=a[I+7|0]|a[I+8|0]<<8|a[I+9|0]<<16|a[I+10|0]<<24,fA=a[I+10|0]|a[I+11|0]<<8|a[I+12|0]<<16|a[I+13|0]<<24,VA=Cg(I+13|0),tA=l,EA=a[I+15|0]|a[I+16|0]<<8|a[I+17|0]<<16|a[I+18|0]<<24,TA=Cg(I+18|0),CA=l,xA=Cg(I+21|0),BA=a[I+23|0]|a[I+24|0]<<8|a[I+25|0]<<16|a[I+26|0]<<24,iA=Cg(I+26|0),g=l,I=a[I+28|0]|a[I+29|0]<<8|a[I+30|0]<<16|a[I+31|0]<<24,Z=Cg(B),O=a[B+2|0]|a[B+3|0]<<8|a[B+4|0]<<16|a[B+5|0]<<24,z=Cg(B+5|0),$=l,MA=a[B+7|0]|a[B+8|0]<<8|a[B+9|0]<<16|a[B+10|0]<<24,LA=a[B+10|0]|a[B+11|0]<<8|a[B+12|0]<<16|a[B+13|0]<<24,KA=Cg(B+13|0),SA=l,UA=a[B+15|0]|a[B+16|0]<<8|a[B+17|0]<<16|a[B+18|0]<<24,jA=Cg(B+18|0),vA=l,kA=Cg(B+21|0),AA=A,I=xg(C=I>>>7|0,0,Q=2097151&((3&QA)<<30|rA>>>2),0),aA=l,QA=I,I=xg(i=2097151&((3&g)<<30|iA>>>2),0,n=gA>>>7|0,0),gA=l+aA|0,gA=(g=QA+I|0)>>>0<I>>>0?gA+1|0:gA,iA=g,I=xg(Q,0,i,0),QA=l,BA=(g=xg(r=BA>>>5&2097151,0,n,0))+I|0,I=l+QA|0,I=BA>>>0<g>>>0?I+1|0:I,g=BA,BA=xg(C,0,o=nA>>>5&2097151,0),I=l+I|0,aA=QA=g+BA|0,lA=I=QA>>>0<BA>>>0?I+1|0:I,DA=(I=QA)- -1048576|0,uA=BA=lA-((I>>>0<4293918720)+-1|0)|0,I=(g=BA>>21)+gA|0,rA=I=(QA=(BA=(2097151&BA)<<11|DA>>>21)+iA|0)>>>0<BA>>>0?I+1|0:I,_A=(I=BA=QA)- -1048576|0,iA=nA=rA-((I>>>0<4293918720)+-1|0)|0,QA=(I=QA=xg(C,0,n,0))-(nA=-2097152&(dA=I- -1048576|0))|0,I=((NA=l)-((I>>>0<nA>>>0)+(gA=bA=NA-((I>>>0<4293918720)+-1|0)|0)|0)|0)+(g=iA>>21)|0,d=I=(U=QA+((2097151&iA)<<11|_A>>>21)|0)>>>0<QA>>>0?I+1|0:I,nA=xg(U,I,-683901,-1),QA=l,P=g=gA>>21,I=xg(S=(2097151&gA)<<11|dA>>>21,g,136657,0),g=l+QA|0,bA=gA=I+nA|0,nA=gA>>>0<I>>>0?g+1|0:g,I=xg(e=2097151&((1&tA)<<31|VA>>>1),0,Q,0),gA=l,QA=(g=xg(t=fA>>>4&2097151,0,n,0))+I|0,I=l+gA|0,g=(gA=QA)>>>0<g>>>0?I+1|0:I,QA=(I=xg(c=EA>>>6&2097151,0,o,0))+gA|0,gA=l+g|0,gA=QA>>>0<I>>>0?gA+1|0:gA,g=QA,m=I=0,QA=(I=xg(f=2097151&xA,I,y=2097151&((7&cA)<<29|qA>>>3),0))+g|0,g=l+gA|0,g=QA>>>0<I>>>0?g+1|0:g,gA=xg(s=2097151&((7&CA)<<29|TA>>>3),0,w=2097151&YA,0),I=l+g|0,I=(QA=gA+QA|0)>>>0<gA>>>0?I+1|0:I,gA=QA,g=I,I=xg(r,0,h=eA>>>6&2097151,0),g=l+g|0,g=(gA=I+gA|0)>>>0<I>>>0?g+1|0:g,QA=(I=gA)+(gA=xg(i,0,D=2097151&((1&yA)<<31|mA>>>1),0))|0,I=l+g|0,I=QA>>>0<gA>>>0?I+1|0:I,gA=xg(C,0,u=wA>>>4&2097151,0),I=l+I|0,cA=QA=QA+gA|0,QA=QA>>>0<gA>>>0?I+1|0:I,I=xg(Q,0,t,0),g=l,gA=I,I=xg(p=hA>>>7&2097151,0,n,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,CA=(I=gA)+(gA=xg(o,0,e,0))|0,I=l+g|0,I=CA>>>0<gA>>>0?I+1|0:I,g=xg(c,0,w,0),I=l+I|0,I=(gA=g+CA|0)>>>0<g>>>0?I+1|0:I,CA=(g=xg(f,m,h,0))+gA|0,gA=l+I|0,gA=CA>>>0<g>>>0?gA+1|0:gA,I=xg(y,0,s,0),g=l+gA|0,g=(CA=I+CA|0)>>>0<I>>>0?g+1|0:g,I=xg(r,0,D,0),g=l+g|0,g=(gA=I+CA|0)>>>0<I>>>0?g+1|0:g,CA=(I=gA)+(gA=xg(i,0,u,0))|0,I=l+g|0,I=CA>>>0<gA>>>0?I+1|0:I,gA=xg(C,0,F=sA>>>7&2097151,0),I=l+I|0,fA=CA=CA+gA|0,EA=I=CA>>>0<gA>>>0?I+1|0:I,tA=(I=CA)- -1048576|0,CA=gA=EA-((I>>>0<4293918720)+-1|0)|0,I=(g=gA>>21)+QA|0,QA=I=(hA=(gA=(2097151&gA)<<11|tA>>>21)+cA|0)>>>0<gA>>>0?I+1|0:I,g=I+nA|0,(nA=(I=gA=hA)+bA|0)>>>0<I>>>0&&(g=g+1|0),I=nA,nA=QA-((gA>>>0<4293918720)+-1|0)|0,eA=I-(gA=-2097152&(yA=gA- -1048576|0))|0,cA=g-((I>>>0<gA>>>0)+(QA=nA)|0)|0,N=BA-(g=-2097152&_A)|0,J=I=rA-((BA>>>0<g>>>0)+iA|0)|0,gA=xg(S,P,-997805,-1),g=l+EA|0,g=(BA=gA+fA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(U,d,136657,0),g=l+g|0,g=(BA=gA+BA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(N,I,-683901,-1),I=l+g|0,I=(BA=gA+BA|0)>>>0<gA>>>0?I+1|0:I,nA=(gA=BA)-(g=-2097152&tA)|0,EA=I-((gA>>>0<g>>>0)+CA|0)|0,I=xg(Q,0,p,0),g=l,gA=I,I=xg(G=2097151&((3&oA)<<30|XA>>>2),0,n,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,BA=(I=gA)+(gA=xg(o,0,t,0))|0,I=l+g|0,I=BA>>>0<gA>>>0?I+1|0:I,gA=xg(e,0,w,0),g=l+I|0,g=(BA=gA+BA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(c,0,y,0),I=l+g|0,I=(BA=gA+BA|0)>>>0<gA>>>0?I+1|0:I,g=xg(f,m,D,0),gA=l+I|0,gA=(BA=g+BA|0)>>>0<g>>>0?gA+1|0:gA,I=xg(s,0,h,0),g=l+gA|0,g=(BA=I+BA|0)>>>0<I>>>0?g+1|0:g,gA=xg(r,0,u,0),I=l+g|0,I=(BA=gA+BA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(i,0,F,0),g=l+I|0,g=(BA=gA+BA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(C,0,k=2097151&((3&HA)<<30|WA>>>2),0),I=l+g|0,CA=BA=gA+BA|0,BA=BA>>>0<gA>>>0?I+1|0:I,I=xg(Q,0,G,0),g=l,iA=(gA=I)+(I=xg(_=GA>>>5&2097151,0,n,0))|0,gA=l+g|0,gA=iA>>>0<I>>>0?gA+1|0:gA,I=xg(o,0,p,0),g=l+gA|0,g=(iA=I+iA|0)>>>0<I>>>0?g+1|0:g,gA=xg(t,0,w,0),I=l+g|0,I=(iA=gA+iA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(e,0,y,0),g=l+I|0,g=(iA=gA+iA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(c,0,h,0),I=l+g|0,I=(iA=gA+iA|0)>>>0<gA>>>0?I+1|0:I,g=xg(f,m,u,0),gA=l+I|0,gA=(iA=g+iA|0)>>>0<g>>>0?gA+1|0:gA,I=xg(s,0,D,0),g=l+gA|0,g=(iA=I+iA|0)>>>0<I>>>0?g+1|0:g,gA=xg(r,0,F,0),I=l+g|0,I=(iA=gA+iA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(i,0,k,0),g=l+I|0,g=(iA=gA+iA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(C,0,H=FA>>>5&2097151,0),I=l+g|0,hA=iA=gA+iA|0,XA=I=iA>>>0<gA>>>0?I+1|0:I,IA=(I=iA)- -1048576|0,VA=gA=XA-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+BA|0,fA=CA=(gA=(2097151&gA)<<11|IA>>>21)+CA|0,TA=g=CA>>>0<gA>>>0?g+1|0:g,WA=(I=CA)- -1048576|0,xA=gA=g-((I>>>0<4293918720)+-1|0)|0,I=(I=gA>>21)+EA|0,tA=gA=(g=(2097151&gA)<<11|WA>>>21)+nA|0,NA=I=gA>>>0<g>>>0?I+1|0:I,mA=(I=gA)- -1048576|0,bA=gA=NA-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+cA|0,nA=BA=(gA=(2097151&gA)<<11|mA>>>21)+eA|0,_A=g=BA>>>0<gA>>>0?g+1|0:g,FA=gA=g-(((I=BA)>>>0<4293918720)+-1|0)|0,rA=(2097151&gA)<<11|(YA=I- -1048576|0)>>>21,CA=gA>>21,g=xg(Q,0,c,0),I=l,gA=g,g=xg(n,0,e,0),I=l+I|0,I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I,BA=(g=xg(f,m,w,0))+gA|0,gA=l+I|0,gA=BA>>>0<g>>>0?gA+1|0:gA,I=xg(o,0,s,0),g=l+gA|0,g=(BA=I+BA|0)>>>0<I>>>0?g+1|0:g,I=xg(r,0,y,0),g=l+g|0,g=(gA=I+BA|0)>>>0<I>>>0?g+1|0:g,BA=(I=gA)+(gA=xg(i,0,h,0))|0,I=l+g|0,I=BA>>>0<gA>>>0?I+1|0:I,g=xg(C,0,D,0),I=l+I|0,I=(gA=g+BA|0)>>>0<g>>>0?I+1|0:I,BA=gA,EA=gA+(g=xg(S,P,-683901,-1))|0,gA=l+I|0,gA=EA>>>0<g>>>0?gA+1|0:gA,g=EA,EA=I,GA=(I=BA)- -1048576|0,EA=gA-((BA=EA=EA-((I>>>0<4293918720)+-1|0)|0)+((I=g)>>>0<(iA=-2097152&GA)>>>0)|0)|0,I=g=I-iA|0,g=QA>>21,QA=I+(gA=(2097151&QA)<<11|yA>>>21)|0,I=g+EA|0,I=QA>>>0<gA>>>0?I+1|0:I,gA=(g=QA)-(EA=-2097152&(oA=g- -1048576|0))|0,g=(I-((g>>>0<EA>>>0)+(QA=iA=I-((g>>>0<4293918720)+-1|0)|0)|0)|0)+CA|0,x=rA=gA+rA|0,L=g=rA>>>0<gA>>>0?g+1|0:g,iA=xg(rA,g,-683901,-1),EA=l,g=xg(o,0,f,m),I=l,gA=g,g=xg(n,0,c,0),I=l+I|0,I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I,CA=(g=xg(Q,0,s,0))+gA|0,gA=l+I|0,gA=CA>>>0<g>>>0?gA+1|0:gA,I=xg(r,0,w,0),g=l+gA|0,g=(CA=I+CA|0)>>>0<I>>>0?g+1|0:g,gA=xg(i,0,y,0),I=l+g|0,I=(CA=gA+CA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(C,0,h,0),g=l+I|0,I=(I=g=(CA=gA+CA|0)>>>0<gA>>>0?g+1|0:g)+(g=BA>>21)|0,sA=CA=(I=(BA=CA+(gA=(2097151&BA)<<11|GA>>>21)|0)>>>0<gA>>>0?I+1|0:I)-(((g=BA)>>>0<4293918720)+-1|0)|0,gA=g-(BA=-2097152&(PA=g- -1048576|0))|0,g=(QA>>21)+(g=I-((g>>>0<BA>>>0)+CA|0)|0)|0,K=BA=(I=(2097151&QA)<<11|oA>>>21)+gA|0,q=g=BA>>>0<I>>>0?g+1|0:g,g=xg(BA,g,136657,0),I=l+EA|0,qA=gA=g+iA|0,wA=gA>>>0<g>>>0?I+1|0:I,I=xg(w,0,_,0),g=l,gA=I,I=xg(Y=2097151&RA,0,o,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,BA=(I=gA)+(gA=xg(y,0,G,0))|0,I=l+g|0,I=BA>>>0<gA>>>0?I+1|0:I,gA=xg(h,0,p,0),g=l+I|0,g=(BA=gA+BA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(t,0,D,0),I=l+g|0,I=(BA=gA+BA|0)>>>0<gA>>>0?I+1|0:I,g=xg(e,0,u,0),gA=l+I|0,gA=(BA=g+BA|0)>>>0<g>>>0?gA+1|0:gA,I=xg(c,0,F,0),g=l+gA|0,g=(BA=I+BA|0)>>>0<I>>>0?g+1|0:g,gA=xg(f,m,H,0),I=l+g|0,I=(BA=gA+BA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(s,0,k,0),g=l+I|0,g=(BA=gA+BA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(r,0,b=2097151&JA,0),I=l+g|0,gA=(g=BA=gA+BA|0)>>>0<gA>>>0?I+1|0:I,(I=BA+(g=(a[B+23|0]|a[B+24|0]<<8|a[B+25|0]<<16|a[B+26|0]<<24)>>>5&2097151)|0)>>>0<g>>>0&&(gA=gA+1|0),QA=I,BA=gA,g=xg(y,0,_,0),I=l,gA=g,g=xg(w,0,Y,0),I=l+I|0,I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I,CA=(g=gA)+(gA=xg(h,0,G,0))|0,g=l+I|0,g=CA>>>0<gA>>>0?g+1|0:g,gA=xg(D,0,p,0),I=l+g|0,I=(CA=gA+CA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(t,0,u,0),g=l+I|0,g=(CA=gA+CA|0)>>>0<gA>>>0?g+1|0:g,I=xg(e,0,F,0),gA=l+g|0,gA=(CA=I+CA|0)>>>0<I>>>0?gA+1|0:gA,g=xg(c,0,k,0),I=l+gA|0,I=(CA=g+CA|0)>>>0<g>>>0?I+1|0:I,gA=xg(f,m,b,0),g=l+I|0,g=(CA=gA+CA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(s,0,H,0),I=l+g|0,I=(CA=gA+CA|0)>>>0<gA>>>0?I+1|0:I,EA=CA=(gA=2097151&kA)+CA|0,yA=g=CA>>>0<gA>>>0?I+1|0:I,HA=(I=CA)- -1048576|0,eA=gA=g-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+BA|0,oA=g=(CA=QA=(gA=(2097151&gA)<<11|HA>>>21)+QA|0)>>>0<gA>>>0?g+1|0:g,RA=aA-(I=-2097152&DA)|0,kA=lA-((aA>>>0<I>>>0)+uA|0)|0,I=xg(Q,0,r,0),g=l,gA=I,I=xg(n,0,f,m),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,BA=(I=gA)+(gA=xg(i,0,o,0))|0,I=l+g|0,I=BA>>>0<gA>>>0?I+1|0:I,gA=xg(C,0,w,0),g=l+I|0,aA=BA=gA+BA|0,BA=BA>>>0<gA>>>0?g+1|0:g,I=xg(n,0,s,0),g=l,QA=(gA=I)+(I=xg(Q,0,f,m))|0,gA=l+g|0,gA=QA>>>0<I>>>0?gA+1|0:gA,g=xg(o,0,r,0),I=l+gA|0,I=(QA=g+QA|0)>>>0<g>>>0?I+1|0:I,gA=xg(i,0,w,0),g=l+I|0,g=(QA=gA+QA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(C,0,y,0),I=l+g|0,iA=gA=(rA=I=(QA=gA+QA|0)>>>0<gA>>>0?I+1|0:I)-(((I=QA)>>>0<4293918720)+-1|0)|0,I=(2097151&gA)<<11|(lA=I- -1048576|0)>>>21,gA=(gA>>21)+BA|0,aA=gA=(BA=aA=I+aA|0)>>>0<I>>>0?gA+1|0:gA,uA=(I=BA)- -1048576|0,I=(g=(gA=DA=gA-((I>>>0<4293918720)+-1|0)|0)>>21)+kA|0,X=I=(v=RA=(DA=(2097151&gA)<<11|uA>>>21)+RA|0)>>>0<DA>>>0?I+1|0:I,kA=xg(v,I,470296,0),DA=l,R=BA-(g=-2097152&uA)|0,dA=I=aA-((BA>>>0<g>>>0)+gA|0)|0,gA=xg(N,J,666643,0),g=l+DA|0,g=(BA=gA+kA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(R,I,654183,0),I=l+g|0,aA=BA=gA+BA|0,gA=BA>>>0<gA>>>0?I+1|0:I,I=QA-(g=-2097152&lA)|0,g=(sA>>21)+(QA=rA-((QA>>>0<g>>>0)+iA|0)|0)|0,V=iA=(BA=(2097151&sA)<<11|PA>>>21)+I|0,JA=g=iA>>>0<BA>>>0?g+1|0:g,ZA=CA- -1048576|0,BA=I=oA-((CA>>>0<4293918720)+-1|0)|0,g=xg(iA,g,-997805,-1),gA=l+gA|0,g=(gA=(QA=g+aA|0)>>>0<g>>>0?gA+1|0:gA)+oA|0,kA=(CA=QA+CA|0)-(gA=-2097152&ZA)|0,DA=(g=CA>>>0<QA>>>0?g+1|0:g)-((CA>>>0<gA>>>0)+I|0)|0,I=xg(R,dA,470296,0),g=l,gA=I,I=xg(v,X,666643,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,I=xg(iA,JA,654183,0),g=l+g|0,I=(g=(gA=I+gA|0)>>>0<I>>>0?g+1|0:g)+yA|0,oA=(gA=gA+EA|0)-(g=-2097152&HA)|0,EA=(I=gA>>>0<EA>>>0?I+1|0:I)-((gA>>>0<g>>>0)+eA|0)|0,g=xg(h,0,_,0),I=l,gA=g,g=xg(y,0,Y,0),I=l+I|0,I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I,QA=(g=gA)+(gA=xg(D,0,G,0))|0,g=l+I|0,g=QA>>>0<gA>>>0?g+1|0:g,gA=xg(u,0,p,0),I=l+g|0,I=(QA=gA+QA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(t,0,F,0),g=l+I|0,g=(QA=gA+QA|0)>>>0<gA>>>0?g+1|0:g,I=xg(e,0,k,0),gA=l+g|0,gA=(QA=I+QA|0)>>>0<I>>>0?gA+1|0:gA,g=xg(c,0,H,0),I=l+gA|0,I=(QA=g+QA|0)>>>0<g>>>0?I+1|0:I,gA=xg(s,0,b,0),g=l+I|0,I=g=(QA=gA+QA|0)>>>0<gA>>>0?g+1|0:g,(g=QA+(gA=2097151&((7&vA)<<29|jA>>>3))|0)>>>0<gA>>>0&&(I=I+1|0),CA=g,QA=I,I=xg(D,0,_,0),g=l,gA=I,I=xg(h,0,Y,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,I=xg(u,0,G,0),g=l+g|0,g=(gA=I+gA|0)>>>0<I>>>0?g+1|0:g,aA=(I=xg(F,0,p,0))+gA|0,gA=l+g|0,gA=aA>>>0<I>>>0?gA+1|0:gA,g=xg(t,0,k,0),I=l+gA|0,I=(aA=g+aA|0)>>>0<g>>>0?I+1|0:I,g=xg(e,0,H,0),I=l+I|0,I=(gA=g+aA|0)>>>0<g>>>0?I+1|0:I,aA=(g=gA)+(gA=xg(c,0,b,0))|0,g=l+I|0,g=aA>>>0<gA>>>0?g+1|0:g,(I=(gA=UA>>>6&2097151)+aA|0)>>>0<gA>>>0&&(g=g+1|0),lA=I,rA=g,uA=I- -1048576|0,cA=gA=g-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+QA|0,iA=g=(CA=(gA=(2097151&gA)<<11|uA>>>21)+CA|0)>>>0<gA>>>0?g+1|0:g,sA=(I=CA)- -1048576|0,aA=gA=g-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+EA|0,yA=QA=(gA=(2097151&gA)<<11|sA>>>21)+oA|0,EA=g=QA>>>0<gA>>>0?g+1|0:g,eA=(I=QA)- -1048576|0,GA=gA=g-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+DA|0,g=(QA=(gA=(2097151&gA)<<11|eA>>>21)+kA|0)>>>0<gA>>>0?g+1|0:g,gA=QA,QA=g,I=g+wA|0,(oA=(g=gA)+qA|0)>>>0<g>>>0&&(I=I+1|0),g=oA,oA=QA-((gA>>>0<4293918720)+-1|0)|0,zA=g-(gA=-2097152&(OA=gA- -1048576|0))|0,pA=I-((g>>>0<gA>>>0)+(QA=oA)|0)|0,g=xg(K,q,-997805,-1),I=l+EA|0,PA=gA=g+yA|0,oA=gA>>>0<g>>>0?I+1|0:I,g=xg(V,JA,470296,0),I=l,gA=g,g=xg(R,dA,666643,0),I=l+I|0,g=(I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I)+iA|0,sA=(gA=gA+CA|0)-(I=-2097152&sA)|0,wA=(g=gA>>>0<CA>>>0?g+1|0:g)-((gA>>>0<I>>>0)+aA|0)|0,I=xg(V,JA,666643,0),gA=l+rA|0,yA=g=I+lA|0,EA=g>>>0<I>>>0?gA+1|0:gA,g=xg(u,0,_,0),I=l,gA=g,g=xg(D,0,Y,0),I=l+I|0,I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I,CA=(g=gA)+(gA=xg(F,0,G,0))|0,g=l+I|0,g=CA>>>0<gA>>>0?g+1|0:g,gA=xg(k,0,p,0),I=l+g|0,I=(CA=gA+CA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(t,0,H,0),g=l+I|0,g=(CA=gA+CA|0)>>>0<gA>>>0?g+1|0:g,I=xg(e,0,b,0),gA=l+g|0,I=(g=CA=I+CA|0)>>>0<I>>>0?gA+1|0:gA,(g=(gA=2097151&((1&SA)<<31|KA>>>1))+g|0)>>>0<gA>>>0&&(I=I+1|0),aA=g,CA=I,I=xg(F,0,_,0),g=l,gA=I,I=xg(u,0,Y,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,iA=(I=xg(k,0,G,0))+gA|0,gA=l+g|0,gA=iA>>>0<I>>>0?gA+1|0:gA,g=xg(H,0,p,0),I=l+gA|0,I=(iA=g+iA|0)>>>0<g>>>0?I+1|0:I,gA=xg(t,0,b,0),g=l+I|0,I=g=(iA=gA+iA|0)>>>0<gA>>>0?g+1|0:g,(g=iA+(gA=LA>>>4&2097151)|0)>>>0<gA>>>0&&(I=I+1|0),rA=g,HA=I,jA=(I=g)- -1048576|0,LA=gA=HA-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+CA|0,SA=g=(iA=aA=(gA=(2097151&gA)<<11|jA>>>21)+aA|0)>>>0<gA>>>0?g+1|0:g,qA=(I=iA)- -1048576|0,UA=gA=g-((I>>>0<4293918720)+-1|0)|0,I=(I=gA>>21)+EA|0,I=(gA=(g=(2097151&gA)<<11|qA>>>21)+yA|0)>>>0<g>>>0?I+1|0:I,g=gA,vA=(gA=I)-((g>>>0<(I=-2097152&uA)>>>0)+cA|0)|0,RA=(I=aA=g-I|0)- -1048576|0,lA=g=vA-((I>>>0<4293918720)+-1|0)|0,I=(gA=g>>21)+wA|0,kA=CA=(g=(2097151&g)<<11|RA>>>21)+sA|0,uA=I=CA>>>0<g>>>0?I+1|0:I,DA=(I=CA)- -1048576|0,sA=g=uA-((I>>>0<4293918720)+-1|0)|0,M=nA-(I=-2097152&YA)|0,KA=CA=_A-((nA>>>0<I>>>0)+FA|0)|0,I=(2097151&g)<<11|DA>>>21,g=(g>>21)+oA|0,g=(EA=I+PA|0)>>>0<I>>>0?g+1|0:g,nA=(gA=xg(x,L,136657,0))+(EA-(I=-2097152&eA)|0)|0,I=l+(g-((EA>>>0<I>>>0)+GA|0)|0)|0,I=nA>>>0<gA>>>0?I+1|0:I,gA=xg(M,CA,-683901,-1),g=l+I|0,nA=CA=gA+nA|0,wA=g=CA>>>0<gA>>>0?g+1|0:g,YA=(I=CA)- -1048576|0,yA=g=g-((I>>>0<4293918720)+-1|0)|0,I=(gA=g>>21)+pA|0,EA=CA=(g=(2097151&g)<<11|YA>>>21)+zA|0,cA=g=(eA=I=CA>>>0<g>>>0?I+1|0:I)-(((I=CA)>>>0<4293918720)+-1|0)|0,PA=(2097151&g)<<11|(_A=I- -1048576|0)>>>21,GA=g>>21,I=xg(o,0,_,0),g=l,gA=I,I=xg(Q,0,Y,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,I=xg(w,0,G,0),g=l+g|0,g=(gA=I+gA|0)>>>0<I>>>0?g+1|0:g,CA=(I=gA)+(gA=xg(y,0,p,0))|0,I=l+g|0,I=CA>>>0<gA>>>0?I+1|0:I,g=xg(t,0,h,0),I=l+I|0,I=(gA=g+CA|0)>>>0<g>>>0?I+1|0:I,CA=(g=xg(e,0,D,0))+gA|0,gA=l+I|0,gA=CA>>>0<g>>>0?gA+1|0:gA,I=xg(c,0,u,0),g=l+gA|0,g=(CA=I+CA|0)>>>0<I>>>0?g+1|0:g,I=xg(f,m,k,0),g=l+g|0,g=(gA=I+CA|0)>>>0<I>>>0?g+1|0:g,CA=(I=gA)+(gA=xg(s,0,F,0))|0,I=l+g|0,I=CA>>>0<gA>>>0?I+1|0:I,g=xg(r,0,H,0),I=l+I|0,I=(gA=g+CA|0)>>>0<g>>>0?I+1|0:I,CA=(g=xg(i,0,b,0))+gA|0,gA=l+I|0,g=(I=CA)>>>0<g>>>0?gA+1|0:gA,I=Cg(B+26|0),(I=CA+(gA=2097151&((3&(gA=l))<<30|I>>>2))|0)>>>0<gA>>>0&&(g=g+1|0),FA=I,CA=g,I=xg(N,J,470296,0),g=l,gA=I,I=xg(U,d,666643,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,pA=(I=gA)+(gA=xg(v,X,654183,0))|0,I=l+g|0,I=pA>>>0<gA>>>0?I+1|0:I,g=xg(R,dA,-997805,-1),gA=l+I|0,gA=(pA=g+pA|0)>>>0<g>>>0?gA+1|0:gA,g=xg(V,JA,136657,0),I=l+gA|0,g=(I=(pA=g+pA|0)>>>0<g>>>0?I+1|0:I)+CA|0,T=(I=FA)- -1048576|0,CA=oA=CA-((I>>>0<4293918720)+-1|0)|0,g=(g=(pA=(gA=pA)+FA|0)>>>0<gA>>>0?g+1|0:g)+(gA=BA>>21)|0,g=(BA=pA+(I=(2097151&BA)<<11|ZA>>>21)|0)>>>0<I>>>0?g+1|0:g,I=(FA=BA)-(BA=-2097152&T)|0,gA=xg(K,q,-683901,-1),g=(BA=g-((FA>>>0<BA>>>0)+CA|0)|0)+l|0,W=I- -1048576|0,oA=BA-((I>>>0<4293918720)+-1|0)|0,g=(g=(pA=I+gA|0)>>>0<gA>>>0?g+1|0:g)+(gA=QA>>21)|0,g=(oA=(g=(QA=pA+(I=(2097151&QA)<<11|OA>>>21)|0)>>>0<I>>>0?g+1|0:g)-((QA>>>0<(gA=-2097152&W)>>>0)+(BA=oA)|0)|0)+GA|0,(QA=(I=QA-gA|0)+PA|0)>>>0<I>>>0&&(g=g+1|0),j=I- -1048576|0,oA=oA-((I>>>0<4293918720)+-1|0)|0,ZA=(I=gA=QA)-(gA=-2097152&j)|0,OA=g-((I>>>0<gA>>>0)+(QA=oA)|0)|0,zA=EA-(I=-2097152&_A)|0,pA=eA-((EA>>>0<I>>>0)+cA|0)|0,PA=nA-(I=-2097152&YA)|0,YA=wA-((nA>>>0<I>>>0)+yA|0)|0,g=xg(K,q,654183,0),I=l+uA|0,I=(gA=g+kA|0)>>>0<g>>>0?I+1|0:I,nA=(g=xg(x,L,-997805,-1))+((EA=gA)-(gA=-2097152&DA)|0)|0,gA=l+(I-((EA>>>0<gA>>>0)+sA|0)|0)|0,I=xg(M,KA,136657,0),g=l+(nA>>>0<g>>>0?gA+1|0:gA)|0,_A=EA=I+nA|0,nA=EA>>>0<I>>>0?g+1|0:g,FA=tA-(I=-2097152&mA)|0,wA=NA-((tA>>>0<I>>>0)+bA|0)|0,g=xg(U,d,-997805,-1),I=l,gA=g,g=xg(S,P,654183,0),I=l+I|0,I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I,EA=(g=xg(N,J,136657,0))+gA|0,gA=l+I|0,gA=EA>>>0<g>>>0?gA+1|0:gA,I=xg(v,X,-683901,-1),g=l+gA|0,g=(g=(EA=I+EA|0)>>>0<I>>>0?g+1|0:g)+TA|0,g=(I=EA+fA|0)>>>0<fA>>>0?g+1|0:g,yA=(gA=I)-(I=-2097152&WA)|0,eA=g-((gA>>>0<I>>>0)+xA|0)|0,g=xg(U,d,654183,0),I=l,gA=g,g=xg(S,P,470296,0),I=l+I|0,I=(gA=gA+g|0)>>>0<g>>>0?I+1|0:I,EA=(g=gA)+(gA=xg(N,J,-997805,-1))|0,g=l+I|0,g=XA+(EA>>>0<gA>>>0?g+1|0:g)|0,g=(I=EA+hA|0)>>>0<hA>>>0?g+1|0:g,EA=(gA=I)+(I=xg(v,X,136657,0))|0,gA=l+g|0,gA=EA>>>0<I>>>0?gA+1|0:gA,g=xg(R,dA,-683901,-1),I=l+gA|0,I=(EA=g+EA|0)>>>0<g>>>0?I+1|0:I,fA=(gA=EA)-(g=-2097152&IA)|0,tA=I-((gA>>>0<g>>>0)+VA|0)|0,I=xg(Q,0,_,0),g=l,gA=I,I=xg(n,0,Y,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,EA=(I=xg(o,0,G,0))+gA|0,gA=l+g|0,gA=EA>>>0<I>>>0?gA+1|0:gA,g=xg(w,0,p,0),I=l+gA|0,I=(EA=g+EA|0)>>>0<g>>>0?I+1|0:I,gA=xg(t,0,y,0),g=l+I|0,g=(EA=gA+EA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(e,0,h,0),I=l+g|0,I=(EA=gA+EA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(c,0,D,0),g=l+I|0,g=(EA=gA+EA|0)>>>0<gA>>>0?g+1|0:g,I=xg(f,m,F,0),gA=l+g|0,gA=(EA=I+EA|0)>>>0<I>>>0?gA+1|0:gA,g=xg(s,0,u,0),I=l+gA|0,I=(EA=g+EA|0)>>>0<g>>>0?I+1|0:I,gA=xg(r,0,k,0),g=l+I|0,g=(EA=gA+EA|0)>>>0<gA>>>0?g+1|0:g,gA=xg(C,0,b,0),I=l+g|0,I=(EA=gA+EA|0)>>>0<gA>>>0?I+1|0:I,gA=xg(i,0,H,0),g=l+I|0,gA=(I=EA=gA+EA|0)>>>0<gA>>>0?g+1|0:g,(I=(g=(a[B+28|0]|a[B+29|0]<<8|a[B+30|0]<<16|a[B+31|0]<<24)>>>7|0)+I|0)>>>0<g>>>0&&(gA=gA+1|0),g=CA>>21,CA=(B=(2097151&CA)<<11|T>>>21)+I|0,I=g+gA|0,EA=CA,GA=B=(cA=I=CA>>>0<B>>>0?I+1|0:I)-(((I=CA)>>>0<4293918720)+-1|0)|0,g=(g=B>>21)+tA|0,CA=B=(I=(2097151&B)<<11|(uA=I- -1048576|0)>>>21)+fA|0,oA=g=B>>>0<I>>>0?g+1|0:g,sA=(I=B)- -1048576|0,hA=B=g-((I>>>0<4293918720)+-1|0)|0,I=(g=B>>21)+eA|0,I=(gA=(B=(2097151&B)<<11|sA>>>21)+yA|0)>>>0<B>>>0?I+1|0:I,B=gA,tA=gA=(fA=I)-(((I=gA)>>>0<4293918720)+-1|0)|0,g=(g=gA>>21)+wA|0,mA=gA=(I=(2097151&gA)<<11|(eA=I- -1048576|0)>>>21)+FA|0,bA=g=gA>>>0<I>>>0?g+1|0:g,I=xg(gA,g,-683901,-1),gA=l+nA|0,yA=g=I+_A|0,nA=g>>>0<I>>>0?gA+1|0:gA,kA=B-(I=-2097152&eA)|0,_A=tA=fA-((B>>>0<I>>>0)+tA|0)|0,g=xg(K,q,470296,0)+aA|0,I=vA+l|0,I=g>>>0<aA>>>0?I+1|0:I,aA=(B=xg(x,L,654183,0))+((gA=g)-(g=-2097152&RA)|0)|0,g=l+(I-((gA>>>0<g>>>0)+lA|0)|0)|0,g=aA>>>0<B>>>0?g+1|0:g,I=xg(M,KA,-997805,-1),gA=l+g|0,gA=(B=I+aA|0)>>>0<I>>>0?gA+1|0:gA,g=xg(mA,bA,136657,0),I=l+gA|0,I=(B=g+B|0)>>>0<g>>>0?I+1|0:I,g=xg(kA,tA,-683901,-1),I=l+I|0,fA=I=(gA=B=g+B|0)>>>0<g>>>0?I+1|0:I,wA=(I=gA)- -1048576|0,tA=B=fA-((I>>>0<4293918720)+-1|0)|0,I=(g=B>>21)+nA|0,I=(aA=(B=(2097151&B)<<11|wA>>>21)+yA|0)>>>0<B>>>0?I+1|0:I,B=aA,aA=I,eA=(I=B)- -1048576|0,I=(g=(nA=yA=aA-((I>>>0<4293918720)+-1|0)|0)>>21)+YA|0,YA=lA=(yA=(2097151&nA)<<11|eA>>>21)+PA|0,yA=lA>>>0<yA>>>0?I+1|0:I,XA=B-(I=-2097152&eA)|0,VA=aA-((B>>>0<I>>>0)+nA|0)|0,xA=gA-(I=-2097152&wA)|0,NA=fA-((gA>>>0<I>>>0)+tA|0)|0,B=(I=xg(K,q,666643,0))+(iA-(g=-2097152&qA)|0)|0,g=l+(SA-((iA>>>0<g>>>0)+UA|0)|0)|0,g=B>>>0<I>>>0?g+1|0:g,gA=(I=B)+(B=xg(x,L,470296,0))|0,I=l+g|0,I=gA>>>0<B>>>0?I+1|0:I,g=xg(M,KA,654183,0),I=l+I|0,tA=B=g+gA|0,B=B>>>0<g>>>0?I+1|0:I,iA=CA-(I=-2097152&sA)|0,nA=oA-((CA>>>0<I>>>0)+hA|0)|0,I=xg(U,d,470296,0),g=l,gA=I,I=xg(S,P,666643,0),g=l+g|0,g=(gA=gA+I|0)>>>0<I>>>0?g+1|0:g,CA=(I=gA)+(gA=xg(N,J,654183,0))|0,I=l+g|0,I=CA>>>0<gA>>>0?I+1|0:I,g=xg(v,X,-997805,-1),I=l+I|0,I=(gA=g+CA|0)>>>0<g>>>0?I+1|0:I,CA=(g=gA)+(gA=xg(R,dA,136657,0))|0,g=l+I|0,g=CA>>>0<gA>>>0?g+1|0:g,I=xg(V,JA,-683901,-1),gA=l+g|0,g=(gA=(CA=I+CA|0)>>>0<I>>>0?gA+1|0:gA)+cA|0,g=(I=CA+EA|0)>>>0<EA>>>0?g+1|0:g,CA=I,I=I-(gA=-2097152&uA)|0,CA=g-((CA>>>0<gA>>>0)+GA|0)|0,g=BA>>21,BA=(gA=(2097151&BA)<<11|W>>>21)+I|0,I=g+CA|0,aA=BA,hA=gA=(oA=I=BA>>>0<gA>>>0?I+1|0:I)-(((I=BA)>>>0<4293918720)+-1|0)|0,g=(g=gA>>21)+nA|0,DA=gA=(I=(2097151&gA)<<11|(vA=I- -1048576|0)>>>21)+iA|0,FA=g=gA>>>0<I>>>0?g+1|0:g,g=xg(gA,g,-683901,-1),I=l+B|0,I=(gA=g+tA|0)>>>0<g>>>0?I+1|0:I,g=xg(mA,bA,-997805,-1),I=l+I|0,I=(B=g+gA|0)>>>0<g>>>0?I+1|0:I,g=xg(kA,_A,136657,0),gA=l+I|0,iA=B=g+B|0,CA=B>>>0<g>>>0?gA+1|0:gA,I=xg(k,0,_,0),g=l,B=I,I=xg(F,0,Y,0),g=l+g|0,g=(B=B+I|0)>>>0<I>>>0?g+1|0:g,I=xg(H,0,G,0),g=l+g|0,g=(B=I+B|0)>>>0<I>>>0?g+1|0:g,gA=(I=B)+(B=xg(b,0,p,0))|0,I=l+g|0,I=gA>>>0<B>>>0?I+1|0:I,(g=(B=MA>>>7&2097151)+gA|0)>>>0<B>>>0&&(I=I+1|0),EA=g,B=I,I=xg(H,0,_,0),g=l,BA=(gA=I)+(I=xg(k,0,Y,0))|0,gA=l+g|0,gA=BA>>>0<I>>>0?gA+1|0:gA,g=xg(b,0,G,0),I=l+gA|0,g=(gA=BA=g+BA|0)>>>0<g>>>0?I+1|0:I,(I=BA+(gA=2097151&((3&$)<<30|z>>>2))|0)>>>0<gA>>>0&&(g=g+1|0),nA=I,BA=g,UA=I- -1048576|0,eA=g=g-((I>>>0<4293918720)+-1|0)|0,I=B+(gA=g>>>21|0)|0,fA=g=(cA=I=(EA=(g=(2097151&g)<<11|UA>>>21)+EA|0)>>>0<g>>>0?I+1|0:I)-(((I=EA)>>>0<4293918720)+-1|0)|0,I=rA+((2097151&g)<<11|(lA=I- -1048576|0)>>>21)|0,g=HA+(g>>21)|0,g=I>>>0<rA>>>0?g+1|0:g,rA=(B=xg(x,L,666643,0))+((gA=I)-(I=-2097152&jA)|0)|0,I=l+(g-((gA>>>0<I>>>0)+LA|0)|0)|0,I=rA>>>0<B>>>0?I+1|0:I,g=xg(M,KA,470296,0),gA=l+I|0,gA=(B=g+rA|0)>>>0<g>>>0?gA+1|0:gA,I=xg(DA,FA,136657,0),g=l+gA|0,g=(B=I+B|0)>>>0<I>>>0?g+1|0:g,gA=(I=B)+(B=xg(mA,bA,654183,0))|0,I=l+g|0,I=gA>>>0<B>>>0?I+1|0:I,B=xg(kA,_A,-997805,-1),g=l+I|0,uA=gA=B+gA|0,tA=g=gA>>>0<B>>>0?g+1|0:g,sA=(I=gA)- -1048576|0,rA=B=g-((I>>>0<4293918720)+-1|0)|0,gA=(I=B>>21)+CA|0,CA=B=(g=(2097151&B)<<11|sA>>>21)+iA|0,B=gA=B>>>0<g>>>0?gA+1|0:gA,wA=(I=CA)- -1048576|0,iA=gA=gA-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+NA|0,TA=GA=(gA=(2097151&gA)<<11|wA>>>21)+xA|0,GA=GA>>>0<gA>>>0?g+1|0:g,I=aA-(g=-2097152&vA)|0,gA=oA-((aA>>>0<g>>>0)+hA|0)|0,gA=(g=QA>>21)+gA|0,oA=gA=(QA=(aA=I)+(I=(2097151&QA)<<11|j>>>21)|0)>>>0<I>>>0?gA+1|0:gA,hA=gA=gA-(((I=QA)>>>0<4293918720)+-1|0)|0,SA=g=gA>>21,I=xg(MA=(2097151&gA)<<11|(vA=I- -1048576|0)>>>21,g,-683901,-1),g=l+B|0,g=(gA=I+CA|0)>>>0<I>>>0?g+1|0:g,xA=gA-(I=-2097152&wA)|0,NA=g-((gA>>>0<I>>>0)+iA|0)|0,I=xg(MA,SA,136657,0),gA=l+tA|0,gA=(g=I+uA|0)>>>0<I>>>0?gA+1|0:gA,HA=g-(I=-2097152&sA)|0,LA=gA-((g>>>0<I>>>0)+rA|0)|0,B=(g=xg(M,KA,666643,0))+(EA-(I=-2097152&lA)|0)|0,I=l+(cA-((EA>>>0<I>>>0)+fA|0)|0)|0,I=B>>>0<g>>>0?I+1|0:I,g=xg(DA,FA,-997805,-1),I=l+I|0,I=(B=g+B|0)>>>0<g>>>0?I+1|0:I,gA=(g=B)+(B=xg(mA,bA,470296,0))|0,g=l+I|0,g=gA>>>0<B>>>0?g+1|0:g,B=(I=xg(kA,_A,654183,0))+gA|0,gA=l+g|0,cA=B,iA=B>>>0<I>>>0?gA+1|0:gA,CA=BA,I=xg(b,0,_,0),g=l,B=I,I=xg(H,0,Y,0),g=l+g|0,I=g=(B=B+I|0)>>>0<I>>>0?g+1|0:g,(g=(g=B)+(B=O>>>5&2097151)|0)>>>0<B>>>0&&(I=I+1|0),EA=g,B=I,g=2097151&Z,gA=xg(b,0,Y,0)+g|0,I=l,BA=gA,tA=gA=(fA=I=gA>>>0<g>>>0?I+1|0:I)-(((I=gA)>>>0<4293918720)+-1|0)|0,I=(2097151&gA)<<11|(lA=I- -1048576|0)>>>21,gA=(gA>>>21|0)+B|0,rA=gA=(B=EA=I+EA|0)>>>0<I>>>0?gA+1|0:gA,uA=(I=B)- -1048576|0,aA=gA=gA-((I>>>0<4293918720)+-1|0)|0,I=(g=gA>>>21|0)+CA|0,I=(EA=(gA=(2097151&gA)<<11|uA>>>21)+nA|0)>>>0<gA>>>0?I+1|0:I,EA=(g=xg(DA,FA,654183,0))+((CA=EA)-(gA=-2097152&UA)|0)|0,gA=l+(I-((16383&eA)+(CA>>>0<gA>>>0)|0)|0)|0,I=xg(mA,bA,666643,0),g=l+(EA>>>0<g>>>0?gA+1|0:gA)|0,g=(CA=I+EA|0)>>>0<I>>>0?g+1|0:g,gA=xg(kA,_A,470296,0),I=l+g|0,sA=CA=gA+CA|0,EA=gA=(nA=I=CA>>>0<gA>>>0?I+1|0:I)-(((I=CA)>>>0<4293918720)+-1|0)|0,g=(g=gA>>21)+iA|0,eA=gA=(I=(2097151&gA)<<11|(wA=I- -1048576|0)>>>21)+cA|0,CA=g=gA>>>0<I>>>0?g+1|0:g;cA=(I=gA)- -1048576|0,I=(g=(gA=iA=g-((I>>>0<4293918720)+-1|0)|0)>>21)+LA|0,iA=(HA=UA=(iA=(2097151&gA)<<11|cA>>>21)+HA|0)>>>0<iA>>>0?I+1|0:I,g=xg(MA,SA,-997805,-1),I=l+CA|0,I=(eA=g+eA|0)>>>0<g>>>0?I+1|0:I,LA=(CA=eA)-(g=-2097152&cA)|0,UA=I-((CA>>>0<g>>>0)+gA|0)|0,I=xg(MA,SA,654183,0),gA=l+nA|0,gA=(g=I+sA|0)>>>0<I>>>0?gA+1|0:gA,eA=g-(I=-2097152&wA)|0,cA=gA-((g>>>0<I>>>0)+EA|0)|0,gA=(I=xg(DA,FA,470296,0))+(B-(g=-2097152&uA)|0)|0,g=l+(rA-((16383&aA)+(B>>>0<g>>>0)|0)|0)|0,g=gA>>>0<I>>>0?g+1|0:g,I=xg(kA,_A,666643,0),g=l+g|0,EA=B=I+gA|0,CA=B>>>0<I>>>0?g+1|0:g,I=xg(DA,FA,666643,0),gA=l+(fA-((4095&tA)+(BA>>>0<(g=-2097152&lA)>>>0)|0)|0)|0,aA=gA=(B=I+(BA-g|0)|0)>>>0<I>>>0?gA+1|0:gA,fA=(I=B)- -1048576|0,nA=gA=gA-((I>>>0<4293918720)+-1|0)|0,g=(I=gA>>21)+CA|0,tA=BA=(gA=(2097151&gA)<<11|fA>>>21)+EA|0,EA=g=BA>>>0<gA>>>0?g+1|0:g,CA=gA=g-(((I=BA)>>>0<4293918720)+-1|0)|0,g=(2097151&gA)<<11|(rA=I- -1048576|0)>>>21,gA=(gA>>21)+cA|0,cA=BA=g+eA|0,BA=BA>>>0<g>>>0?gA+1|0:gA,I=xg(MA,SA,470296,0),g=l+EA|0,CA=(g=(gA=I+tA|0)>>>0<I>>>0?g+1|0:g)-(((EA=gA)>>>0<(gA=-2097152&rA)>>>0)+CA|0)|0,tA=I=EA-gA|0,I=xg(MA,SA,666643,0),gA=l+(aA-((B>>>0<(g=-2097152&fA)>>>0)+nA|0)|0)|0,nA=EA=I+(B-g|0)|0,B=(2097151&(gA=EA>>>0<I>>>0?gA+1|0:gA))<<11|(I=EA)>>>21,I=(g=gA>>21)+CA|0,CA=gA=tA+B|0,gA=(I=(g=gA)>>>0<B>>>0?I+1|0:I)>>21,I=(2097151&I)<<11|g>>>21,g=gA+BA|0,EA=B=I+cA|0,I=(I=(g=B>>>0<I>>>0?g+1|0:g)>>21)+UA|0,rA=B=(g=(2097151&g)<<11|B>>>21)+LA|0,g=(g=(I=B>>>0<g>>>0?I+1|0:I)>>21)+iA|0,uA=B=(I=(2097151&I)<<11|B>>>21)+HA|0,gA=(I=(g=B>>>0<I>>>0?g+1|0:g)>>21)+NA|0,sA=B=(g=(2097151&g)<<11|B>>>21)+xA|0,B=(2097151&(gA=(I=B)>>>0<g>>>0?gA+1|0:gA))<<11|I>>>21,I=(g=gA>>21)+GA|0,wA=gA=B+TA|0,gA=(I=(g=gA)>>>0<B>>>0?I+1|0:I)>>21,I=(2097151&I)<<11|g>>>21,g=gA+VA|0,eA=B=I+XA|0,I=(I=(g=B>>>0<I>>>0?g+1|0:g)>>21)+yA|0,cA=B=(g=(2097151&g)<<11|B>>>21)+YA|0,g=(g=(I=B>>>0<g>>>0?I+1|0:I)>>21)+pA|0,GA=B=(I=(2097151&I)<<11|B>>>21)+zA|0,gA=(I=(g=B>>>0<I>>>0?g+1|0:g)>>21)+OA|0,fA=B=(g=(2097151&g)<<11|B>>>21)+ZA|0,I=B,g=(oA-((QA>>>0<(B=-2097152&vA)>>>0)+hA|0)|0)+(g=(gA=I>>>0<g>>>0?gA+1|0:gA)>>21)|0,tA=gA=(gA=(2097151&gA)<<11|I>>>21)+(I=QA-B|0)|0,aA=I=(g=gA>>>0<I>>>0?g+1|0:g)>>21,g=xg(hA=(2097151&g)<<11|gA>>>21,I,666643,0),gA=l,nA=g=g+(I=2097151&nA)|0,B=gA=g>>>0<I>>>0?gA+1|0:gA,E[0|AA]=g,E[A+1|0]=(255&gA)<<24|g>>>8,I=2097151&CA,BA=xg(hA,aA,470296,0)+I|0,g=l,g=BA>>>0<I>>>0?g+1|0:g,g=(I=B>>21)+g|0,g=(CA=QA=(gA=BA)+(BA=(2097151&B)<<11|nA>>>21)|0)>>>0<BA>>>0?g+1|0:g,gA=CA,E[A+4|0]=(2047&g)<<21|gA>>>11,I=g,E[A+3|0]=(7&I)<<29|gA>>>3,g=A,BA=2097151&EA,QA=xg(hA,aA,654183,0)+BA|0,gA=l,gA=QA>>>0<BA>>>0?gA+1|0:gA,BA=I,I=(I>>=21)+gA|0,EA=QA=(BA=(2097151&BA)<<11|CA>>>21)+QA|0,gA=I=QA>>>0<BA>>>0?I+1|0:I,E[g+6|0]=(63&I)<<26|QA>>>6,QA=0,I=iA=2097151&CA,E[g+2|0]=31&((65535&B)<<16|nA>>>16)|I<<5,BA=g,I=2097151&rA,B=xg(hA,aA,-997805,-1)+I|0,g=l,g=B>>>0<I>>>0?g+1|0:g,g=(I=gA>>21)+g|0,nA=gA=(CA=B)+(B=(2097151&gA)<<11|EA>>>21)|0,g=gA>>>0<B>>>0?g+1|0:g,E[BA+9|0]=(511&g)<<23|gA>>>9,B=g,I=g,g=gA,E[BA+8|0]=(1&I)<<31|g>>>1,CA=0,g=rA=2097151&EA,E[BA+5|0]=(524287&QA)<<13|iA>>>19|g<<2,g=2097151&uA,gA=xg(hA,aA,136657,0)+g|0,I=l,I=gA>>>0<g>>>0?I+1|0:I,g=B>>21,QA=(B=(2097151&B)<<11|nA>>>21)+gA|0,gA=I+g|0,EA=QA,gA=QA>>>0<B>>>0?gA+1|0:gA,E[BA+12|0]=(4095&gA)<<20|QA>>>12,g=gA,E[BA+11|0]=(15&g)<<28|QA>>>4,QA=0,B=iA=2097151&nA,E[BA+7|0]=(16383&CA)<<18|rA>>>14|B<<7,B=BA,gA=2097151&sA,BA=xg(hA,aA,-683901,-1)+gA|0,I=l,I=BA>>>0<gA>>>0?I+1|0:I,gA=BA,BA=(2097151&g)<<11|EA>>>21,g=(g>>21)+I|0,I=g=(CA=gA+BA|0)>>>0<BA>>>0?g+1|0:g,E[B+14|0]=(127&I)<<25|CA>>>7,BA=0,B=nA=2097151&EA,E[A+10|0]=(131071&QA)<<15|iA>>>17|B<<4,I>>=21,g=(EA=(gA=(2097151&g)<<11|CA>>>21)+(2097151&wA)|0)>>>0<gA>>>0?I+1|0:I,B=EA,E[A+17|0]=(1023&g)<<22|B>>>10,I=g,E[A+16|0]=(3&I)<<30|B>>>2,gA=0,B=aA=2097151&CA,E[A+13|0]=(1048575&BA)<<12|nA>>>20|B<<1,I>>=21,CA=BA=(g=(2097151&g)<<11|EA>>>21)+(2097151&eA)|0,I=BA>>>0<g>>>0?I+1|0:I,B=BA,E[A+20|0]=(8191&I)<<19|B>>>13,g=I,E[A+19|0]=(31&I)<<27|B>>>5,B=nA=2097151&EA,E[A+15|0]=(32767&gA)<<17|aA>>>15|B<<6,gA=I>>=21,EA=aA=(B=(2097151&g)<<11|BA>>>21)+(2097151&cA)|0,E[(BA=A)+21|0]=EA,I=CA,E[BA+18|0]=(262143&QA)<<14|nA>>>18|I<<3,B=EA>>>0<B>>>0?gA+1|0:gA,E[BA+22|0]=(255&B)<<24|EA>>>8,g=gA=(I=B)>>21,QA=CA=(I=(2097151&I)<<11|EA>>>21)+(2097151&GA)|0,g=CA>>>0<I>>>0?g+1|0:g,gA=CA,E[BA+25|0]=(2047&g)<<21|gA>>>11,I=g,E[BA+24|0]=(7&I)<<29|gA>>>3,gA=BA,I>>=21,(BA=(g=(2097151&g)<<11|CA>>>21)+(2097151&fA)|0)>>>0<g>>>0&&(I=I+1|0),g=I,E[gA+27|0]=(63&I)<<26|BA>>>6,gA=0,B=31&((65535&B)<<16|EA>>>16),I=EA=2097151&QA,E[A+23|0]=B|I<<5,QA=(2097151&g)<<11|BA>>>21,g>>=21,g=(nA=QA+(2097151&tA)|0)>>>0<QA>>>0?g+1|0:g,B=QA=nA,E[A+31|0]=(131071&g)<<15|B>>>17,I=g,E[A+30|0]=(511&I)<<23|B>>>9,E[A+29|0]=(1&I)<<31|B>>>1,g=0,BA&=2097151,E[A+26|0]=(524287&gA)<<13|EA>>>19|BA<<2,E[A+28|0]=(16383&g)<<18|BA>>>14|B<<7}(Q,r+160|0,r+288|0,r+224|0),KI(r+288|0,64),KI(r+224|0,64),I&&(n[I>>2]=64,n[I+4>>2]=0),D=r+560|0,0}function T(A,I,g,B){var C;D=C=D-2272|0,uA(C+2016|0,I),uA(C+1760|0,B),zI(C+480|0,g),cg(C+320|0,g),jI(C,C+320|0),tI(C+320|0,C,C+480|0),jI(C+160|0,C+320|0),zI(I=C+640|0,C+160|0),tI(C+320|0,C,I),jI(C+160|0,C+320|0),zI(I=C+800|0,C+160|0),tI(C+320|0,C,I),jI(C+160|0,C+320|0),zI(I=C+960|0,C+160|0),tI(C+320|0,C,I),jI(C+160|0,C+320|0),zI(I=C+1120|0,C+160|0),tI(C+320|0,C,I),jI(C+160|0,C+320|0),zI(I=C+1280|0,C+160|0),tI(C+320|0,C,I),jI(C+160|0,C+320|0),zI(I=C+1440|0,C+160|0),tI(C+320|0,C,I),jI(C+160|0,C+320|0),zI(C+1600|0,C+160|0),iB(A),Vg(A+40|0),Vg(A+80|0),B=255;A:{for(;;){if(!(a[(g=B)+(C+2016|0)|0]|a[(C+1760|0)+g|0])){if(B=g+-1|0,g)continue;break A}break}if(!((0|g)<0))for(;pI(C+320|0,A),(0|(g=E[(I=g)+(C+2016|0)|0]))>=1?(jI(C+160|0,C+320|0),tI(C+320|0,C+160|0,(C+480|0)+o((254&g)>>>1|0,160)|0)):(0|g)>-1||(jI(C+160|0,C+320|0),cI(C+320|0,C+160|0,(C+480|0)+o((0-g&254)>>>1|0,160)|0)),(0|(g=E[I+(C+1760|0)|0]))>=1?(jI(C+160|0,C+320|0),wI(C+320|0,C+160|0,o((254&g)>>>1|0,120)+2272|0)):(0|g)>-1||(jI(C+160|0,C+320|0),sI(C+320|0,C+160|0,o((0-g&254)>>>1|0,120)+2272|0)),Ig(A,C+320|0),g=I+-1|0,(0|I)>0;);}D=C+2272|0}function W(A,I,g,B){var C,Q=0,i=0,r=0,o=0,e=0,t=0,c=0;if(D=C=D-704|0,g|B)if(e=(t=n[(Q=A)+72>>2])+(r=(i=g)<<3)|0,i=(o=n[Q+76>>2])+(B<<3|i>>>29)|0,i=e>>>0<r>>>0?i+1|0:i,n[Q+72>>2]=e,n[Q+76>>2]=i,Q=n[Q+64>>2],r=n[A+68>>2],(0|i)==(0|o)&e>>>0<t>>>0|i>>>0<o>>>0&&((Q=Q+1|0)>>>0<1&&(r=r+1|0),n[(i=A)+64>>2]=Q,n[i+68>>2]=r),(Q=(c=B>>>29|0)+Q|0)>>>0<c>>>0&&(r=r+1|0),n[(i=A)+64>>2]=Q,n[i+68>>2]=r,(0|B)==(0|(r=e=0-(128<(i=127&((7&o)<<29|t>>>3))>>>0)|0))&(Q=o=128-i|0)>>>0<=g>>>0|r>>>0<B>>>0){for(Q=0,r=0;E[80+(A+(c=Q+i|0)|0)|0]=a[I+Q|0],(Q=Q+1|0)>>>0<1&&(r=r+1|0),(0|o)!=(0|Q)|(0|r)!=(0|e););if(G(A,A+80|0,C,r=C+640|0),I=I+o|0,!(B=B-((g>>>0<o>>>0)+e|0)|0)&(g=g-o|0)>>>0>127|B>>>0>0)for(;G(A,I,C,r),I=I+128|0,i=B+-1|0,(g=g+-128|0)>>>0<4294967168&&(i=i+1|0),B=i,!i&g>>>0>127|i>>>0>0;);if(g|B)for(Q=0,r=0;E[80+(A+Q|0)|0]=a[I+Q|0],(i=Q+1|0)>>>0<1&&(r=r+1|0),(0|g)!=(0|(Q=i))|(0|B)!=(0|r););KI(C,704)}else for(Q=g,o=(g=!B&g>>>0>1|B>>>0>0)?Q:1,B=g?B:0,Q=0,r=0;E[80+(A+(t=Q+i|0)|0)|0]=a[I+Q|0],(g=Q+1|0)>>>0<1&&(r=r+1|0),(0|o)!=(0|(Q=g))|(0|B)!=(0|r););return D=C+704|0,0}function j(A,I,g){var B,C=0,Q=0;if(g>>>0>=512)return w(0|A,0|I,0|g),A;B=A+g|0;A:if(3&(A^I))if(B>>>0<4)g=A;else if((C=B+-4|0)>>>0<A>>>0)g=A;else for(g=A;E[0|g]=a[0|I],E[g+1|0]=a[I+1|0],E[g+2|0]=a[I+2|0],E[g+3|0]=a[I+3|0],I=I+4|0,(g=g+4|0)>>>0<=C>>>0;);else{I:if((0|g)<1)g=A;else if(3&A)for(g=A;;){if(E[0|g]=a[0|I],I=I+1|0,(g=g+1|0)>>>0>=B>>>0)break I;if(!(3&g))break}else g=A;if(!((C=-4&B)>>>0<64||g>>>0>(Q=C+-64|0)>>>0))for(;n[g>>2]=n[I>>2],n[g+4>>2]=n[I+4>>2],n[g+8>>2]=n[I+8>>2],n[g+12>>2]=n[I+12>>2],n[g+16>>2]=n[I+16>>2],n[g+20>>2]=n[I+20>>2],n[g+24>>2]=n[I+24>>2],n[g+28>>2]=n[I+28>>2],n[g+32>>2]=n[I+32>>2],n[g+36>>2]=n[I+36>>2],n[g+40>>2]=n[I+40>>2],n[g+44>>2]=n[I+44>>2],n[g+48>>2]=n[I+48>>2],n[g+52>>2]=n[I+52>>2],n[g+56>>2]=n[I+56>>2],n[g+60>>2]=n[I+60>>2],I=I- -64|0,(g=g- -64|0)>>>0<=Q>>>0;);if(g>>>0>=C>>>0)break A;for(;n[g>>2]=n[I>>2],I=I+4|0,(g=g+4|0)>>>0<C>>>0;);}if(g>>>0<B>>>0)for(;E[0|g]=a[0|I],I=I+1|0,(0|B)!=(0|(g=g+1|0)););return A}function Z(A,I,g,B,C,Q,i,a){A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,i|=0,a|=0;var r,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0;D=r=D-16|0,n[r+12>>2]=0,Zg(a);A:{if(B){w=4&a;I:{g:{B:{for(;;){o=c;C:{Q:{for(;;){if(y=E[g+o|0],255!=(0|(t=w?aI(y):rI(y))))break Q;if(!C)break C;if(!bg(C,y))break B;if(!((o=o+1|0)>>>0<B>>>0))break}A=c+1|0,n[r+12>>2]=A>>>0<B>>>0?B:A;break g}if(s=(s<<6)+t|0,(t=e+6|0)>>>0<8)e=t;else{if(e=e+-2|0,f>>>0>=I>>>0){n[r+12>>2]=o,n[8960]=68,o=1;break I}E[A+f|0]=s>>>e,f=f+1|0}if((c=o+1|0)>>>0<B>>>0)continue}break}n[r+12>>2]=c;break g}n[r+12>>2]=o}o=0}if(!(e>>>0<=4)){A=-1;break A}}if(A=-1,!((-1<<e^-1)&s|o)&&(2&a||!(A=function(A,I,g,B,C){var Q=0,i=0,a=0;I:if(C)for(Q=n[g>>2];;){g:{if(Q>>>0>=I>>>0)n[8960]=68;else{if(61==(0|(i=E[A+Q|0]))){C=C+-1|0;break g}if(B&&bg(B,i))break g;n[8960]=28}a=-1;break I}if(Q=Q+1|0,n[g>>2]=Q,!C)break}return a}(g,B,r+12|0,C,e>>>1|0)))){A=0;I:if(C&&!((o=n[r+12>>2])>>>0>=B>>>0)){g:{for(;;){if(!bg(C,E[g+o|0]))break g;if((0|(o=o+1|0))==(0|B))break}n[r+12>>2]=B;break I}n[r+12>>2]=o}h=f}}return I=n[r+12>>2],i?n[i>>2]=I+g:(0|I)!=(0|B)&&(n[8960]=28,A=-1),Q&&(n[Q>>2]=h),D=r+16|0,0|A}function O(A,I){var g;for(D=g=D-192|0,U(g+144|0,I),U(g+96|0,g+144|0),U(g+96|0,g+96|0),H(g+96|0,I,g+96|0),H(g+144|0,g+144|0,g+96|0),U(g+48|0,g+144|0),H(g+96|0,g+96|0,g+48|0),U(g+48|0,g+96|0),I=1;U(g+48|0,g+48|0),5!=(0|(I=I+1|0)););for(H(g+96|0,g+48|0,g+96|0),U(g+48|0,g+96|0),I=1;U(g+48|0,g+48|0),10!=(0|(I=I+1|0)););for(H(g+48|0,g+48|0,g+96|0),U(g,g+48|0),I=1;U(g,g),20!=(0|(I=I+1|0)););for(H(g+48|0,g,g+48|0),U(g+48|0,g+48|0),I=1;U(g+48|0,g+48|0),10!=(0|(I=I+1|0)););for(H(g+96|0,g+48|0,g+96|0),U(g+48|0,g+96|0),I=1;U(g+48|0,g+48|0),50!=(0|(I=I+1|0)););for(H(g+48|0,g+48|0,g+96|0),U(g,g+48|0),I=1;U(g,g),100!=(0|(I=I+1|0)););for(H(g+48|0,g,g+48|0),U(g+48|0,g+48|0),I=1;U(g+48|0,g+48|0),50!=(0|(I=I+1|0)););for(H(g+96|0,g+48|0,g+96|0),U(g+96|0,g+96|0),I=1;U(g+96|0,g+96|0),5!=(0|(I=I+1|0)););H(A,g+96|0,g+144|0),D=g+192|0}function z(A,I,g){var B,C,Q,E=0;D=B=D-16|0,C=n[A+20>>2],n[A+20>>2]=0,Q=n[A+4>>2],n[A+4>>2]=0,E=-26;A:{I:{g:switch(g+-1|0){case 1:if(E=-32,eI(I,35621,9))break A;I=I+9|0;break I;case 0:break g;default:break A}if(E=-32,eI(I,35631,8))break A;I=I+8|0}if(!eI(I,35640,3)&&(I=XA(I+3|0,B+12|0))){if(E=-26,19!=n[B+12>>2])break A;if(!eI(I,35644,3)&&(I=XA(I+3|0,B+12|0))&&(n[A+44>>2]=n[B+12>>2],!eI(I,35648,3)&&(I=XA(I+3|0,B+12|0))&&(n[A+40>>2]=n[B+12>>2],!eI(I,35652,3)&&(I=XA(I+3|0,B+12|0))&&(g=n[B+12>>2],n[A+48>>2]=g,n[A+52>>2]=g,36==(0|(g=a[0|I]))&&(n[B+12>>2]=C,I=36==(0|g)?I+1|0:I,!Z(n[A+16>>2],C,I,VA(I),0,B+12|0,B+8|0,3)&&(n[A+20>>2]=n[B+12>>2],I=n[B+8>>2],36==(0|(g=a[0|I]))&&(n[B+12>>2]=Q,I=36==(0|g)?I+1|0:I,!Z(n[A>>2],Q,I,VA(I),0,B+12|0,B+8|0,3)))))))){if(n[A+4>>2]=n[B+12>>2],I=n[B+8>>2],E=DA(A))break A;return D=B+16|0,a[0|I]?-32:0}}E=-32}return D=B+16|0,E}function $(A,I){var g,B,C,Q,i,a,r=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0;(r=c=n[A+60>>2])|(e=n[A+56>>2])&&(c=e,E[(y=e+A|0)- -64|0]=1,(e=e+1|0)>>>0<1&&(r=r+1|0),!r&e>>>0<=15|r>>>0<0&&eA(y+65|0,0,15-c|0),E[A+80|0]=1,R(A,A- -64|0,16,0)),a=n[A+52>>2],u=n[A+48>>2],s=n[A+44>>2],r=n[A+24>>2],c=n[A+28>>2]+(r>>>26|0)|0,t=n[A+32>>2]+(c>>>26|0)|0,h=(c=(D=(-67108864|(g=n[A+36>>2]+(t>>>26|0)|0))+((Q=(B=67108863&t)+((C=(f=67108863&c)+((t=(r=(67108863&r)+((D=n[A+20>>2]+o(g>>>26|0,5)|0)>>>26|0)|0)+((y=5+(e=67108863&D)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)>>31)&r|(w=t)&(t=67108863&(i=(D>>>31|0)-1|0)),w=I,r=0,(e=(y=e&c|t&y|h<<26)+n[A+40>>2]|0)>>>0<y>>>0&&(r=1),fg(w,e),e=0,(f=(w=s)+(h=(s=c&f|t&C)<<20|h>>>6)|0)>>>0<h>>>0&&(e=1),w=f,f=r,h=w+r|0,r=e,r=h>>>0<f>>>0?r+1|0:r,fg(y=I+4|0,h),e=0,(s=(f=u)+(t=(u=c&B|t&Q)<<14|s>>>12)|0)>>>0<t>>>0&&(e=1),f=s,s=r,t=f+r|0,r=e,r=t>>>0<s>>>0?r+1|0:r,fg(w=I+8|0,t),fg(e=I+12|0,r=r+(c=(I=(D&i|c&g)<<8|u>>>18)+a|0)|0),KI(A,88)}function AA(A,I,g,B,C){A|=0,I|=0,g|=0,B|=0;var Q=0,i=0,n=0,r=0,e=0,f=0,y=0,s=0,w=0,h=0;Zg(C|=0),i=(Q=(B>>>0)/3|0)<<2,(Q=o(Q,-3)+B|0)&&(i=2&C?(2|i)+(Q>>>1|0)|0:i+4|0);A:{I:{s=i;g:{B:{if(i>>>0<I>>>0){if(!(4&C)){if(n=0,!B)break g;C=0,Q=0;break B}if(n=0,!B)break g;for(C=0,Q=0;;){for(e=a[g+r|0]|e<<8,C=C+8|0;f=Q,y=C,w=A+Q|0,h=bI(e>>>(C=C+-6|0)&63),E[0|w]=h,Q=Q+1|0,C>>>0>5;);if((0|(r=r+1|0))==(0|B))break}if(n=Q,!C)break g;w=A+Q|0,h=bI(e<<12-y&63),E[0|w]=h,n=f+2|0;break g}Gg(),t()}for(;;){for(e=a[g+r|0]|e<<8,C=C+8|0;f=Q,y=C,w=A+Q|0,h=mI(e>>>(C=C+-6|0)&63),E[0|w]=h,Q=Q+1|0,C>>>0>5;);if((0|(r=r+1|0))==(0|B))break}n=Q,C&&(w=A+Q|0,h=mI(e<<12-y&63),E[0|w]=h,n=f+2|0)}if(s>>>0>=(Q=n)>>>0){if(i>>>0>Q>>>0)break I;i=Q;break A}c(35568,35587,230,35603),t()}eA(A+Q|0,61,i-Q|0)}return eA(A+i|0,0,((g=i+1|0)>>>0<I>>>0?I:g)-i|0),0|A}function IA(A,I,g,B){var C=0,Q=0,i=0,r=0,o=0,e=0;A:{if((Q=n[A+56>>2])|(C=n[A+60>>2])){if(e=A,o=r=16-Q|0,o=(r=(0|B)==(0|(i=0-((16<Q>>>0)+C|0)|0))&r>>>0>g>>>0|i>>>0>B>>>0)?g:o,r=i=r?B:i,i|o){if(E[(A+Q|0)- -64|0]=a[0|I],C=1,Q=0,1!=(0|o)|r)for(;i=C+n[A+56>>2]|0,E[(A+i|0)- -64|0]=a[I+C|0],(C=C+1|0)>>>0<1&&(Q=Q+1|0),(0|o)!=(0|C)|(0|Q)!=(0|r););C=n[A+60>>2],i=n[A+56>>2]}else i=Q;if(Q=C+r|0,(i=(C=o)+i|0)>>>0<C>>>0&&(Q=Q+1|0),C=i,n[e+56>>2]=C,n[e+60>>2]=Q,!Q&C>>>0<16|Q>>>0<0)break A;R(A,A- -64|0,16,0),n[A+56>>2]=0,n[A+60>>2]=0,g=(Q=g)-(C=o)|0,B=B-((Q>>>0<C>>>0)+r|0)|0,I=I+C|0}if(!B&g>>>0>=16|B>>>0>0&&(R(A,I,Q=-16&g,B),g&=15,B=0,I=I+Q|0),g|B){for(C=0,Q=0;e=C+n[A+56>>2]|0,E[(A+e|0)- -64|0]=a[I+C|0],(C=C+1|0)>>>0<1&&(Q=Q+1|0),(0|g)!=(0|C)|(0|B)!=(0|Q););I=A,i=A,B=B+n[A+60>>2]|0,(A=g+n[A+56>>2]|0)>>>0<g>>>0&&(B=B+1|0),n[i+56>>2]=A,n[I+60>>2]=B}}}function gA(A,I,g){var B,C=0;B=C=D,D=C=C-448&-64,!A|!I||(vI(C- -64|0,0,0,64),fg(C+60|0,n[I+48>>2]),Tg(C- -64|0,C+60|0,4,0),fg(C+60|0,n[I+4>>2]),Tg(C- -64|0,C+60|0,4,0),fg(C+60|0,n[I+44>>2]),Tg(C- -64|0,C+60|0,4,0),fg(C+60|0,n[I+40>>2]),Tg(C- -64|0,C+60|0,4,0),fg(C+60|0,19),Tg(C- -64|0,C+60|0,4,0),fg(C+60|0,g),Tg(C- -64|0,C+60|0,4,0),fg(C+60|0,n[I+12>>2]),Tg(C- -64|0,C+60|0,4,0),(g=n[I+8>>2])&&(Tg(C- -64|0,g,n[I+12>>2],0),1&E[I+56|0]&&(KI(n[I+8>>2],n[I+12>>2]),n[I+12>>2]=0)),fg(C+60|0,n[I+20>>2]),Tg(C- -64|0,C+60|0,4,0),(g=n[I+16>>2])&&Tg(C- -64|0,g,n[I+20>>2],0),fg(C+60|0,n[I+28>>2]),Tg(C- -64|0,C+60|0,4,0),(g=n[I+24>>2])&&(Tg(C- -64|0,g,n[I+28>>2],0),2&a[I+56|0]&&(KI(n[I+24>>2],n[I+28>>2]),n[I+28>>2]=0)),fg(C+60|0,n[I+36>>2]),Tg(C- -64|0,C+60|0,4,0),(g=n[I+32>>2])&&Tg(C- -64|0,g,n[I+36>>2],0),og(C- -64|0,A,64)),D=B}function BA(A,I,g,B,C,Q,i,r,o,e){var c,f=0,y=0,s=0,w=0,h=0;D=c=D-352|0,g&&(n[g>>2]=0,n[g+4>>2]=0),B&&(E[0|B]=255),h=-1;A:{if(!(!i&Q>>>0<17|i>>>0<0)){if(f=i+-1|0,(y=Q+-17|0)>>>0<4294967279&&(f=f+1|0),s=y,y=f,!f&s>>>0>=4294967279|f>>>0>0)break A;IB(c+32|0,64,w=A+32|0,A),Og(c+96|0,c+32|0),KI(c+32|0,64),Lg(c+96|0,r,o,e),Lg(c+96|0,35712,0-o&15,0),eA(c+32|0,0,64),E[c+32|0]=a[0|C],uI(c+32|0,c+32|0,64,0,w,1,A),r=a[c+32|0],E[c+32|0]=a[0|C],Lg(c+96|0,c+32|0,64,0),Lg(c+96|0,C=C+1|0,s,y),Lg(c+96|0,35712,15&(f=Q+-1|0),0),LI(c+24|0,o,e),Lg(c+96|0,c+24|0,8,0),f=i,(Q=Q+47|0)>>>0<47&&(f=f+1|0),LI(o=c+24|0,Q,f),Lg(c+96|0,c+24|0,8,0),zg(c+96|0,c),KI(c+96|0,256),hI(c,C+s|0,16)?KI(c,16):(uI(I,C,s,y,w,2,A),ZI(A+36|0,c),VI(w),(2&r||RI(w,4))&&q(A),g&&(n[g>>2]=s,n[g+4>>2]=y),h=0,B&&(E[0|B]=r))}return D=c+352|0,h}Gg(),t()}function CA(A,I){var g,B=0;for(D=g=D-1760|0,zI(g+480|0,I),cg(g+320|0,I),jI(g,g+320|0),tI(g+320|0,g,g+480|0),jI(g+160|0,g+320|0),zI(I=g+640|0,g+160|0),tI(g+320|0,g,I),jI(g+160|0,g+320|0),zI(I=g+800|0,g+160|0),tI(g+320|0,g,I),jI(g+160|0,g+320|0),zI(I=g+960|0,g+160|0),tI(g+320|0,g,I),jI(g+160|0,g+320|0),zI(I=g+1120|0,g+160|0),tI(g+320|0,g,I),jI(g+160|0,g+320|0),zI(I=g+1280|0,g+160|0),tI(g+320|0,g,I),jI(g+160|0,g+320|0),zI(I=g+1440|0,g+160|0),tI(g+320|0,g,I),jI(g+160|0,g+320|0),zI(g+1600|0,g+160|0),kg(A),I=252;cg(g+320|0,A),B=I,(0|(I=E[I+34208|0]))>=1?(jI(g+160|0,g+320|0),tI(g+320|0,g+160|0,(g+480|0)+o((254&I)>>>1|0,160)|0)):(0|I)>-1||(jI(g+160|0,g+320|0),cI(g+320|0,g+160|0,(g+480|0)+o((0-I&254)>>>1|0,160)|0)),jI(A,g+320|0),I=B+-1|0,B;);D=g+1760|0}function QA(A,I,g){var B,C,Q,E,i,a,r,o,e,t,c,f,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0;B=n[I+4>>2],C=n[A+4>>2],Q=n[I+8>>2],s=n[A+8>>2],E=n[I+12>>2],w=n[A+12>>2],i=n[I+16>>2],h=n[A+16>>2],a=n[I+20>>2],D=n[A+20>>2],r=n[I+24>>2],u=n[A+24>>2],o=n[I+28>>2],p=n[A+28>>2],e=n[I+32>>2],l=n[A+32>>2],t=n[I+36>>2],F=n[A+36>>2],f=(g=0-g|0)&((c=n[I>>2])^(y=n[A>>2])),n[A>>2]=f^y,y=F,F=g&(F^t),n[A+36>>2]=y^F,y=l,l=g&(l^e),n[A+32>>2]=y^l,y=p,p=g&(p^o),n[A+28>>2]=y^p,y=u,u=g&(u^r),n[A+24>>2]=y^u,y=D,D=g&(D^a),n[A+20>>2]=y^D,y=h,h=g&(h^i),n[A+16>>2]=y^h,y=w,w=g&(w^E),n[A+12>>2]=y^w,y=s,s=g&(s^Q),n[A+8>>2]=y^s,y=A,A=g&(B^C),n[y+4>>2]=A^C,n[I+36>>2]=F^t,n[I+32>>2]=l^e,n[I+28>>2]=p^o,n[I+24>>2]=u^r,n[I+20>>2]=D^a,n[I+16>>2]=h^i,n[I+12>>2]=w^E,n[I+8>>2]=s^Q,n[I+4>>2]=A^B,n[I>>2]=c^f}function EA(A,I){var g=0,B=0,C=0,Q=0,E=0,i=0,e=0,t=0,c=0,f=0;A:if(A&&(2!=n[A+36>>2]||(B=n[I>>2],a[I+8|0]<2&&!B)?(function(A,I,g){var B,C=0,Q=0,E=0;if(D=B=D-4096|0,EB(B+3072|0),EB(B+2048|0),!(!A|!I)&&(n[B+2048>>2]=n[I>>2],n[B+2052>>2]=0,n[B+2056>>2]=n[I+4>>2],n[B+2060>>2]=0,n[B+2064>>2]=a[I+8|0],n[B+2068>>2]=0,n[B+2072>>2]=n[A+16>>2],n[B+2076>>2]=0,n[B+2080>>2]=n[A+8>>2],n[B+2084>>2]=0,n[B+2088>>2]=n[A+36>>2],n[B+2092>>2]=0,n[A+20>>2]))for(I=0;(E=127&I)||(C=n[B+2100>>2],(Q=n[B+2096>>2]+1|0)>>>0<1&&(C=C+1|0),n[B+2096>>2]=Q,n[B+2100>>2]=C,EB(B),EB(B+1024|0),b(B+3072|0,B+2048|0,B),b(B+3072|0,B,B+1024|0)),E=n[4+(Q=(B+1024|0)+(E<<3)|0)>>2],n[(C=(I<<3)+g|0)>>2]=n[Q>>2],n[C+4>>2]=E,(I=I+1|0)>>>0<r[A+20>>2];);D=B+4096|0}(A,I,c=n[A+4>>2]),B=n[I>>2],f=0):(c=n[A+4>>2],f=1),!((Q=!((i=B)|(B=a[I+8|0]))<<1)>>>0>=(g=n[A+20>>2])>>>0)))for(C=n[A+24>>2],g=(B=(o(C,n[I+4>>2])+Q|0)+o(g,B)|0)+((B>>>0)%(C>>>0)|0?-1:C+-1|0)|0;;){if(C=1==((B>>>0)%(C>>>0)|0)?B+-1|0:g,g=f?n[n[A>>2]+4>>2]+(C<<10)|0:(Q<<3)+c|0,E=n[g+4>>2],e=n[g>>2],g=n[A+28>>2],n[I+12>>2]=Q,g=(E>>>0)%(g>>>0)|0,E=n[I+4>>2],i=t=a[I+8|0]?g:E,i=(t=n[I>>2])?g:i,g=n[n[A>>2]+4>>2],E=((o(i,n[A+24>>2])<<10)+g|0)+(YA(A,I,e,!0&(0|E)==(0|i))<<10)|0,e=g+(C<<10)|0,g=g+(B<<10)|0,t?b(e,E,g):m(e,E,g),(Q=Q+1|0)>>>0>=r[A+20>>2])break A;B=B+1|0,g=C+1|0,C=n[A+24>>2]}}function iA(A,I,g,B,C){var Q,i=0;return D=Q=D-96|0,i=-1,Yg(Q+32|0,Q)||(OI(Q- -64|0,Q+32|0,C),i=$I(A+32|0,I,g,B,Q- -64|0,C,Q),I=n[Q+60>>2],g=n[Q+56>>2],E[A+24|0]=g,E[A+25|0]=g>>>8,E[A+26|0]=g>>>16,E[A+27|0]=g>>>24,E[A+28|0]=I,E[A+29|0]=I>>>8,E[A+30|0]=I>>>16,E[A+31|0]=I>>>24,I=n[Q+52>>2],g=n[Q+48>>2],E[A+16|0]=g,E[A+17|0]=g>>>8,E[A+18|0]=g>>>16,E[A+19|0]=g>>>24,E[A+20|0]=I,E[A+21|0]=I>>>8,E[A+22|0]=I>>>16,E[A+23|0]=I>>>24,I=n[Q+44>>2],g=n[Q+40>>2],E[A+8|0]=g,E[A+9|0]=g>>>8,E[A+10|0]=g>>>16,E[A+11|0]=g>>>24,E[A+12|0]=I,E[A+13|0]=I>>>8,E[A+14|0]=I>>>16,E[A+15|0]=I>>>24,I=n[Q+36>>2],g=n[Q+32>>2],E[0|A]=g,E[A+1|0]=g>>>8,E[A+2|0]=g>>>16,E[A+3|0]=g>>>24,E[A+4|0]=I,E[A+5|0]=I>>>8,E[A+6|0]=I>>>16,E[A+7|0]=I>>>24,KI(Q,32),KI(Q+32|0,32),KI(Q- -64|0,24)),D=Q+96|0,i}function nA(A,I){var g;n[A>>2]=67108863&(a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24),n[A+4>>2]=(a[I+3|0]|a[I+4|0]<<8|a[I+5|0]<<16|a[I+6|0]<<24)>>>2&67108611,n[A+8>>2]=(a[I+6|0]|a[I+7|0]<<8|a[I+8|0]<<16|a[I+9|0]<<24)>>>4&67092735,n[A+12>>2]=(a[I+9|0]|a[I+10|0]<<8|a[I+11|0]<<16|a[I+12|0]<<24)>>>6&66076671,g=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24,n[A+20>>2]=0,n[A+24>>2]=0,n[A+28>>2]=0,n[A+32>>2]=0,n[A+36>>2]=0,n[A+16>>2]=g>>>8&1048575,n[A+40>>2]=a[I+16|0]|a[I+17|0]<<8|a[I+18|0]<<16|a[I+19|0]<<24,n[A+44>>2]=a[I+20|0]|a[I+21|0]<<8|a[I+22|0]<<16|a[I+23|0]<<24,n[A+48>>2]=a[I+24|0]|a[I+25|0]<<8|a[I+26|0]<<16|a[I+27|0]<<24,I=a[I+28|0]|a[I+29|0]<<8|a[I+30|0]<<16|a[I+31|0]<<24,E[A+80|0]=0,n[A+56>>2]=0,n[A+60>>2]=0,n[A+52>>2]=I}function aA(A,I,g){var B=0;A:if((0|A)!=(0|I)){if((I-A|0)-g>>>0<=0-(g<<1)>>>0)return j(A,I,g);if(B=3&(A^I),A>>>0<I>>>0){if(B)B=A;else{if(3&A)for(B=A;;){if(!g)break A;if(E[0|B]=a[0|I],I=I+1|0,g=g+-1|0,!(3&(B=B+1|0)))break}else B=A;if(!(g>>>0<=3))for(;n[B>>2]=n[I>>2],I=I+4|0,B=B+4|0,(g=g+-4|0)>>>0>3;);}if(g)for(;E[0|B]=a[0|I],B=B+1|0,I=I+1|0,g=g+-1|0;);}else{if(!B){if(A+g&3)for(;;){if(!g)break A;if(E[0|(B=(g=g+-1|0)+A|0)]=a[I+g|0],!(3&B))break}if(!(g>>>0<=3))for(;n[(g=g+-4|0)+A>>2]=n[I+g>>2],g>>>0>3;);}if(!g)break A;for(;E[(g=g+-1|0)+A|0]=a[I+g|0],g;);}}return A}function rA(A,I,g,B){var C=0,Q=0,i=0,n=0,r=0,o=0;A:if(g|B)for(o=A+224|0,i=A+96|0,C=a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24;;){if(n=96+(A+C|0)|0,r=Q=256-C|0,!B&g>>>0<=Q>>>0|B>>>0<0){j(n,I,g),I=g+(a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24)|0,E[A+352|0]=I,E[A+353|0]=I>>>8,E[A+354|0]=I>>>16,E[A+355|0]=I>>>24;break A}if(j(n,I,Q),C=(a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24)+Q|0,E[A+352|0]=C,E[A+353|0]=C>>>8,E[A+354|0]=C>>>16,E[A+355|0]=C>>>24,wA(A,128),F(A,i),j(i,o,128),C=(a[A+352|0]|a[A+353|0]<<8|a[A+354|0]<<16|a[A+355|0]<<24)-128|0,E[A+352|0]=C,E[A+353|0]=C>>>8,E[A+354|0]=C>>>16,E[A+355|0]=C>>>24,I=I+Q|0,!((g=(Q=g)-r|0)|(B=B-(Q>>>0<r>>>0)|0)))break}return 0}function oA(A,I){var g,B=0;D=g=D-48|0,function(A,I){var g,B,C,Q,E,i,a,r,e=0;B=n[I+28>>2],C=n[I+24>>2],Q=n[I+20>>2],E=n[I+16>>2],i=n[I+12>>2],a=n[I+8>>2],r=n[I+4>>2],e=n[I>>2],g=n[I+36>>2],I=n[I+32>>2],e=o(((B+(C+(Q+(E+(i+(a+(r+(e+(o(g,19)+16777216>>>25|0)>>26)>>25)>>26)>>25)>>26)>>25)>>26)>>25)+I>>26)+g>>25,19)+e|0,n[A>>2]=67108863&e,e=r+(e>>26)|0,n[A+4>>2]=33554431&e,e=a+(e>>25)|0,n[A+8>>2]=67108863&e,e=i+(e>>26)|0,n[A+12>>2]=33554431&e,e=E+(e>>25)|0,n[A+16>>2]=67108863&e,e=Q+(e>>26)|0,n[A+20>>2]=33554431&e,e=C+(e>>25)|0,n[A+24>>2]=67108863&e,e=B+(e>>26)|0,n[A+28>>2]=33554431&e,I=I+(e>>25)|0,n[A+32>>2]=67108863&I,n[A+36>>2]=g+(I>>26)&33554431}(g,I),I=n[g>>2],E[0|A]=I,E[A+2|0]=I>>>16,E[A+1|0]=I>>>8,B=n[g+4>>2],E[A+5|0]=B>>>14,E[A+4|0]=B>>>6,E[A+3|0]=B<<2|I>>>24,I=n[g+8>>2],E[A+8|0]=I>>>13,E[A+7|0]=I>>>5,E[A+6|0]=I<<3|B>>>22,B=n[g+12>>2],E[A+11|0]=B>>>11,E[A+10|0]=B>>>3,E[A+9|0]=B<<5|I>>>21,I=n[g+16>>2],E[A+15|0]=I>>>18,E[A+14|0]=I>>>10,E[A+13|0]=I>>>2,E[A+12|0]=I<<6|B>>>19,I=n[g+20>>2],E[A+16|0]=I,E[A+18|0]=I>>>16,E[A+17|0]=I>>>8,B=n[g+24>>2],E[A+21|0]=B>>>15,E[A+20|0]=B>>>7,E[A+19|0]=B<<1|I>>>24,I=n[g+28>>2],E[A+24|0]=I>>>13,E[A+23|0]=I>>>5,E[A+22|0]=I<<3|B>>>23,B=n[g+32>>2],E[A+27|0]=B>>>12,E[A+26|0]=B>>>4,E[A+25|0]=B<<4|I>>>21,I=n[g+36>>2],E[A+31|0]=I>>>18,E[A+30|0]=I>>>10,E[A+29|0]=I>>>2,E[A+28|0]=I<<6|B>>>20,D=g+48|0}function eA(A,I,g){var B=0,C=0,Q=0,i=0;if(g&&(E[(B=A+g|0)-1|0]=I,E[0|A]=I,!(g>>>0<3||(E[B+-2|0]=I,E[A+1|0]=I,E[B+-3|0]=I,E[A+2|0]=I,g>>>0<7||(E[B+-4|0]=I,E[A+3|0]=I,g>>>0<9||(C=(B=0-A&3)+A|0,I=o(255&I,16843009),n[C>>2]=I,n[(B=(g=g-B&-4)+C|0)-4>>2]=I,g>>>0<9||(n[C+8>>2]=I,n[C+4>>2]=I,n[B+-8>>2]=I,n[B+-12>>2]=I,g>>>0<25||(n[C+24>>2]=I,n[C+20>>2]=I,n[C+16>>2]=I,n[C+12>>2]=I,n[B+-16>>2]=I,n[B+-20>>2]=I,n[B+-24>>2]=I,n[B+-28>>2]=I,(g=g-(i=4&C|24)|0)>>>0<32))))))))for(B=I,Q=I,I=C+i|0;n[I+24>>2]=Q,n[I+28>>2]=B,n[I+16>>2]=Q,n[I+20>>2]=B,n[I+8>>2]=Q,n[I+12>>2]=B,n[I>>2]=Q,n[I+4>>2]=B,I=I+32|0,(g=g+-32|0)>>>0>31;);return A}function tA(A,I){var g,B=0,C=0,Q=0,i=0;for(D=g=D-464|0;C=B<<1,i=a[I+B|0],E[C+(g+400|0)|0]=15&i,E[(g+400|0)+(1|C)|0]=i>>>4,32!=(0|(B=B+1|0)););for(B=0;I=8+(C=(I=B)+a[0|(B=(g+400|0)+Q|0)]|0)|0,E[0|B]=C-(240&I),B=I<<24>>28,63!=(0|(Q=Q+1|0)););for(E[g+463|0]=a[g+463|0]+B,kg(A),B=1;Kg(g,B>>>1|0,E[(g+400|0)+B|0]),wI(g+240|0,A,g),jI(A,g+240|0),I=B>>>0<62,B=B+2|0,I;);for(cg(g+240|0,A),Ig(g+120|0,g+240|0),pI(g+240|0,g+120|0),Ig(g+120|0,g+240|0),pI(g+240|0,g+120|0),Ig(g+120|0,g+240|0),pI(g+240|0,g+120|0),jI(A,g+240|0),B=0;Kg(g,B>>>1|0,E[(g+400|0)+B|0]),wI(g+240|0,A,g),jI(A,g+240|0),I=B>>>0<62,B=B+2|0,I;);D=g+464|0}function cA(A,I,g,B,C,Q,i,r,o,e){var c,f=0;if(D=c=D-336|0,g&&(n[g>>2]=0,n[g+4>>2]=0),!Q&C>>>0<4294967279|Q>>>0<0)return IB(c+16|0,64,f=A+32|0,A),Og(c+80|0,c+16|0),KI(c+16|0,64),Lg(c+80|0,i,r,o),Lg(c+80|0,35712,0-r&15,0),eA(c+16|0,0,64),E[c+16|0]=e,uI(c+16|0,c+16|0,64,0,f,1,A),Lg(c+80|0,c+16|0,64,0),E[0|I]=a[c+16|0],uI(i=I+1|0,B,C,Q,f,2,A),Lg(c+80|0,i,C,Q),Lg(c+80|0,35712,15&C,0),LI(c+8|0,r,o),Lg(c+80|0,c+8|0,8,0),LI(c+8|0,C- -64|0,Q-((C>>>0<4294967232)+-1|0)|0),Lg(c+80|0,c+8|0,8,0),zg(c+80|0,I=C+i|0),KI(c+80|0,256),ZI(A+36|0,I),VI(f),(2&e||RI(f,4))&&q(A),g&&((A=C+17|0)>>>0<17&&(Q=Q+1|0),n[g>>2]=A,n[g+4>>2]=Q),D=c+336|0,0;Gg(),t()}function fA(A,I,g,B,C,Q,E){var i,a,r,o,e=0;return D=i=D-352|0,X(i,Q,E),!C&g-A>>>0>=B>>>0|0>C>>>0|g>>>0<=A>>>0&&!(!C&A-g>>>0<B>>>0|0<C>>>0&&A>>>0>g>>>0)||(g=aA(A,g,B)),n[i+56>>2]=0,n[i+60>>2]=0,n[i+48>>2]=0,n[i+52>>2]=0,n[i+40>>2]=0,n[i+44>>2]=0,n[i+32>>2]=0,n[i+36>>2]=0,(a=!((E=(e=!C&B>>>0>32|C>>>0>0)?32:B)|(e=e?0:C)))||j(i- -64|0,g,E),o=Q+16|0,Q=e,(r=E+32|0)>>>0<32&&(Q=Q+1|0),_g(i+32|0,i+32|0,r,Q,o,i),Og(i+96|0,i+32|0),a||j(A,i- -64|0,E),KI(i+32|0,64),!C&B>>>0>=33|C>>>0>0&&Hg(A+E|0,Q=g+E|0,(g=B)-E|0,C-(e+(g>>>0<E>>>0)|0)|0,o,i),KI(i,32),Lg(i+96|0,A,B,C),zg(i+96|0,I),KI(i+96|0,256),D=i+352|0,0}function yA(A,I,g,B,C,E,i){var a,r,o=0,e=0,t=0;D=a=D-96|0,X(a,E,i),r=E+16|0,Q[n[8951]](a+32|0,32,0,r,a),E=-1;A:{if(!(0|Q[n[8945]](g,I,B,C,a+32|0))){if(E=0,!A)break A;!C&A-I>>>0>=B>>>0|0>C>>>0|A>>>0<=I>>>0&&!(!C&I-A>>>0<B>>>0|0<C>>>0&&I>>>0>A>>>0)||(I=aA(A,I,B)),g=(E=!C&B>>>0>32|C>>>0>0)?32:B,i=E=E?0:C,g|E?(o=g,t=j(a- -64|0,I,g),E=i,(e=g+32|0)>>>0<32&&(E=E+1|0),_g(a+32|0,a+32|0,e,E,r,a),j(A,t,o)):(E=i,(o=g+32|0)>>>0<32&&(E=E+1|0),_g(e=a+32|0,t=a+32|0,o,E,r,a)),E=0,!C&B>>>0<33|C>>>0<0||Hg((o=A)+(A=g)|0,A+I|0,B-A|0,C-(i+(B>>>0<A>>>0)|0)|0,r,a)}KI(a,32)}return D=a+96|0,E}function sA(A,I){var g,B=0;D=g=D+-64|0,function(A,I){var g;D=g=D+-64|0,ag(A,g),W(A=A+208|0,g,64,0),ag(A,I),KI(g,64),D=g- -64|0}(A,g),B=n[g+28>>2],A=n[g+24>>2],E[I+24|0]=A,E[I+25|0]=A>>>8,E[I+26|0]=A>>>16,E[I+27|0]=A>>>24,E[I+28|0]=B,E[I+29|0]=B>>>8,E[I+30|0]=B>>>16,E[I+31|0]=B>>>24,B=n[g+20>>2],A=n[g+16>>2],E[I+16|0]=A,E[I+17|0]=A>>>8,E[I+18|0]=A>>>16,E[I+19|0]=A>>>24,E[I+20|0]=B,E[I+21|0]=B>>>8,E[I+22|0]=B>>>16,E[I+23|0]=B>>>24,B=n[g+12>>2],A=n[g+8>>2],E[I+8|0]=A,E[I+9|0]=A>>>8,E[I+10|0]=A>>>16,E[I+11|0]=A>>>24,E[I+12|0]=B,E[I+13|0]=B>>>8,E[I+14|0]=B>>>16,E[I+15|0]=B>>>24,B=n[g+4>>2],A=n[g>>2],E[0|I]=A,E[I+1|0]=A>>>8,E[I+2|0]=A>>>16,E[I+3|0]=A>>>24,E[I+4|0]=B,E[I+5|0]=B>>>8,E[I+6|0]=B>>>16,E[I+7|0]=B>>>24,D=g- -64|0}function wA(A,I){var g,B,C=0,Q=0;Q=g=a[A+68|0]|a[A+69|0]<<8|a[A+70|0]<<16|a[A+71|0]<<24,(C=I+(B=a[A+64|0]|a[A+65|0]<<8|a[A+66|0]<<16|a[A+67|0]<<24)|0)>>>0<B>>>0&&(Q=Q+1|0),E[A+64|0]=C,E[A+65|0]=C>>>8,E[A+66|0]=C>>>16,E[A+67|0]=C>>>24,E[A+68|0]=Q,E[A+69|0]=Q>>>8,E[A+70|0]=Q>>>16,E[A+71|0]=Q>>>24,I=a[A+76|0]|a[A+77|0]<<8|a[A+78|0]<<16|a[A+79|0]<<24,(C=(Q=(0|Q)==(0|g)&C>>>0<B>>>0|Q>>>0<g>>>0)+(a[A+72|0]|a[A+73|0]<<8|a[A+74|0]<<16|a[A+75|0]<<24)|0)>>>0<Q>>>0&&(I=I+1|0),E[A+72|0]=C,E[A+73|0]=C>>>8,E[A+74|0]=C>>>16,E[A+75|0]=C>>>24,E[A+76|0]=I,E[A+77|0]=I>>>8,E[A+78|0]=I>>>16,E[A+79|0]=I>>>24}function hA(A,I){n[A>>2]=1634760805,n[A+4>>2]=857760878,n[A+8>>2]=2036477234,n[A+12>>2]=1797285236,n[A+16>>2]=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,n[A+20>>2]=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,n[A+24>>2]=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24,n[A+28>>2]=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24,n[A+32>>2]=a[I+16|0]|a[I+17|0]<<8|a[I+18|0]<<16|a[I+19|0]<<24,n[A+36>>2]=a[I+20|0]|a[I+21|0]<<8|a[I+22|0]<<16|a[I+23|0]<<24,n[A+40>>2]=a[I+24|0]|a[I+25|0]<<8|a[I+26|0]<<16|a[I+27|0]<<24,n[A+44>>2]=a[I+28|0]|a[I+29|0]<<8|a[I+30|0]<<16|a[I+31|0]<<24}function DA(A){var I=0,g=0;if(!A)return-25;if(!n[A>>2])return-1;A:{I:{if(I=-2,!(r[A+4>>2]<16)&&(n[A+8>>2]||(I=-18,!n[A+12>>2]))){if(g=n[A+20>>2],!n[A+16>>2])break I;if(I=-6,!(g>>>0<8)&&(n[A+24>>2]||(I=-20,!n[A+28>>2]))&&(n[A+32>>2]||(I=-21,!n[A+36>>2]))&&(I=-14,!((g=n[A+44>>2])>>>0<8||(I=-15,g>>>0>2097152||(I=-14,g>>>0<(g=n[A+48>>2])<<3>>>0))))){if(!n[A+40>>2])return-12;if(!g)return-16;if(I=-17,!(g>>>0>16777215)){if(A=n[A+52>>2])break A;I=-28}}}return I}return g?-19:-6}return A>>>0>16777215?-29:0}function uA(A,I){for(var g=0,B=0,C=0,Q=0,i=0,n=0,r=0,o=0,e=0,t=0;E[A+g|0]=a[(g>>>3|0)+I|0]>>>(7&g)&1,256!=(0|(g=g+1|0)););for(C=254;;){n=(Q=n)+1|0;A:if(!(!a[0|(i=A+Q|0)]|Q>>>0>254))for(I=1,t=(C>>>0<5?C:5)+1|0,g=n;;){r=I;I:if(B=E[0|(I=A+g|0)])if((0|(e=(o=E[0|i])+(B<<=r)|0))<=15)E[0|i]=e,E[0|I]=0;else{if((0|(I=o-B|0))<-15)break A;for(E[0|i]=I;;){if(!a[0|(I=A+g|0)]){E[0|I]=1;break I}if(E[0|I]=0,I=g>>>0<255,g=g+1|0,!I)break}}if(g=Q+(I=r+1|0)|0,(0|r)==(0|t))break}if(C=C+-1|0,256==(0|n))break}}function pA(A,I,g){var B,C,Q,E,i,a,r,o,e,t,c,f,y,s,w,h,D,u,p,l;c=n[I+4>>2],B=n[A+4>>2],f=n[I+8>>2],C=n[A+8>>2],y=n[I+12>>2],Q=n[A+12>>2],s=n[I+16>>2],E=n[A+16>>2],w=n[I+20>>2],i=n[A+20>>2],h=n[I+24>>2],a=n[A+24>>2],D=n[I+28>>2],r=n[A+28>>2],u=n[I+32>>2],o=n[A+32>>2],p=n[I+36>>2],e=n[A+36>>2],t=n[A>>2],l=n[I>>2]^t,I=0-g|0,n[A>>2]=t^l&I,n[A+36>>2]=I&(e^p)^e,n[A+32>>2]=I&(o^u)^o,n[A+28>>2]=I&(r^D)^r,n[A+24>>2]=I&(a^h)^a,n[A+20>>2]=I&(i^w)^i,n[A+16>>2]=I&(E^s)^E,n[A+12>>2]=I&(Q^y)^Q,n[A+8>>2]=I&(C^f)^C,n[A+4>>2]=I&(B^c)^B}function lA(A,I,g,B){var C,Q,E,i,a=0;D=C=D+-64|0,eA(C+8|0,0,52),a=VA(A),n[C+20>>2]=a,n[C+36>>2]=a,n[C+4>>2]=a,Q=_(a),n[C+32>>2]=Q,E=_(a),n[C+16>>2]=E,i=_(a),n[C>>2]=i;A:if(!i|!Q|!E||!(a=_(a)))v(Q),v(E),v(i),A=-22;else{if(A=z(C,A,B)){v(n[C+32>>2]),v(n[C+16>>2]),v(n[C>>2]),v(a);break A}A=0,I=NA(n[C+40>>2],n[C+44>>2],n[C+52>>2],I,g,n[C+16>>2],n[C+20>>2],a,n[C+4>>2],0,0,B),v(n[C+32>>2]),v(n[C+16>>2]),(I||hI(a,n[C>>2],n[C+4>>2]))&&(A=-35),v(a),v(n[C>>2])}return D=C- -64|0,A}function FA(A,I){var g,B,C=0;D=g=D-288|0,J(B=A+40|0,I),Vg(C=A+80|0),U(g+240|0,B),H(g+192|0,g+240|0,2128),_A(g+240|0,g+240|0,C),HA(g+192|0,g+192|0,C),U(g+144|0,g+192|0),H(g+144|0,g+144|0,g+192|0),U(A,g+144|0),H(A,A,g+192|0),H(A,A,g+240|0),function(A,I){var g,B=0;for(D=g=D-144|0,U(g+96|0,I),U(g+48|0,g+96|0),U(g+48|0,g+48|0),H(g+48|0,I,g+48|0),H(g+96|0,g+96|0,g+48|0),U(g+96|0,g+96|0),H(g+96|0,g+48|0,g+96|0),U(g+48|0,g+96|0),B=1;U(g+48|0,g+48|0),5!=(0|(B=B+1|0)););for(H(g+96|0,g+48|0,g+96|0),U(g+48|0,g+96|0),B=1;U(g+48|0,g+48|0),10!=(0|(B=B+1|0)););for(H(g+48|0,g+48|0,g+96|0),U(g,g+48|0),B=1;U(g,g),20!=(0|(B=B+1|0)););for(H(g+48|0,g,g+48|0),U(g+48|0,g+48|0),B=1;U(g+48|0,g+48|0),10!=(0|(B=B+1|0)););for(H(g+96|0,g+48|0,g+96|0),U(g+48|0,g+96|0),B=1;U(g+48|0,g+48|0),50!=(0|(B=B+1|0)););for(H(g+48|0,g+48|0,g+96|0),U(g,g+48|0),B=1;U(g,g),100!=(0|(B=B+1|0)););for(H(g+48|0,g,g+48|0),U(g+48|0,g+48|0),B=1;U(g+48|0,g+48|0),50!=(0|(B=B+1|0)););H(g+96|0,g+48|0,g+96|0),U(g+96|0,g+96|0),U(g+96|0,g+96|0),H(A,g+96|0,I),D=g+144|0}(A,A),H(A,A,g+144|0),H(A,A,g+240|0),U(g+96|0,A),H(g+96|0,g+96|0,g+192|0),_A(g+48|0,g+96|0,g+240|0);A:{if(!tg(g+48|0)){if(HA(g,g+96|0,g+240|0),C=-1,!tg(g))break A;H(A,A,2176)}(0|yg(A))==(a[I+31|0]>>>7|0)&&TA(A,A),H(A+120|0,A,B),C=0}return D=g+288|0,C}function GA(A,I){var g,B=0;B=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,g=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,E[A+32|0]=g,E[A+33|0]=g>>>8,E[A+34|0]=g>>>16,E[A+35|0]=g>>>24,E[A+36|0]=B,E[A+37|0]=B>>>8,E[A+38|0]=B>>>16,E[A+39|0]=B>>>24,B=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24,I=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24,E[A+40|0]=I,E[A+41|0]=I>>>8,E[A+42|0]=I>>>16,E[A+43|0]=I>>>24,E[A+44|0]=B,E[A+45|0]=B>>>8,E[A+46|0]=B>>>16,E[A+47|0]=B>>>24}function kA(A,I){var g,B=0;B=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,g=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,E[A+48|0]=g,E[A+49|0]=g>>>8,E[A+50|0]=g>>>16,E[A+51|0]=g>>>24,E[A+52|0]=B,E[A+53|0]=B>>>8,E[A+54|0]=B>>>16,E[A+55|0]=B>>>24,B=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24,I=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24,E[A+56|0]=I,E[A+57|0]=I>>>8,E[A+58|0]=I>>>16,E[A+59|0]=I>>>24,E[A+60|0]=B,E[A+61|0]=B>>>8,E[A+62|0]=B>>>16,E[A+63|0]=B>>>24}function _A(A,I,g){var B,C,Q,E,i,a,r,o,e,t,c,f,y,s,w,h,D,u;B=n[g+4>>2],C=n[I+4>>2],Q=n[g+8>>2],E=n[I+8>>2],i=n[g+12>>2],a=n[I+12>>2],r=n[g+16>>2],o=n[I+16>>2],e=n[g+20>>2],t=n[I+20>>2],c=n[g+24>>2],f=n[I+24>>2],y=n[g+28>>2],s=n[I+28>>2],w=n[g+32>>2],h=n[I+32>>2],D=n[g+36>>2],u=n[I+36>>2],n[A>>2]=n[I>>2]-n[g>>2],n[A+36>>2]=u-D,n[A+32>>2]=h-w,n[A+28>>2]=s-y,n[A+24>>2]=f-c,n[A+20>>2]=t-e,n[A+16>>2]=o-r,n[A+12>>2]=a-i,n[A+8>>2]=E-Q,n[A+4>>2]=C-B}function HA(A,I,g){var B,C,Q,E,i,a,r,o,e,t,c,f,y,s,w,h,D,u;B=n[g+4>>2],C=n[I+4>>2],Q=n[g+8>>2],E=n[I+8>>2],i=n[g+12>>2],a=n[I+12>>2],r=n[g+16>>2],o=n[I+16>>2],e=n[g+20>>2],t=n[I+20>>2],c=n[g+24>>2],f=n[I+24>>2],y=n[g+28>>2],s=n[I+28>>2],w=n[g+32>>2],h=n[I+32>>2],D=n[g+36>>2],u=n[I+36>>2],n[A>>2]=n[g>>2]+n[I>>2],n[A+36>>2]=D+u,n[A+32>>2]=w+h,n[A+28>>2]=y+s,n[A+24>>2]=c+f,n[A+20>>2]=e+t,n[A+16>>2]=r+o,n[A+12>>2]=i+a,n[A+8>>2]=Q+E,n[A+4>>2]=B+C}function YA(A,I,g,B){var C=0,Q=0;A:{I:{g:{B:{C:{if(!n[I>>2]){if(C=a[I+8|0],Q=n[I+12>>2]+-1|0,!C)break B;if(C=o(C,n[A+20>>2]),I=n[I+12>>2],!B)break C;Q=(I+C|0)-1|0;break B}if(C=n[A+20>>2],A=n[A+24>>2],!B)break g;B=n[I+12>>2]+((-1^C)+A|0)|0;break I}Q=C-!I|0}B=Q,A=n[A+24>>2],Q=0;break A}B=(A-C|0)-!n[I+12>>2]|0}Q=0,3!=(0|(I=a[I+8|0]))&&(Q=o(C,I+1|0))}return C=Q,I=0,(C=(Q=B+-1|0)+C|0)>>>0<Q>>>0&&(I=1),xg(g,0,g,0),xg(B,0,l,0),function(A,I,g){var B=0,C=0,Q=0,E=0,i=0,n=0,a=0,r=0,t=0;A:{I:{g:{B:{C:{Q:{E:{i:{n:{if(C=I){if(!(B=g))break n;break i}return u=A-o((A>>>0)/(g>>>0)|0,g)|0,p=0,void(l=0)}if(!A)break E;break Q}if(!((E=B+-1|0)&B))break C;i=0-(E=(e(B)+33|0)-e(C)|0)|0;break g}return u=0,p=C,void(l=0)}if((B=32-e(C)|0)>>>0<31)break B;break I}if(u=A&E,p=0,1==(0|B))break A;return g=31&(A=B?31-e(B+-1^B)|0:32),void(l=32<=(63&A)>>>0?0:I>>>g|0)}E=B+1|0,i=63-B|0}if(B=I,Q=31&(C=63&E),32<=C>>>0?(C=0,Q=B>>>Q|0):(C=B>>>Q|0,Q=((1<<Q)-1&B)<<32-Q|A>>>Q),B=31&(i&=63),32<=i>>>0?(I=A<<B,A=0):(I=(1<<B)-1&A>>>32-B|I<<B,A<<=B),E)for(B=-1,-1!=(0|(i=g+-1|0))&&(B=0);Q=(a=n=Q<<1|I>>>31)-(r=g&(n=B-((C=C<<1|Q>>>31)+(i>>>0<n>>>0)|0)>>31))|0,C=C-(a>>>0<r>>>0)|0,I=I<<1|A>>>31,A=t|A<<1,t=1&n,E=E+-1|0;);return u=Q,p=C,void(l=I<<1|A>>>31)}u=A,p=I,I=0}l=I}(C-(g=l)|0,I-(C>>>0<g>>>0)|0,A),l=p,u}function bA(A,I,g,B,C){var Q;if(D=Q=D-192|0,!(!g|(I+-1&255)>>>0>=64))return i[Q+130>>1]=257,E[Q+129|0]=32,E[Q+128|0]=I,ug(Q+128|4),LI(Q+128|8,0,0),n[Q+152>>2]=0,n[Q+156>>2]=0,n[Q+144>>2]=0,n[Q+148>>2]=0,B?GA(Q+128|0,B):(n[Q+168>>2]=0,n[Q+172>>2]=0,n[Q+160>>2]=0,n[Q+164>>2]=0),C?kA(Q+128|0,C):(n[Q+184>>2]=0,n[Q+188>>2]=0,n[Q+176>>2]=0,n[Q+180>>2]=0),vA(A,Q+128|0),eA(Q+32|0,0,96),rA(I=A,A=j(Q,g,32),128,0),KI(A,128),void(D=A+192|0);Gg(),t()}function mA(A){var I,g=0,B=0,C=0,Q=0;for(E[11+(I=D-16|0)|0]=0,E[I+12|0]=0,E[I+13|0]=0,E[I+14|0]=0,n[I+8>>2]=0;;){for(C=a[A+B|0],g=0;E[0|(Q=(I+8|0)+g|0)]=a[0|Q]|C^a[(34464+(g<<5)|0)+B|0],7!=(0|(g=g+1|0)););if(31==(0|(B=B+1|0)))break}for(B=127&a[A+31|0],A=0,g=0;E[0|(C=(I+8|0)+g|0)]=a[0|C]|B^a[34495+(g<<5)|0],7!=(0|(g=g+1|0)););for(g=0;g=a[(I+8|0)+A|0]+-1|g,7!=(0|(A=A+1|0)););return g>>>8&1}function UA(A){var I,g=0,B=0,C=0,Q=0;for(E[11+(I=D-16|0)|0]=0,E[I+12|0]=0,E[I+13|0]=0,E[I+14|0]=0,n[I+8>>2]=0;;){for(C=a[A+B|0],g=0;E[0|(Q=(I+8|0)+g|0)]=a[0|Q]|C^a[(3232+(g<<5)|0)+B|0],7!=(0|(g=g+1|0)););if(31==(0|(B=B+1|0)))break}for(B=127&a[A+31|0],A=0,g=0;E[0|(C=(I+8|0)+g|0)]=a[0|C]|B^a[3263+(g<<5)|0],7!=(0|(g=g+1|0)););for(g=0;g=a[(I+8|0)+A|0]+-1|g,7!=(0|(A=A+1|0)););return g>>>8&1}function vA(A,I){var g=0,B=0,C=0,Q=0,i=0;for(eA(j(A,1952,64)- -64|0,0,293);C=B=(g=Q<<3)+A|0,g=I+g|0,i=a[0|B]|a[B+1|0]<<8|a[B+2|0]<<16|a[B+3|0]<<24,B=(a[g+4|0]|a[g+5|0]<<8|a[g+6|0]<<16|a[g+7|0]<<24)^(a[B+4|0]|a[B+5|0]<<8|a[B+6|0]<<16|a[B+7|0]<<24),g=(a[0|g]|a[g+1|0]<<8|a[g+2|0]<<16|a[g+3|0]<<24)^i,E[0|C]=g,E[C+1|0]=g>>>8,E[C+2|0]=g>>>16,E[C+3|0]=g>>>24,E[C+4|0]=B,E[C+5|0]=B>>>8,E[C+6|0]=B>>>16,E[C+7|0]=B>>>24,8!=(0|(Q=Q+1|0)););}function SA(A,I){var g,B=0,C=0,Q=0,E=0;if(D=g=D-48|0,!((B=DA(A))||(B=-26,I+-1>>>0>1||(Q=n[A+44>>2],B=n[A+48>>2],n[g>>2]=0,C=n[A+40>>2],n[g+28>>2]=B,n[g+12>>2]=-1,n[g+8>>2]=C,B=((C=Q>>>0<(C=B<<3)>>>0?C:Q)>>>0)/((Q=B<<2)>>>0)|0,n[g+20>>2]=B,n[g+24>>2]=B<<2,n[g+16>>2]=o(B,Q),B=n[A+52>>2],n[g+36>>2]=I,n[g+32>>2]=B,B=function(A,I){var g,B=0;return D=g=D-80|0,B=-25,!A|!I||(B=_(n[A+20>>2]<<3),n[A+4>>2]=B,B?(B=function(A,I){var g,B=0,C=0;D=g=D-16|0,C=-22;A:if(!(!A|!I)&&1024==(((B=I<<10)>>>0)/(I>>>0)|0)&&(I=_(12),n[A>>2]=I,I)){n[I>>2]=0,n[I+4>>2]=0,I=function(A,I){if(4294967168<I>>>0)A=48;else{if(!(I=function(A){var I=0,g=0,B=0,C=0,Q=0,E=0;return 4294967168<=A>>>0?(n[8960]=48,0):(A=_(76+(B=A>>>0<11?16:A+11&-8)|0))?(I=A+-8|0,63&A?(C=(-8&(E=n[(Q=A+-4|0)>>2]))-(g=(A=(A=(A+63&-64)-8|0)-I>>>0>15?A:A- -64|0)-I|0)|0,3&E?(n[A+4>>2]=C|1&n[A+4>>2]|2,n[4+(C=A+C|0)>>2]=1|n[C+4>>2],n[Q>>2]=g|1&n[Q>>2]|2,n[A+4>>2]=1|n[A+4>>2],S(I,g)):(I=n[I>>2],n[A+4>>2]=C,n[A>>2]=I+g)):A=I,3&(I=n[A+4>>2])&&((g=-8&I)>>>0<=B+16>>>0||(n[A+4>>2]=B|1&I|2,I=A+B|0,B=g-B|0,n[I+4>>2]=3|B,n[4+(g=A+g|0)>>2]=1|n[g+4>>2],S(I,B))),A+8|0):0}(I)))return 48;n[A>>2]=I,A=0}return A}(g+12|0,B),n[8960]=I;I:{if(I)n[g+12>>2]=0;else if(I=n[g+12>>2])break I;v(n[A>>2]),n[A>>2]=0;break A}n[n[A>>2]>>2]=I,n[n[A>>2]+4>>2]=I,n[n[A>>2]+8>>2]=B,C=0}return D=g+16|0,C}(A,n[A+16>>2]))?xI(A,n[I+56>>2]):(gA(g,I,n[A+36>>2]),KI(g- -64|0,8),function(A,I){var g,B=0,C=0,Q=0;if(D=g=D-1024|0,n[I+28>>2])for(Q=A+68|0,C=A- -64|0;fg(C,0),fg(Q,B),L(g,1024,A,72),fI(n[n[I>>2]+4>>2]+(o(n[I+24>>2],B)<<10)|0,g),fg(C,1),L(g,1024,A,72),fI(1024+(n[n[I>>2]+4>>2]+(o(n[I+24>>2],B)<<10)|0)|0,g),(B=B+1|0)>>>0<r[I+28>>2];);KI(g,1024),D=g+1024|0}(g,A),KI(g,72),B=0):B=-22),D=g+80|0,B}(g,A))))){if(n[g+8>>2])for(;JA(g,E),(E=E+1|0)>>>0<r[g+8>>2];);!function(A,I){var g,B=0,C=0;if(D=g=D-2048|0,!(!A|!I)){if(BB(g+1024|0,(n[n[I>>2]+4>>2]+(n[I+24>>2]<<10)|0)-1024|0),r[I+28>>2]>=2)for(B=1;C=n[I+24>>2],YI(g+1024|0,(n[n[I>>2]+4>>2]+(C+o(B,C)<<10)|0)-1024|0),(B=B+1|0)>>>0<r[I+28>>2];);!function(A,I){for(var g=0,B=0;LI((g=B<<3)+A|0,n[(g=I+g|0)>>2],n[g+4>>2]),128!=(0|(B=B+1|0)););}(g,g+1024|0),L(n[A>>2],n[A+4>>2],g,1024),KI(g+1024|0,1024),KI(g,1024),xI(I,n[A+56>>2])}D=g+2048|0}(A,g),B=0}return D=g+48|0,B}function NA(A,I,g,B,C,Q,E,i,a,r,o,e){var t,c;return D=t=D+-64|0,(c=_(a))?(n[t+32>>2]=0,n[t+36>>2]=0,n[t+24>>2]=0,n[t+28>>2]=0,n[t+20>>2]=E,n[t+16>>2]=Q,n[t+12>>2]=C,n[t+8>>2]=B,n[t+4>>2]=a,n[t>>2]=c,n[t+56>>2]=0,n[t+52>>2]=g,n[t+48>>2]=g,n[t+44>>2]=I,n[t+40>>2]=A,(g=SA(t,e))?KI(c,a):(i&&j(i,c,a),!r|!o||!x(r,o,t,e)?(KI(c,a),g=0):(KI(c,a),KI(r,o),g=-31)),v(c)):g=-22,D=t- -64|0,g}function RA(A,I,g,B,C){var Q,E=0,i=0;D=Q=D+-64|0;A:{I:{if((E=VA(A))>>>0<128&&!g|g>>>0<0){if(g=eA(Q,0,60),i=JI(E))break I}else n[8960]=28;A=-1;break A}n[g+32>>2]=0,n[g+36>>2]=0,n[g+8>>2]=i,n[g+16>>2]=i,n[g+20>>2]=E,n[g>>2]=i,n[g+12>>2]=E,n[g+24>>2]=0,n[g+28>>2]=0,n[g+4>>2]=E,z(g,A,C)?(n[8960]=28,A=-1):(A=1,(0|I)==n[g+40>>2]&&(A=n[g+44>>2]!=(B>>>10|0))),v(i)}return D=Q- -64|0,A}function MA(A,I,g,B,C,Q){var E,i,n=0,a=0,r=0;return D=E=D-592|0,n=-1,SI(i=A+32|0)&&(UA(A)||PI(C)&&(UA(C)||FA(E+128|0,C)||(Ng(E+384|0,Q),W(E+384|0,A,32,0),W(E+384|0,C,32,0),W(E+384|0,I,g,B),ag(E+384|0,E+320|0),k(E+320|0),T(E+8|0,E+320|0,E+128|0,i),NI(E+288|0,E+8|0),a=-1,r=$g(E+288|0,A),n=((E+288|0)==(0|A)?a:r)|hI(A,E+288|0,32)))),D=E+592|0,n}function dA(A,I){var g,B=0,C=0;for(D=g=D-192|0,rg(A),eA(g- -64|0,54,128),E[g+64|0]=54^a[0|I],B=1;E[0|(C=(g- -64|0)+B|0)]=a[0|C]^a[I+B|0],32!=(0|(B=B+1|0)););for(W(A,g- -64|0,128,0),rg(A=A+208|0),eA(g- -64|0,92,128),E[g+64|0]=92^a[0|I],B=1;E[0|(C=(g- -64|0)+B|0)]=a[0|C]^a[I+B|0],32!=(0|(B=B+1|0)););W(A,g- -64|0,128,0),KI(g- -64|0,128),KI(g,64),D=g+192|0}function PA(A,I,g,B,C,Q,E,i,n,a){var r;return D=r=D-352|0,IB(r+32|0,64,n,a),Og(r+96|0,r+32|0),KI(r+32|0,64),Lg(r+96|0,Q,E,i),Lg(r+96|0,34688,0-E&15,0),Lg(r+96|0,I,g,B),Lg(r+96|0,34688,0-g&15,0),LI(r+24|0,E,i),Lg(r+96|0,r+24|0,8,0),LI(r+24|0,g,B),Lg(r+96|0,r+24|0,8,0),zg(r+96|0,r),KI(r+96|0,256),C=AB(r,C),KI(r,16),A&&(C?(eA(A,0,g),C=-1):(uI(A,I,g,B,n,1,a),C=0)),D=r+352|0,C}function JA(A,I){var g,B=0,C=0,Q=0;if(D=g=D-32|0,!(!A|!n[A+28>>2]))for(n[g+16>>2]=I,B=1;;){if(E[g+24|0]=C,I=0,Q=0,B)for(;n[g+28>>2]=0,B=n[g+28>>2],n[g+8>>2]=n[g+24>>2],n[g+12>>2]=B,n[g+20>>2]=I,B=n[g+20>>2],n[g>>2]=n[g+16>>2],n[g+4>>2]=B,EA(A,g),(I=I+1|0)>>>0<(Q=n[A+28>>2])>>>0;);if(B=Q,4==(0|(C=C+1|0)))break}D=g+32|0}function xA(A,I,g,B,C,Q){var E,i;return D=E=D-32|0,i=a[0|C]|a[C+1|0]<<8|a[C+2|0]<<16|a[C+3|0]<<24,C=a[C+4|0]|a[C+5|0]<<8|a[C+6|0]<<16|a[C+7|0]<<24,n[E+24>>2]=0,n[E+28>>2]=0,n[E+16>>2]=i,n[E+20>>2]=C,LI(E,g,B),n[E+8>>2]=0,n[E+12>>2]=0,I+-16>>>0>=49?(n[8960]=28,A=-1):(g=E+16|0,A=I+-1>>>0>63?-1:function(A,I,g,B,C){var Q,E=0;if(Q=E=D,D=E=E-384&-64,!(!I|!A|(g+-1&255)>>>0>=64))return bA(E,g,I,B,C),rA(E,0,0,0),P(E,A,g),D=Q,0;Gg(),t()}(A,Q,255&I,E,g)),D=E+32|0,A}function LA(A,I,g,B,C,Q,E,i,a,r,o){var e;return D=e=D-336|0,IB(e+16|0,64,r,o),Og(e+80|0,e+16|0),KI(e+16|0,64),Lg(e+80|0,E,i,a),Lg(e+80|0,34688,0-i&15,0),uI(A,B,C,Q,r,1,o),Lg(e+80|0,A,C,Q),Lg(e+80|0,34688,0-C&15,0),LI(e+8|0,i,a),Lg(e+80|0,e+8|0,8,0),LI(e+8|0,C,Q),Lg(e+80|0,e+8|0,8,0),zg(e+80|0,I),KI(e+80|0,256),g&&(n[g>>2]=16,n[g+4>>2]=0),D=e+336|0,0}function KA(A,I,g,B,C,Q){var E=0;A:{I:{if(!(!C&B>>>0<64|C>>>0<0||(C=C+-1|0,(B=B+-64|0)>>>0<4294967232&&(C=C+1|0),!C&B>>>0>4294967231|C>>>0>0))){if(!Rg(g,E=g- -64|0,B,C,Q))break I;A&&eA(A,0,B)}if(g=-1,!I)break A;return n[I>>2]=0,n[I+4>>2]=0,-1}I&&(n[I>>2]=B,n[I+4>>2]=C),g=0,A&&aA(A,E,B)}return g}function qA(A,I,g,B,C,Q,E,i,n,a){var r;return D=r=D-352|0,Jg(r+32|0,n,a),Og(r+96|0,r+32|0),KI(r+32|0,64),Lg(r+96|0,Q,E,i),LI(r+24|0,E,i),Lg(r+96|0,r+24|0,8,0),Lg(r+96|0,I,g,B),LI(r+24|0,g,B),Lg(r+96|0,r+24|0,8,0),zg(r+96|0,r),KI(r+96|0,256),C=AB(r,C),KI(r,16),A&&(C?(eA(A,0,g),C=-1):(Bg(A,I,g,B,n,a),C=0)),D=r+352|0,C}function XA(A,I){var g,B=0,C=0,Q=0,E=0,i=0;A:if(!(((g=a[0|A])+-48&255)>>>0>9)){for(C=g,B=A;;){if(E=B,Q>>>0>429496729)break A;if((B=(255&C)-48|0)>>>0>(-1^(C=o(Q,10)))>>>0)break A;if(Q=B+C|0,!(((C=a[0|(B=E+1|0)])+-48&255)>>>0<10))break}(0|A)==(0|B)|(48==(0|g)?(0|A)!=(0|E):0)||(n[I>>2]=Q,i=B)}return i}function VA(A){var I=0,g=0,B=0;A:{I:if(3&(I=A)){if(!a[0|A])return 0;for(;;){if(!(3&(I=I+1|0)))break I;if(!a[0|I])break}break A}for(;g=I,I=I+4|0,!((-1^(B=n[g>>2]))&B+-16843009&-2139062144););if(!(255&B))return g-A|0;for(;B=a[g+1|0],g=I=g+1|0,B;);}return I-A|0}function TA(A,I){var g,B,C,Q,E,i,a,r,o;g=n[I+4>>2],B=n[I+8>>2],C=n[I+12>>2],Q=n[I+16>>2],E=n[I+20>>2],i=n[I+24>>2],a=n[I+28>>2],r=n[I+32>>2],o=n[I+36>>2],n[A>>2]=0-n[I>>2],n[A+36>>2]=0-o,n[A+32>>2]=0-r,n[A+28>>2]=0-a,n[A+24>>2]=0-i,n[A+20>>2]=0-E,n[A+16>>2]=0-Q,n[A+12>>2]=0-C,n[A+8>>2]=0-B,n[A+4>>2]=0-g}function WA(A,I,g){var B=0;B=I<<8&16711680|I<<24,B|=255&(g<<8|I>>>24)|65280&(g<<24|I>>>8),I=-16777216&((255&g)<<24|I>>>8)|16711680&((16777215&g)<<8|I>>>24)|g>>>8&65280|g>>>24|0,E[0|A]=I,E[A+1|0]=I>>>8,E[A+2|0]=I>>>16,E[A+3|0]=I>>>24,I=B,E[A+4|0]=I,E[A+5|0]=I>>>8,E[A+6|0]=I>>>16,E[A+7|0]=I>>>24}function jA(A,I,g){var B;B=A,g?(n[A+48>>2]=a[0|g]|a[g+1|0]<<8|a[g+2|0]<<16|a[g+3|0]<<24,g=a[g+4|0]|a[g+5|0]<<8|a[g+6|0]<<16|a[g+7|0]<<24):(n[A+48>>2]=0,g=0),n[B+52>>2]=g,n[A+56>>2]=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,n[A+60>>2]=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24}function ZA(A,I){var g,B,C,Q,E,i,a,r,o;g=n[I+8>>2],B=n[I+12>>2],C=n[I+16>>2],Q=n[I+20>>2],E=n[I+24>>2],i=n[I+28>>2],a=n[I>>2],r=n[I+4>>2],o=n[I+36>>2],n[A+32>>2]=n[I+32>>2],n[A+36>>2]=o,n[A+24>>2]=E,n[A+28>>2]=i,n[A+16>>2]=C,n[A+20>>2]=Q,n[A+8>>2]=g,n[A+12>>2]=B,n[A>>2]=a,n[A+4>>2]=r}function OA(A,I,g,B,C,Q,E,i,a,r,o){var e;return D=e=D-336|0,Jg(e+16|0,r,o),Og(e+80|0,e+16|0),KI(e+16|0,64),Lg(e+80|0,E,i,a),LI(e+8|0,i,a),Lg(e+80|0,e+8|0,8,0),Bg(A,B,C,Q,r,o),Lg(e+80|0,A,C,Q),LI(e+8|0,C,Q),Lg(e+80|0,e+8|0,8,0),zg(e+80|0,I),KI(e+80|0,256),g&&(n[g>>2]=16,n[g+4>>2]=0),D=e+336|0,0}function zA(A){var I;return I=a[0|A]|a[A+1|0]<<8|a[A+2|0]<<16|a[A+3|0]<<24,A=a[A+4|0]|a[A+5|0]<<8|a[A+6|0]<<16|a[A+7|0]<<24,l=65280&(A<<24|I>>>8)|255&(A<<8|I>>>24)|I<<8&16711680|I<<24,-16777216&((255&A)<<24|I>>>8)|16711680&((16777215&A)<<8|I>>>24)|A>>>8&65280|A>>>24|0}function $A(A,I,g,B,C,Q,E,i,r,o,e){var t;return D=t=D-48|0,n[t+4>>2]=0,K(t+16|0,o,e),e=a[o+16|0]|a[o+17|0]<<8|a[o+18|0]<<16|a[o+19|0]<<24,o=a[o+20|0]|a[o+21|0]<<8|a[o+22|0]<<16|a[o+23|0]<<24,n[t+8>>2]=e,n[t+12>>2]=o,function(A,I,g,B,C,Q,E,i,a,r,o){var e;D=e=D-336|0,Pg(e+16|0,64,r,o),Og(e+80|0,e+16|0),KI(e+16|0,64),Lg(e+80|0,E,i,a),Lg(e+80|0,34704,0-i&15,0),gg(A,B,C,Q,r,1,o),Lg(e+80|0,A,C,Q),Lg(e+80|0,34704,0-C&15,0),LI(e+8|0,i,a),Lg(e+80|0,e+8|0,8,0),LI(e+8|0,C,Q),Lg(e+80|0,e+8|0,8,0),zg(e+80|0,I),KI(e+80|0,256),g&&(n[g>>2]=16,n[g+4>>2]=0),D=e+336|0}(A,I,g,B,C,Q,E,i,r,t+4|0,t+16|0),KI(t+16|0,32),D=t+48|0,0}function AI(A,I,g,B,C,Q,E,i,r,o){var e;return D=e=D-48|0,n[e+4>>2]=0,K(e+16|0,r,o),o=a[r+16|0]|a[r+17|0]<<8|a[r+18|0]<<16|a[r+19|0]<<24,r=a[r+20|0]|a[r+21|0]<<8|a[r+22|0]<<16|a[r+23|0]<<24,n[e+8>>2]=o,n[e+12>>2]=r,A=function(A,I,g,B,C,Q,E,i,n,a){var r;return D=r=D-352|0,Pg(r+32|0,64,n,a),Og(r+96|0,r+32|0),KI(r+32|0,64),Lg(r+96|0,Q,E,i),Lg(r+96|0,34704,0-E&15,0),Lg(r+96|0,I,g,B),Lg(r+96|0,34704,0-g&15,0),LI(r+24|0,E,i),Lg(r+96|0,r+24|0,8,0),LI(r+24|0,g,B),Lg(r+96|0,r+24|0,8,0),zg(r+96|0,r),KI(r+96|0,256),C=AB(r,C),KI(r,16),A&&(C?(eA(A,0,g),C=-1):(gg(A,I,g,B,n,1,a),C=0)),D=r+352|0,C}(A,I,g,B,C,Q,E,i,e+4|0,e+16|0),KI(e+16|0,32),D=e+48|0,A}function II(A,I,g,B){var C;if(D=C=D-192|0,!(!g|(I+-1&255)>>>0>=64|(B+-1&255)>>>0>=64))return i[C+130>>1]=257,E[C+129|0]=B,E[C+128|0]=I,ug(C+128|4),LI(C+128|8,0,0),eA(C+144|0,0,48),vA(A,C+128|0),eA(B+C|0,0,128-B|0),rA(I=A,A=j(C,g,B),128,0),KI(A,128),D=A+192|0,0;Gg(),t()}function gI(A,I,g,B,C,Q,E,i,a,r){var o=0,e=0;return o=-1,!C&B>>>0>=16|C>>>0>0&&(e=A,A=C+-1|0,(o=B+-16|0)>>>0<4294967280&&(A=A+1|0),o=PA(e,g,o,A,(g+B|0)-16|0,Q,E,i,a,r)),I&&(A=C+-1|0,(g=B+-16|0)>>>0<4294967280&&(A=A+1|0),n[(Q=I)>>2]=o?0:g,n[I+4>>2]=o?0:A),o}function BI(A,I,g,B,C,Q,E,i,a,r){var o=0,e=0;return o=-1,!C&B>>>0>=16|C>>>0>0&&(e=A,A=C+-1|0,(o=B+-16|0)>>>0<4294967280&&(A=A+1|0),o=AI(e,g,o,A,(g+B|0)-16|0,Q,E,i,a,r)),I&&(A=C+-1|0,(g=B+-16|0)>>>0<4294967280&&(A=A+1|0),n[(Q=I)>>2]=o?0:g,n[I+4>>2]=o?0:A),o}function CI(A,I,g,B,C,Q,E,i,a,r){var o=0,e=0;return o=-1,!C&B>>>0>=16|C>>>0>0&&(e=A,A=C+-1|0,(o=B+-16|0)>>>0<4294967280&&(A=A+1|0),o=qA(e,g,o,A,(g+B|0)-16|0,Q,E,i,a,r)),I&&(A=C+-1|0,(g=B+-16|0)>>>0<4294967280&&(A=A+1|0),n[(Q=I)>>2]=o?0:g,n[I+4>>2]=o?0:A),o}function QI(A,I,g,B,C,Q){var E,i;return D=E=D-16|0,i=g,g=B,mg(A,E+8|0,aA(A- -64|0,i,B),B,C,Q),64!=n[E+8>>2]|n[E+12>>2]?(I&&(n[I>>2]=0,n[I+4>>2]=0),eA(A,0,g- -64|0),A=-1):(A=0,I&&(n[I>>2]=B- -64,n[I+4>>2]=C-((B>>>0<4294967232)+-1|0))),D=E+16|0,A}function EI(A,I,g,B,C,Q,E){var i;return D=i=D-16|0,A=eA(A,0,128),B|=Q,E>>>0<2147483649&&!B|B>>>0<0?E>>>0>8191&&!Q&C>>>0>=3|Q>>>0>0?(qI(i,16),A=NA(C,E>>>10|0,1,I,g,i,16,0,32,A,128,1)?-1:0):(n[8960]=28,A=-1):(n[8960]=22,A=-1),D=i+16|0,A}function iI(A,I,g){n[A+48>>2]=g?a[0|g]|a[g+1|0]<<8|a[g+2|0]<<16|a[g+3|0]<<24:0,n[A+52>>2]=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,n[A+56>>2]=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,n[A+60>>2]=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24}function nI(A,I,g,B,C,Q,E){var i;return D=i=D-16|0,A=eA(A,0,128),B|=Q,E>>>0<2147483649&&!B|B>>>0<0?E>>>0>8191&&C|Q?(qI(i,16),A=NA(C,E>>>10|0,1,I,g,i,16,0,32,A,128,2)?-1:0):(n[8960]=28,A=-1):(n[8960]=22,A=-1),D=i+16|0,A}function aI(A){var I=0;return(0-(I=A+4&(A+65488>>>8^-1)&(57-A>>>8^-1)&255|((I=A+-65|0)>>>8^-1)&I&(90-A>>>8^-1)&255|A+185&(A+65439>>>8^-1)&(122-A>>>8^-1)&255|63&(1+(16288^A)>>>8^-1)|62&(1+(16338^A)>>>8^-1))>>>8^-1)&1+(65470^A)>>>8&255|I}function rI(A){var I=0;return(0-(I=A+4&(A+65488>>>8^-1)&(57-A>>>8^-1)&255|((I=A+-65|0)>>>8^-1)&I&(90-A>>>8^-1)&255|A+185&(A+65439>>>8^-1)&(122-A>>>8^-1)&255|63&(1+(16336^A)>>>8^-1)|62&(1+(16340^A)>>>8^-1))>>>8^-1)&1+(65470^A)>>>8&255|I}function oI(A,I){var g,B,C=0,Q=0,i=0,n=0;for(D=g=D-16|0,C=10;n=C,i=(I>>>0)/10|0,E[0|(Q=(C=C+-1|0)+(g+6|0)|0)]=I-o(i,10)|48,!(I>>>0<10)&&(I=i,C););B=j(I=A,Q,A=11-n|0)+A|0,E[0|B]=0,D=g+16|0}function eI(A,I,g){var B=0,C=0,Q=0;if(!g)return 0;A:if(B=a[0|A]){for(;;){if((0|(C=a[0|I]))==(0|B)&&!(!(g=g+-1|0)|!C)){if(I=I+1|0,B=a[A+1|0],A=A+1|0,B)continue;break A}break}Q=B}return(255&Q)-a[0|I]|0}function tI(A,I,g){var B,C,Q,E=0;D=C=D-48|0,HA(A,E=I+40|0,I),_A(B=A+40|0,E,I),H(E=A+80|0,A,g),H(B,B,g+40|0),H(Q=A+120|0,g+120|0,I+120|0),H(A,I+80|0,g+80|0),HA(C,A,A),_A(A,E,B),HA(B,E,B),HA(E,C,Q),_A(Q,C,Q),D=C+48|0}function cI(A,I,g){var B,C,Q,E=0;D=C=D-48|0,HA(A,E=I+40|0,I),_A(B=A+40|0,E,I),H(E=A+80|0,A,g+40|0),H(B,B,g),H(Q=A+120|0,g+120|0,I+120|0),H(A,I+80|0,g+80|0),HA(C,A,A),_A(A,E,B),HA(B,E,B),_A(E,C,Q),HA(Q,C,Q),D=C+48|0}function fI(A,I){for(var g=0,B=0,C=0,Q=0;C=(g=B<<3)+A|0,Q=a[0|(g=I+g|0)]|a[g+1|0]<<8|a[g+2|0]<<16|a[g+3|0]<<24,g=a[g+4|0]|a[g+5|0]<<8|a[g+6|0]<<16|a[g+7|0]<<24,n[C>>2]=Q,n[C+4>>2]=g,128!=(0|(B=B+1|0)););}function yI(A,I,g){var B;if(n[12+(B=D-16|0)>>2]=A,n[B+8>>2]=I,I=0,n[B+4>>2]=0,(0|g)>=1)for(;n[B+4>>2]=n[B+4>>2]|a[n[B+8>>2]+I|0]^a[n[B+12>>2]+I|0],(0|g)!=(0|(I=I+1|0)););return(n[B+4>>2]+-1>>>8&1)-1|0}function sI(A,I,g){var B,C,Q,E=0;D=C=D-48|0,HA(A,E=I+40|0,I),_A(B=A+40|0,E,I),H(E=A+80|0,A,g+40|0),H(B,B,g),H(Q=A+120|0,g+80|0,I+120|0),HA(C,I=I+80|0,I),_A(A,E,B),HA(B,E,B),_A(E,C,Q),HA(Q,C,Q),D=C+48|0}function wI(A,I,g){var B,C,Q,E=0;D=C=D-48|0,HA(A,E=I+40|0,I),_A(B=A+40|0,E,I),H(E=A+80|0,A,g),H(B,B,g+40|0),H(Q=A+120|0,g+80|0,I+120|0),HA(C,I=I+80|0,I),_A(A,E,B),HA(B,E,B),HA(E,C,Q),_A(Q,C,Q),D=C+48|0}function hI(A,I,g){var B;if(n[12+(B=D-16|0)>>2]=A,n[B+8>>2]=I,I=0,E[B+7|0]=0,g)for(;E[B+7|0]=a[B+7|0]|a[n[B+8>>2]+I|0]^a[n[B+12>>2]+I|0],(0|g)!=(0|(I=I+1|0)););return(a[B+7|0]+-1>>>8&1)-1|0}function DI(A,I,g){var B,C=0,i=0;if(D=B=D-16|0,E[B+15|0]=0,i=-1,!(0|Q[n[8949]](A,I,g))){for(;E[B+15|0]=a[A+C|0]|a[B+15|0],32!=(0|(C=C+1|0)););i=0-(a[B+15|0]+-1>>>8&1)|0}return D=B+16|0,i}function uI(A,I,g,B,C,Q,E){var i,n=0,a=0;n=B,(a=g+63|0)>>>0<63&&(n=n+1|0),i=n>>>6|0,a=0-(n=(63&n)<<26|a>>>6)|0,!(n=1-(i+(0<n>>>0)|0)|0)&a>>>0<Q>>>0|n>>>0<0&&(Gg(),t()),gg(A,I,g,B,C,Q,E)}function pI(A,I){var g,B,C,Q,E;D=B=D-48|0,U(A,I),U(g=A+80|0,E=I+40|0),Y(Q=A+120|0,I+80|0),HA(C=A+40|0,I,E),U(B,C),HA(C,g,A),_A(g,g,A),_A(A,B,C),_A(Q,Q,g),D=B+48|0}function lI(A,I){var g;return D=g=D+-64|0,(I+-1&255)>>>0>=64&&(Gg(),t()),E[g+3|0]=1,E[g+1|0]=256,E[g+2|0]=1,E[0|g]=I,ug(4|g),LI(8|g,0,0),eA(g+16|0,0,48),vA(A,g),D=g- -64|0,0}function FI(A){var I,g;return(A=(I=n[9108])+(g=A+3&-4)|0)>>>0<=I>>>0&&(0|g)>=1||A>>>0>hB()<<16>>>0&&!(0|h(0|A))?(n[8960]=48,-1):(n[9108]=A,I)}function GI(A,I,g,B,C,Q,E){var i=0,n=0,a=0;return!B&g>>>0>=16|B>>>0>0?(i=A,n=I+16|0,a=I,A=B+-1|0,(I=g+-16|0)>>>0<4294967280&&(A=A+1|0),A=WI(i,n,a,I,A,C,Q,E)):A=-1,A}function kI(A,I,g,B,C,Q,E,i,a,r){if(!C&B>>>0<4294967280|C>>>0<0)return OA(A,A+B|0,0,g,B,C,Q,E,i,a,r),I&&((A=B+16|0)>>>0<16&&(C=C+1|0),n[I>>2]=A,n[I+4>>2]=C),0;Gg(),t()}function _I(A,I,g,B,C,Q,E,i,a,r){if(!C&B>>>0<4294967280|C>>>0<0)return LA(A,A+B|0,0,g,B,C,Q,E,i,a,r),I&&((A=B+16|0)>>>0<16&&(C=C+1|0),n[I>>2]=A,n[I+4>>2]=C),0;Gg(),t()}function HI(A,I,g,B,C,Q,E,i,a,r){if(!C&B>>>0<4294967280|C>>>0<0)return $A(A,A+B|0,0,g,B,C,Q,E,i,a,r),I&&((A=B+16|0)>>>0<16&&(C=C+1|0),n[I>>2]=A,n[I+4>>2]=C),0;Gg(),t()}function YI(A,I){for(var g=0,B=0,C=0,Q=0;B=(g=C<<3)+A|0,Q=n[(g=I+g|0)>>2],g=n[B+4>>2]^n[g+4>>2],n[B>>2]=n[B>>2]^Q,n[B+4>>2]=g,128!=(0|(C=C+1|0)););}function bI(A){var I,g;return 95&(1+(32704^A)>>>8^-1)|45&(1+(16321^A)>>>8^-1)|(I=A+65510>>>8&255)&A+65|(g=A+65484>>>8|0)&A+71&(255^I)|A+252&A+65474>>>8&(-1^g)&255}function mI(A){var I,g;return 47&(1+(16320^A)>>>8^-1)|43&(1+(16321^A)>>>8^-1)|(I=A+65510>>>8&255)&A+65|(g=A+65484>>>8|0)&A+71&(255^I)|A+252&A+65474>>>8&(-1^g)&255}function UI(A,I,g,B,C,Q,E,i,a,r,o){switch(o+-1|0){case 0:return function(A,I,g,B,C,Q,E,i,a,r){var o,e;o=I,e=eA(A,0,I),A=22;A:if(!(g>>>0>0)){if(!(!g&I>>>0<16|g>>>0<0)){if(r>>>0>2147483648|(Q|a)>>>0>0)break A;if(!(!a&i>>>0<3|a>>>0<0|r>>>0<8192))return NA(i,r>>>10|0,1,B,C,E,16,e,o,0,0,1)?-1:0}A=28}return n[8960]=A,-1}(A,I,g,B,C,Q,E,i,a,r);case 1:return function(A,I,g,B,C,Q,E,i,a,r){var o,e;o=I,e=eA(A,0,I),A=22;A:if(!(g>>>0>0)){if(!(!g&I>>>0<16|g>>>0<0)){if(r>>>0>2147483648|(Q|a)>>>0>0)break A;if(!(!(i|a)|r>>>0<8192))return NA(i,r>>>10|0,1,B,C,E,16,e,o,0,0,2)?-1:0}A=28}return n[8960]=A,-1}(A,I,g,B,C,Q,E,i,a,r)}return n[8960]=28,-1}function vI(A,I,g,B){var C=0;C=-1;A:if(!(g>>>0>64|B+-1>>>0>63)){I:{if(!g||!I){if(!lI(A,255&B))break I;break A}if(II(A,255&B,I,255&g))break A}C=0}return C}function SI(A){var I=0,g=0,B=0,C=0,Q=0;for(I=32,g=1;Q=(B=a[(I=I+-1|0)+A|0])-(C=a[I+3456|0])>>8&g|255&Q,g&=65535+(B^C)>>>8,I;);return 0!=(0|Q)}function NI(A,I){var g,B,C;D=g=D-144|0,O(g+96|0,I+80|0),H(g+48|0,I,g+96|0),H(g,I+40|0,g+96|0),oA(A,g),B=A,C=yg(g+48|0)<<7^a[A+31|0],E[B+31|0]=C,D=g+144|0}function RI(A,I){var g,B=0;if(E[15+(g=D-16|0)|0]=0,I)for(;E[g+15|0]=a[A+B|0]|a[g+15|0],(0|(B=B+1|0))!=(0|I););return a[g+15|0]+-1>>>8&1}function MI(A,I,g,B){var C;return B=I+B|0,(C=A+g|0)>>>0<g>>>0&&(B=B+1|0),g=xg(A<<1&-2,1&(I=I<<1|A>>>31),g,0),A=l+B|0,l=A=(I=g+C|0)>>>0<g>>>0?A+1|0:A,I}function dI(A,I,g){var B,C=0;if(B=g>>>3|0)for(g=0;WA((C=g<<3)+A|0,n[(C=I+C|0)>>2],n[C+4>>2]),(0|B)!=(0|(g=g+1|0)););}function PI(A){var I=0,g=0;for(g=127&(-1^a[A+31|0]),I=30;g=-1^a[A+I|0]|g,I=I+-1|0;);return 1&(((255&g)-1&236-a[0|A])>>>8^-1)}function JI(A){var I=0,g=0;return I=0,A&&(g=A,I=A,(1|A)>>>0<65536||(I=g)),g=I,!(A=_(I))|!(3&a[A+-4|0])||eA(A,0,g),A}function xI(A,I){var g=0;!function(A,I){I&&((I=n[A>>2])&&KI(n[I+4>>2],n[A+16>>2]<<10),(I=n[A+4>>2])&&KI(I,n[A+20>>2]<<3))}(A,4&I),v(n[A+4>>2]),n[A+4>>2]=0,(I=n[A>>2])&&(g=n[I>>2])&&v(g),v(I),n[A>>2]=0}function LI(A,I,g){E[0|A]=I,E[A+1|0]=I>>>8,E[A+2|0]=I>>>16,E[A+3|0]=I>>>24,E[A+4|0]=g,E[A+5|0]=g>>>8,E[A+6|0]=g>>>16,E[A+7|0]=g>>>24}function KI(A,I){var g;if(n[12+(g=D-16|0)>>2]=A,I)for(A=0;E[n[g+12>>2]+A|0]=0,(0|I)!=(0|(A=A+1|0)););}function qI(A,I){A|=0;var g=0,B=0,C=0;if(I|=0)for(;B=A+g|0,C=Qg(),E[0|B]=C,(0|(g=g+1|0))!=(0|I););}function XI(A,I,g,B,C){var Q,E;return A|=0,I|=0,g|=0,B|=0,D=Q=(E=D)-128&-64,nA(Q,C|=0),IA(Q,I,g,B),$(Q,A),D=E,0}function VI(A){var I=0,g=0,B=0;for(I=1;I=a[0|(B=A+g|0)]+I|0,E[0|B]=I,I=I>>>8|0,4!=(0|(g=g+1|0)););}function TI(A,I,g,B,C,Q,E,i){var n,a=0;return D=n=D-32|0,a=-1,lg(n,E,i)||(a=Ug(A,I,g,B,C,Q,n),KI(n,32)),D=n+32|0,a}function WI(A,I,g,B,C,Q,E,i){var n,a=0;return D=n=D-32|0,a=-1,lg(n,E,i)||(a=vg(A,I,g,B,C,Q,n),KI(n,32)),D=n+32|0,a}function jI(A,I){var g,B,C;H(A,I,g=I+120|0),H(A+40|0,B=I+40|0,C=I+80|0),H(A+80|0,C,g),H(A+120|0,I,B)}function ZI(A,I){for(var g=0,B=0;E[0|(B=A+g|0)]=a[0|B]^a[I+g|0],8!=(0|(g=g+1|0)););}function OI(A,I,g){var B,C;D=B=(C=D)-384&-64,wg(B,0,0,24),Xg(B,I,32,0),Xg(B,g,32,0),pg(B,A,24),D=C}function zI(A,I){var g;HA(A,g=I+40|0,I),_A(A+40|0,g,I),ZA(A+80|0,I+80|0),H(A+120|0,I+120|0,2224)}function $I(A,I,g,B,C,Q,E){return!B&g>>>0>=4294967280|B>>>0>0&&(Gg(),t()),TI(A+16|0,A,I,g,B,C,Q,E)}function Ag(A,I,g,B,C,Q,E){return I+-1>>>0>63|E>>>0>64?-1:function(A,I,g,B,C,Q,E){var i,n=0;if(i=n=D,D=n=n-384&-64,!(!A|(B+-1&255)>>>0>=64|(C|Q?!I:0)|E>>>0>=65|(E?!g:0)))return E?II(n,B,g,E):lI(n,B),rA(n,I,C,Q),P(n,A,B),D=i,0;Gg(),t()}(A,g,Q,255&I,B,C,255&E)}function Ig(A,I){var g;H(A,I,g=I+120|0),H(A+40|0,I+40|0,I=I+80|0),H(A+80|0,I,g)}function gg(A,I,g,B,C,E,i){1==(0|B)&g>>>0>=0|B>>>0>1&&(Gg(),t()),Q[n[8956]](A,I,g,B,C,E,i)}function Bg(A,I,g,B,C,E){1==(0|B)&g>>>0>=0|B>>>0>1&&(Gg(),t()),Q[n[8955]](A,I,g,B,C,1,0,E)}function Cg(A){var I;return I=a[0|A]|a[A+1|0]<<8,A=a[A+2|0],l=A>>>16|0,I|A<<16}function Qg(){var A,I;return D=A=D-16|0,E[A+15|0]=0,I=0|f(1024,A+15|0,0),D=A+16|0,0|I}function Eg(A,I,g,B,C){var Q;return D=Q=D-416|0,dA(Q,C),W(Q,I,g,B),sA(Q,A),D=Q+416|0,0}function ig(A,I,g,B){var C;return D=C=D-208|0,rg(C),W(C,I,g,B),ag(C,A),D=C+208|0,0}function ng(A,I){var g=0;return(-1>>>(g=31&I)&A)<<g|((g=A)&-1<<(A=0-I&31))>>>A}function ag(A,I){var g;D=g=D-704|0,function(A,I){var g,B=0;A:if((g=n[A+72>>2]>>>3&127)>>>0<=111){if(!(B=112-g|0))break A;j(80+(A+g|0)|0,35424,B)}else j((B=A+80|0)+g|0,35424,128-g|0),G(A,B,I,I+640|0),eA(B,0,112);dI(A+192|0,A- -64|0,16),G(A,A+80|0,I,I+640|0)}(A,g),dI(I,A,64),KI(g,704),KI(A,208),D=g+704|0}function rg(A){n[A+64>>2]=0,n[A+68>>2]=0,n[A+72>>2]=0,n[A+76>>2]=0,j(A,34720,64)}function og(A,I,g){return g>>>0>=256&&(c(2016,2036,107,2089),t()),P(A,I,255&g)}function eg(){var A;D=A=D-16|0,E[A+15|0]=0,f(1062,A+15|0,0),D=A+16|0}function tg(A){var I;return D=I=D-32|0,oA(I,A),A=RI(I,32),D=I+32|0,A}function cg(A,I){var g;D=g=D-128|0,function(A,I){ZA(A,I),ZA(A+40|0,I+40|0),ZA(A+80|0,I+80|0)}(g+8|0,I),pI(A,g+8|0),D=g+128|0}function fg(A,I){E[0|A]=I,E[A+1|0]=I>>>8,E[A+2|0]=I>>>16,E[A+3|0]=I>>>24}function yg(A){var I;return D=I=D-32|0,oA(I,A),D=I+32|0,1&E[0|I]}function sg(A,I,g){pA(A,I,g),pA(A+40|0,I+40|0,g),pA(A+80|0,I+80|0,g)}function wg(A,I,g,B){return 0|vI(A|=0,I|=0,g|=0,B|=0)}function hg(A){E[A+32|0]=1,E[A+33|0]=0,E[A+34|0]=0,E[A+35|0]=0}function Dg(A){n[A>>2]=0,n[A+4>>2]=0,n[A+8>>2]=0,n[A+12>>2]=0}function ug(A){E[0|A]=0,E[A+1|0]=0,E[A+2|0]=0,E[A+3|0]=0}function pg(A,I,g){return 0|og(A|=0,I|=0,g|=0)}function lg(A,I,g){return 0|function(A,I,g){var B,C=0;return D=B=D-32|0,C=-1,DI(B,g,I)||(C=X(A,35552,B)),D=B+32|0,C}(A|=0,I|=0,g|=0)}function Fg(A,I,g){return 0|DI(A|=0,I|=0,g|=0)}function Gg(){var A;(A=n[9105])&&Q[0|A](),y(),t()}function kg(A){iB(A),Vg(A+40|0),Vg(A+80|0),iB(A+120|0)}function _g(A,I,g,B,C,E){Q[n[8952]](A,I,g,B,C,0,0,E)}function Hg(A,I,g,B,C,E){Q[n[8952]](A,I,g,B,C,1,0,E)}function Yg(A,I){return A|=0,qI(I|=0,32),0|qg(A,I)}function bg(A,I){return A=function(A,I){var g=0,B=0;A:{if(B=255&I){if(3&A)for(;;){if(!(g=a[0|A])|(0|g)==(255&I))break A;if(!(3&(A=A+1|0)))break}I:if(!((-1^(g=n[A>>2]))&g+-16843009&-2139062144))for(B=o(B,16843009);;){if((-1^(g^=B))&g+-16843009&-2139062144)break I;if(g=n[A+4>>2],A=A+4|0,g+-16843009&(-1^g)&-2139062144)break}for(;(B=a[0|(g=A)])&&(A=g+1|0,(0|B)!=(255&I)););return g}return VA(A)+A|0}return A}(A,I),a[0|A]==(255&I)?A:0}function mg(A,I,g,B,C,Q){return V(A,I,g,B,C,Q,0),0}function Ug(A,I,g,B,C,Q,E){return fA(A,I,g,B,C,Q,E)}function vg(A,I,g,B,C,Q,E){return yA(A,I,g,B,C,Q,E)}function Sg(A,I,g,B,C,Q,E){return Ag(A,I,g,B,C,Q,E)}function Ng(A,I){rg(A),I&&W(A,35728,34,0)}function Rg(A,I,g,B,C){return MA(A,I,g,B,C,0)}function Mg(A,I){return 0|qg(A|=0,I|=0)}function dg(A,I){return(255&(A^I))-1>>>31|0}function Pg(A,I,g,B){Q[n[8954]](A,I,0,g,B)}function Jg(A,I,g){Q[n[8953]](A,64,0,I,g)}function xg(A,I,g,B){return function(A,I,g,B){var C,Q,E,i,n=0,a=0;return i=o(n=g>>>16|0,a=A>>>16|0),n=(65535&(a=((E=o(C=65535&g,Q=65535&A))>>>16|0)+o(a,C)|0))+o(n,Q)|0,A=(o(I,g)+i|0)+o(A,B)+(a>>>16)+(n>>>16)|0,l=A,65535&E|n<<16}(A,I,g,B)}function Lg(A,I,g,B){Q[n[8947]](A,I,g,B)}function Kg(A,I,g){!function(A,I,g){var B,C;D=B=D-128|0,Vg(A),Vg(A+40|0),iB(A+80|0),sg(A,I,dg(g=g-((0-(C=(128&g)>>>7|0)&g)<<1)<<24>>24,1)),sg(A,I+120|0,dg(g,2)),sg(A,I+240|0,dg(g,3)),sg(A,I+360|0,dg(g,4)),sg(A,I+480|0,dg(g,5)),sg(A,I+600|0,dg(g,6)),sg(A,I+720|0,dg(g,7)),sg(A,I+840|0,dg(g,8)),ZA(B+8|0,A+40|0),ZA(B+48|0,A),TA(B+88|0,A+80|0),sg(A,B+8|0,C),D=B+128|0}(A,o(I,960)+3488|0,g)}function qg(A,I){return 0|Q[n[8950]](A,I)}function Xg(A,I,g,B){return Tg(A,I,g,B)}function Vg(A){n[A>>2]=1,eA(A+4|0,0,36)}function Tg(A,I,g,B){return rA(A,I,g,B)}function Wg(A,I,g){return function(A,I,g){var B=0,C=0,Q=0,E=0;return B=31&(Q=E=63&g),32<=Q>>>0?B=-1>>>B|0:(C=-1>>>B|0,B=(1<<B)-1<<32-B|-1>>>B),Q=B&A,B=I&C,C=31&E,32<=E>>>0?(B=Q<<C,E=0):(B=(1<<C)-1&Q>>>32-C|B<<C,E=Q<<C),Q=B,g=31&(B=C=0-g&63),32<=B>>>0?(B=-1<<g,g=0):(B=(1<<g)-1&-1>>>32-g|-1<<g,g=-1<<g),A&=g,B&=I,I=31&C,32<=C>>>0?(g=0,A=B>>>I|0):(g=B>>>I|0,A=((1<<I)-1&B)<<32-I|A>>>I),l=g|Q,A|E}(A,I,g)}function jg(A,I,g){return function(A,I,g){var B=0,C=0,Q=0,E=0,i=0;return B=31&(E=63&g),32<=E>>>0?(C=-1<<B,i=0):(C=(1<<B)-1&-1>>>32-B|-1<<B,i=-1<<B),i&=A,B=I&C,Q=31&E,32<=E>>>0?(C=0,E=B>>>Q|0):(C=B>>>Q|0,E=((1<<Q)-1&B)<<32-Q|i>>>Q),i=C,Q=31&(B=0-g&63),32<=B>>>0?(C=0,g=-1>>>Q|0):(C=-1>>>Q|0,g=(1<<Q)-1<<32-Q|-1>>>Q),A&=g,I&=C,C=31&B,32<=B>>>0?(g=A<<C,A=0):(g=(1<<C)-1&A>>>32-C|I<<C,A<<=C),l=g|i,A|E}(A,I,g)}function Zg(A){1!=(-7&A)&&(Gg(),t())}function Og(A,I){Q[n[8946]](A,I)}function zg(A,I){Q[n[8948]](A,I)}function $g(A,I){return yI(A,I,32)}function AB(A,I){return yI(A,I,16)}function IB(A,I,g,B){Pg(A,I,g,B)}function gB(A,I){return ng(A,I)}function BB(A,I){j(A,I,1024)}function CB(A){qI(A|=0,32)}function QB(A,I,g){!function(A,I,g){var B,C,Q,E,i,n,r,o,e,t,c,f,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,U=0,v=0,S=0,N=0,R=0;for(B=a[0|g]|a[g+1|0]<<8|a[g+2|0]<<16|a[g+3|0]<<24,C=a[g+4|0]|a[g+5|0]<<8|a[g+6|0]<<16|a[g+7|0]<<24,Q=a[g+8|0]|a[g+9|0]<<8|a[g+10|0]<<16|a[g+11|0]<<24,E=a[g+12|0]|a[g+13|0]<<8|a[g+14|0]<<16|a[g+15|0]<<24,i=a[g+16|0]|a[g+17|0]<<8|a[g+18|0]<<16|a[g+19|0]<<24,n=a[g+20|0]|a[g+21|0]<<8|a[g+22|0]<<16|a[g+23|0]<<24,r=a[g+24|0]|a[g+25|0]<<8|a[g+26|0]<<16|a[g+27|0]<<24,o=a[g+28|0]|a[g+29|0]<<8|a[g+30|0]<<16|a[g+31|0]<<24,g=1634760805,h=B,D=C,b=Q,u=E,H=857760878,p=e=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,l=t=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,F=c=a[I+8|0]|a[I+9|0]<<8|a[I+10|0]<<16|a[I+11|0]<<24,_=f=a[I+12|0]|a[I+13|0]<<8|a[I+14|0]<<16|a[I+15|0]<<24,I=2036477234,s=i,G=1797285236,k=o,w=r,y=n;u=gB(g+y|0,7)^u,F=gB(u+g|0,9)^F,m=gB(F+u|0,13)^y,S=gB(F+m|0,18),y=gB(h+H|0,7)^_,Y=gB(y+H|0,9)^w,h=gB(y+Y|0,13)^h,_=gB(Y+h|0,18),k=gB(I+p|0,7)^k,D=gB(k+I|0,9)^D,p=gB(D+k|0,13)^p,N=gB(D+p|0,18),w=gB(s+G|0,7)^b,l=gB(w+G|0,9)^l,U=gB(l+w|0,13)^s,R=gB(l+U|0,18),h=gB((g^=S)+w|0,7)^h,D=gB(h+g|0,9)^D,b=gB(h+D|0,13)^w,g=gB(D+b|0,18)^g,p=gB((s=H^_)+u|0,7)^p,l=gB(p+s|0,9)^l,u=gB(l+p|0,13)^u,H=gB(l+u|0,18)^s,s=gB((I^=N)+y|0,7)^U,F=gB(s+I|0,9)^F,_=gB(F+s|0,13)^y,I=gB(F+_|0,18)^I,y=gB((G^=R)+k|0,7)^m,w=gB(y+G|0,9)^Y,k=gB(y+w|0,13)^k,G=gB(w+k|0,18)^G,Y=v>>>0<18,v=v+2|0,Y;);fg(A,g+1634760805|0),fg(A+4|0,h+B|0),fg(A+8|0,D+C|0),fg(A+12|0,b+Q|0),fg(A+16|0,u+E|0),fg(A+20|0,H+857760878|0),fg(A+24|0,p+e|0),fg(A+28|0,l+t|0),fg(A+32|0,F+c|0),fg(A+36|0,_+f|0),fg(A+40|0,I+2036477234|0),fg(A+44|0,s+i|0),fg(A+48|0,y+n|0),fg(A+52|0,w+r|0),fg(A+56|0,k+o|0),fg(A+60|0,G+1797285236|0)}(A,I,g)}function EB(A){eA(A,0,1024)}function iB(A){eA(A,0,40)}function nB(){return 16}function aB(){return 32}function rB(){return 24}function oB(){return-17}function eB(){return 64}function tB(){return 1}function cB(){return 2}function fB(){return 8}function yB(){return 0}function sB(){return-1}function wB(){return 3}function hB(){return B.byteLength/65536|0}return Q[1]=XI,Q[2]=function(A,I,g,B,C){var Q;return A|=0,D=Q=D-16|0,XI(Q,I|=0,g|=0,B|=0,C|=0),A=AB(A,Q),D=Q+16|0,0|A},Q[3]=function(A,I){return nA(A|=0,I|=0),0},Q[4]=function(A,I,g,B){return IA(A|=0,I|=0,g|=0,B|=0),0},Q[5]=function(A,I){return $(A|=0,I|=0),0},Q[6]=function(A,I,g){A|=0,I|=0;var B,C=0,Q=0;if(D=B=D-336|0,C=-1,!mA(g|=0)){for(C=0;E[A+C|0]=a[I+C|0],32!=(0|(C=C+1|0)););for(E[0|A]=248&a[0|A],E[A+31|0]=63&a[A+31|0]|64,J(B+288|0,g),Vg(B+240|0),iB(B+192|0),ZA(B+144|0,B+288|0),Vg(B+96|0),g=254,I=0;C=I,Q=g,QA(B+240|0,B+144|0,C^=I=a[(g>>>3|0)+A|0]>>>(7&g)&1),QA(B+192|0,B+96|0,C),g=g+-1|0,_A(B+48|0,B+144|0,B+96|0),_A(B,B+240|0,B+192|0),HA(B+240|0,B+240|0,B+192|0),HA(B+192|0,B+144|0,B+96|0),H(B+96|0,B+48|0,B+240|0),H(B+192|0,B+192|0,B),U(B+48|0,B),U(B,B+240|0),HA(B+144|0,B+96|0,B+192|0),_A(B+192|0,B+96|0,B+192|0),H(B+240|0,B,B+48|0),_A(B,B,B+48|0),U(B+192|0,B+192|0),d(B+96|0,B),U(B+144|0,B+144|0),HA(B+48|0,B+48|0,B+96|0),H(B+96|0,B+288|0,B+192|0),H(B+192|0,B,B+48|0),Q;);QA(B+240|0,B+144|0,I),QA(B+192|0,B+96|0,I),O(B+192|0,B+192|0),H(B+240|0,B+240|0,B+192|0),oA(A,B+240|0),C=0}return D=B+336|0,0|C},Q[7]=function(A,I){A|=0,I|=0;var g,B=0;for(D=g=D-208|0;E[A+B|0]=a[I+B|0],32!=(0|(B=B+1|0)););return E[0|A]=248&a[0|A],E[A+31|0]=63&a[A+31|0]|64,tA(g+48|0,A),function(A,I,g){var B;D=B=D-96|0,HA(B+48|0,g,I),_A(B,g,I),O(B,B),H(A,B+48|0,B),D=B+96|0}(g,g+88|0,g+128|0),oA(A,g),D=g+208|0,0},Q[8]=function(A,I,g,B,C){A|=0,B|=0,C|=0;var Q,i=0;if(D=Q=D-112|0,(I|=0)|(g|=0)){i=a[C+28|0]|a[C+29|0]<<8|a[C+30|0]<<16|a[C+31|0]<<24,n[Q+24>>2]=a[C+24|0]|a[C+25|0]<<8|a[C+26|0]<<16|a[C+27|0]<<24,n[Q+28>>2]=i,i=a[C+20|0]|a[C+21|0]<<8|a[C+22|0]<<16|a[C+23|0]<<24,n[Q+16>>2]=a[C+16|0]|a[C+17|0]<<8|a[C+18|0]<<16|a[C+19|0]<<24,n[Q+20>>2]=i,i=a[C+4|0]|a[C+5|0]<<8|a[C+6|0]<<16|a[C+7|0]<<24,n[Q>>2]=a[0|C]|a[C+1|0]<<8|a[C+2|0]<<16|a[C+3|0]<<24,n[Q+4>>2]=i,i=a[C+12|0]|a[C+13|0]<<8|a[C+14|0]<<16|a[C+15|0]<<24,n[Q+8>>2]=a[C+8|0]|a[C+9|0]<<8|a[C+10|0]<<16|a[C+11|0]<<24,n[Q+12>>2]=i,C=a[0|B]|a[B+1|0]<<8|a[B+2|0]<<16|a[B+3|0]<<24,B=a[B+4|0]|a[B+5|0]<<8|a[B+6|0]<<16|a[B+7|0]<<24,n[Q+104>>2]=0,n[Q+108>>2]=0,n[Q+96>>2]=C,n[Q+100>>2]=B;A:{if(!g&I>>>0>=64|g>>>0>0){for(;;){for(QB(A,Q+96|0,Q),C=8,B=1;B=a[0|(i=(Q+96|0)+C|0)]+B|0,E[0|i]=B,B=B>>>8|0,16!=(0|(C=C+1|0)););if(A=A- -64|0,g=g+-1|0,(I=I+-64|0)>>>0<4294967232&&(g=g+1|0),!(!g&I>>>0>63|g>>>0>0))break}if(!(I|g))break A}if(C=0,QB(Q+32|0,Q+96|0,Q),I)for(;E[A+C|0]=a[(Q+32|0)+C|0],(0|I)!=(0|(C=C+1|0)););}KI(Q+32|0,64),KI(Q,32)}return D=Q+112|0,0},Q[9]=function(A,I,g,B,C,Q,i,r){A|=0,I|=0,C|=0,Q|=0,i|=0,r|=0;var o,e=0,t=0;if(D=o=D-112|0,(g|=0)|(B|=0)){for(e=a[r+28|0]|a[r+29|0]<<8|a[r+30|0]<<16|a[r+31|0]<<24,n[o+24>>2]=a[r+24|0]|a[r+25|0]<<8|a[r+26|0]<<16|a[r+27|0]<<24,n[o+28>>2]=e,e=a[r+20|0]|a[r+21|0]<<8|a[r+22|0]<<16|a[r+23|0]<<24,n[o+16>>2]=a[r+16|0]|a[r+17|0]<<8|a[r+18|0]<<16|a[r+19|0]<<24,n[o+20>>2]=e,e=a[r+4|0]|a[r+5|0]<<8|a[r+6|0]<<16|a[r+7|0]<<24,n[o>>2]=a[0|r]|a[r+1|0]<<8|a[r+2|0]<<16|a[r+3|0]<<24,n[o+4>>2]=e,e=8,t=a[r+12|0]|a[r+13|0]<<8|a[r+14|0]<<16|a[r+15|0]<<24,n[o+8>>2]=a[r+8|0]|a[r+9|0]<<8|a[r+10|0]<<16|a[r+11|0]<<24,n[o+12>>2]=t,r=a[C+4|0]|a[C+5|0]<<8|a[C+6|0]<<16|a[C+7|0]<<24,n[o+96>>2]=a[0|C]|a[C+1|0]<<8|a[C+2|0]<<16|a[C+3|0]<<24,n[o+100>>2]=r;E[(o+96|0)+e|0]=Q,Q=(255&i)<<24|Q>>>8,i=i>>>8|0,16!=(0|(e=e+1|0)););if(!B&g>>>0>63|B>>>0>0)for(;;){for(e=0,QB(o+32|0,o+96|0,o);E[A+e|0]=a[(o+32|0)+e|0]^a[I+e|0],r=1,64!=(0|(e=e+1|0)););for(e=8;C=a[0|(Q=(o+96|0)+e|0)]+r|0,E[0|Q]=C,r=C>>>8|0,16!=(0|(e=e+1|0)););if(I=I- -64|0,A=A- -64|0,B=B+-1|0,(g=g+-64|0)>>>0<4294967232&&(B=B+1|0),!(!B&g>>>0>63|B>>>0>0))break}if(g|B&&(e=0,QB(o+32|0,o+96|0,o),g))for(;E[A+e|0]=a[(o+32|0)+e|0]^a[I+e|0],(0|g)!=(0|(e=e+1|0)););KI(o+32|0,64),KI(o,32)}return D=o+112|0,0},Q[10]=function(A,I,g,B,C){var Q;return A|=0,B|=0,D=Q=D+-64|0,(I|=0)|(g|=0)&&(hA(Q,C|=0),jA(Q,B,0),N(Q,A=eA(A,0,I),A,I,g),KI(Q,64)),D=Q- -64|0,0},Q[11]=function(A,I,g,B,C){var Q;return A|=0,B|=0,D=Q=D+-64|0,(I|=0)|(g|=0)&&(hA(Q,C|=0),iI(Q,B,0),N(Q,A=eA(A,0,I),A,I,g),KI(Q,64)),D=Q- -64|0,0},Q[12]=function(A,I,g,B,C,Q,E,i){var n;return A|=0,I|=0,C|=0,E|=0,i|=0,D=n=D-80|0,(g|=0)|(B|=0)&&(fg(n+8|0,Q|=0),fg(n+12|0,E),hA(n+16|0,i),jA(n+16|0,C,n+8|0),N(n+16|0,I,A,g,B),KI(n+16|0,64)),D=n+80|0,0},Q[13]=function(A,I,g,B,C,Q,E){var i;return A|=0,I|=0,C|=0,E|=0,D=i=D-80|0,(g|=0)|(B|=0)&&(fg(i+12|0,Q|=0),hA(i+16|0,E),iI(i+16|0,C,i+12|0),N(i+16|0,I,A,g,B),KI(i+16|0,64)),D=i+80|0,0},{g:function(){},h:function(A,I,g,B,C,Q,E,i,n,a,r,o){return 0|OA(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},i:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|kI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,a|=0,r|=0)},j:function(A,I,g,B,C,Q,E,i,n,a,r,o){return 0|LA(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},k:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|_I(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,a|=0,r|=0)},l:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|qA(A|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},m:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|CI(A|=0,I|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},n:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|PA(A|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},o:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|gI(A|=0,I|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},p:aB,q:function(){return 12},r:yB,s:nB,t:oB,u:CB,v:aB,w:fB,x:yB,y:nB,z:oB,A:CB,B:function(A,I,g,B,C,Q,E,i,n,a,r,o){return 0|$A(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},C:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|HI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,a|=0,r|=0)},D:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|AI(A|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},E:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|BI(A|=0,I|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},F:aB,G:rB,H:yB,I:nB,J:oB,K:CB,L:aB,M:aB,N:function(A,I,g,B,C){return 0|Eg(A|=0,I|=0,g|=0,B|=0,C|=0)},O:function(A,I,g,B,C){return 0|function(A,I,g,B,C){var Q;return D=Q=D-32|0,Eg(Q,I,g,B,C),I=$g(A,Q),g=hI(Q,A,32),D=Q+32|0,g|((0|A)==(0|Q)?-1:I)}(A|=0,I|=0,g|=0,B|=0,C|=0)},P:CB,Q:aB,R:aB,S:aB,T:aB,U:rB,V:nB,W:oB,X:function(A,I,g){return 0|function(A,I,g){var B,C=0;return D=B=D+-64|0,ig(B,g,32,0),g=n[B+28>>2],C=n[B+24>>2],E[I+24|0]=C,E[I+25|0]=C>>>8,E[I+26|0]=C>>>16,E[I+27|0]=C>>>24,E[I+28|0]=g,E[I+29|0]=g>>>8,E[I+30|0]=g>>>16,E[I+31|0]=g>>>24,g=n[B+20>>2],C=n[B+16>>2],E[I+16|0]=C,E[I+17|0]=C>>>8,E[I+18|0]=C>>>16,E[I+19|0]=C>>>24,E[I+20|0]=g,E[I+21|0]=g>>>8,E[I+22|0]=g>>>16,E[I+23|0]=g>>>24,g=n[B+12>>2],C=n[B+8>>2],E[I+8|0]=C,E[I+9|0]=C>>>8,E[I+10|0]=C>>>16,E[I+11|0]=C>>>24,E[I+12|0]=g,E[I+13|0]=g>>>8,E[I+14|0]=g>>>16,E[I+15|0]=g>>>24,g=n[B+4>>2],C=n[B>>2],E[0|I]=C,E[I+1|0]=C>>>8,E[I+2|0]=C>>>16,E[I+3|0]=C>>>24,E[I+4|0]=g,E[I+5|0]=g>>>8,E[I+6|0]=g>>>16,E[I+7|0]=g>>>24,KI(B,64),A=qg(A,I),D=B- -64|0,A}(A|=0,I|=0,g|=0)},Y:Yg,Z:lg,_:function(A,I,g,B,C,Q,E){return 0|Ug(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0)},$:function(A,I,g,B,C,Q,E,i){return 0|TI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0)},aa:function(A,I,g,B,C,Q){return 0|function(A,I,g,B,C,Q){return!B&g>>>0>=4294967280|B>>>0>0&&(Gg(),t()),Ug(A+16|0,A,I,g,B,C,Q)}(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},ba:function(A,I,g,B,C,Q,E){return 0|$I(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0)},ca:function(A,I,g,B,C,Q,E){return 0|vg(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0)},da:function(A,I,g,B,C,Q,E,i){return 0|WI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0)},ea:function(A,I,g,B,C,Q){return 0|function(A,I,g,B,C,Q){var E=0,i=0,n=0;return!B&g>>>0>=16|B>>>0>0?(E=A,i=I+16|0,n=I,A=B+-1|0,(I=g+-16|0)>>>0<4294967280&&(A=A+1|0),A=vg(E,i,n,I,A,C,Q)):A=-1,A}(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},fa:function(A,I,g,B,C,Q,E){return 0|GI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0)},ga:function(A,I,g,B,C){return 0|iA(A|=0,I|=0,g|=0,B|=0,C|=0)},ha:function(A,I,g,B,C,Q){return 0|function(A,I,g,B,C,Q){var E,i=0;return D=E=D-32|0,i=-1,!B&g>>>0>=48|B>>>0>0&&(OI(E,I,C),C=A,A=B+-1|0,(g=g+-32|0)>>>0<4294967264&&(A=A+1|0),i=GI(C,i=I+32|0,g,A,E,I,Q)),D=E+32|0,i}(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},ia:function(){return 48},ja:nB,ka:eB,la:aB,ma:nB,na:eB,oa:aB,pa:function(){return 384},qa:function(A,I,g,B,C,Q,E){return 0|Sg(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0)},ra:wg,sa:function(A,I,g,B){return 0|Xg(A|=0,I|=0,g|=0,B|=0)},ta:pg,ua:CB,va:eB,wa:function(A,I,g,B){return 0|ig(A|=0,I|=0,g|=0,B|=0)},xa:nB,ya:eB,za:fB,Aa:aB,Ba:function(A,I,g,B,C,Q){return 0|xA(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},Ca:CB,Da:function(A,I,g){return A|=0,Sg(I|=0,32,g|=0,32,0,0,0),0|Mg(A,I)},Ea:function(A,I){return A|=0,qI(I|=0,32),0|Mg(A,I)},Fa:function(A,I,g,B,C){I|=0,g|=0,C|=0;var Q,i,n=0;if(i=n=D,D=n=n-512&-64,Q=(A|=0)||I){if(A=-1,!Fg(n+96|0,B|=0,C)){for(I=I||Q,A=0,wg(n+128|0,0,0,64),Xg(n+128|0,n+96|0,32,0),KI(n+96|0,32),Xg(n+128|0,g,32,0),Xg(n+128|0,C,32,0),pg(n+128|0,n+32|0,64),KI(n+128|0,384);g=(n+32|0)+A|0,E[A+Q|0]=a[0|g],E[A+I|0]=a[g+32|0],32!=(0|(A=A+1|0)););KI(n+32|0,64),A=0}return D=i,0|A}Gg(),t()},Ga:function(A,I,g,B,C){I|=0,g|=0,C|=0;var Q,i,n=0;if(i=n=D,D=n=n-512&-64,Q=(A|=0)||I){if(A=-1,!Fg(n+96|0,B|=0,C)){for(I=I||Q,A=0,wg(n+128|0,0,0,64),Xg(n+128|0,n+96|0,32,0),KI(n+96|0,32),Xg(n+128|0,C,32,0),Xg(n+128|0,g,32,0),pg(n+128|0,n+32|0,64),KI(n+128|0,384);g=(n+32|0)+A|0,E[A+I|0]=a[0|g],E[A+Q|0]=a[g+32|0],32!=(0|(A=A+1|0)););KI(n+32|0,64),A=0}return D=i,0|A}Gg(),t()},Ha:aB,Ia:aB,Ja:aB,Ka:aB,La:tB,Ma:cB,Na:cB,Oa:nB,Pa:sB,Qa:yB,Ra:sB,Sa:nB,Ta:function(){return 128},Ua:function(){return 35681},Va:tB,Wa:sB,Xa:function(){return 8192},Ya:function(){return-2147483648},Za:cB,_a:function(){return 67108864},$a:wB,ab:function(){return 268435456},bb:function(){return 4},cb:function(){return 1073741824},db:function(A,I,g,B,C,Q,E,i,n,a,r){return 0|UI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},eb:function(A,I,g,B,C,Q,E){return 0|nI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0)},fb:function(A,I,g,B,C,Q,E,i){return 0|function(A,I,g,B,C,Q,E,i){switch(i+-1|0){case 1:return nI(A,I,g,B,C,Q,E);default:Gg(),t();case 0:}return EI(A,I,g,B,C,Q,E)}(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0)},gb:function(A,I,g,B){return 0|function(A,I,g,B){return eI(A,35681,10)?eI(A,35692,9)?(n[8960]=28,-1):function(A,I,g,B){A:{if(1==(0|B)&g>>>0>=0|B>>>0>1)n[8960]=22;else{if(!(A=lA(A,I,g,1)))break A;-35==(0|A)&&(n[8960]=28)}A=-1}return A}(A,I,g,B):function(A,I,g,B){A:{if(1==(0|B)&g>>>0>=0|B>>>0>1)n[8960]=22;else{if(!(A=lA(A,I,g,2)))break A;-35==(0|A)&&(n[8960]=28)}A=-1}return A}(A,I,g,B)}(A|=0,I|=0,g|=0,B|=0)},hb:function(A,I,g,B){return 0|function(A,I,g,B){return eI(A,35681,10)?eI(A,35692,9)?(n[8960]=28,-1):RA(A,I,g,B,1):RA(A,I,g,B,2)}(A|=0,I|=0,g|=0,B|=0)},ib:Mg,jb:Fg,kb:aB,lb:aB,mb:aB,nb:rB,ob:nB,pb:oB,qb:CB,rb:Ug,sb:function(A,I,g,B,C,Q){return 0|function(A,I,g,B,C,Q){return!B&g>>>0>=4294967280|B>>>0>0&&(Gg(),t()),fA(A+16|0,A,I,g,B,C,Q),0}(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},tb:vg,ub:function(A,I,g,B,C,Q){return 0|function(A,I,g,B,C,Q){var E=0,i=0,n=0;return!B&g>>>0>=16|B>>>0>0?(E=A,i=I+16|0,n=I,A=B+-1|0,(I=g+-16|0)>>>0<4294967280&&(A=A+1|0),A=yA(E,i,n,I,A,C,Q)):A=-1,A}(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},vb:CB,wb:function(A,I,g){return A|=0,g|=0,qI(I|=0,24),K(A,I,g),hg(A),g=a[I+16|0]|a[I+17|0]<<8|a[I+18|0]<<16|a[I+19|0]<<24,I=a[I+20|0]|a[I+21|0]<<8|a[I+22|0]<<16|a[I+23|0]<<24,E[A+44|0]=0,E[A+45|0]=0,E[A+46|0]=0,E[A+47|0]=0,E[A+48|0]=0,E[A+49|0]=0,E[A+50|0]=0,E[A+51|0]=0,E[A+36|0]=g,E[A+37|0]=g>>>8,E[A+38|0]=g>>>16,E[A+39|0]=g>>>24,E[A+40|0]=I,E[A+41|0]=I>>>8,E[A+42|0]=I>>>16,E[A+43|0]=I>>>24,0},xb:function(A,I,g){return K(A|=0,I|=0,g|=0),hg(A),g=a[I+16|0]|a[I+17|0]<<8|a[I+18|0]<<16|a[I+19|0]<<24,I=a[I+20|0]|a[I+21|0]<<8|a[I+22|0]<<16|a[I+23|0]<<24,E[A+44|0]=0,E[A+45|0]=0,E[A+46|0]=0,E[A+47|0]=0,E[A+48|0]=0,E[A+49|0]=0,E[A+50|0]=0,E[A+51|0]=0,E[A+36|0]=g,E[A+37|0]=g>>>8,E[A+38|0]=g>>>16,E[A+39|0]=g>>>24,E[A+40|0]=I,E[A+41|0]=I>>>8,E[A+42|0]=I>>>16,E[A+43|0]=I>>>24,0},yb:q,zb:function(A,I,g,B,C,Q,E,i,n,a){return 0|cA(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0)},Ab:function(A,I,g,B,C,Q,E,i,n,a){return 0|BA(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0,E|=0,i|=0,n|=0,a|=0)},Bb:function(){return 52},Cb:function(){return 17},Db:rB,Eb:aB,Fb:function(){return-18},Gb:yB,Hb:tB,Ib:cB,Jb:wB,Kb:fB,Lb:nB,Mb:function(A,I,g,B,C){return 0|function(A,I,g,B){var C=0,Q=0,E=0,i=0,n=0,r=0,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0,u=0;if(E=1886610805^(Q=a[0|B]|a[B+1|0]<<8|a[B+2|0]<<16|a[B+3|0]<<24),i=1936682341^(C=a[B+4|0]|a[B+5|0]<<8|a[B+6|0]<<16|a[B+7|0]<<24),r=1852142177^Q,o=1819895653^C,C=1852075885^(Q=a[B+8|0]|a[B+9|0]<<8|a[B+10|0]<<16|a[B+11|0]<<24),n=1685025377^(B=a[B+12|0]|a[B+13|0]<<8|a[B+14|0]<<16|a[B+15|0]<<24),t=2037671283^Q,e=1952801890^B,(0|(Q=(I+g|0)-(w=7&g)|0))!=(0|I)){for(;c=a[0|I]|a[I+1|0]<<8|a[I+2|0]<<16|a[I+3|0]<<24,y=a[I+4|0]|a[I+5|0]<<8|a[I+6|0]<<16|a[I+7|0]<<24,f=Wg(C,n,13),B=i+n|0,s=l,(C=C+E|0)>>>0<E>>>0&&(B=B+1|0),E=B,h=Wg(C,B,32),D=l,t=Wg(i=t^c,B=e^y,16),B=B+o|0,(n=i+r|0)>>>0<i>>>0&&(B=B+1|0),i=n^t,t=r=B^(e=l),r=Wg(i,r,21),e=l,o=E^=s,E=Wg(C^=f,E,17),f=l,B=B+o|0,(C=C+n|0)>>>0<n>>>0&&(B=B+1|0),o=Wg(C,B,32),s=l,u=Wg(n=C^E,f^=B,13),B=t+D|0,(C=i+h|0)>>>0<i>>>0&&(B=B+1|0),B=f+(E=B)|0,h=l,(f=C+n|0)>>>0<C>>>0&&(B=B+1|0),n=B,i=Wg(f,B,32),t=l,e=Wg(C^=r,B=E^e,16),B=B+s|0,(r=C+o|0)>>>0<o>>>0&&(B=B+1|0),B=(o=(C=B)^l)+t|0,(E=i+(e=t=r^e)|0)>>>0<e>>>0&&(B=B+1|0),t=Wg(t,o,21)^E,i=B,e=B^l,f=Wg(o=f^u,B=n^h,17),B=C+B|0,(o=o+r|0)>>>0<r>>>0&&(B=B+1|0),C=o^f,n=B^(s=l),E^=c,i^=y,r=Wg(o,B,32),o=l,(0|Q)!=(0|(I=I+8|0)););I=Q}switch(Q=g<<24,g=0,w+-1|0){case 6:Q|=a[I+6|0]<<16;case 5:Q|=a[I+5|0]<<8;case 4:Q|=a[I+4|0];case 3:B=(g=a[I+3|0])>>>8|0,g<<=24,Q|=B;case 2:g|=(B=a[I+2|0])<<16,Q|=c=B>>>16|0;case 1:g|=(B=a[I+1|0])<<8,Q|=c=B>>>24|0;case 0:g=a[0|I]|g}return c=Wg(C,n,13),B=i+n|0,i=l,(I=C+E|0)>>>0<E>>>0&&(B=B+1|0),C=B,y=Wg(I,B,32),f=l,t=Wg(n=g^t,B=Q^e,16),B=B+o|0,(E=n+r|0)>>>0<n>>>0&&(B=B+1|0),o=r=B^(e=l),t=Wg(n=E^t,r,21),e=l,i=C^=i,C=Wg(I^=c,C,17),r=l,B=B+i|0,(I=I+E|0)>>>0<E>>>0&&(B=B+1|0),i=Wg(I,B,32),c=l,w=Wg(E=I^C,r^=B,13),B=o+f|0,(I=n+y|0)>>>0<n>>>0&&(B=B+1|0),B=r+(C=B)|0,o=l,(E=I+E|0)>>>0<I>>>0&&(B=B+1|0),n=B,r=Wg(E,B,32),y=l,t=Wg(I^=t,B=C^e,16),B=B+c|0,(I=I+i|0)>>>0<i>>>0&&(B=B+1|0),C=I^t,t=i=B^(e=l),i=Wg(C,i,21),e=l,o=n^=o,n=Wg(E^=w,n,17),c=l,B=B+o|0,(E=I+E|0)>>>0<I>>>0&&(B=B+1|0),o=Wg(E,B,32),f=l,n=Wg(E^=n,I=B^c,13),B=t+y|0,B=(t=I)+(Q^(I=(C=C+r|0)>>>0<r>>>0?B+1|0:B))|0,r=l,(g=E+(Q=g^C)|0)>>>0<Q>>>0&&(B=B+1|0),Q=B,E=Wg(g,B,32),t=l,i=Wg(C^=i,B=I^=e,16),B=B+f|0,(I=C+(255^o)|0)>>>0<C>>>0&&(B=B+1|0),C=I^i,o=i=B^(e=l),i=Wg(C,i,21),e=l,r=Q^=r,Q=Wg(g^=n,Q,17),n=l,B=B+r|0,(g=I+g|0)>>>0<I>>>0&&(B=B+1|0),r=Wg(g,B,32),c=l,n=Wg(g^=Q,I=B^n,13),B=o+t|0,B=(Q=I)+(I=(C=C+E|0)>>>0<E>>>0?B+1|0:B)|0,o=l,(g=g+C|0)>>>0<C>>>0&&(B=B+1|0),Q=B,E=Wg(g,B,32),t=l,i=Wg(C^=i,B=I^=e,16),B=B+c|0,(I=C+r|0)>>>0<C>>>0&&(B=B+1|0),C=I^i,r=i=B^(e=l),i=Wg(C,i,21),e=l,o=Q^=o,Q=Wg(g^=n,Q,17),n=l,B=B+o|0,(g=I+g|0)>>>0<I>>>0&&(B=B+1|0),o=Wg(g,B,32),c=l,n=Wg(g^=Q,Q=B^n,13),B=r+t|0,B=Q+(I=(C=C+E|0)>>>0<E>>>0?B+1|0:B)|0,r=l,(g=g+C|0)>>>0<C>>>0&&(B=B+1|0),Q=B,E=Wg(g,B,32),t=l,i=Wg(C^=i,B=I^=e,16),B=B+c|0,(I=C+o|0)>>>0<C>>>0&&(B=B+1|0),C=I^i,o=i=B^(e=l),i=Wg(C,i,21),e=l,r=Q^=r,Q=Wg(g^=n,Q,17),n=l,B=B+r|0,(g=I+g|0)>>>0<I>>>0&&(B=B+1|0),r=Wg(g,B,32),c=l,n=I=B^n,f=Wg(y=g^Q,I,13),B=o+t|0,(I=C+E|0)>>>0<E>>>0&&(B=B+1|0),E=l,Q=B,i=Wg(C=I^i,B=g=e^B,16),B=B+c|0,(g=C+r|0)>>>0<C>>>0&&(B=B+1|0),C=B,i=Wg(g^i,B^(o=l),21),B=Q+n|0,(Q=I+y|0)>>>0<I>>>0&&(B=B+1|0),B=C+(E^=B)|0,(I=(Q^=f)+g|0)>>>0<g>>>0&&(B=B+1|0),g=l,Q=Wg(Q,E,17)^I^i,g=l^g^B,LI(A,Wg(I,B,32)^Q,l^g),0}(A|=0,I|=0,g|=0,C|=0)},Nb:function(A){qI(A|=0,16)},Ob:function(){return 208},Pb:eB,Qb:aB,Rb:aB,Sb:eB,Tb:function(){return-65},Ub:function(A,I,g){return 0|M(A|=0,I|=0,g|=0)},Vb:function(A,I){return 0|function(A,I){var g;return D=g=D-32|0,qI(g,32),M(A,I,g),KI(g,32),D=g+32|0,0}(A|=0,I|=0)},Wb:function(A,I,g,B,C,Q){return 0|QI(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},Xb:function(A,I,g,B,C,Q){return 0|KA(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},Yb:function(A,I,g,B,C,Q){return 0|mg(A|=0,I|=0,g|=0,B|=0,C|=0,Q|=0)},Zb:function(A,I,g,B,C){return 0|Rg(A|=0,I|=0,g|=0,B|=0,C|=0)},_b:function(A){return rg(A|=0),0},$b:function(A,I,g,B){return 0|W(A|=0,I|=0,g|=0,B|=0)},ac:function(A,I,g,B){return 0|function(A,I,g,B){var C;return D=C=D+-64|0,ag(A,C),A=V(I,g,C,64,0,B,1),D=C- -64|0,A}(A|=0,I|=0,g|=0,B|=0)},bc:function(A,I,g){return 0|function(A,I,g){var B;return D=B=D+-64|0,ag(A,B),A=MA(I,B,64,0,g,1),D=B- -64|0,A}(A|=0,I|=0,g|=0)},cc:function(A,I){A|=0;var g,B=0;return D=g=D-256|0,B=-1,UA(I|=0)||FA(g+96|0,I)||function(A){var I;return D=I=D-160|0,CA(I,A),A=tg(I),D=I+160|0,A}(g+96|0)&&(Vg(g),_A(g,g,I=g+136|0),Vg(g+48|0),HA(g+48|0,g+48|0,I),O(g,g),H(g+48|0,g+48|0,g),oA(A,g+48|0),B=0),D=g+256|0,0|B},dc:function(A,I){A|=0;var g,B=0;return D=g=D+-64|0,ig(g,I|=0,32,0),E[0|g]=248&a[0|g],E[g+31|0]=63&a[g+31|0]|64,I=n[g+20>>2],B=n[g+16>>2],E[A+16|0]=B,E[A+17|0]=B>>>8,E[A+18|0]=B>>>16,E[A+19|0]=B>>>24,E[A+20|0]=I,E[A+21|0]=I>>>8,E[A+22|0]=I>>>16,E[A+23|0]=I>>>24,I=n[g+12>>2],B=n[g+8>>2],E[A+8|0]=B,E[A+9|0]=B>>>8,E[A+10|0]=B>>>16,E[A+11|0]=B>>>24,E[A+12|0]=I,E[A+13|0]=I>>>8,E[A+14|0]=I>>>16,E[A+15|0]=I>>>24,I=n[g+4>>2],B=n[g>>2],E[0|A]=B,E[A+1|0]=B>>>8,E[A+2|0]=B>>>16,E[A+3|0]=B>>>24,E[A+4|0]=I,E[A+5|0]=I>>>8,E[A+6|0]=I>>>16,E[A+7|0]=I>>>24,I=n[g+28>>2],B=n[g+24>>2],E[A+24|0]=B,E[A+25|0]=B>>>8,E[A+26|0]=B>>>16,E[A+27|0]=B>>>24,E[A+28|0]=I,E[A+29|0]=I>>>8,E[A+30|0]=I>>>16,E[A+31|0]=I>>>24,KI(g,64),D=g- -64|0,0},ec:Qg,fc:eg,gc:function(A){var I=0,g=0;if((A|=0)>>>0>=2){for(g=(0-A>>>0)%(A>>>0)|0;(I=Qg())>>>0<g>>>0;);A=(I>>>0)%(A>>>0)|0}else A=0;return 0|A},hc:qI,ic:function(A,I,g){IB(A|=0,I|=0,1784,g|=0)},jc:aB,kc:function(){var A=0,I=0;return(A=n[9097])&&(A=n[A+20>>2])&&(I=0|Q[0|A]()),0|I},lc:function(A,I,g){!function(A,I,g){1==(0|g)&I>>>0>=0|g>>>0>1&&(c(1796,1816,197,1842),t()),qI(A,I)}(A|=0,I|=0,g|=0)},mc:function(A,I,g,B){A|=0,g|=0;var C=0,Q=0,i=0;if(!((B|=0)>>>0>2147483646|B<<1>>>0>=(I|=0)>>>0)){if(I=0,B){for(;C=I<<1,Q=(i=a[I+g|0])>>>4|0,E[C+A|0]=87+(Q+(Q+65526>>>8&217)|0),Q=(1|C)+A|0,C=15&i,E[0|Q]=22272+((C<<8)+(C+65526&55552)|0)>>>8,(0|B)!=(0|(I=I+1|0)););I=B<<1}else I=0;return E[I+A|0]=0,0|A}Gg(),t()},nc:function(A,I,g,B,C,Q,i){A|=0,I|=0,g|=0,C|=0,Q|=0,i|=0;var r=0,o=0,e=0,t=0,c=0,f=0,y=0,s=0,w=0,h=0,D=0;A:if(B|=0){I:{g:{B:for(;;){for(o=r;;){C:{if(!(255&((w=(65526+(y=(223&(f=a[g+o|0]))-55&255)^y+65520)>>>8|0)|(e=65526+(h=48^f)>>>8|0)))){if(e=1,!C|255&c)break g;if(bg(C,f))break C;r=o;break A}if(t>>>0>=I>>>0){n[8960]=68,e=0;break g}if(r=y&w|e&h,255&c?(E[A+t|0]=r|D,t=t+1|0):D=r<<4,c^=-1,e=1,(r=o+1|0)>>>0<B>>>0)continue B;break I}if(c=0,!((o=o+1|0)>>>0<B>>>0))break}break}r=(A=r+1|0)>>>0<B>>>0?B:A;break A}r=o}255&c?(n[8960]=28,s=-1,r=r+-1|0,t=0):e||(t=0,s=-1)}return i?n[i>>2]=g+r:(0|B)!=(0|r)&&(n[8960]=28,s=-1),Q&&(n[Q>>2]=t),0|s},oc:function(A,I){var g;return A|=0,Zg(I|=0),A=o(g=(A>>>0)/3|0,-3)+A|0,o(4-(3-A&0-(I>>>1&1))|0,1&(A|A>>>1))+(g<<2|1)|0},pc:AA,qc:Z,rc:function(){var A=0;return n[9104]?A=1:(n[9086]=0,function(){var A;D=A=D-16|0,Dg(A),n[A>>2]&&(Dg(A),eA(36348,0,40)),D=A+16|0}(),n[9085]=1,eg(),function(){var A=0;(0|(A=0|s(30)))>=1?n[8943]=A:A=n[8943],A>>>0<=15&&(Gg(),t()),qI(36400,16)}(),n[9104]=1,A=0),0|A},sc:function(A,I,g,B,C){A|=0,I|=0,g|=0,C|=0;var Q,i=0,r=0,o=0;D=Q=D-16|0;A:{if(B|=0){if(o=-1,(i=(i=B+-1|0)-(r=i&B?(g>>>0)%(B>>>0)|0:g&i)|0)>>>0>=(-1^g)>>>0)break A;if(!((g=g+i|0)>>>0>=C>>>0))for(A&&(n[A>>2]=g+1),A=I+g|0,o=0,E[Q+15|0]=0,I=B>>>0>1?B:1,B=0;C=g=A-B|0,r=a[0|g]&a[Q+15|0],g=(B^i)-1>>>24|0,E[0|C]=r|128&g,E[Q+15|0]=g|a[Q+15|0],(0|I)!=(0|(B=B+1|0)););}else o=-1;return D=Q+16|0,0|o}Gg(),t()},tc:function(A,I,g,B){A|=0,I|=0,g|=0,B|=0;var C,Q=0,E=0,i=0,r=0,o=0;if(n[12+(C=D-16|0)>>2]=0,B+-1>>>0<g>>>0){for(o=(Q=g+-1|0)+I|0,g=0,I=0;r=((128^(E=a[o-g|0]))-1&n[C+12>>2]+-1&i+-1)>>>8&1,n[C+12>>2]=n[C+12>>2]|0-r&g,I|=r,i|=E,(0|B)!=(0|(g=g+1|0)););n[A>>2]=Q-n[C+12>>2],A=I+-1|0}else A=-1;return 0|A},uc:function(){return 35762},vc:function(){return 10},wc:wB,xc:tB,yc:function(){return 35840},zc:_,Ac:v,Bc:function(I){return 0|function(I){I|=0;var g=0|hB(),Q=g+I|0;if(g<Q&&Q<65536){var e=new ArrayBuffer(o(Q,65536)),t=new A.Int8Array(e);t.set(E),E=t,E=new A.Int8Array(e),i=new A.Int16Array(e),n=new A.Int32Array(e),a=new A.Uint8Array(e),new A.Uint16Array(e),r=new A.Uint32Array(e),new A.Float32Array(e),new A.Float64Array(e),B=e,C.buffer=e}return g}(0|(I|=0))}}}({Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:1/0,Math:Math},A,I.buffer)}(RA,s,u)},instantiate:function(A,I){return{then:function(I){var g=new w.Module(A);I({instance:new w.Instance(g)})}}},RuntimeError:Error};function h(A,I,g,B){switch("*"===(g=g||"i8").charAt(g.length-1)&&(g="i32"),g){case"i1":case"i8":H[A>>0]=I;break;case"i16":b[A>>1]=I;break;case"i32":m[A>>2]=I;break;case"i64":tA=[I>>>0,(eA=I,+O(eA)>=1?eA>0?(0|AA(+$(eA/4294967296),4294967295))>>>0:~~+z((eA-+(~~eA>>>0))/4294967296)>>>0:0)],m[A>>2]=tA[0],m[A+4>>2]=tA[1];break;case"float":U[A>>2]=I;break;case"double":v[A>>3]=I;break;default:EA("invalid type for setValue: "+g)}}function D(A,I,g){switch("*"===(I=I||"i8").charAt(I.length-1)&&(I="i32"),I){case"i1":case"i8":return H[A>>0];case"i16":return b[A>>1];case"i32":case"i64":return m[A>>2];case"float":return U[A>>2];case"double":return v[A>>3];default:EA("invalid type for getValue: "+I)}return null}f=[],"object"!=typeof w&&EA("no native wasm support detected");var u=new w.Table({initial:14,maximum:22,element:"anyfunc"}),p=!1;function l(A,I){A||EA("Assertion failed: "+I)}var F="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function G(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.subarray&&F)return F.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var n=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|n:(7&E)<<18|i<<12|n<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var a=E-65536;Q+=String.fromCharCode(55296|a>>10,56320|1023&a)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function k(A,I){return A?G(Y,A,I):""}var _,H,Y,b,m,U,v,S=65536;function N(A,I){return A%I>0&&(A+=I-A%I),A}function R(A){_=A,I.HEAP8=H=new Int8Array(A),I.HEAP16=b=new Int16Array(A),I.HEAP32=m=new Int32Array(A),I.HEAPU8=Y=new Uint8Array(A),I.HEAPU16=new Uint16Array(A),I.HEAPU32=new Uint32Array(A),I.HEAPF32=U=new Float32Array(A),I.HEAPF64=v=new Float64Array(A)}var M=5279472,d=36432,P=I.INITIAL_MEMORY||16777216;function J(A){for(;A.length>0;){var g=A.shift();if("function"!=typeof g){var B=g.func;"number"==typeof B?void 0===g.arg?I.dynCall_v(B):I.dynCall_vi(B,g.arg):B(void 0===g.arg?null:g.arg)}else g(I)}}(s=I.wasmMemory?I.wasmMemory:new w.Memory({initial:P/S,maximum:2147483648/S}))&&(_=s.buffer),P=_.byteLength,R(_),m[d>>2]=M;var x=[],L=[],K=[],q=[];function X(){if(I.preRun)for("function"==typeof I.preRun&&(I.preRun=[I.preRun]);I.preRun.length;)j(I.preRun.shift());J(x)}function V(){J(L)}function T(){J(K)}function W(){if(I.postRun)for("function"==typeof I.postRun&&(I.postRun=[I.postRun]);I.postRun.length;)Z(I.postRun.shift());J(q)}function j(A){x.unshift(A)}function Z(A){q.unshift(A)}var O=Math.abs,z=Math.ceil,$=Math.floor,AA=Math.min,IA=0,gA=null,BA=null;function CA(A){IA++,I.monitorRunDependencies&&I.monitorRunDependencies(IA)}function QA(A){if(IA--,I.monitorRunDependencies&&I.monitorRunDependencies(IA),0==IA&&(null!==gA&&(clearInterval(gA),gA=null),BA)){var g=BA;BA=null,g()}}function EA(A){throw I.onAbort&&I.onAbort(A),y(A+=""),p=!0,A="abort("+A+"). Build with -s ASSERTIONS=1 for more info.",new w.RuntimeError(A)}function iA(A,I){return String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I)}I.preloadedImages={},I.preloadedAudios={};var nA="data:application/octet-stream;base64,";function aA(A){return iA(A,nA)}var rA="file://";function oA(A){return iA(A,rA)}var eA,tA,cA="";function fA(){try{if(f)return new Uint8Array(f);var A=SA(cA);if(A)return A;if(r)return r(cA);throw"both async and sync fetching of the wasm failed"}catch(A){EA(A)}}function yA(){return f||!Q&&!E||"function"!=typeof fetch||oA(cA)?new Promise((function(A,I){A(fA())})):fetch(cA,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at '"+cA+"'";return A.arrayBuffer()})).catch((function(){return fA()}))}function sA(){var A={a:RA};function g(A,g){var B=A.exports;I.asm=B,QA()}function B(A){g(A.instance)}function C(I){return yA().then((function(I){return w.instantiate(I,A)})).then(I,(function(A){y("failed to asynchronously prepare wasm: "+A),EA(A)}))}if(CA(),I.instantiateWasm)try{return I.instantiateWasm(A,g)}catch(A){return y("Module.instantiateWasm callback failed with error: "+A),!1}return function(){if(f||"function"!=typeof w.instantiateStreaming||aA(cA)||oA(cA)||"function"!=typeof fetch)return C(B);fetch(cA,{credentials:"same-origin"}).then((function(I){return w.instantiateStreaming(I,A).then(B,(function(A){return y("wasm streaming compile failed: "+A),y("falling back to ArrayBuffer instantiation"),C(B)}))}))}(),{}}aA(cA)||(cA=c(cA));var wA={1024:function(){return I.getRandomValue()},1062:function(){if(void 0===I.getRandomValue)try{var A="object"==typeof window?window:self,g=void 0!==A.crypto?A.crypto:A.msCrypto,B=function(){var A=new Uint32Array(1);return g.getRandomValues(A),A[0]>>>0};B(),I.getRandomValue=B}catch(A){try{var C=require("crypto"),Q=function(){var A=C.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};Q(),I.getRandomValue=Q}catch(A){throw"No secure random number generator found"}}}};function hA(A,I,g){var B=YA(I,g);return wA[A].apply(null,B)}function DA(A,I,g,B){EA("Assertion failed: "+k(A)+", at: "+[I?k(I):"unknown filename",g,B?k(B):"unknown function"])}function uA(){EA()}function pA(A,I,g){Y.copyWithin(A,I,I+g)}function lA(){return Y.length}function FA(A){try{return s.grow(A-_.byteLength+65535>>>16),R(s.buffer),1}catch(A){}}function GA(A){A>>>=0;var I=lA();if(A>2147483648)return!1;for(var g=1;g<=4;g*=2){var B=I*(1+.2/g);if(B=Math.min(B,A+100663296),FA(Math.min(2147483648,N(Math.max(16777216,A,B),65536))))return!0}return!1}function kA(A){return m[dA()>>2]=A,A}function _A(A){switch(A){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return kA(28),-1}L.push({func:function(){MA()}});var HA=[];function YA(A,I){var g;for(HA.length=0,I>>=2;g=Y[A++];){var B=g<105;B&&1&I&&I++,HA.push(B?v[I++>>1]:m[I]),++I}return HA}var bA=!1;function mA(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(bA&&l(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}var UA="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n="",a=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(a++))<<2|(C=i.indexOf(A.charAt(a++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(a++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(a++))),n+=String.fromCharCode(I),64!==Q&&(n+=String.fromCharCode(g)),64!==E&&(n+=String.fromCharCode(B))}while(a<A.length);return n};function vA(A){if("boolean"==typeof i&&i){var I;try{I=Buffer.from(A,"base64")}catch(g){I=new Buffer(A,"base64")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=UA(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function SA(A){if(aA(A))return vA(A.slice(nA.length))}var NA,RA={a:DA,c:uA,b:hA,e:pA,f:GA,memory:s,d:_A,table:u},MA=(sA(),I.___wasm_call_ctors=function(){return(MA=I.___wasm_call_ctors=I.asm.g).apply(null,arguments)}),dA=(I._crypto_aead_chacha20poly1305_encrypt_detached=function(){return(I._crypto_aead_chacha20poly1305_encrypt_detached=I.asm.h).apply(null,arguments)},I._crypto_aead_chacha20poly1305_encrypt=function(){return(I._crypto_aead_chacha20poly1305_encrypt=I.asm.i).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_encrypt_detached=function(){return(I._crypto_aead_chacha20poly1305_ietf_encrypt_detached=I.asm.j).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_encrypt=function(){return(I._crypto_aead_chacha20poly1305_ietf_encrypt=I.asm.k).apply(null,arguments)},I._crypto_aead_chacha20poly1305_decrypt_detached=function(){return(I._crypto_aead_chacha20poly1305_decrypt_detached=I.asm.l).apply(null,arguments)},I._crypto_aead_chacha20poly1305_decrypt=function(){return(I._crypto_aead_chacha20poly1305_decrypt=I.asm.m).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_decrypt_detached=function(){return(I._crypto_aead_chacha20poly1305_ietf_decrypt_detached=I.asm.n).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_decrypt=function(){return(I._crypto_aead_chacha20poly1305_ietf_decrypt=I.asm.o).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_keybytes=function(){return(I._crypto_aead_chacha20poly1305_ietf_keybytes=I.asm.p).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_npubbytes=function(){return(I._crypto_aead_chacha20poly1305_ietf_npubbytes=I.asm.q).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_nsecbytes=function(){return(I._crypto_aead_chacha20poly1305_ietf_nsecbytes=I.asm.r).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_abytes=function(){return(I._crypto_aead_chacha20poly1305_ietf_abytes=I.asm.s).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_messagebytes_max=function(){return(I._crypto_aead_chacha20poly1305_ietf_messagebytes_max=I.asm.t).apply(null,arguments)},I._crypto_aead_chacha20poly1305_ietf_keygen=function(){return(I._crypto_aead_chacha20poly1305_ietf_keygen=I.asm.u).apply(null,arguments)},I._crypto_aead_chacha20poly1305_keybytes=function(){return(I._crypto_aead_chacha20poly1305_keybytes=I.asm.v).apply(null,arguments)},I._crypto_aead_chacha20poly1305_npubbytes=function(){return(I._crypto_aead_chacha20poly1305_npubbytes=I.asm.w).apply(null,arguments)},I._crypto_aead_chacha20poly1305_nsecbytes=function(){return(I._crypto_aead_chacha20poly1305_nsecbytes=I.asm.x).apply(null,arguments)},I._crypto_aead_chacha20poly1305_abytes=function(){return(I._crypto_aead_chacha20poly1305_abytes=I.asm.y).apply(null,arguments)},I._crypto_aead_chacha20poly1305_messagebytes_max=function(){return(I._crypto_aead_chacha20poly1305_messagebytes_max=I.asm.z).apply(null,arguments)},I._crypto_aead_chacha20poly1305_keygen=function(){return(I._crypto_aead_chacha20poly1305_keygen=I.asm.A).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=function(){return(I._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=I.asm.B).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_encrypt=function(){return(I._crypto_aead_xchacha20poly1305_ietf_encrypt=I.asm.C).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=function(){return(I._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=I.asm.D).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_decrypt=function(){return(I._crypto_aead_xchacha20poly1305_ietf_decrypt=I.asm.E).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_keybytes=function(){return(I._crypto_aead_xchacha20poly1305_ietf_keybytes=I.asm.F).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_npubbytes=function(){return(I._crypto_aead_xchacha20poly1305_ietf_npubbytes=I.asm.G).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_nsecbytes=function(){return(I._crypto_aead_xchacha20poly1305_ietf_nsecbytes=I.asm.H).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_abytes=function(){return(I._crypto_aead_xchacha20poly1305_ietf_abytes=I.asm.I).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=function(){return(I._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=I.asm.J).apply(null,arguments)},I._crypto_aead_xchacha20poly1305_ietf_keygen=function(){return(I._crypto_aead_xchacha20poly1305_ietf_keygen=I.asm.K).apply(null,arguments)},I._crypto_auth_bytes=function(){return(I._crypto_auth_bytes=I.asm.L).apply(null,arguments)},I._crypto_auth_keybytes=function(){return(I._crypto_auth_keybytes=I.asm.M).apply(null,arguments)},I._crypto_auth=function(){return(I._crypto_auth=I.asm.N).apply(null,arguments)},I._crypto_auth_verify=function(){return(I._crypto_auth_verify=I.asm.O).apply(null,arguments)},I._crypto_auth_keygen=function(){return(I._crypto_auth_keygen=I.asm.P).apply(null,arguments)},I._crypto_box_seedbytes=function(){return(I._crypto_box_seedbytes=I.asm.Q).apply(null,arguments)},I._crypto_box_publickeybytes=function(){return(I._crypto_box_publickeybytes=I.asm.R).apply(null,arguments)},I._crypto_box_secretkeybytes=function(){return(I._crypto_box_secretkeybytes=I.asm.S).apply(null,arguments)},I._crypto_box_beforenmbytes=function(){return(I._crypto_box_beforenmbytes=I.asm.T).apply(null,arguments)},I._crypto_box_noncebytes=function(){return(I._crypto_box_noncebytes=I.asm.U).apply(null,arguments)},I._crypto_box_macbytes=function(){return(I._crypto_box_macbytes=I.asm.V).apply(null,arguments)},I._crypto_box_messagebytes_max=function(){return(I._crypto_box_messagebytes_max=I.asm.W).apply(null,arguments)},I._crypto_box_seed_keypair=function(){return(I._crypto_box_seed_keypair=I.asm.X).apply(null,arguments)},I._crypto_box_keypair=function(){return(I._crypto_box_keypair=I.asm.Y).apply(null,arguments)},I._crypto_box_beforenm=function(){return(I._crypto_box_beforenm=I.asm.Z).apply(null,arguments)},I._crypto_box_detached_afternm=function(){return(I._crypto_box_detached_afternm=I.asm._).apply(null,arguments)},I._crypto_box_detached=function(){return(I._crypto_box_detached=I.asm.$).apply(null,arguments)},I._crypto_box_easy_afternm=function(){return(I._crypto_box_easy_afternm=I.asm.aa).apply(null,arguments)},I._crypto_box_easy=function(){return(I._crypto_box_easy=I.asm.ba).apply(null,arguments)},I._crypto_box_open_detached_afternm=function(){return(I._crypto_box_open_detached_afternm=I.asm.ca).apply(null,arguments)},I._crypto_box_open_detached=function(){return(I._crypto_box_open_detached=I.asm.da).apply(null,arguments)},I._crypto_box_open_easy_afternm=function(){return(I._crypto_box_open_easy_afternm=I.asm.ea).apply(null,arguments)},I._crypto_box_open_easy=function(){return(I._crypto_box_open_easy=I.asm.fa).apply(null,arguments)},I._crypto_box_seal=function(){return(I._crypto_box_seal=I.asm.ga).apply(null,arguments)},I._crypto_box_seal_open=function(){return(I._crypto_box_seal_open=I.asm.ha).apply(null,arguments)},I._crypto_box_sealbytes=function(){return(I._crypto_box_sealbytes=I.asm.ia).apply(null,arguments)},I._crypto_generichash_bytes_min=function(){return(I._crypto_generichash_bytes_min=I.asm.ja).apply(null,arguments)},I._crypto_generichash_bytes_max=function(){return(I._crypto_generichash_bytes_max=I.asm.ka).apply(null,arguments)},I._crypto_generichash_bytes=function(){return(I._crypto_generichash_bytes=I.asm.la).apply(null,arguments)},I._crypto_generichash_keybytes_min=function(){return(I._crypto_generichash_keybytes_min=I.asm.ma).apply(null,arguments)},I._crypto_generichash_keybytes_max=function(){return(I._crypto_generichash_keybytes_max=I.asm.na).apply(null,arguments)},I._crypto_generichash_keybytes=function(){return(I._crypto_generichash_keybytes=I.asm.oa).apply(null,arguments)},I._crypto_generichash_statebytes=function(){return(I._crypto_generichash_statebytes=I.asm.pa).apply(null,arguments)},I._crypto_generichash=function(){return(I._crypto_generichash=I.asm.qa).apply(null,arguments)},I._crypto_generichash_init=function(){return(I._crypto_generichash_init=I.asm.ra).apply(null,arguments)},I._crypto_generichash_update=function(){return(I._crypto_generichash_update=I.asm.sa).apply(null,arguments)},I._crypto_generichash_final=function(){return(I._crypto_generichash_final=I.asm.ta).apply(null,arguments)},I._crypto_generichash_keygen=function(){return(I._crypto_generichash_keygen=I.asm.ua).apply(null,arguments)},I._crypto_hash_bytes=function(){return(I._crypto_hash_bytes=I.asm.va).apply(null,arguments)},I._crypto_hash=function(){return(I._crypto_hash=I.asm.wa).apply(null,arguments)},I._crypto_kdf_bytes_min=function(){return(I._crypto_kdf_bytes_min=I.asm.xa).apply(null,arguments)},I._crypto_kdf_bytes_max=function(){return(I._crypto_kdf_bytes_max=I.asm.ya).apply(null,arguments)},I._crypto_kdf_contextbytes=function(){return(I._crypto_kdf_contextbytes=I.asm.za).apply(null,arguments)},I._crypto_kdf_keybytes=function(){return(I._crypto_kdf_keybytes=I.asm.Aa).apply(null,arguments)},I._crypto_kdf_derive_from_key=function(){return(I._crypto_kdf_derive_from_key=I.asm.Ba).apply(null,arguments)},I._crypto_kdf_keygen=function(){return(I._crypto_kdf_keygen=I.asm.Ca).apply(null,arguments)},I._crypto_kx_seed_keypair=function(){return(I._crypto_kx_seed_keypair=I.asm.Da).apply(null,arguments)},I._crypto_kx_keypair=function(){return(I._crypto_kx_keypair=I.asm.Ea).apply(null,arguments)},I._crypto_kx_client_session_keys=function(){return(I._crypto_kx_client_session_keys=I.asm.Fa).apply(null,arguments)},I._crypto_kx_server_session_keys=function(){return(I._crypto_kx_server_session_keys=I.asm.Ga).apply(null,arguments)},I._crypto_kx_publickeybytes=function(){return(I._crypto_kx_publickeybytes=I.asm.Ha).apply(null,arguments)},I._crypto_kx_secretkeybytes=function(){return(I._crypto_kx_secretkeybytes=I.asm.Ia).apply(null,arguments)},I._crypto_kx_seedbytes=function(){return(I._crypto_kx_seedbytes=I.asm.Ja).apply(null,arguments)},I._crypto_kx_sessionkeybytes=function(){return(I._crypto_kx_sessionkeybytes=I.asm.Ka).apply(null,arguments)},I._crypto_pwhash_alg_argon2i13=function(){return(I._crypto_pwhash_alg_argon2i13=I.asm.La).apply(null,arguments)},I._crypto_pwhash_alg_argon2id13=function(){return(I._crypto_pwhash_alg_argon2id13=I.asm.Ma).apply(null,arguments)},I._crypto_pwhash_alg_default=function(){return(I._crypto_pwhash_alg_default=I.asm.Na).apply(null,arguments)},I._crypto_pwhash_bytes_min=function(){return(I._crypto_pwhash_bytes_min=I.asm.Oa).apply(null,arguments)},I._crypto_pwhash_bytes_max=function(){return(I._crypto_pwhash_bytes_max=I.asm.Pa).apply(null,arguments)},I._crypto_pwhash_passwd_min=function(){return(I._crypto_pwhash_passwd_min=I.asm.Qa).apply(null,arguments)},I._crypto_pwhash_passwd_max=function(){return(I._crypto_pwhash_passwd_max=I.asm.Ra).apply(null,arguments)},I._crypto_pwhash_saltbytes=function(){return(I._crypto_pwhash_saltbytes=I.asm.Sa).apply(null,arguments)},I._crypto_pwhash_strbytes=function(){return(I._crypto_pwhash_strbytes=I.asm.Ta).apply(null,arguments)},I._crypto_pwhash_strprefix=function(){return(I._crypto_pwhash_strprefix=I.asm.Ua).apply(null,arguments)},I._crypto_pwhash_opslimit_min=function(){return(I._crypto_pwhash_opslimit_min=I.asm.Va).apply(null,arguments)},I._crypto_pwhash_opslimit_max=function(){return(I._crypto_pwhash_opslimit_max=I.asm.Wa).apply(null,arguments)},I._crypto_pwhash_memlimit_min=function(){return(I._crypto_pwhash_memlimit_min=I.asm.Xa).apply(null,arguments)},I._crypto_pwhash_memlimit_max=function(){return(I._crypto_pwhash_memlimit_max=I.asm.Ya).apply(null,arguments)},I._crypto_pwhash_opslimit_interactive=function(){return(I._crypto_pwhash_opslimit_interactive=I.asm.Za).apply(null,arguments)},I._crypto_pwhash_memlimit_interactive=function(){return(I._crypto_pwhash_memlimit_interactive=I.asm._a).apply(null,arguments)},I._crypto_pwhash_opslimit_moderate=function(){return(I._crypto_pwhash_opslimit_moderate=I.asm.$a).apply(null,arguments)},I._crypto_pwhash_memlimit_moderate=function(){return(I._crypto_pwhash_memlimit_moderate=I.asm.ab).apply(null,arguments)},I._crypto_pwhash_opslimit_sensitive=function(){return(I._crypto_pwhash_opslimit_sensitive=I.asm.bb).apply(null,arguments)},I._crypto_pwhash_memlimit_sensitive=function(){return(I._crypto_pwhash_memlimit_sensitive=I.asm.cb).apply(null,arguments)},I._crypto_pwhash=function(){return(I._crypto_pwhash=I.asm.db).apply(null,arguments)},I._crypto_pwhash_str=function(){return(I._crypto_pwhash_str=I.asm.eb).apply(null,arguments)},I._crypto_pwhash_str_alg=function(){return(I._crypto_pwhash_str_alg=I.asm.fb).apply(null,arguments)},I._crypto_pwhash_str_verify=function(){return(I._crypto_pwhash_str_verify=I.asm.gb).apply(null,arguments)},I._crypto_pwhash_str_needs_rehash=function(){return(I._crypto_pwhash_str_needs_rehash=I.asm.hb).apply(null,arguments)},I._crypto_scalarmult_base=function(){return(I._crypto_scalarmult_base=I.asm.ib).apply(null,arguments)},I._crypto_scalarmult=function(){return(I._crypto_scalarmult=I.asm.jb).apply(null,arguments)},I._crypto_scalarmult_bytes=function(){return(I._crypto_scalarmult_bytes=I.asm.kb).apply(null,arguments)},I._crypto_scalarmult_scalarbytes=function(){return(I._crypto_scalarmult_scalarbytes=I.asm.lb).apply(null,arguments)},I._crypto_secretbox_keybytes=function(){return(I._crypto_secretbox_keybytes=I.asm.mb).apply(null,arguments)},I._crypto_secretbox_noncebytes=function(){return(I._crypto_secretbox_noncebytes=I.asm.nb).apply(null,arguments)},I._crypto_secretbox_macbytes=function(){return(I._crypto_secretbox_macbytes=I.asm.ob).apply(null,arguments)},I._crypto_secretbox_messagebytes_max=function(){return(I._crypto_secretbox_messagebytes_max=I.asm.pb).apply(null,arguments)},I._crypto_secretbox_keygen=function(){return(I._crypto_secretbox_keygen=I.asm.qb).apply(null,arguments)},I._crypto_secretbox_detached=function(){return(I._crypto_secretbox_detached=I.asm.rb).apply(null,arguments)},I._crypto_secretbox_easy=function(){return(I._crypto_secretbox_easy=I.asm.sb).apply(null,arguments)},I._crypto_secretbox_open_detached=function(){return(I._crypto_secretbox_open_detached=I.asm.tb).apply(null,arguments)},I._crypto_secretbox_open_easy=function(){return(I._crypto_secretbox_open_easy=I.asm.ub).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_keygen=function(){return(I._crypto_secretstream_xchacha20poly1305_keygen=I.asm.vb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_init_push=function(){return(I._crypto_secretstream_xchacha20poly1305_init_push=I.asm.wb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_init_pull=function(){return(I._crypto_secretstream_xchacha20poly1305_init_pull=I.asm.xb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_rekey=function(){return(I._crypto_secretstream_xchacha20poly1305_rekey=I.asm.yb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_push=function(){return(I._crypto_secretstream_xchacha20poly1305_push=I.asm.zb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_pull=function(){return(I._crypto_secretstream_xchacha20poly1305_pull=I.asm.Ab).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_statebytes=function(){return(I._crypto_secretstream_xchacha20poly1305_statebytes=I.asm.Bb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_abytes=function(){return(I._crypto_secretstream_xchacha20poly1305_abytes=I.asm.Cb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_headerbytes=function(){return(I._crypto_secretstream_xchacha20poly1305_headerbytes=I.asm.Db).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_keybytes=function(){return(I._crypto_secretstream_xchacha20poly1305_keybytes=I.asm.Eb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_messagebytes_max=function(){return(I._crypto_secretstream_xchacha20poly1305_messagebytes_max=I.asm.Fb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_tag_message=function(){return(I._crypto_secretstream_xchacha20poly1305_tag_message=I.asm.Gb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_tag_push=function(){return(I._crypto_secretstream_xchacha20poly1305_tag_push=I.asm.Hb).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_tag_rekey=function(){return(I._crypto_secretstream_xchacha20poly1305_tag_rekey=I.asm.Ib).apply(null,arguments)},I._crypto_secretstream_xchacha20poly1305_tag_final=function(){return(I._crypto_secretstream_xchacha20poly1305_tag_final=I.asm.Jb).apply(null,arguments)},I._crypto_shorthash_bytes=function(){return(I._crypto_shorthash_bytes=I.asm.Kb).apply(null,arguments)},I._crypto_shorthash_keybytes=function(){return(I._crypto_shorthash_keybytes=I.asm.Lb).apply(null,arguments)},I._crypto_shorthash=function(){return(I._crypto_shorthash=I.asm.Mb).apply(null,arguments)},I._crypto_shorthash_keygen=function(){return(I._crypto_shorthash_keygen=I.asm.Nb).apply(null,arguments)},I._crypto_sign_statebytes=function(){return(I._crypto_sign_statebytes=I.asm.Ob).apply(null,arguments)},I._crypto_sign_bytes=function(){return(I._crypto_sign_bytes=I.asm.Pb).apply(null,arguments)},I._crypto_sign_seedbytes=function(){return(I._crypto_sign_seedbytes=I.asm.Qb).apply(null,arguments)},I._crypto_sign_publickeybytes=function(){return(I._crypto_sign_publickeybytes=I.asm.Rb).apply(null,arguments)},I._crypto_sign_secretkeybytes=function(){return(I._crypto_sign_secretkeybytes=I.asm.Sb).apply(null,arguments)},I._crypto_sign_messagebytes_max=function(){return(I._crypto_sign_messagebytes_max=I.asm.Tb).apply(null,arguments)},I._crypto_sign_seed_keypair=function(){return(I._crypto_sign_seed_keypair=I.asm.Ub).apply(null,arguments)},I._crypto_sign_keypair=function(){return(I._crypto_sign_keypair=I.asm.Vb).apply(null,arguments)},I._crypto_sign=function(){return(I._crypto_sign=I.asm.Wb).apply(null,arguments)},I._crypto_sign_open=function(){return(I._crypto_sign_open=I.asm.Xb).apply(null,arguments)},I._crypto_sign_detached=function(){return(I._crypto_sign_detached=I.asm.Yb).apply(null,arguments)},I._crypto_sign_verify_detached=function(){return(I._crypto_sign_verify_detached=I.asm.Zb).apply(null,arguments)},I._crypto_sign_init=function(){return(I._crypto_sign_init=I.asm._b).apply(null,arguments)},I._crypto_sign_update=function(){return(I._crypto_sign_update=I.asm.$b).apply(null,arguments)},I._crypto_sign_final_create=function(){return(I._crypto_sign_final_create=I.asm.ac).apply(null,arguments)},I._crypto_sign_final_verify=function(){return(I._crypto_sign_final_verify=I.asm.bc).apply(null,arguments)},I._crypto_sign_ed25519_pk_to_curve25519=function(){return(I._crypto_sign_ed25519_pk_to_curve25519=I.asm.cc).apply(null,arguments)},I._crypto_sign_ed25519_sk_to_curve25519=function(){return(I._crypto_sign_ed25519_sk_to_curve25519=I.asm.dc).apply(null,arguments)},I._randombytes_random=function(){return(I._randombytes_random=I.asm.ec).apply(null,arguments)},I._randombytes_stir=function(){return(I._randombytes_stir=I.asm.fc).apply(null,arguments)},I._randombytes_uniform=function(){return(I._randombytes_uniform=I.asm.gc).apply(null,arguments)},I._randombytes_buf=function(){return(I._randombytes_buf=I.asm.hc).apply(null,arguments)},I._randombytes_buf_deterministic=function(){return(I._randombytes_buf_deterministic=I.asm.ic).apply(null,arguments)},I._randombytes_seedbytes=function(){return(I._randombytes_seedbytes=I.asm.jc).apply(null,arguments)},I._randombytes_close=function(){return(I._randombytes_close=I.asm.kc).apply(null,arguments)},I._randombytes=function(){return(I._randombytes=I.asm.lc).apply(null,arguments)},I._sodium_bin2hex=function(){return(I._sodium_bin2hex=I.asm.mc).apply(null,arguments)},I._sodium_hex2bin=function(){return(I._sodium_hex2bin=I.asm.nc).apply(null,arguments)},I._sodium_base64_encoded_len=function(){return(I._sodium_base64_encoded_len=I.asm.oc).apply(null,arguments)},I._sodium_bin2base64=function(){return(I._sodium_bin2base64=I.asm.pc).apply(null,arguments)},I._sodium_base642bin=function(){return(I._sodium_base642bin=I.asm.qc).apply(null,arguments)},I._sodium_init=function(){return(I._sodium_init=I.asm.rc).apply(null,arguments)},I._sodium_pad=function(){return(I._sodium_pad=I.asm.sc).apply(null,arguments)},I._sodium_unpad=function(){return(I._sodium_unpad=I.asm.tc).apply(null,arguments)},I._sodium_version_string=function(){return(I._sodium_version_string=I.asm.uc).apply(null,arguments)},I._sodium_library_version_major=function(){return(I._sodium_library_version_major=I.asm.vc).apply(null,arguments)},I._sodium_library_version_minor=function(){return(I._sodium_library_version_minor=I.asm.wc).apply(null,arguments)},I._sodium_library_minimal=function(){return(I._sodium_library_minimal=I.asm.xc).apply(null,arguments)},I.___errno_location=function(){return(dA=I.___errno_location=I.asm.yc).apply(null,arguments)}),PA=(I._malloc=function(){return(I._malloc=I.asm.zc).apply(null,arguments)},I._free=function(){return(I._free=I.asm.Ac).apply(null,arguments)},I.__growWasmMemory=function(){return(PA=I.__growWasmMemory=I.asm.Bc).apply(null,arguments)});function JA(A){function g(){NA||(NA=!0,I.calledRun=!0,p||(V(),T(),I.onRuntimeInitialized&&I.onRuntimeInitialized(),W()))}A=A||C,IA>0||(X(),IA>0||(I.setStatus?(I.setStatus("Running..."),setTimeout((function(){setTimeout((function(){I.setStatus("")}),1),g()}),1)):g()))}if(I.setValue=h,I.getValue=D,I.UTF8ToString=k,BA=function A(){NA||JA(),NA||(BA=A)},I.run=JA,I.preInit)for("function"==typeof I.preInit&&(I.preInit=[I.preInit]);I.preInit.length>0;)I.preInit.pop()();JA(),Object.keys(B).forEach((function(A){"getRandomValue"!==A&&delete B[A]})),Object.keys(I).forEach((function(A){B[A]=I[A]}))};var g,C=void 0!==C?C:{},Q={};for(g in C)C.hasOwnProperty(g)&&(Q[g]=C[g]);var E=[],i=!1,n=!1,a=!1,r=!1;i="object"==typeof window,n="function"==typeof importScripts,a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,r=!i&&!a&&!n;var o,e,t,c,f="";function y(A){return C.locateFile?C.locateFile(A,f):f+A}a?(f=n?require("path").dirname(f)+"/":__dirname+"/",o=function(A,I){var g=NA(A);return g?I?g:g.toString():(t||(t=require("fs")),c||(c=require("path")),A=c.normalize(A),t.readFileSync(A,I?null:"utf8"))},e=function(A){var I=o(A,!0);return I.buffer||(I=new Uint8Array(I)),F(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),E=process.argv.slice(2),"undefined"!=typeof module&&(module.exports=C),process.on("unhandledRejection",iA),C.inspect=function(){return"[Emscripten Module object]"}):r?("undefined"!=typeof read&&(o=function(A){var I=NA(A);return I?UA(I):read(A)}),e=function(A){var I;return(I=NA(A))?I:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(F("object"==typeof(I=read(A,"binary"))),I)},"undefined"!=typeof scriptArgs?E=scriptArgs:void 0!==arguments&&(E=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(i||n)&&(n?f=self.location.href:document.currentScript&&(f=document.currentScript.src),f=0!==f.indexOf("blob:")?f.substr(0,f.lastIndexOf("/")+1):"",o=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=NA(A);if(g)return UA(g);throw I}},n&&(e=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=NA(A);if(g)return g;throw I}})),C.print;var s,w,h=C.printErr||void 0;for(g in Q)Q.hasOwnProperty(g)&&(C[g]=Q[g]);function D(A,I,g,B){switch("*"===(g=g||"i8").charAt(g.length-1)&&(g="i32"),g){case"i1":case"i8":Y[A>>0]=I;break;case"i16":m[A>>1]=I;break;case"i32":U[A>>2]=I;break;case"i64":cA=[I>>>0,(tA=I,+z(tA)>=1?tA>0?(0|IA(+AA(tA/4294967296),4294967295))>>>0:~~+$((tA-+(~~tA>>>0))/4294967296)>>>0:0)],U[A>>2]=cA[0],U[A+4>>2]=cA[1];break;case"float":v[A>>2]=I;break;case"double":S[A>>3]=I;break;default:iA("invalid type for setValue: "+g)}}function u(A,I,g){switch("*"===(I=I||"i8").charAt(I.length-1)&&(I="i32"),I){case"i1":case"i8":return Y[A>>0];case"i16":return m[A>>1];case"i32":case"i64":return U[A>>2];case"float":return v[A>>2];case"double":return S[A>>3];default:iA("invalid type for getValue: "+I)}return null}Q=null,C.arguments&&(E=C.arguments),C.thisProgram&&C.thisProgram,C.quit&&C.quit,C.wasmBinary&&(s=C.wasmBinary),C.noExitRuntime&&C.noExitRuntime,"object"!=typeof WebAssembly&&iA("no native wasm support detected");var p=new WebAssembly.Table({initial:14,maximum:22,element:"anyfunc"}),l=!1;function F(A,I){A||iA("Assertion failed: "+I)}var G="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function k(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.subarray&&G)return G.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var n=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|n:(7&E)<<18|i<<12|n<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var a=E-65536;Q+=String.fromCharCode(55296|a>>10,56320|1023&a)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function _(A,I){return A?k(b,A,I):""}var H,Y,b,m,U,v,S,N=65536;function R(A,I){return A%I>0&&(A+=I-A%I),A}function M(A){H=A,C.HEAP8=Y=new Int8Array(A),C.HEAP16=m=new Int16Array(A),C.HEAP32=U=new Int32Array(A),C.HEAPU8=b=new Uint8Array(A),C.HEAPU16=new Uint16Array(A),C.HEAPU32=new Uint32Array(A),C.HEAPF32=v=new Float32Array(A),C.HEAPF64=S=new Float64Array(A)}var d=5279472,P=36432,J=C.INITIAL_MEMORY||16777216;function x(A){for(;A.length>0;){var I=A.shift();if("function"!=typeof I){var g=I.func;"number"==typeof g?void 0===I.arg?C.dynCall_v(g):C.dynCall_vi(g,I.arg):g(void 0===I.arg?null:I.arg)}else I(C)}}(w=C.wasmMemory?C.wasmMemory:new WebAssembly.Memory({initial:J/N,maximum:2147483648/N}))&&(H=w.buffer),J=H.byteLength,M(H),U[P>>2]=d;var L=[],K=[],q=[],X=[];function V(){if(C.preRun)for("function"==typeof C.preRun&&(C.preRun=[C.preRun]);C.preRun.length;)Z(C.preRun.shift());x(L)}function T(){x(K)}function W(){x(q)}function j(){if(C.postRun)for("function"==typeof C.postRun&&(C.postRun=[C.postRun]);C.postRun.length;)O(C.postRun.shift());x(X)}function Z(A){L.unshift(A)}function O(A){X.unshift(A)}var z=Math.abs,$=Math.ceil,AA=Math.floor,IA=Math.min,gA=0,BA=null,CA=null;function QA(A){gA++,C.monitorRunDependencies&&C.monitorRunDependencies(gA)}function EA(A){if(gA--,C.monitorRunDependencies&&C.monitorRunDependencies(gA),0==gA&&(null!==BA&&(clearInterval(BA),BA=null),CA)){var I=CA;CA=null,I()}}function iA(A){throw C.onAbort&&C.onAbort(A),h(A+=""),l=!0,A="abort("+A+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(A)}function nA(A,I){return String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I)}C.preloadedImages={},C.preloadedAudios={};var aA="data:application/octet-stream;base64,";function rA(A){return nA(A,aA)}var oA="file://";function eA(A){return nA(A,oA)}var tA,cA,fA="data:application/octet-stream;base64,";function yA(){try{if(s)return new Uint8Array(s);var A=NA(fA);if(A)return A;if(e)return e(fA);throw"both async and sync fetching of the wasm failed"}catch(A){iA(A)}}function sA(){return s||!i&&!n||"function"!=typeof fetch||eA(fA)?new Promise((function(A,I){A(yA())})):fetch(fA,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at '"+fA+"'";return A.arrayBuffer()})).catch((function(){return yA()}))}function wA(){var A={a:MA};function I(A,I){var g=A.exports;C.asm=g,EA()}function g(A){I(A.instance)}function B(I){return sA().then((function(I){return WebAssembly.instantiate(I,A)})).then(I,(function(A){h("failed to asynchronously prepare wasm: "+A),iA(A)}))}if(QA(),C.instantiateWasm)try{return C.instantiateWasm(A,I)}catch(A){return h("Module.instantiateWasm callback failed with error: "+A),!1}return function(){if(s||"function"!=typeof WebAssembly.instantiateStreaming||rA(fA)||eA(fA)||"function"!=typeof fetch)return B(g);fetch(fA,{credentials:"same-origin"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){return h("wasm streaming compile failed: "+A),h("falling back to ArrayBuffer instantiation"),B(g)}))}))}(),{}}rA(fA)||(fA=y(fA));var hA={1024:function(){return C.getRandomValue()},1062:function(){if(void 0===C.getRandomValue)try{var A="object"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto,g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),C.getRandomValue=g}catch(A){try{var B=require("crypto"),Q=function(){var A=B.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};Q(),C.getRandomValue=Q}catch(A){throw"No secure random number generator found"}}}};function DA(A,I,g){var B=bA(I,g);return hA[A].apply(null,B)}function uA(A,I,g,B){iA("Assertion failed: "+_(A)+", at: "+[I?_(I):"unknown filename",g,B?_(B):"unknown function"])}function pA(){iA()}function lA(A,I,g){b.copyWithin(A,I,I+g)}function FA(){return b.length}function GA(A){try{return w.grow(A-H.byteLength+65535>>>16),M(w.buffer),1}catch(A){}}function kA(A){A>>>=0;var I=FA();if(A>2147483648)return!1;for(var g=1;g<=4;g*=2){var B=I*(1+.2/g);if(B=Math.min(B,A+100663296),GA(Math.min(2147483648,R(Math.max(16777216,A,B),65536))))return!0}return!1}function _A(A){return U[PA()>>2]=A,A}function HA(A){switch(A){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return _A(28),-1}K.push({func:function(){dA()}});var YA=[];function bA(A,I){var g;for(YA.length=0,I>>=2;g=b[A++];){var B=g<105;B&&1&I&&I++,YA.push(B?S[I++>>1]:U[I]),++I}return YA}var mA=!1;function UA(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(mA&&F(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}var vA="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n="",a=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(a++))<<2|(C=i.indexOf(A.charAt(a++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(a++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(a++))),n+=String.fromCharCode(I),64!==Q&&(n+=String.fromCharCode(g)),64!==E&&(n+=String.fromCharCode(B))}while(a<A.length);return n};function SA(A){if("boolean"==typeof a&&a){var I;try{I=Buffer.from(A,"base64")}catch(g){I=new Buffer(A,"base64")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=vA(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function NA(A){if(rA(A))return SA(A.slice(aA.length))}var RA,MA={a:uA,c:pA,b:DA,e:lA,f:kA,memory:w,d:HA,table:p},dA=(wA(),C.___wasm_call_ctors=function(){return(dA=C.___wasm_call_ctors=C.asm.g).apply(null,arguments)}),PA=(C._crypto_aead_chacha20poly1305_encrypt_detached=function(){return(C._crypto_aead_chacha20poly1305_encrypt_detached=C.asm.h).apply(null,arguments)},C._crypto_aead_chacha20poly1305_encrypt=function(){return(C._crypto_aead_chacha20poly1305_encrypt=C.asm.i).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_encrypt_detached=function(){return(C._crypto_aead_chacha20poly1305_ietf_encrypt_detached=C.asm.j).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_encrypt=function(){return(C._crypto_aead_chacha20poly1305_ietf_encrypt=C.asm.k).apply(null,arguments)},C._crypto_aead_chacha20poly1305_decrypt_detached=function(){return(C._crypto_aead_chacha20poly1305_decrypt_detached=C.asm.l).apply(null,arguments)},C._crypto_aead_chacha20poly1305_decrypt=function(){return(C._crypto_aead_chacha20poly1305_decrypt=C.asm.m).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_decrypt_detached=function(){return(C._crypto_aead_chacha20poly1305_ietf_decrypt_detached=C.asm.n).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_decrypt=function(){return(C._crypto_aead_chacha20poly1305_ietf_decrypt=C.asm.o).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_keybytes=function(){return(C._crypto_aead_chacha20poly1305_ietf_keybytes=C.asm.p).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_npubbytes=function(){return(C._crypto_aead_chacha20poly1305_ietf_npubbytes=C.asm.q).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_nsecbytes=function(){return(C._crypto_aead_chacha20poly1305_ietf_nsecbytes=C.asm.r).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_abytes=function(){return(C._crypto_aead_chacha20poly1305_ietf_abytes=C.asm.s).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_messagebytes_max=function(){return(C._crypto_aead_chacha20poly1305_ietf_messagebytes_max=C.asm.t).apply(null,arguments)},C._crypto_aead_chacha20poly1305_ietf_keygen=function(){return(C._crypto_aead_chacha20poly1305_ietf_keygen=C.asm.u).apply(null,arguments)},C._crypto_aead_chacha20poly1305_keybytes=function(){return(C._crypto_aead_chacha20poly1305_keybytes=C.asm.v).apply(null,arguments)},C._crypto_aead_chacha20poly1305_npubbytes=function(){return(C._crypto_aead_chacha20poly1305_npubbytes=C.asm.w).apply(null,arguments)},C._crypto_aead_chacha20poly1305_nsecbytes=function(){return(C._crypto_aead_chacha20poly1305_nsecbytes=C.asm.x).apply(null,arguments)},C._crypto_aead_chacha20poly1305_abytes=function(){return(C._crypto_aead_chacha20poly1305_abytes=C.asm.y).apply(null,arguments)},C._crypto_aead_chacha20poly1305_messagebytes_max=function(){return(C._crypto_aead_chacha20poly1305_messagebytes_max=C.asm.z).apply(null,arguments)},C._crypto_aead_chacha20poly1305_keygen=function(){return(C._crypto_aead_chacha20poly1305_keygen=C.asm.A).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=function(){return(C._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=C.asm.B).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_encrypt=function(){return(C._crypto_aead_xchacha20poly1305_ietf_encrypt=C.asm.C).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=function(){return(C._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=C.asm.D).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_decrypt=function(){return(C._crypto_aead_xchacha20poly1305_ietf_decrypt=C.asm.E).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_keybytes=function(){return(C._crypto_aead_xchacha20poly1305_ietf_keybytes=C.asm.F).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_npubbytes=function(){return(C._crypto_aead_xchacha20poly1305_ietf_npubbytes=C.asm.G).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_nsecbytes=function(){return(C._crypto_aead_xchacha20poly1305_ietf_nsecbytes=C.asm.H).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_abytes=function(){return(C._crypto_aead_xchacha20poly1305_ietf_abytes=C.asm.I).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=function(){return(C._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=C.asm.J).apply(null,arguments)},C._crypto_aead_xchacha20poly1305_ietf_keygen=function(){return(C._crypto_aead_xchacha20poly1305_ietf_keygen=C.asm.K).apply(null,arguments)},C._crypto_auth_bytes=function(){return(C._crypto_auth_bytes=C.asm.L).apply(null,arguments)},C._crypto_auth_keybytes=function(){return(C._crypto_auth_keybytes=C.asm.M).apply(null,arguments)},C._crypto_auth=function(){return(C._crypto_auth=C.asm.N).apply(null,arguments)},C._crypto_auth_verify=function(){return(C._crypto_auth_verify=C.asm.O).apply(null,arguments)},C._crypto_auth_keygen=function(){return(C._crypto_auth_keygen=C.asm.P).apply(null,arguments)},C._crypto_box_seedbytes=function(){return(C._crypto_box_seedbytes=C.asm.Q).apply(null,arguments)},C._crypto_box_publickeybytes=function(){return(C._crypto_box_publickeybytes=C.asm.R).apply(null,arguments)},C._crypto_box_secretkeybytes=function(){return(C._crypto_box_secretkeybytes=C.asm.S).apply(null,arguments)},C._crypto_box_beforenmbytes=function(){return(C._crypto_box_beforenmbytes=C.asm.T).apply(null,arguments)},C._crypto_box_noncebytes=function(){return(C._crypto_box_noncebytes=C.asm.U).apply(null,arguments)},C._crypto_box_macbytes=function(){return(C._crypto_box_macbytes=C.asm.V).apply(null,arguments)},C._crypto_box_messagebytes_max=function(){return(C._crypto_box_messagebytes_max=C.asm.W).apply(null,arguments)},C._crypto_box_seed_keypair=function(){return(C._crypto_box_seed_keypair=C.asm.X).apply(null,arguments)},C._crypto_box_keypair=function(){return(C._crypto_box_keypair=C.asm.Y).apply(null,arguments)},C._crypto_box_beforenm=function(){return(C._crypto_box_beforenm=C.asm.Z).apply(null,arguments)},C._crypto_box_detached_afternm=function(){return(C._crypto_box_detached_afternm=C.asm._).apply(null,arguments)},C._crypto_box_detached=function(){return(C._crypto_box_detached=C.asm.$).apply(null,arguments)},C._crypto_box_easy_afternm=function(){return(C._crypto_box_easy_afternm=C.asm.aa).apply(null,arguments)},C._crypto_box_easy=function(){return(C._crypto_box_easy=C.asm.ba).apply(null,arguments)},C._crypto_box_open_detached_afternm=function(){return(C._crypto_box_open_detached_afternm=C.asm.ca).apply(null,arguments)},C._crypto_box_open_detached=function(){return(C._crypto_box_open_detached=C.asm.da).apply(null,arguments)},C._crypto_box_open_easy_afternm=function(){return(C._crypto_box_open_easy_afternm=C.asm.ea).apply(null,arguments)},C._crypto_box_open_easy=function(){return(C._crypto_box_open_easy=C.asm.fa).apply(null,arguments)},C._crypto_box_seal=function(){return(C._crypto_box_seal=C.asm.ga).apply(null,arguments)},C._crypto_box_seal_open=function(){return(C._crypto_box_seal_open=C.asm.ha).apply(null,arguments)},C._crypto_box_sealbytes=function(){return(C._crypto_box_sealbytes=C.asm.ia).apply(null,arguments)},C._crypto_generichash_bytes_min=function(){return(C._crypto_generichash_bytes_min=C.asm.ja).apply(null,arguments)},C._crypto_generichash_bytes_max=function(){return(C._crypto_generichash_bytes_max=C.asm.ka).apply(null,arguments)},C._crypto_generichash_bytes=function(){return(C._crypto_generichash_bytes=C.asm.la).apply(null,arguments)},C._crypto_generichash_keybytes_min=function(){return(C._crypto_generichash_keybytes_min=C.asm.ma).apply(null,arguments)},C._crypto_generichash_keybytes_max=function(){return(C._crypto_generichash_keybytes_max=C.asm.na).apply(null,arguments)},C._crypto_generichash_keybytes=function(){return(C._crypto_generichash_keybytes=C.asm.oa).apply(null,arguments)},C._crypto_generichash_statebytes=function(){return(C._crypto_generichash_statebytes=C.asm.pa).apply(null,arguments)},C._crypto_generichash=function(){return(C._crypto_generichash=C.asm.qa).apply(null,arguments)},C._crypto_generichash_init=function(){return(C._crypto_generichash_init=C.asm.ra).apply(null,arguments)},C._crypto_generichash_update=function(){return(C._crypto_generichash_update=C.asm.sa).apply(null,arguments)},C._crypto_generichash_final=function(){return(C._crypto_generichash_final=C.asm.ta).apply(null,arguments)},C._crypto_generichash_keygen=function(){return(C._crypto_generichash_keygen=C.asm.ua).apply(null,arguments)},C._crypto_hash_bytes=function(){return(C._crypto_hash_bytes=C.asm.va).apply(null,arguments)},C._crypto_hash=function(){return(C._crypto_hash=C.asm.wa).apply(null,arguments)},C._crypto_kdf_bytes_min=function(){return(C._crypto_kdf_bytes_min=C.asm.xa).apply(null,arguments)},C._crypto_kdf_bytes_max=function(){return(C._crypto_kdf_bytes_max=C.asm.ya).apply(null,arguments)},C._crypto_kdf_contextbytes=function(){return(C._crypto_kdf_contextbytes=C.asm.za).apply(null,arguments)},C._crypto_kdf_keybytes=function(){return(C._crypto_kdf_keybytes=C.asm.Aa).apply(null,arguments)},C._crypto_kdf_derive_from_key=function(){return(C._crypto_kdf_derive_from_key=C.asm.Ba).apply(null,arguments)},C._crypto_kdf_keygen=function(){return(C._crypto_kdf_keygen=C.asm.Ca).apply(null,arguments)},C._crypto_kx_seed_keypair=function(){return(C._crypto_kx_seed_keypair=C.asm.Da).apply(null,arguments)},C._crypto_kx_keypair=function(){return(C._crypto_kx_keypair=C.asm.Ea).apply(null,arguments)},C._crypto_kx_client_session_keys=function(){return(C._crypto_kx_client_session_keys=C.asm.Fa).apply(null,arguments)},C._crypto_kx_server_session_keys=function(){return(C._crypto_kx_server_session_keys=C.asm.Ga).apply(null,arguments)},C._crypto_kx_publickeybytes=function(){return(C._crypto_kx_publickeybytes=C.asm.Ha).apply(null,arguments)},C._crypto_kx_secretkeybytes=function(){return(C._crypto_kx_secretkeybytes=C.asm.Ia).apply(null,arguments)},C._crypto_kx_seedbytes=function(){return(C._crypto_kx_seedbytes=C.asm.Ja).apply(null,arguments)},C._crypto_kx_sessionkeybytes=function(){return(C._crypto_kx_sessionkeybytes=C.asm.Ka).apply(null,arguments)},C._crypto_pwhash_alg_argon2i13=function(){return(C._crypto_pwhash_alg_argon2i13=C.asm.La).apply(null,arguments)},C._crypto_pwhash_alg_argon2id13=function(){return(C._crypto_pwhash_alg_argon2id13=C.asm.Ma).apply(null,arguments)},C._crypto_pwhash_alg_default=function(){return(C._crypto_pwhash_alg_default=C.asm.Na).apply(null,arguments)},C._crypto_pwhash_bytes_min=function(){return(C._crypto_pwhash_bytes_min=C.asm.Oa).apply(null,arguments)},C._crypto_pwhash_bytes_max=function(){return(C._crypto_pwhash_bytes_max=C.asm.Pa).apply(null,arguments)},C._crypto_pwhash_passwd_min=function(){return(C._crypto_pwhash_passwd_min=C.asm.Qa).apply(null,arguments)},C._crypto_pwhash_passwd_max=function(){return(C._crypto_pwhash_passwd_max=C.asm.Ra).apply(null,arguments)},C._crypto_pwhash_saltbytes=function(){return(C._crypto_pwhash_saltbytes=C.asm.Sa).apply(null,arguments)},C._crypto_pwhash_strbytes=function(){return(C._crypto_pwhash_strbytes=C.asm.Ta).apply(null,arguments)},C._crypto_pwhash_strprefix=function(){return(C._crypto_pwhash_strprefix=C.asm.Ua).apply(null,arguments)},C._crypto_pwhash_opslimit_min=function(){return(C._crypto_pwhash_opslimit_min=C.asm.Va).apply(null,arguments)},C._crypto_pwhash_opslimit_max=function(){return(C._crypto_pwhash_opslimit_max=C.asm.Wa).apply(null,arguments)},C._crypto_pwhash_memlimit_min=function(){return(C._crypto_pwhash_memlimit_min=C.asm.Xa).apply(null,arguments)},C._crypto_pwhash_memlimit_max=function(){return(C._crypto_pwhash_memlimit_max=C.asm.Ya).apply(null,arguments)},C._crypto_pwhash_opslimit_interactive=function(){return(C._crypto_pwhash_opslimit_interactive=C.asm.Za).apply(null,arguments)},C._crypto_pwhash_memlimit_interactive=function(){return(C._crypto_pwhash_memlimit_interactive=C.asm._a).apply(null,arguments)},C._crypto_pwhash_opslimit_moderate=function(){return(C._crypto_pwhash_opslimit_moderate=C.asm.$a).apply(null,arguments)},C._crypto_pwhash_memlimit_moderate=function(){return(C._crypto_pwhash_memlimit_moderate=C.asm.ab).apply(null,arguments)},C._crypto_pwhash_opslimit_sensitive=function(){return(C._crypto_pwhash_opslimit_sensitive=C.asm.bb).apply(null,arguments)},C._crypto_pwhash_memlimit_sensitive=function(){return(C._crypto_pwhash_memlimit_sensitive=C.asm.cb).apply(null,arguments)},C._crypto_pwhash=function(){return(C._crypto_pwhash=C.asm.db).apply(null,arguments)},C._crypto_pwhash_str=function(){return(C._crypto_pwhash_str=C.asm.eb).apply(null,arguments)},C._crypto_pwhash_str_alg=function(){return(C._crypto_pwhash_str_alg=C.asm.fb).apply(null,arguments)},C._crypto_pwhash_str_verify=function(){return(C._crypto_pwhash_str_verify=C.asm.gb).apply(null,arguments)},C._crypto_pwhash_str_needs_rehash=function(){return(C._crypto_pwhash_str_needs_rehash=C.asm.hb).apply(null,arguments)},C._crypto_scalarmult_base=function(){return(C._crypto_scalarmult_base=C.asm.ib).apply(null,arguments)},C._crypto_scalarmult=function(){return(C._crypto_scalarmult=C.asm.jb).apply(null,arguments)},C._crypto_scalarmult_bytes=function(){return(C._crypto_scalarmult_bytes=C.asm.kb).apply(null,arguments)},C._crypto_scalarmult_scalarbytes=function(){return(C._crypto_scalarmult_scalarbytes=C.asm.lb).apply(null,arguments)},C._crypto_secretbox_keybytes=function(){return(C._crypto_secretbox_keybytes=C.asm.mb).apply(null,arguments)},C._crypto_secretbox_noncebytes=function(){return(C._crypto_secretbox_noncebytes=C.asm.nb).apply(null,arguments)},C._crypto_secretbox_macbytes=function(){return(C._crypto_secretbox_macbytes=C.asm.ob).apply(null,arguments)},C._crypto_secretbox_messagebytes_max=function(){return(C._crypto_secretbox_messagebytes_max=C.asm.pb).apply(null,arguments)},C._crypto_secretbox_keygen=function(){return(C._crypto_secretbox_keygen=C.asm.qb).apply(null,arguments)},C._crypto_secretbox_detached=function(){return(C._crypto_secretbox_detached=C.asm.rb).apply(null,arguments)},C._crypto_secretbox_easy=function(){return(C._crypto_secretbox_easy=C.asm.sb).apply(null,arguments)},C._crypto_secretbox_open_detached=function(){return(C._crypto_secretbox_open_detached=C.asm.tb).apply(null,arguments)},C._crypto_secretbox_open_easy=function(){return(C._crypto_secretbox_open_easy=C.asm.ub).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_keygen=function(){return(C._crypto_secretstream_xchacha20poly1305_keygen=C.asm.vb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_init_push=function(){return(C._crypto_secretstream_xchacha20poly1305_init_push=C.asm.wb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_init_pull=function(){return(C._crypto_secretstream_xchacha20poly1305_init_pull=C.asm.xb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_rekey=function(){return(C._crypto_secretstream_xchacha20poly1305_rekey=C.asm.yb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_push=function(){return(C._crypto_secretstream_xchacha20poly1305_push=C.asm.zb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_pull=function(){return(C._crypto_secretstream_xchacha20poly1305_pull=C.asm.Ab).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_statebytes=function(){return(C._crypto_secretstream_xchacha20poly1305_statebytes=C.asm.Bb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_abytes=function(){return(C._crypto_secretstream_xchacha20poly1305_abytes=C.asm.Cb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_headerbytes=function(){return(C._crypto_secretstream_xchacha20poly1305_headerbytes=C.asm.Db).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_keybytes=function(){return(C._crypto_secretstream_xchacha20poly1305_keybytes=C.asm.Eb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_messagebytes_max=function(){return(C._crypto_secretstream_xchacha20poly1305_messagebytes_max=C.asm.Fb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_tag_message=function(){return(C._crypto_secretstream_xchacha20poly1305_tag_message=C.asm.Gb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_tag_push=function(){return(C._crypto_secretstream_xchacha20poly1305_tag_push=C.asm.Hb).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_tag_rekey=function(){return(C._crypto_secretstream_xchacha20poly1305_tag_rekey=C.asm.Ib).apply(null,arguments)},C._crypto_secretstream_xchacha20poly1305_tag_final=function(){return(C._crypto_secretstream_xchacha20poly1305_tag_final=C.asm.Jb).apply(null,arguments)},C._crypto_shorthash_bytes=function(){return(C._crypto_shorthash_bytes=C.asm.Kb).apply(null,arguments)},C._crypto_shorthash_keybytes=function(){return(C._crypto_shorthash_keybytes=C.asm.Lb).apply(null,arguments)},C._crypto_shorthash=function(){return(C._crypto_shorthash=C.asm.Mb).apply(null,arguments)},C._crypto_shorthash_keygen=function(){return(C._crypto_shorthash_keygen=C.asm.Nb).apply(null,arguments)},C._crypto_sign_statebytes=function(){return(C._crypto_sign_statebytes=C.asm.Ob).apply(null,arguments)},C._crypto_sign_bytes=function(){return(C._crypto_sign_bytes=C.asm.Pb).apply(null,arguments)},C._crypto_sign_seedbytes=function(){return(C._crypto_sign_seedbytes=C.asm.Qb).apply(null,arguments)},C._crypto_sign_publickeybytes=function(){return(C._crypto_sign_publickeybytes=C.asm.Rb).apply(null,arguments)},C._crypto_sign_secretkeybytes=function(){return(C._crypto_sign_secretkeybytes=C.asm.Sb).apply(null,arguments)},C._crypto_sign_messagebytes_max=function(){return(C._crypto_sign_messagebytes_max=C.asm.Tb).apply(null,arguments)},C._crypto_sign_seed_keypair=function(){return(C._crypto_sign_seed_keypair=C.asm.Ub).apply(null,arguments)},C._crypto_sign_keypair=function(){return(C._crypto_sign_keypair=C.asm.Vb).apply(null,arguments)},C._crypto_sign=function(){return(C._crypto_sign=C.asm.Wb).apply(null,arguments)},C._crypto_sign_open=function(){return(C._crypto_sign_open=C.asm.Xb).apply(null,arguments)},C._crypto_sign_detached=function(){return(C._crypto_sign_detached=C.asm.Yb).apply(null,arguments)},C._crypto_sign_verify_detached=function(){return(C._crypto_sign_verify_detached=C.asm.Zb).apply(null,arguments)},C._crypto_sign_init=function(){return(C._crypto_sign_init=C.asm._b).apply(null,arguments)},C._crypto_sign_update=function(){return(C._crypto_sign_update=C.asm.$b).apply(null,arguments)},C._crypto_sign_final_create=function(){return(C._crypto_sign_final_create=C.asm.ac).apply(null,arguments)},C._crypto_sign_final_verify=function(){return(C._crypto_sign_final_verify=C.asm.bc).apply(null,arguments)},C._crypto_sign_ed25519_pk_to_curve25519=function(){return(C._crypto_sign_ed25519_pk_to_curve25519=C.asm.cc).apply(null,arguments)},C._crypto_sign_ed25519_sk_to_curve25519=function(){return(C._crypto_sign_ed25519_sk_to_curve25519=C.asm.dc).apply(null,arguments)},C._randombytes_random=function(){return(C._randombytes_random=C.asm.ec).apply(null,arguments)},C._randombytes_stir=function(){return(C._randombytes_stir=C.asm.fc).apply(null,arguments)},C._randombytes_uniform=function(){return(C._randombytes_uniform=C.asm.gc).apply(null,arguments)},C._randombytes_buf=function(){return(C._randombytes_buf=C.asm.hc).apply(null,arguments)},C._randombytes_buf_deterministic=function(){return(C._randombytes_buf_deterministic=C.asm.ic).apply(null,arguments)},C._randombytes_seedbytes=function(){return(C._randombytes_seedbytes=C.asm.jc).apply(null,arguments)},C._randombytes_close=function(){return(C._randombytes_close=C.asm.kc).apply(null,arguments)},C._randombytes=function(){return(C._randombytes=C.asm.lc).apply(null,arguments)},C._sodium_bin2hex=function(){return(C._sodium_bin2hex=C.asm.mc).apply(null,arguments)},C._sodium_hex2bin=function(){return(C._sodium_hex2bin=C.asm.nc).apply(null,arguments)},C._sodium_base64_encoded_len=function(){return(C._sodium_base64_encoded_len=C.asm.oc).apply(null,arguments)},C._sodium_bin2base64=function(){return(C._sodium_bin2base64=C.asm.pc).apply(null,arguments)},C._sodium_base642bin=function(){return(C._sodium_base642bin=C.asm.qc).apply(null,arguments)},C._sodium_init=function(){return(C._sodium_init=C.asm.rc).apply(null,arguments)},C._sodium_pad=function(){return(C._sodium_pad=C.asm.sc).apply(null,arguments)},C._sodium_unpad=function(){return(C._sodium_unpad=C.asm.tc).apply(null,arguments)},C._sodium_version_string=function(){return(C._sodium_version_string=C.asm.uc).apply(null,arguments)},C._sodium_library_version_major=function(){return(C._sodium_library_version_major=C.asm.vc).apply(null,arguments)},C._sodium_library_version_minor=function(){return(C._sodium_library_version_minor=C.asm.wc).apply(null,arguments)},C._sodium_library_minimal=function(){return(C._sodium_library_minimal=C.asm.xc).apply(null,arguments)},C.___errno_location=function(){return(PA=C.___errno_location=C.asm.yc).apply(null,arguments)});function JA(A){function I(){RA||(RA=!0,C.calledRun=!0,l||(T(),W(),C.onRuntimeInitialized&&C.onRuntimeInitialized(),j()))}A=A||E,gA>0||(V(),gA>0||(C.setStatus?(C.setStatus("Running..."),setTimeout((function(){setTimeout((function(){C.setStatus("")}),1),I()}),1)):I()))}if(C._malloc=function(){return(C._malloc=C.asm.zc).apply(null,arguments)},C._free=function(){return(C._free=C.asm.Ac).apply(null,arguments)},C.setValue=D,C.getValue=u,C.UTF8ToString=_,CA=function A(){RA||JA(),RA||(CA=A)},C.run=JA,C.preInit)for("function"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();JA()})).catch((function(){B.useBackupModule()})),"object"==typeof process&&"function"==typeof process.removeAllListeners&&(process.removeAllListeners("uncaughtException"),process.removeAllListeners("unhandledRejection")),I}"function"==typeof define&&define.amd?define(["exports"],I):"object"==typeof exports&&"string"!=typeof exports.nodeName?I(exports):A.libsodium=I(A.libsodium_mod||(A.commonJsStrict={}))}(this);

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/libsodium/dist/modules")
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","crypto":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/crypto-browserify/index.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/lodash.debounce/index.js":[function(require,module,exports){
(function (global){(function (){
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/looper/index.js":[function(require,module,exports){


module.exports = function (fn) {
  var active = false, called = 0
  return function () {
    called = true
    if(!active) {
      active = true
      while(called) {
        called = false
        fn()
      }
      active = false
    }
  }
}









},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ltgt/index.js":[function(require,module,exports){
(function (Buffer){(function (){

exports.compare = function (a, b) {

  if(Buffer.isBuffer(a)) {
    var l = Math.min(a.length, b.length)
    for(var i = 0; i < l; i++) {
      var cmp = a[i] - b[i]
      if(cmp) return cmp
    }
    return a.length - b.length
  }

  return a < b ? -1 : a > b ? 1 : 0
}

// to be compatible with the current abstract-leveldown tests
// nullish or empty strings.
// I could use !!val but I want to permit numbers and booleans,
// if possible.

function isDef (val) {
  return val !== undefined && val !== ''
}

function has (range, name) {
  return Object.hasOwnProperty.call(range, name)
}

function hasKey(range, name) {
  return Object.hasOwnProperty.call(range, name) && name
}

var lowerBoundKey = exports.lowerBoundKey = function (range) {
    return (
       hasKey(range, 'gt')
    || hasKey(range, 'gte')
    || hasKey(range, 'min')
    || (range.reverse ? hasKey(range, 'end') : hasKey(range, 'start'))
    || undefined
    )
}

var lowerBound = exports.lowerBound = function (range, def) {
  var k = lowerBoundKey(range)
  return k ? range[k] : def
}

var lowerBoundInclusive = exports.lowerBoundInclusive = function (range) {
  return has(range, 'gt') ? false : true
}

var upperBoundInclusive = exports.upperBoundInclusive =
  function (range) {
    return (has(range, 'lt') /*&& !range.maxEx*/) ? false : true
  }

var lowerBoundExclusive = exports.lowerBoundExclusive =
  function (range) {
    return !lowerBoundInclusive(range)
  }

var upperBoundExclusive = exports.upperBoundExclusive =
  function (range) {
    return !upperBoundInclusive(range)
  }

var upperBoundKey = exports.upperBoundKey = function (range) {
    return (
       hasKey(range, 'lt')
    || hasKey(range, 'lte')
    || hasKey(range, 'max')
    || (range.reverse ? hasKey(range, 'start') : hasKey(range, 'end'))
    || undefined
    )
}

var upperBound = exports.upperBound = function (range, def) {
  var k = upperBoundKey(range)
  return k ? range[k] : def
}

exports.start = function (range, def) {
  return range.reverse ? upperBound(range, def) : lowerBound(range, def)
}
exports.end = function (range, def) {
  return range.reverse ? lowerBound(range, def) : upperBound(range, def)
}
exports.startInclusive = function (range) {
  return (
    range.reverse
  ? upperBoundInclusive(range)
  : lowerBoundInclusive(range)
  )
}
exports.endInclusive = function (range) {
  return (
    range.reverse
  ? lowerBoundInclusive(range)
  : upperBoundInclusive(range)
  )
}

function id (e) { return e }

exports.toLtgt = function (range, _range, map, lower, upper) {
  _range = _range || {}
  map = map || id
  var defaults = arguments.length > 3
  var lb = exports.lowerBoundKey(range)
  var ub = exports.upperBoundKey(range)
  if(lb) {
    if(lb === 'gt') _range.gt = map(range.gt, false)
    else            _range.gte = map(range[lb], false)
  }
  else if(defaults)
    _range.gte = map(lower, false)

  if(ub) {
    if(ub === 'lt') _range.lt = map(range.lt, true)
    else            _range.lte = map(range[ub], true)
  }
  else if(defaults)
    _range.lte = map(upper, true)

  if(range.reverse != null)
    _range.reverse = !!range.reverse

  //if range was used mutably
  //(in level-sublevel it's part of an options object
  //that has more properties on it.)
  if(has(_range, 'max'))   delete _range.max
  if(has(_range, 'min'))   delete _range.min
  if(has(_range, 'start')) delete _range.start
  if(has(_range, 'end'))   delete _range.end

  return _range
}

exports.contains = function (range, key, compare) {
  compare = compare || exports.compare

  var lb = lowerBound(range)
  if(isDef(lb)) {
    var cmp = compare(key, lb)
    if(cmp < 0 || (cmp === 0 && lowerBoundExclusive(range)))
      return false
  }

  var ub = upperBound(range)
  if(isDef(ub)) {
    var cmp = compare(key, ub)
    if(cmp > 0 || (cmp === 0) && upperBoundExclusive(range))
      return false
  }

  return true
}

exports.filter = function (range, compare) {
  return function (key) {
    return exports.contains(range, key, compare)
  }
}



}).call(this)}).call(this,{"isBuffer":require("../is-buffer/index.js")})
},{"../is-buffer/index.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/map-merge/index.js":[function(require,module,exports){

function isObject(o) {
  return o && 'object' === typeof o
}

var isArray = Array.isArray

function isUndefined (u) {
  return 'undefined' === typeof u
}

var find = exports.find = function find(ary, test) {
  for(var i in ary)
    if(test(ary[i], i, ary)) return ary[i]
}

exports = module.exports = merge
exports.merge = exports

var clone = exports.clone = function clone (obj, mapper) {
  function map(v, k) {
    return isObject(v) ? clone(v, mapper) : mapper(v, k)
  }
  if(isArray(obj))
    return obj.map(map)
  else if(isObject(obj)) {
    var o = {}
    for(var k in obj)
      o[k] = map(obj[k], k)
    return o
  }
  else
    return map(obj)
}

var mergeKeys = exports.mergeKeys = function (a, b, iter) {
  var o = {}
  for(var k in a) {
    if(!isUndefined(a[k]))
      o[k] = iter(a[k], b[k], k)
  }
  for(var k in b) {
    if(isUndefined(a[k]))
      o[k] = iter(undefined, b[k], k)
  }
  return o
}

var mergeArrays = exports.mergeArrays = function (a, b, iter) {
  var o = []
  a.forEach(function (v, i) {
    var j = b.indexOf(v)
    o.push(iter(v, b[j], o.length))
  })
  b.forEach(function (v, i) {
    var j = a.indexOf(v)
    if(!~j)
      o.push(iter(undefined, b[i], o.length))
  })
  return o
}

function merge (a, b, merge) {

  //merge a and b objects

  merge = merge || function (x, y) {
    return y == null ? x : y
  }

  function merger(a, b, k) {

    if(isArray(a) && isArray(b))
      return mergeArrays(a, b, merger)
    else if(isObject(a) && isObject(b)) {
      return mergeKeys(a, b, merger)
    }
    else
      return merge(a, b, k)

  }

  return merger(a, b, undefined)


}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/md5.js/index.js":[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')
var Buffer = require('safe-buffer').Buffer

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.allocUnsafe(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

},{"hash-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/miller-rabin/lib/mr.js":[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","brorand":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/brorand/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/miller-rabin/node_modules/bn.js/lib/bn.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-assert/index.js":[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/minimalistic-crypto-utils/lib/utils.js":[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/index.js":[function(require,module,exports){
const optsArg = require('./lib/opts-arg.js')
const pathArg = require('./lib/path-arg.js')

const {mkdirpNative, mkdirpNativeSync} = require('./lib/mkdirp-native.js')
const {mkdirpManual, mkdirpManualSync} = require('./lib/mkdirp-manual.js')
const {useNative, useNativeSync} = require('./lib/use-native.js')


const mkdirp = (path, opts) => {
  path = pathArg(path)
  opts = optsArg(opts)
  return useNative(opts)
    ? mkdirpNative(path, opts)
    : mkdirpManual(path, opts)
}

const mkdirpSync = (path, opts) => {
  path = pathArg(path)
  opts = optsArg(opts)
  return useNativeSync(opts)
    ? mkdirpNativeSync(path, opts)
    : mkdirpManualSync(path, opts)
}

mkdirp.sync = mkdirpSync
mkdirp.native = (path, opts) => mkdirpNative(pathArg(path), optsArg(opts))
mkdirp.manual = (path, opts) => mkdirpManual(pathArg(path), optsArg(opts))
mkdirp.nativeSync = (path, opts) => mkdirpNativeSync(pathArg(path), optsArg(opts))
mkdirp.manualSync = (path, opts) => mkdirpManualSync(pathArg(path), optsArg(opts))

module.exports = mkdirp

},{"./lib/mkdirp-manual.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/mkdirp-manual.js","./lib/mkdirp-native.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/mkdirp-native.js","./lib/opts-arg.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/opts-arg.js","./lib/path-arg.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/path-arg.js","./lib/use-native.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/use-native.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/find-made.js":[function(require,module,exports){
const {dirname} = require('path')

const findMade = (opts, parent, path = undefined) => {
  // we never want the 'made' return value to be a root directory
  if (path === parent)
    return Promise.resolve()

  return opts.statAsync(parent).then(
    st => st.isDirectory() ? path : undefined, // will fail later
    er => er.code === 'ENOENT'
      ? findMade(opts, dirname(parent), parent)
      : undefined
  )
}

const findMadeSync = (opts, parent, path = undefined) => {
  if (path === parent)
    return undefined

  try {
    return opts.statSync(parent).isDirectory() ? path : undefined
  } catch (er) {
    return er.code === 'ENOENT'
      ? findMadeSync(opts, dirname(parent), parent)
      : undefined
  }
}

module.exports = {findMade, findMadeSync}

},{"path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/mkdirp-manual.js":[function(require,module,exports){
const {dirname} = require('path')

const mkdirpManual = (path, opts, made) => {
  opts.recursive = false
  const parent = dirname(path)
  if (parent === path) {
    return opts.mkdirAsync(path, opts).catch(er => {
      // swallowed by recursive implementation on posix systems
      // any other error is a failure
      if (er.code !== 'EISDIR')
        throw er
    })
  }

  return opts.mkdirAsync(path, opts).then(() => made || path, er => {
    if (er.code === 'ENOENT')
      return mkdirpManual(parent, opts)
        .then(made => mkdirpManual(path, opts, made))
    if (er.code !== 'EEXIST' && er.code !== 'EROFS')
      throw er
    return opts.statAsync(path).then(st => {
      if (st.isDirectory())
        return made
      else
        throw er
    }, () => { throw er })
  })
}

const mkdirpManualSync = (path, opts, made) => {
  const parent = dirname(path)
  opts.recursive = false

  if (parent === path) {
    try {
      return opts.mkdirSync(path, opts)
    } catch (er) {
      // swallowed by recursive implementation on posix systems
      // any other error is a failure
      if (er.code !== 'EISDIR')
        throw er
      else
        return
    }
  }

  try {
    opts.mkdirSync(path, opts)
    return made || path
  } catch (er) {
    if (er.code === 'ENOENT')
      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))
    if (er.code !== 'EEXIST' && er.code !== 'EROFS')
      throw er
    try {
      if (!opts.statSync(path).isDirectory())
        throw er
    } catch (_) {
      throw er
    }
  }
}

module.exports = {mkdirpManual, mkdirpManualSync}

},{"path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/mkdirp-native.js":[function(require,module,exports){
const {dirname} = require('path')
const {findMade, findMadeSync} = require('./find-made.js')
const {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')

const mkdirpNative = (path, opts) => {
  opts.recursive = true
  const parent = dirname(path)
  if (parent === path)
    return opts.mkdirAsync(path, opts)

  return findMade(opts, path).then(made =>
    opts.mkdirAsync(path, opts).then(() => made)
    .catch(er => {
      if (er.code === 'ENOENT')
        return mkdirpManual(path, opts)
      else
        throw er
    }))
}

const mkdirpNativeSync = (path, opts) => {
  opts.recursive = true
  const parent = dirname(path)
  if (parent === path)
    return opts.mkdirSync(path, opts)

  const made = findMadeSync(opts, path)
  try {
    opts.mkdirSync(path, opts)
    return made
  } catch (er) {
    if (er.code === 'ENOENT')
      return mkdirpManualSync(path, opts)
    else
      throw er
  }
}

module.exports = {mkdirpNative, mkdirpNativeSync}

},{"./find-made.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/find-made.js","./mkdirp-manual.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/mkdirp-manual.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/opts-arg.js":[function(require,module,exports){
const { promisify } = require('util')
const fs = require('fs')
const optsArg = opts => {
  if (!opts)
    opts = { mode: 0o777, fs }
  else if (typeof opts === 'object')
    opts = { mode: 0o777, fs, ...opts }
  else if (typeof opts === 'number')
    opts = { mode: opts, fs }
  else if (typeof opts === 'string')
    opts = { mode: parseInt(opts, 8), fs }
  else
    throw new TypeError('invalid options argument')

  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir
  opts.mkdirAsync = promisify(opts.mkdir)
  opts.stat = opts.stat || opts.fs.stat || fs.stat
  opts.statAsync = promisify(opts.stat)
  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync
  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync
  return opts
}
module.exports = optsArg

},{"fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/util.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/path-arg.js":[function(require,module,exports){
(function (process){(function (){
const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform
const { resolve, parse } = require('path')
const pathArg = path => {
  if (/\0/.test(path)) {
    // simulate same failure that node raises
    throw Object.assign(
      new TypeError('path must be a string without null bytes'),
      {
        path,
        code: 'ERR_INVALID_ARG_VALUE',
      }
    )
  }

  path = resolve(path)
  if (platform === 'win32') {
    const badWinChars = /[*|"<>?:]/
    const {root} = parse(path)
    if (badWinChars.test(path.substr(root.length))) {
      throw Object.assign(new Error('Illegal characters in path.'), {
        path,
        code: 'EINVAL',
      })
    }
  }

  return path
}
module.exports = pathArg

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/lib/use-native.js":[function(require,module,exports){
(function (process){(function (){
const fs = require('fs')

const version = process.env.__TESTING_MKDIRP_NODE_VERSION__ || process.version
const versArr = version.replace(/^v/, '').split('.')
const hasNative = +versArr[0] > 10 || +versArr[0] === 10 && +versArr[1] >= 12

const useNative = !hasNative ? () => false : opts => opts.mkdir === fs.mkdir
const useNativeSync = !hasNative ? () => false : opts => opts.mkdirSync === fs.mkdirSync

module.exports = {useNative, useNativeSync}

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/monotonic-timestamp/index.js":[function(require,module,exports){
// If `Date.now()` is invoked twice quickly, it's possible to get two
// identical time stamps. To avoid generation duplications, subsequent
// calls are manually ordered to force uniqueness.

var _last = 0
var _count = 1
var adjusted = 0
var _adjusted = 0

module.exports =
function timestamp() {
  /**
  Returns NOT an accurate representation of the current time.
  Since js only measures time as ms, if you call `Date.now()`
  twice quickly, it's possible to get two identical time stamps.
  This function guarantees unique but maybe inaccurate results
  on each call.
  **/
  //uncomment this wen
  var time = Date.now()
  //time = ~~ (time / 1000) 
  //^^^uncomment when testing...

  /**
  If time returned is same as in last call, adjust it by
  adding a number based on the counter. 
  Counter is incremented so that next call get's adjusted properly.
  Because floats have restricted precision, 
  may need to step past some values...
  **/
  if (_last === time)  {
    do {
      adjusted = time + ((_count++) / (_count + 999))
    } while (adjusted === _adjusted)
    _adjusted = adjusted
  }
  // If last time was different reset timer back to `1`.
  else {
    _count = 1
    adjusted = time
  }
  _adjusted = adjusted
  _last = time
  return adjusted
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ms/index.js":[function(require,module,exports){
/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multicb/index.js":[function(require,module,exports){
module.exports = function(allopts) {
  var n = 0, m = 0, _cb, results = [], _err;
  function o (k, d) { return allopts && allopts[k] !== void 0 ? allopts[k] : d }

  return function(cb) {
    if (cb) {
      results.length = m

      if(_err) {
        var err = _err; _err = null
        return cb(err)
      }
      if(n == m) {
        if (o('spread'))
          return cb.apply(null, [null].concat(results))
        else
        return cb(null, results)
      }

      _cb = cb
      return
    }

    var i = m++
    return function (err) {
      if (err) {
        if (_err) return
        _err = err
        n = -1 // stop
        if (_cb) _cb(err)
      } else {
        n++
        if (o('pluck'))
          results[i] = arguments[o('pluck')]
        else
          results[i] = Array.prototype.slice.call(arguments)
        if (n === m && _cb) {
          if (o('spread'))
            _cb.apply(null, [null].concat(results))
          else
            _cb(null, results)
        }
      }
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js":[function(require,module,exports){
var nearley = require('nearley')
var grammar = nearley.Grammar.fromCompiled(require('./multiserver'))

function parse (string) {
  var parser = new nearley.Parser(grammar)
  parser.feed(string)
  var a = parser.results
  if(a.length  === 0) throw new Error('unexpected end')
  return a[0]
}

exports.decode = function (address) {
  return parse(address)
}

exports.encode = function (data) {
  return data.map(function (e) {
    return e.map(function (e) {
      return e.name + (e.data.length ? ':'+e.data.join(':') : '')
    }).join('~')
  }).join(';')
}

function repeat (head, separator, tail) {
  if(!tail) tail = head
  return head + '(?:'+ separator + tail + ')*'
}

var name = '[a-z][a-z\-0-9]+'
var data = '(?:["-9]|[<-}]|![!~:;])*'
var protocol = repeat(name, ':', data)
var address = repeat(protocol, '~')
var multi = repeat(address, ';')

var multi_rx = new RegExp('^'+multi+'$')

exports.check = function (data) {
  return !!multi_rx.exec(data)
}

exports.type = 'multiaddress'

exports.buffer = false


},{"./multiserver":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/multiserver.js","nearley":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/nearley/lib/nearley.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/multiserver.js":[function(require,module,exports){
// Generated automatically by nearley, version 2.15.1
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "multiaddress$ebnf$1", "symbols": []},
    {"name": "multiaddress$ebnf$1$subexpression$1", "symbols": [{"literal":";"}, "address"]},
    {"name": "multiaddress$ebnf$1", "symbols": ["multiaddress$ebnf$1", "multiaddress$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "multiaddress", "symbols": ["address", "multiaddress$ebnf$1"], "postprocess": d => [d[0]].concat(d[1].map(function (e) { return e[1] }))},
    {"name": "address$ebnf$1", "symbols": []},
    {"name": "address$ebnf$1$subexpression$1", "symbols": [{"literal":"~"}, "protocol"]},
    {"name": "address$ebnf$1", "symbols": ["address$ebnf$1", "address$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "address", "symbols": ["protocol", "address$ebnf$1"], "postprocess": d => [d[0]].concat(d[1].map(function (e) { return e[1] }))},
    {"name": "protocol$ebnf$1", "symbols": []},
    {"name": "protocol$ebnf$1$subexpression$1", "symbols": [{"literal":":"}, "data"]},
    {"name": "protocol$ebnf$1", "symbols": ["protocol$ebnf$1", "protocol$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "protocol", "symbols": ["name", "protocol$ebnf$1"], "postprocess": (d) => { return {name: d[0], data: d[1].map(e =>  e[1] )} }},
    {"name": "name$ebnf$1", "symbols": [/[a-z\-0-9]/]},
    {"name": "name$ebnf$1", "symbols": ["name$ebnf$1", /[a-z\-0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "name", "symbols": [/[a-z]/, "name$ebnf$1"], "postprocess": d => d[0]+d[1].join('')},
    {"name": "data$ebnf$1", "symbols": []},
    {"name": "data$ebnf$1$subexpression$1", "symbols": ["char"]},
    {"name": "data$ebnf$1$subexpression$1", "symbols": ["escaped_char"]},
    {"name": "data$ebnf$1", "symbols": ["data$ebnf$1", "data$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "data", "symbols": ["data$ebnf$1"], "postprocess": d => d[0].join('')},
    {"name": "char", "symbols": [/["-9]/]},
    {"name": "char", "symbols": [/[<-}]/], "postprocess": d => d[0]},
    {"name": "escaped_char$subexpression$1$string$1", "symbols": [{"literal":"!"}, {"literal":"!"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "escaped_char$subexpression$1", "symbols": ["escaped_char$subexpression$1$string$1"]},
    {"name": "escaped_char$subexpression$1$string$2", "symbols": [{"literal":"!"}, {"literal":"~"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "escaped_char$subexpression$1", "symbols": ["escaped_char$subexpression$1$string$2"]},
    {"name": "escaped_char$subexpression$1$string$3", "symbols": [{"literal":"!"}, {"literal":":"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "escaped_char$subexpression$1", "symbols": ["escaped_char$subexpression$1$string$3"]},
    {"name": "escaped_char$subexpression$1$string$4", "symbols": [{"literal":"!"}, {"literal":";"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "escaped_char$subexpression$1", "symbols": ["escaped_char$subexpression$1$string$4"]},
    {"name": "escaped_char", "symbols": ["escaped_char$subexpression$1"], "postprocess": d => d[0][0][1]}
]
  , ParserStart: "multiaddress"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-scopes/index.js":[function(require,module,exports){
var ip = require('non-private-ip')

module.exports = {
  host: function(scope) {
    var f = {
      device: function () {return 'localhost'},
      local: ip.private,
      private: ip.private,
      public: ip
    }[scope]
    if (!f) throw new Error('invalid scope: ' + scope)
    return f()
  }
}

},{"non-private-ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/non-private-ip/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/compose.js":[function(require,module,exports){
var separator = '~', escape = '!'
var SE = require('separator-escape')(separator, escape)

var isArray = Array.isArray
function isString (s) {
  return 'string' === typeof s
}
function head (opts) {
  return isArray(opts) ? opts[0] : opts
}
function tail (opts) {
  return isArray(opts) ? opts.slice(1) : []
}

function compose (stream, transforms, cb) {
  if(!stream) throw new Error('multiserver.compose: *must* pass stream')
  ;(function next (err, stream, i, addr) {
    if(err) {
      err.address = addr + '~' + err.address
      return cb(err)
    }
    else if(i >= transforms.length) {
      stream.address = addr
      return cb(null, stream)
    }
    else
      transforms[i](stream, function (err, _stream) {
        if(!err && !stream) throw new Error('expected error or stream')
        if(_stream) _stream.meta = _stream.meta || stream.meta
        next(err, _stream, i+1, err ? addr : (addr+'~'+_stream.address))
      })
  })(null, stream, 0, stream.address)
}

function asyncify(f) {
  return function(cb) {
    if (f.length) return f(cb)
    if (cb) {
      var result
      try{
        result = f()
      } catch(err) {return cb(err)}
      return cb(null, result)
    }
    return f()
  }
}

module.exports = function (ary, wrap) {
  if(!wrap) wrap = function (e) { return e }
  var proto = head(ary)
  var trans = tail(ary)

  function parse (str) {
    var parts = SE.parse(str)
    var out = []
    for(var i = 0; i < parts.length; i++) {
      var v = ary[i].parse(parts[i])
      if(!v) return null
      out[i] = v
    }
    return out
  }

  function parseMaybe (str) {
    return  isString(str) ? parse(str) : str
  }

  return {
    name: ary.map(function (e) { return e.name }).join(separator),
    scope: proto.scope,
    client: function (_opts, cb) {
      var opts = parseMaybe(_opts)
      if(!opts) return cb(new Error('could not parse address:'+_opts))
      return proto.client(head(opts), function (err, stream) {
        if(err) return cb(err)
        compose(
          wrap(stream),
          trans.map(function (tr, i) { return tr.create(opts[i+1]) }),
          cb
        )
      })
    },
    // There should be a callback , called with
    // null when the server started to listen.
    // (net.server.listen is async for example)
    server: function (onConnection, onError, onStart) {
      onError = onError || function (err) {
        console.error('server error, from', err.address)
        console.error(err.stack)
      }
      return asyncify(proto.server(function (stream) {
        compose(
          wrap(stream),
          trans.map(function (tr) { return tr.create() }),
          function (err, stream) {
            if(err) onError(err)
            else onConnection(stream)
          }
        )
      }, onStart))
    },
    parse: parse,
    stringify: function (scope) {
      var _ary = []
      var v = proto.stringify(scope)
      if(!v) return
      else {
        // if true, more than one hostname needs to be updated
        if (v.split(';').length > 1) {
          var addresses = v.split(';')
          addresses.forEach(a => {
            _ary.push(a)
          })
        }
        else _ary.push(v)
      }
      return _ary.map(e => {
        var singleAddr = [e].concat(trans.map(t => {
          return t.stringify(scope)
        }))

        return SE.stringify(singleAddr)
      }).join(';')
    }
  }
}


},{"separator-escape":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/separator-escape/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/index.js":[function(require,module,exports){
var compose = require('./compose')
var isArray = Array.isArray
var multicb = require('multicb')

function split(str) {
  return isArray(str) ? str : str.split(';')
}

module.exports = function (plugs, wrap) {

  plugs = plugs.map(function (e) {
    return isArray(e) ? compose(e, wrap) : e
  })

  var _self = {
    name: plugs.map(function (e) { return e.name }).join(';'),
    client: function (addr, cb) {
      let plug
      const _addr = split(addr).find(function (addr) {
        //connect with the first plug that understands this string.
        plug = plugs.find(function (plug) {
          return plug.parse(addr) ? plug : null
        })
        if(plug) return addr
      })
      if(plug) plug.client(_addr, cb)
      else cb(new Error('could not connect to:'+addr+', only know:'+_self.name))
    },
    server: function (onConnect, onError, startedCb) {
      //start all servers

      if (!startedCb) {
        // If a callback is not registered to be called back when the servers are
        // fully started, our default behaviour is just to print any errors starting
        // the servers to the log
        startedCb = (err, result) => {
          if (err) {
            console.error("Error starting multiserver server: " + err)
          }
        }
      }

      var started = multicb()

      var closes = plugs.map(function (plug) {
        return plug.server(onConnect, onError, started())
      }).filter(Boolean)

      started(startedCb);

      return function (cb) {
        var done
        if (cb) done = multicb()
        closes.forEach(function (close) {
          if (done && close.length) close(done())
          else close()
        })
        if (done) done(cb)
      }
    },
    stringify: function (scope) {
      if (!scope) scope = 'device'
      return plugs
        .filter(function (plug) {
          var _scope = plug.scope()
          return Array.isArray(_scope) ? ~_scope.indexOf(scope) : _scope === scope
        })
        .map(function (plug) { return plug.stringify(scope) })
        .filter(Boolean)
        .join(';')
    },
    //parse doesn't really make sense here...
    //like, what if you only have a partial match?
    //maybe just parse the ones you understand?
    parse: function (str) {
      return str.split(';').map(function (e, i) {
        return plugs[i].parse(e)
      })
    }
  }
  return _self
}



},{"./compose":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/compose.js","multicb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multicb/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/net.js":[function(require,module,exports){
var net
try {
  net = require('net')
} catch (_) {
  // This only throws in browsers because they don't have access to the Node
  // net library, which is safe to ignore because they shouldn't be running
  // any methods that require the net library. Maybe we should be setting a
  // flag somewhere rather than checking whether `net == null`?
}

var toPull = require('stream-to-pull-stream')
var scopes = require('multiserver-scopes')
var debug = require('debug')('multiserver:net')

const isString = (s) => 'string' == typeof s
const toAddress = (host, port) => ['net', host, port ].join(':')

function toDuplex (str) {
  var stream = toPull.duplex(str)
  stream.address = toAddress(str.remoteAddress, str.remotePort)
  return stream
}

// Choose a dynamic port between 49152 and 65535
// https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Dynamic,_private_or_ephemeral_ports
const getRandomPort = () =>
  Math.floor(49152 + (65535 - 49152 + 1) * Math.random())

module.exports = ({ scope = 'device', host, port, external, allowHalfOpen, pauseOnConnect }) => {
  // Arguments are `scope` and `external` plus selected options for
  // `net.createServer()` and `server.listen()`.
  host = host || (isString(scope) && scopes.host(scope))
  port = port || getRandomPort()

  function isAllowedScope (s) {
    return s === scope || Array.isArray(scope) && scope.includes(s)
  }

  return {
    name: 'net',
    scope: () => scope,
    server: function (onConnection, startedCb) {
      debug('Listening on %s:%d', host, port)

      // TODO: We convert `allowHalfOpen` to boolean for legacy reasons, this
      // might not be getting used anywhere but I'm too scared to change it.
      // This should probably be removed when we do a major version bump.
      const serverOpts = {
        allowHalfOpen: Boolean(allowHalfOpen),
        pauseOnConnect
      }

      var server = net.createServer(serverOpts, function (stream) {
        onConnection(toDuplex(stream))
      })

      if (startedCb) server.addListener('error', startedCb)

      server.listen(port, host, startedCb ? function () {
        server.removeListener('error', startedCb)
        startedCb();
      } : startedCb)

      return function (cb) {
        debug('Closing server on %s:%d', host, port)
        server.close(function(err) {
          if (err) console.error(err)
          else debug('No longer listening on %s:%d', host, port)
          if (cb) cb(err)
        })
      }
    },
    client: function (opts, cb) {
      var started = false
      var stream = net.connect(opts)
        .on('connect', function () {
          if(started) return
          started = true

          cb(null, toDuplex(stream))
        })
        .on('error', function (err) {
          if(started) return
          started = true
          cb(err)
        })

      return function () {
        started = true
        stream.destroy()
        cb(new Error('multiserver.net: aborted'))
      }
    },
    //MUST be net:<host>:<port>
    parse: function (s) {
      if (net == null) return null
      var ary = s.split(':')
      if(ary.length < 3) return null
      if('net' !== ary.shift()) return null
      var port = Number(ary.pop())
      if(isNaN(port)) return null
      return {
        name: 'net',
        host: ary.join(':') || 'localhost',
        port: port
      }
    },
    stringify: function (targetScope = 'device') {
      if (isAllowedScope(targetScope) === false) {
        return null
      }

      // We want to avoid using `host` if the target scope is public and some
      // external host (like example.com) is defined.
      const externalHost = targetScope === 'public' && external
      let resultHost = externalHost || host || scopes.host(targetScope)

      if (resultHost == null) {
        // The device has no network interface for a given `targetScope`.
        return null
      }

      // convert to an array for easier formatting
      if (isString(resultHost)) {
        resultHost = [resultHost]
      }
      
      return resultHost.map((h) => {
        // Remove IPv6 scopeid suffix, if any, e.g. `%wlan0`
        return toAddress(h.replace(/(\%\w+)$/, ''), port)
      }).join(';')
    }
  }
}


},{"debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","multiserver-scopes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-scopes/index.js","net":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","stream-to-pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-to-pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/noauth.js":[function(require,module,exports){
module.exports = function (opts) {
  return {
    name: 'noauth',
    create: function (_opts) {
      return function (stream, cb) {
        cb(null, {
          remote: opts.keys.publicKey,
          auth: { allow: null, deny: null },
          source: stream.source,
          sink: stream.sink,
          address: 'noauth:' + opts.keys.publicKey.toString('base64')
        })
      }
    },
    parse: function (str) {
      return {}
    },
    stringify: function () {
      return 'noauth'
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/shs.js":[function(require,module,exports){
(function (Buffer){(function (){
var SHS = require('secret-handshake')
var pull = require('pull-stream')

function isString(s) {
  return 'string' === typeof s
}

module.exports = function (opts) {
  var keys = SHS.toKeys(opts.keys || opts.seed)
  var appKey = isString(opts.appKey) ? Buffer.from(opts.appKey, 'base64') : opts.appKey

  var server = SHS.createServer(
    keys, opts.auth || opts.authenticate, appKey, opts.timeout
  )
  var client = SHS.createClient(
    keys, appKey, opts.timeout
  )

  return {
    name: 'shs',
    create: function (_opts) {
      return function (stream, cb) {
        function _cb (err, stream) {
          if(err) {
            //shs is designed so that we do not _know_ who is connecting if it fails,
            //so we probably can't add the connecting address. (unless it was client unauthorized)
            err.address = 'shs:'
            return cb(err)
          }
          stream.address = 'shs:'+stream.remote.toString('base64')
          cb(null, stream)
        }
        pull(
          stream.source,
          _opts && _opts.key ? client(_opts.key, _opts.seed, _cb) : server(_cb),
          stream.sink
        )
      }
    },
    parse: function (str) {
      var ary = str.split(':')
      if(ary[0] !== 'shs') return null
      var seed = undefined

      //seed of private key to connect with, optional.

      if(ary.length > 2) {
        seed = Buffer.from(ary[2], 'base64')
        if(seed.length !== 32) return null
      }
      var key = Buffer.from(ary[1], 'base64')
      if(key.length !== 32) return null

      return {key: key, seed: seed}
    },
    stringify: function () {
      if(!keys) return
      return 'shs:'+keys.publicKey.toString('base64')
    },
    publicKey: keys && keys.publicKey
  }
}






}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","secret-handshake":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/ws.js":[function(require,module,exports){
(function (Buffer){(function (){
var WS = require('pull-ws')
var URL = require('url')
var pull = require('pull-stream/pull')
var Map = require('pull-stream/throughs/map')
var scopes = require('multiserver-scopes')
var http = require('http')
var https      = require('https')
var fs         = require('fs')
var debug = require('debug')('multiserver:ws')

function safe_origin (origin, address, port) {

  //if the connection is not localhost, we shouldn't trust
  //the origin header. So, use address instead of origin
  //if origin not set, then it's definitely not a browser.
  if(!(address === '::1' || address === '127.0.0.1') || origin == undefined)
    return 'ws:' + address + (port ? ':' + port : '')

  //note: origin "null" (as string) can happen a bunch of ways
  //      it can be a html opened as a file
  //      or certain types of CORS
  //      https://www.w3.org/TR/cors/#resource-sharing-check-0
  //      and webworkers if loaded from data-url?
  if(origin === 'null')
    return 'ws:null'

  //a connection from the browser on localhost,
  //we choose to trust this came from a browser.
  return origin.replace(/^http/, 'ws')

}

// Choose a dynamic port between 49152 and 65535
// https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Dynamic,_private_or_ephemeral_ports
const getRandomPort = () =>
  Math.floor(49152 + (65535 - 49152 + 1) * Math.random())

module.exports = function (opts = {}) {
  // This takes options for `WebSocket.Server()`:
  // https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback

  opts.binaryType = opts.binaryType || 'arraybuffer'
  const scope = opts.scope || 'device'

  function isAllowedScope (s) {
    return s === scope || Array.isArray(scope) && ~scope.indexOf(s)
  }

  var secure = opts.server && !!opts.server.key || (!!opts.key && !!opts.cert)
  return {
    name: 'ws',
    scope: () => scope,
    server: function (onConnect, startedCb) {
      if (WS.createServer == null) { 
        return null
      }

      // Maybe weird: this sets a random port each time that `server()` is run
      // whereas the net plugin sets the port when the outer function is run.
      //
      // This server has a random port generated at runtime rather than when
      // the interface is instantiated. Is that the way it should work?
      opts.port = opts.port || getRandomPort()

      if (typeof opts.key === 'string')
        opts.key = fs.readFileSync(opts.key)
      if (typeof opts.cert === 'string')
        opts.cert = fs.readFileSync(opts.cert)

      var server = opts.server ||
        (opts.key && opts.cert ? https.createServer({ key: opts.key, cert: opts.cert }, opts.handler) : http.createServer(opts.handler))

      WS.createServer(Object.assign({}, opts, {server: server}), function (stream) {
        stream.address = safe_origin(
          stream.headers.origin,
          stream.remoteAddress,
          stream.remotePort
        )
        onConnect(stream)
      })

      if(!opts.server) {
        debug('Listening on %s:%d', opts.host, opts.port)
        server.listen(opts.port, opts.host, function () {
          startedCb && startedCb(null, true)
        })
      }
      else
        startedCb && startedCb(null, true)

      return function (cb) {
        debug('Closing server on %s:%d', opts.host, opts.port)
        server.close(function(err) {
          if (err) console.error(err)
          else debug('No longer listening on %s:%d', opts.host, opts.port)
          if (cb) cb(err)
        })
      }
    },
    client: function (addr, cb) {
      if(!addr.host) {
        addr.hostname = addr.hostname || opts.host || 'localhost'
        addr.slashes = true
        addr = URL.format(addr)
      }
      if('string' !== typeof addr)
        addr = URL.format(addr)

      var stream = WS.connect(addr, {
        binaryType: opts.binaryType,
        onConnect: function (err) {
          //ensure stream is a stream of node buffers
          stream.source = pull(stream.source, Map(Buffer.from.bind(Buffer)))
          cb(err, stream)
        }
      })
      stream.address = addr

      return function () {
        stream.close(cb)
      }
    },
    stringify: function (targetScope = 'device') {
      if (WS.createServer == null) {
        return null
      }
      if (isAllowedScope(targetScope) === false) {
        return null
      }

      const port = opts.server ? opts.server.address().port : opts.port
      const externalHost = targetScope === 'public' && opts.external
      let resultHost = externalHost || opts.host || scopes.host(targetScope)

      if (resultHost == null) {
        // The device has no network interface for a given `targetScope`.
        return null
      }

      if (typeof resultHost === 'string') {
        resultHost = [resultHost]
      }

      return resultHost.map((h) => {
        return URL.format({
          protocol: secure ? 'wss' : 'ws',
          slashes: true,
          hostname: h,
          port: (secure ? port == 443 : port == 80) ? undefined : port
        })
      }).join(';')
    },
    parse: function (str) {
      var addr = URL.parse(str)
      if(!/^wss?\:$/.test(addr.protocol)) return null
      return addr
    }
  }
}





}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","http":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/index.js","https":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/https-browserify/index.js","multiserver-scopes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-scopes/index.js","pull-stream/pull":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/pull.js","pull-stream/throughs/map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/map.js","pull-ws":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/index.js","url":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/url/url.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mutexify/index.js":[function(require,module,exports){
(function (process){(function (){
var mutexify = function () {
  var queue = []
  var used = null

  var call = function () {
    used(release)
  }

  var acquire = function (fn) {
    if (used) return queue.push(fn)
    used = fn
    acquire.locked = true
    process.nextTick(call)
    return 0
  }

  acquire.locked = false

  var release = function (fn, err, value) {
    used = null
    acquire.locked = false
    if (queue.length) acquire(queue.shift())
    if (fn) fn(err, value)
  }

  return acquire
}

module.exports = mutexify

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/index.js":[function(require,module,exports){
'use strict'
var PSC          = require('packet-stream-codec')
var initStream   = require('./stream')
var createRemoteApi    = require('./remote-api')
var createLocalApi = require('./local-api')
var EventEmitter = require('events').EventEmitter

function createMuxrpc (remoteManifest, localManifest, localApi, id, perms, codec, legacy) {
  var bootstrap
  if ('function' === typeof remoteManifest) {
    bootstrap = remoteManifest
    remoteManifest = {}
  }

  localManifest = localManifest || {}
  remoteManifest = remoteManifest || {}
  var emitter = new EventEmitter()
  if(!codec) codec = PSC

  //pass the manifest to the permissions so that it can know
  //what something should be.
  var _cb
  var context = {
      _emit: function (event, value) {
        emitter && emitter._emit(event, value)
        return context
      },
      id: id
    }

  var ws = initStream(
    createLocalApi(localApi, localManifest, perms).bind(context),
    codec, function (err) {
      if(emitter.closed) return
      emitter.closed = true
      emitter.emit('closed')
      if(_cb) {
        var cb = _cb; _cb = null; cb(err)
      }
    }
  )

  createRemoteApi(emitter, remoteManifest, function (type, name, args, cb) {
    if(ws.closed) throw new Error('stream is closed')
    return ws.remoteCall(type, name, args, cb)
  }, bootstrap)

  //legacy local emit, from when remote emit was supported.
  emitter._emit = emitter.emit

  if(legacy) {
    Object.__defineGetter__.call(emitter, 'id', function () {
      return context.id
    })

    Object.__defineSetter__.call(emitter, 'id', function (value) {
      context.id =  value
    })

    var first = true

    emitter.createStream = function (cb) {
      _cb = cb
      if(first) {
        first = false; return ws
      }
      else
        throw new Error('one stream per rpc')
    }
  }
  else
    emitter.stream = ws

  emitter.closed = false

  emitter.close = function (err, cb) {
    ws.close(err, cb)
    return this
  }

  return emitter
}

module.exports = function (remoteManifest, localManifest, codec) {
  if(arguments.length > 3)
    return createMuxrpc.apply(this, arguments)
  return function (local, perms, id) {
    return createMuxrpc(remoteManifest, localManifest, local, id, perms, codec, true)
  }
}

},{"./local-api":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/local-api.js","./remote-api":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/remote-api.js","./stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/stream.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","packet-stream-codec":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/packet-stream-codec/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/local-api.js":[function(require,module,exports){

var Permissions  = require('./permissions')
var u            = require('./util')

module.exports = 

function createLocalCall(api, manifest, perms) {
  perms = Permissions(perms)

  function has(type, name) {
    return type === u.get(manifest, name)
  }

  function localCall(type, name, args) {

    if(name === 'emit')
      throw new Error('emit has been removed')

    //is there a way to know whether it's sync or async?
    if(type === 'async')
      if(has('sync', name)) {
        var cb = args.pop(), value
        try { value = u.get(api, name).apply(this, args) }
        catch (err) { return cb(err) }
        return cb(null, value)
      }

    if (!has(type, name))
      throw new Error('no '+type+':'+name)

    return u.get(api, name).apply(this, args)
  }

  return function (type, name, args) {
    var err = perms.pre(name, args)
    if(err) throw err
    return localCall.call(this, type, name, args)
  }
}


},{"./permissions":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/permissions.js","./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/util.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/permissions.js":[function(require,module,exports){
'use strict';
var u = require('./util')

var isArray = Array.isArray

function isFunction (f) {
  return 'function' === typeof f
}

function toArray(str) {
  return isArray(str) ? str : str.split('.')
}

function isPerms (p) {
  return (
    p &&
    isFunction(p.pre) &&
    isFunction(p.test) &&
    isFunction(p.post)
  )
}

/*

perms:

a given capability may be permitted to call a particular api.
but only if a perms function returns true for the arguments
it passes.

suppose, an app may be given access, but may only create functions
with it's own properties.

create perms:
  {
    allow: ['add', 'query'], deny: [...],
    rules: {
      add: {
        call: function (value) {
          return (value.type === 'task' || value.type === '_task')
        },
      query: {
        call: function (value) {
          safe.contains(value, {path: ['content', 'type'], eq: 'task'}) ||
          safe.contains(value, {path: ['content', 'type'], eq: '_task'})
        },
        filter: function (value) {
          return (value.type === 'task' || value.type === '_task')
        }
      }
    }
  }
*/

module.exports = function (opts) {
  if(isPerms(opts)) return opts
  if(isFunction(opts)) return {pre: opts}
  var allow = null
  var deny = {}

  function perms (opts) {
    if(opts.allow) {
      allow = {}
      opts.allow.forEach(function (path) {
        u.set(allow, toArray(path), true)
      })
    }
    else allow = null

    if(opts.deny)
      opts.deny.forEach(function (path) {
        u.set(deny, toArray(path), true)
      })
    else deny = {}

    return this
  }

  if(opts) perms(opts)

  perms.pre = function (name) {
    name = isArray(name) ? name : [name]
    if(allow && !u.prefix(allow, name))
      return new Error('method:'+name + ' is not in list of allowed methods')

    if(deny && u.prefix(deny, name))
      return new Error('method:'+name + ' is on list of disallowed methods')
  }

  perms.post = function () {
    //TODO
  }

  //alias for pre, used in tests.
  perms.test = function (name) {
    return perms.pre(name)
  }

  perms.get = function () {
    return {allow: allow, deny: deny}
  }

  return perms
}



},{"./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/util.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/pull-weird.js":[function(require,module,exports){
'use strict'
var pull = require('pull-stream')
// wrap pull streams around packet-stream's weird streams.

function once (fn) {
  var done = false
  return function (err, val) {
    if(done) return
    done = true
    fn(err, val)
  }
}

module.exports = function (weird, _done) {
  var buffer = [], ended = false, waiting, abort

  var done = once(function (err, v) {
    _done && _done(err, v)
    // deallocate
    weird = null
    _done = null    
    waiting = null

    if(abort) abort(err || true, function () {})
  })

  weird.read = function (data, end) {
    ended = ended || end

    if(waiting) {
      var cb = waiting
      waiting = null
      cb(ended, data)
    }
    else if(!ended) buffer.push(data)

    if(ended) done(ended !== true ? ended : null)
  }

  return {
    source: function (abort, cb) {
      if(abort) {
        weird && weird.write(null, abort)
        cb(abort); done(abort !== true ? abort : null)
      }
      else if(buffer.length) cb(null, buffer.shift())
      else if(ended) cb(ended)
      else waiting = cb
    },
    sink  : function (read) {
      if(ended) return read(ended, function () {}), abort = null
      abort = read
      pull.drain(function (data) {
        //TODO: make this should only happen on a UNIPLEX stream.
        if(ended) return false
        weird.write(data)
      }, function (err) {
        if(weird && !weird.writeEnd) weird.write(null, err || true)
        done && done(err)
      })(read)
    }
  }
}

function uniplex (s, done) {
  return module.exports(s, function (err) {
    if(!s.writeEnd) s.write(null, err || true)
    if(done) done(err)
  })
}

module.exports.source = function (s) {
  return uniplex(s).source
}
module.exports.sink = function (s, done) {
  return uniplex(s, done).sink
}

module.exports.duplex = module.exports

},{"pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/remote-api.js":[function(require,module,exports){
'use strict';
var u = require('./util')
var explain = require('explain-error')

function isFunction (f) {
  return 'function' === typeof f
}

function isObject (o) {
  return o && 'object' === typeof o
}

//add all the api methods to the emitter recursively
function recurse (obj, manifest, path, remoteCall) {
  for(var name in manifest) (function (name, type) {
    var _path = path ? path.concat(name) : [name]
    obj[name] =
        isObject(type)
      ? recurse({}, type, _path, remoteCall)
      : function () {
          return remoteCall(type, _path, [].slice.call(arguments))
        }
  })(name, manifest[name])
  return obj
}


function noop (err) {
  if (err) {
    throw explain(err, 'callback not provided')
  }
}

const promiseTypes = [
  'sync',
  'async'
]

module.exports = function (obj, manifest, _remoteCall, bootstrap) {
  obj = obj || {}

  function remoteCall(type, name, args) {
    var cb = isFunction (args[args.length - 1])
      ? args.pop()
      : promiseTypes.includes(type)
        ? null
        : noop
    var value

    if (typeof cb === 'function') {
      // Callback style
      try { value = _remoteCall(type, name, args, cb) }
      catch(err) { return u.errorAsStreamOrCb(type, err, cb)}

      return value
    } else {
      // Promise style
      return new Promise((resolve, reject) =>
        _remoteCall(type, name, args, (err, val) => {
          if (err) {
            reject(err)
          } else {
            resolve(val)
          }
        })
      )
    }
  }


  if (bootstrap) {
    remoteCall('async', 'manifest', [function (err, remote) {
      if(err)
        return bootstrap(err)
      recurse(obj, remote, null, remoteCall)
      bootstrap(null, remote, obj)
    }])
  } else {
    recurse(obj, manifest, null, remoteCall)
  }

  return obj
}


},{"./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/util.js","explain-error":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/explain-error/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/stream.js":[function(require,module,exports){
'use strict';
var PacketStream = require('packet-stream')
var pullWeird    = require('./pull-weird')
var goodbye      = require('pull-goodbye')
var u            = require('./util')
var explain      = require('explain-error')

function isFunction (f) {
  return 'function' === typeof f
}

function isSource    (t) { return 'source' === t }
function isSink      (t) { return 'sink'   === t }
function isDuplex    (t) { return 'duplex' === t }
function isSync      (t) { return 'sync'  === t }
function isAsync     (t) { return 'async'  === t }
function isRequest   (t) { return isSync(t) || isAsync(t) }
function isStream    (t) { return isSource(t) || isSink(t) || isDuplex(t) }

module.exports = function initStream (localCall, codec, onClose) {

  var ps = PacketStream({
    message: function () {
//      if(isString(msg)) return
//      if(msg.length > 0 && isString(msg[0]))
//        localCall('msg', 'emit', msg)
    },
    request: function (opts, cb) {
      if(!Array.isArray(opts.args))
        return cb(new Error('invalid request, args should be array, was:'+JSON.stringify(opts)))
      var name = opts.name, args = opts.args
      var inCB = false, called = false

      args.push(function (err, value) {
        called = true
        inCB = true; cb(err, value)
      })
      try {
        localCall('async', name, args)
      } catch (err) {
        if(inCB || called) throw explain(err, 'no callback provided to muxrpc async funtion')
        return cb(err)
      }

    },
    stream: function (stream) {
      stream.read = function (data, end) {
        //how would this actually happen?
        if(end) return stream.write(null, end)

        var name = data.name
        var type = data.type
        var err, value

        stream.read = null

        if(!isStream(type))
          return stream.write(null, new Error('unsupported stream type:'+type))

        try { value = localCall(type, name, data.args) }
        catch (_err) { err = _err }

        var _stream = pullWeird[
          {source: 'sink', sink: 'source'}[type] || 'duplex'
        ](stream)

        return u.pipeToStream(
          type, _stream,
          err ? u.errorAsStream(type, err) : value
        )

//        if(isSource(type))
//          _stream(err ? pull.error(err) : value)
//        else if (isSink(type))
//          (err ? abortSink(err) : value)(_stream)
//        else if (isDuplex(type))
//          pull(_stream, err ? abortDuplex(err) : value, _stream)
      }
    },

    close: function (err) {
        ps = null // deallocate
        ws.ended = true
        if(ws.closed) return
        ws.closed = true
        if(onClose) {
          var close = onClose; onClose = null; close(err)
        }
      }
  })

  var ws = goodbye(pullWeird(ps, function () {
    //this error will be handled in PacketStream.close
  }))

  ws = codec ? codec(ws) : ws

  ws.remoteCall = function (type, name, args, cb) {
    if(name === 'emit') return ps.message(args)

    if(!(isRequest(type) || isStream(type)))
      throw new Error('unsupported type:' + JSON.stringify(type))

    if(isRequest(type))
      return ps.request({name: name, args: args}, cb)

    var ws = ps.stream(), s = pullWeird[type](ws, cb)
    ws.write({name: name, args: args, type: type})
    return s
  }


  //hack to work around ordering in setting ps.ended.
  //Question: if an object has subobjects, which
  //all have close events, should the subobjects fire close
  //before the parent? or should parents close after?
  //should there be a preclose event on the parent
  //that fires when it's about to close all the children?
  ws.isOpen = function () {
    return !ps.ended
  }

  ws.close = function (err, cb) {
    if(isFunction(err))
      cb = err, err = false
    if(!ps) return (cb && cb())
    if(err) return ps.destroy(err), (cb && cb())

    ps.close(function (err) {
      if(cb) cb(err)
      else if(err) throw explain(err, 'no callback provided for muxrpc close')
    })

    return this
  }
  ws.closed = false

  return ws
}




},{"./pull-weird":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/pull-weird.js","./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/util.js","explain-error":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/explain-error/index.js","packet-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/packet-stream/index.js","pull-goodbye":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/util.js":[function(require,module,exports){
'use strict';
var pull = require('pull-stream')

function isString (s) {
  return 'string' === typeof s
}

function isEmpty (obj) {
  for(var k in obj) return false;
  return true
}

//I wrote set as part of permissions.js
//and then later mount, they do nearly the same thing
//but not quite. this should be refactored sometime.
//what differs is that set updates the last key in the path
//to the new value, but mount merges the last value
//which makes sense if it's an object, and set makes sense if it's
//a string/number/boolean.

exports.set = function (obj, path, value) {
  var _obj, _k
  for(var i = 0; i < path.length; i++) {
    var k = path[i]
    obj[k] = obj[k] || {}
    _obj = obj; _k = k
    obj = obj[k]
  }
  _obj[_k] = value
}

exports.get = function (obj, path) {
  if(isString(path)) return obj[path]
  var value
  for(var i = 0; i < path.length; i++) {
    var k = path[i]
    value = obj = obj[k]
    if(null == obj) return obj
  }
  return value
}

exports.prefix = function (obj, path) {
  var value

  for(var i = 0; i < path.length; i++) {
    var k = path[i]
    value = obj = obj[k]
    if('object' !== typeof obj) {
      return obj
    }
  }
  return 'object' !== typeof value ? !!value : false
}

function mkPath(obj, path) {
  for(var i in path) {
    var key = path[i]
    if(!obj[key]) obj[key]={}
    obj = obj[key]
  }

  return obj
}

function rmPath (obj, path) {
  (function r (obj, i) {
    var key = path[i]
    if(!obj) return
    else if(path.length - 1 === i)
      delete obj[key]
    else if(i < path.length) r(obj[key], i+1)
    if(isEmpty(obj[key])) delete obj[key]
  })(obj, 0)
}

function merge (obj, _obj) {
  for(var k in _obj)
    obj[k] = _obj[k]
  return obj
}

exports.mount = function (obj, path, _obj) {
  if(!Array.isArray(path))
    throw new Error('path must be array of strings')
  return merge(mkPath(obj, path), _obj)
}
exports.unmount = function (obj, path) {
  return rmPath(obj, path)
}

function isSource    (t) { return 'source' === t }
function isSink      (t) { return 'sink'   === t }
function isDuplex    (t) { return 'duplex' === t }
function isSync      (t) { return 'sync'  === t }
function isAsync     (t) { return 'async'  === t }
function isRequest   (t) { return isSync(t) || isAsync(t) }

function abortSink (err) {
  return function (read) {
    read(err || true, function () {})
  }
}

function abortDuplex (err) {
  return {source: pull.error(err), sink: abortSink(err)}
}

exports.errorAsStream = function (type, err) {
  return (
      isSource(type)  ? pull.error(err)
    : isSink(type)    ? abortSink(err)
    :                   abortDuplex(err)
  )
}


exports.errorAsStreamOrCb = function (type, err, cb) {
  return (
      isRequest(type) ? cb(err)
    : isSource(type)  ? pull.error(err)
    : isSink(type)    ? abortSink(err)
    :                   cb(err), abortDuplex(err)
  )
}

exports.pipeToStream = function (type, _stream, stream) {
  if(isSource(type))
    _stream(stream)
  else if (isSink(type))
    stream(_stream)
  else if (isDuplex(type))
    pull(_stream, stream, _stream)
}


},{"pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/nearley/lib/nearley.js":[function(require,module,exports){
(function(root, factory) {
    if (typeof module === 'object' && module.exports) {
        module.exports = factory();
    } else {
        root.nearley = factory();
    }
}(this, function() {

    function Rule(name, symbols, postprocess) {
        this.id = ++Rule.highestId;
        this.name = name;
        this.symbols = symbols;        // a list of literal | regex class | nonterminal
        this.postprocess = postprocess;
        return this;
    }
    Rule.highestId = 0;

    Rule.prototype.toString = function(withCursorAt) {
        var symbolSequence = (typeof withCursorAt === "undefined")
                             ? this.symbols.map(getSymbolShortDisplay).join(' ')
                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')
                                 + " ● "
                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );
        return this.name + " → " + symbolSequence;
    }


    // a State is a rule at a position from a given starting point in the input stream (reference)
    function State(rule, dot, reference, wantedBy) {
        this.rule = rule;
        this.dot = dot;
        this.reference = reference;
        this.data = [];
        this.wantedBy = wantedBy;
        this.isComplete = this.dot === rule.symbols.length;
    }

    State.prototype.toString = function() {
        return "{" + this.rule.toString(this.dot) + "}, from: " + (this.reference || 0);
    };

    State.prototype.nextState = function(child) {
        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);
        state.left = this;
        state.right = child;
        if (state.isComplete) {
            state.data = state.build();
            // Having right set here will prevent the right state and its children
            // form being garbage collected
            state.right = undefined;
        }
        return state;
    };

    State.prototype.build = function() {
        var children = [];
        var node = this;
        do {
            children.push(node.right.data);
            node = node.left;
        } while (node.left);
        children.reverse();
        return children;
    };

    State.prototype.finish = function() {
        if (this.rule.postprocess) {
            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);
        }
    };


    function Column(grammar, index) {
        this.grammar = grammar;
        this.index = index;
        this.states = [];
        this.wants = {}; // states indexed by the non-terminal they expect
        this.scannable = []; // list of states that expect a token
        this.completed = {}; // states that are nullable
    }


    Column.prototype.process = function(nextColumn) {
        var states = this.states;
        var wants = this.wants;
        var completed = this.completed;

        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration
            var state = states[w];

            if (state.isComplete) {
                state.finish();
                if (state.data !== Parser.fail) {
                    // complete
                    var wantedBy = state.wantedBy;
                    for (var i = wantedBy.length; i--; ) { // this line is hot
                        var left = wantedBy[i];
                        this.complete(left, state);
                    }

                    // special-case nullables
                    if (state.reference === this.index) {
                        // make sure future predictors of this rule get completed.
                        var exp = state.rule.name;
                        (this.completed[exp] = this.completed[exp] || []).push(state);
                    }
                }

            } else {
                // queue scannable states
                var exp = state.rule.symbols[state.dot];
                if (typeof exp !== 'string') {
                    this.scannable.push(state);
                    continue;
                }

                // predict
                if (wants[exp]) {
                    wants[exp].push(state);

                    if (completed.hasOwnProperty(exp)) {
                        var nulls = completed[exp];
                        for (var i = 0; i < nulls.length; i++) {
                            var right = nulls[i];
                            this.complete(state, right);
                        }
                    }
                } else {
                    wants[exp] = [state];
                    this.predict(exp);
                }
            }
        }
    }

    Column.prototype.predict = function(exp) {
        var rules = this.grammar.byName[exp] || [];

        for (var i = 0; i < rules.length; i++) {
            var r = rules[i];
            var wantedBy = this.wants[exp];
            var s = new State(r, 0, this.index, wantedBy);
            this.states.push(s);
        }
    }

    Column.prototype.complete = function(left, right) {
        var copy = left.nextState(right);
        this.states.push(copy);
    }


    function Grammar(rules, start) {
        this.rules = rules;
        this.start = start || this.rules[0].name;
        var byName = this.byName = {};
        this.rules.forEach(function(rule) {
            if (!byName.hasOwnProperty(rule.name)) {
                byName[rule.name] = [];
            }
            byName[rule.name].push(rule);
        });
    }

    // So we can allow passing (rules, start) directly to Parser for backwards compatibility
    Grammar.fromCompiled = function(rules, start) {
        var lexer = rules.Lexer;
        if (rules.ParserStart) {
          start = rules.ParserStart;
          rules = rules.ParserRules;
        }
        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });
        var g = new Grammar(rules, start);
        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable
        return g;
    }


    function StreamLexer() {
      this.reset("");
    }

    StreamLexer.prototype.reset = function(data, state) {
        this.buffer = data;
        this.index = 0;
        this.line = state ? state.line : 1;
        this.lastLineBreak = state ? -state.col : 0;
    }

    StreamLexer.prototype.next = function() {
        if (this.index < this.buffer.length) {
            var ch = this.buffer[this.index++];
            if (ch === '\n') {
              this.line += 1;
              this.lastLineBreak = this.index;
            }
            return {value: ch};
        }
    }

    StreamLexer.prototype.save = function() {
      return {
        line: this.line,
        col: this.index - this.lastLineBreak,
      }
    }

    StreamLexer.prototype.formatError = function(token, message) {
        // nb. this gets called after consuming the offending token,
        // so the culprit is index-1
        var buffer = this.buffer;
        if (typeof buffer === 'string') {
            var lines = buffer
                .split("\n")
                .slice(
                    Math.max(0, this.line - 5), 
                    this.line
                );

            var nextLineBreak = buffer.indexOf('\n', this.index);
            if (nextLineBreak === -1) nextLineBreak = buffer.length;
            var col = this.index - this.lastLineBreak;
            var lastLineDigits = String(this.line).length;
            message += " at line " + this.line + " col " + col + ":\n\n";
            message += lines
                .map(function(line, i) {
                    return pad(this.line - lines.length + i + 1, lastLineDigits) + " " + line;
                }, this)
                .join("\n");
            message += "\n" + pad("", lastLineDigits + col) + "^\n";
            return message;
        } else {
            return message + " at index " + (this.index - 1);
        }

        function pad(n, length) {
            var s = String(n);
            return Array(length - s.length + 1).join(" ") + s;
        }
    }

    function Parser(rules, start, options) {
        if (rules instanceof Grammar) {
            var grammar = rules;
            var options = start;
        } else {
            var grammar = Grammar.fromCompiled(rules, start);
        }
        this.grammar = grammar;

        // Read options
        this.options = {
            keepHistory: false,
            lexer: grammar.lexer || new StreamLexer,
        };
        for (var key in (options || {})) {
            this.options[key] = options[key];
        }

        // Setup lexer
        this.lexer = this.options.lexer;
        this.lexerState = undefined;

        // Setup a table
        var column = new Column(grammar, 0);
        var table = this.table = [column];

        // I could be expecting anything.
        column.wants[grammar.start] = [];
        column.predict(grammar.start);
        // TODO what if start rule is nullable?
        column.process();
        this.current = 0; // token index
    }

    // create a reserved token for indicating a parse fail
    Parser.fail = {};

    Parser.prototype.feed = function(chunk) {
        var lexer = this.lexer;
        lexer.reset(chunk, this.lexerState);

        var token;
        while (true) {
            try {
                token = lexer.next();
                if (!token) {
                    break;
                }
            } catch (e) {
                // Create the next column so that the error reporter
                // can display the correctly predicted states.
                var nextColumn = new Column(this.grammar, this.current + 1);
                this.table.push(nextColumn);
                var err = new Error(this.reportLexerError(e));
                err.offset = this.current;
                err.token = e.token;
                throw err;
            }
            // We add new states to table[current+1]
            var column = this.table[this.current];

            // GC unused states
            if (!this.options.keepHistory) {
                delete this.table[this.current - 1];
            }

            var n = this.current + 1;
            var nextColumn = new Column(this.grammar, n);
            this.table.push(nextColumn);

            // Advance all tokens that expect the symbol
            var literal = token.text !== undefined ? token.text : token.value;
            var value = lexer.constructor === StreamLexer ? token.value : token;
            var scannable = column.scannable;
            for (var w = scannable.length; w--; ) {
                var state = scannable[w];
                var expect = state.rule.symbols[state.dot];
                // Try to consume the token
                // either regex or literal
                if (expect.test ? expect.test(value) :
                    expect.type ? expect.type === token.type
                                : expect.literal === literal) {
                    // Add it
                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});
                    nextColumn.states.push(next);
                }
            }

            // Next, for each of the rules, we either
            // (a) complete it, and try to see if the reference row expected that
            //     rule
            // (b) predict the next nonterminal it expects by adding that
            //     nonterminal's start state
            // To prevent duplication, we also keep track of rules we have already
            // added

            nextColumn.process();

            // If needed, throw an error:
            if (nextColumn.states.length === 0) {
                // No states at all! This is not good.
                var err = new Error(this.reportError(token));
                err.offset = this.current;
                err.token = token;
                throw err;
            }

            // maybe save lexer state
            if (this.options.keepHistory) {
              column.lexerState = lexer.save()
            }

            this.current++;
        }
        if (column) {
          this.lexerState = lexer.save()
        }

        // Incrementally keep track of results
        this.results = this.finish();

        // Allow chaining, for whatever it's worth
        return this;
    };

    Parser.prototype.reportLexerError = function(lexerError) {
        var tokenDisplay, lexerMessage;
        // Planning to add a token property to moo's thrown error
        // even on erroring tokens to be used in error display below
        var token = lexerError.token;
        if (token) {
            tokenDisplay = "input " + JSON.stringify(token.text[0]) + " (lexer error)";
            lexerMessage = this.lexer.formatError(token, "Syntax error");
        } else {
            tokenDisplay = "input (lexer error)";
            lexerMessage = lexerError.message;
        }
        return this.reportErrorCommon(lexerMessage, tokenDisplay);
    };

    Parser.prototype.reportError = function(token) {
        var tokenDisplay = (token.type ? token.type + " token: " : "") + JSON.stringify(token.value !== undefined ? token.value : token);
        var lexerMessage = this.lexer.formatError(token, "Syntax error");
        return this.reportErrorCommon(lexerMessage, tokenDisplay);
    };

    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {
        var lines = [];
        lines.push(lexerMessage);
        var lastColumnIndex = this.table.length - 2;
        var lastColumn = this.table[lastColumnIndex];
        var expectantStates = lastColumn.states
            .filter(function(state) {
                var nextSymbol = state.rule.symbols[state.dot];
                return nextSymbol && typeof nextSymbol !== "string";
            });

        if (expectantStates.length === 0) {
            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\n');
            this.displayStateStack(lastColumn.states, lines);
        } else {
            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\n');
            // Display a "state stack" for each expectant state
            // - which shows you how this state came to be, step by step.
            // If there is more than one derivation, we only display the first one.
            var stateStacks = expectantStates
                .map(function(state) {
                    return this.buildFirstStateStack(state, []) || [state];
                }, this);
            // Display each state that is expecting a terminal symbol next.
            stateStacks.forEach(function(stateStack) {
                var state = stateStack[0];
                var nextSymbol = state.rule.symbols[state.dot];
                var symbolDisplay = this.getSymbolDisplay(nextSymbol);
                lines.push('A ' + symbolDisplay + ' based on:');
                this.displayStateStack(stateStack, lines);
            }, this);
        }
        lines.push("");
        return lines.join("\n");
    }
    
    Parser.prototype.displayStateStack = function(stateStack, lines) {
        var lastDisplay;
        var sameDisplayCount = 0;
        for (var j = 0; j < stateStack.length; j++) {
            var state = stateStack[j];
            var display = state.rule.toString(state.dot);
            if (display === lastDisplay) {
                sameDisplayCount++;
            } else {
                if (sameDisplayCount > 0) {
                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');
                }
                sameDisplayCount = 0;
                lines.push('    ' + display);
            }
            lastDisplay = display;
        }
    };

    Parser.prototype.getSymbolDisplay = function(symbol) {
        return getSymbolLongDisplay(symbol);
    };

    /*
    Builds a the first state stack. You can think of a state stack as the call stack
    of the recursive-descent parser which the Nearley parse algorithm simulates.
    A state stack is represented as an array of state objects. Within a
    state stack, the first item of the array will be the starting
    state, with each successive item in the array going further back into history.

    This function needs to be given a starting state and an empty array representing
    the visited states, and it returns an single state stack.

    */
    Parser.prototype.buildFirstStateStack = function(state, visited) {
        if (visited.indexOf(state) !== -1) {
            // Found cycle, return null
            // to eliminate this path from the results, because
            // we don't know how to display it meaningfully
            return null;
        }
        if (state.wantedBy.length === 0) {
            return [state];
        }
        var prevState = state.wantedBy[0];
        var childVisited = [state].concat(visited);
        var childResult = this.buildFirstStateStack(prevState, childVisited);
        if (childResult === null) {
            return null;
        }
        return [state].concat(childResult);
    };

    Parser.prototype.save = function() {
        var column = this.table[this.current];
        column.lexerState = this.lexerState;
        return column;
    };

    Parser.prototype.restore = function(column) {
        var index = column.index;
        this.current = index;
        this.table[index] = column;
        this.table.splice(index + 1);
        this.lexerState = column.lexerState;

        // Incrementally keep track of results
        this.results = this.finish();
    };

    // nb. deprecated: use save/restore instead!
    Parser.prototype.rewind = function(index) {
        if (!this.options.keepHistory) {
            throw new Error('set option `keepHistory` to enable rewinding')
        }
        // nb. recall column (table) indicies fall between token indicies.
        //        col 0   --   token 0   --   col 1
        this.restore(this.table[index]);
    };

    Parser.prototype.finish = function() {
        // Return the possible parsings
        var considerations = [];
        var start = this.grammar.start;
        var column = this.table[this.table.length - 1]
        column.states.forEach(function (t) {
            if (t.rule.name === start
                    && t.dot === t.rule.symbols.length
                    && t.reference === 0
                    && t.data !== Parser.fail) {
                considerations.push(t);
            }
        });
        return considerations.map(function(c) {return c.data; });
    };

    function getSymbolLongDisplay(symbol) {
        var type = typeof symbol;
        if (type === "string") {
            return symbol;
        } else if (type === "object") {
            if (symbol.literal) {
                return JSON.stringify(symbol.literal);
            } else if (symbol instanceof RegExp) {
                return 'character matching ' + symbol;
            } else if (symbol.type) {
                return symbol.type + ' token';
            } else if (symbol.test) {
                return 'token matching ' + String(symbol.test);
            } else {
                throw new Error('Unknown symbol type: ' + symbol);
            }
        }
    }

    function getSymbolShortDisplay(symbol) {
        var type = typeof symbol;
        if (type === "string") {
            return symbol;
        } else if (type === "object") {
            if (symbol.literal) {
                return JSON.stringify(symbol.literal);
            } else if (symbol instanceof RegExp) {
                return symbol.toString();
            } else if (symbol.type) {
                return '%' + symbol.type;
            } else if (symbol.test) {
                return '<' + String(symbol.test) + '>';
            } else {
                throw new Error('Unknown symbol type: ' + symbol);
            }
        }
    }

    return {
        Parser: Parser,
        Grammar: Grammar,
        Rule: Rule,
    };

}));

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/next-tick/index.js":[function(require,module,exports){
(function (process,setImmediate){(function (){
'use strict';

var ensureCallable = function (fn) {
	if (typeof fn !== 'function') throw new TypeError(fn + " is not a function");
	return fn;
};

var byObserver = function (Observer) {
	var node = document.createTextNode(''), queue, currentQueue, i = 0;
	new Observer(function () {
		var callback;
		if (!queue) {
			if (!currentQueue) return;
			queue = currentQueue;
		} else if (currentQueue) {
			queue = currentQueue.concat(queue);
		}
		currentQueue = queue;
		queue = null;
		if (typeof currentQueue === 'function') {
			callback = currentQueue;
			currentQueue = null;
			callback();
			return;
		}
		node.data = (i = ++i % 2); // Invoke other batch, to handle leftover callbacks in case of crash
		while (currentQueue) {
			callback = currentQueue.shift();
			if (!currentQueue.length) currentQueue = null;
			callback();
		}
	}).observe(node, { characterData: true });
	return function (fn) {
		ensureCallable(fn);
		if (queue) {
			if (typeof queue === 'function') queue = [queue, fn];
			else queue.push(fn);
			return;
		}
		queue = fn;
		node.data = (i = ++i % 2);
	};
};

module.exports = (function () {
	// Node.js
	if ((typeof process === 'object') && process && (typeof process.nextTick === 'function')) {
		return process.nextTick;
	}

	// queueMicrotask
	if (typeof queueMicrotask === "function") {
		return function (cb) { queueMicrotask(ensureCallable(cb)); };
	}

	// MutationObserver
	if ((typeof document === 'object') && document) {
		if (typeof MutationObserver === 'function') return byObserver(MutationObserver);
		if (typeof WebKitMutationObserver === 'function') return byObserver(WebKitMutationObserver);
	}

	// W3C Draft
	// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html
	if (typeof setImmediate === 'function') {
		return function (cb) { setImmediate(ensureCallable(cb)); };
	}

	// Wide available standard
	if ((typeof setTimeout === 'function') || (typeof setTimeout === 'object')) {
		return function (cb) { setTimeout(ensureCallable(cb), 0); };
	}

	return null;
}());

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","timers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/timers-browserify/main.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/non-private-ip/index.js":[function(require,module,exports){
var os = require('os')
var ip = require('ip')
//pick the first reasonable looking host.
//this should *just work* when running on a vps.

var isPrivate = ip.isPrivate

function isNonPrivate (e) {
  return !isPrivate(e)
}


var address = module.exports = function (inter, filter) {
  inter = inter || os.networkInterfaces()
  filter = filter || isNonPrivate
  for(var k in inter) {
    for(var i in inter[k]) {
      var e = inter[k][i]
      // find a reasonable looking address
      if(!e.internal && filter(e.address, e))
          return e.address
    }
  }
}

function isV4 (e) {
  return e.family === 'IPv4'
}

function isV6 (e) {
  return e.family === 'IPv6'
}

var _private = module.exports.private = function (inter) {
  return address(inter, isPrivate)
}

module.exports.v4 = address(null, function (addr, e) {
  return isV4(e) && isNonPrivate(addr)
})

module.exports.v6 = address(null, function (addr, e) {
  return isV6(e) && isNonPrivate(addr)
})

_private.v4 = address(null, function (addr, e) {
  return isV4(e) && isPrivate(addr)
})

_private.v6 = address(null, function (addr, e) {
  return isV6(e) && isPrivate(addr)
})

module.exports.all = {
  public: {
    v4: module.exports.v4, v6: module.exports.v6
  },
  private: {
    v4: _private.v4, v6: _private.v6
  }
}

},{"ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js","os":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/os-browserify/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/object-assign/index.js":[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/obv/index.js":[function(require,module,exports){

module.exports = function (filter) {
  var value = null, listeners = [], oncers = []
  function trigger (_value) {
    value = _value
    var length = listeners.length
    for(var i = 0; i< length && value === _value; i++) {
      var listener = listeners[i](value)
      //if we remove a listener, must decrement i also
    }
    // decrement from length, incase a !immediately
    // listener is added during a trigger
    var l = oncers.length
    var _oncers = oncers
    oncers = []
    while(l-- && _value === value) {
      _oncers.shift()(value)
    }
  }

  function many (ready, immediately) {
    var i = listeners.push(ready) - 1
    if(value !== null && immediately !== false) ready(value)
    return function () { //manually remove...
      //fast path, will happen if an earlier listener has not been removed.
      if(listeners[i] !== ready)
        i = listeners.indexOf(ready)
      listeners.splice(i, 1)
    }
  }

  many.set = function (_value) {
    if(filter ? filter(value, _value) : true) trigger(many.value = _value)
    return many
  }

  many.once = function (once, immediately) {
    if(value !== null && immediately !== false) {
      once(value)
      return function () {}
    }
    else {
      var i = oncers.push(once) - 1
      return function () {
        if(oncers[i] !== once)
          i = oncers.indexOf(once)
      }
    }
  }

  return many
}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/obz/index.js":[function(require,module,exports){

module.exports = function (filter) {
  var value = null, listeners = [], oncers = []
  function trigger (_value) {
    value = _value
    var length = listeners.length
    for(var i = 0; i< length && value === _value; i++) {
      if (typeof listeners[i] === 'function') {
        listeners[i](value)
      }
      //if we remove a listener, must decrement i also

    }
    // decrement from length, incase a !immediately
    // listener is added during a trigger
    var l = oncers.length
    var _oncers = oncers
    oncers = []
    while(l-- && _value === value) {
      _oncers.shift()(value)
    }
  }

  function many (ready, immediately) {
    var i = listeners.push(ready) - 1
    if(value !== null && immediately !== false) ready(value)
    return function () { //manually remove...
      //fast path, will happen if an earlier listener has not been removed.
      if(listeners[i] !== ready)
        i = listeners.indexOf(ready)
      listeners.splice(i, 1)
    }
  }

  many.set = function (_value) {
    if(filter ? filter(value, _value) : true) trigger(many.value = _value)
    return many
  }

  many.once = function (once, immediately) {
    if(value !== null && immediately !== false) {
      once(value)
      return function () {}
    }
    else {
      var i = oncers.push(once) - 1
      return function () {
        if(oncers[i] !== once)
          i = oncers.indexOf(once)
      }
    }
  }

  return many
}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/on-change-network-strict/index.js":[function(require,module,exports){
var os = require('os');

function each(network) {
  return Object.keys(network)
    .map(function(itrface) {
      return network[itrface]
        .filter(function(e) {
          return !e.internal;
        })
        .map(function(e) {
          return itrface + '/' + e.address;
        });
    })
    .reduce(function(a, b) {
      return a.concat(b);
    }, []);
}

module.exports = function(onNetwork, ref) {
  var init = each(os.networkInterfaces()).join(',');
  var int = setInterval(function(e) {
    var cur = each(os.networkInterfaces()).join(',');
    if (init !== cur) onNetwork((init = cur));
  }, 1000);

  //unreference the counter (only on node)
  if (!ref && int.unref) int.unref();
};

if (!module.parent)
  module.exports(function(addrs) {
    console.log(addrs);
  }, true);

},{"os":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/os-browserify/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/on-wakeup/index.js":[function(require,module,exports){
var sleepCheckInterval
var lastSleepCheck = false
var SLEEP_CHECK_INTERVAL = 10e3
var NUM_MISSABLE_INTERVALS = 3
var EE = require('events')
var emitter = new EE()

module.exports = function (cb) {
  emitter.on('wakeup', cb)

  if (!sleepCheckInterval) {
    // setup interval
    sleepCheckInterval = setInterval(function () {
      var t = Date.now()
      if (lastSleepCheck && (t - lastSleepCheck) > SLEEP_CHECK_INTERVAL*NUM_MISSABLE_INTERVALS)
        emitter.emit('wakeup') // missed NUM_MISSABLE_INTERVALS checks, let's run the callbacks 
      lastSleepCheck = t
    }, SLEEP_CHECK_INTERVAL)
  }
  
  // unreference the timer so that the program can close
  if (sleepCheckInterval.unref)
    sleepCheckInterval.unref()

  return sleepCheckInterval
}

},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/once/once.js":[function(require,module,exports){
var wrappy = require('wrappy')
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}

},{"wrappy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/wrappy/wrappy.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/os-browserify/browser.js":[function(require,module,exports){
exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/p-defer/index.js":[function(require,module,exports){
'use strict';

const pDefer = () => {
	const deferred = {};

	deferred.promise = new Promise((resolve, reject) => {
		deferred.resolve = resolve;
		deferred.reject = reject;
	});

	return deferred;
};

module.exports = pDefer;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/packet-stream-codec/index.js":[function(require,module,exports){
(function (Buffer){(function (){

var Through = require('pull-through')
var Reader = require('pull-reader')

var BUFFER = 0, STRING = 1, OBJECT = 2

var GOODBYE = 'GOODBYE'
var isBuffer = Buffer.isBuffer

function isString (s) {
  return 'string' === typeof s
}

function encodePair (msg) {

  var head = Buffer.alloc(9)
  var flags = 0
  var value = msg.value !== undefined ? msg.value : msg.end

  //final packet
  if(isString(msg) && msg === GOODBYE) {
    head.fill(0)
    return [head, null]
  }

  if(isString(value)) {
    flags = STRING
    value = Buffer.from(value, 'utf-8')
  }
  else if(isBuffer(value)) {
    flags = BUFFER
  }
  else {
    flags = OBJECT
    value = Buffer.from(JSON.stringify(value), 'utf-8')
  }

  // does this frame represent a msg, a req, or a stream?

  //end, stream

  flags = msg.stream << 3 | msg.end << 2 | flags

  head[0] = flags

  head.writeUInt32BE(value.length, 1)
  head.writeInt32BE(msg.req || 0, 5)

  return [head, value]
}

function decodeHead (bytes) {
  if(bytes.length != 9)
    throw new Error('expected header to be 9 bytes long')
  var flags = bytes[0]
  var length = bytes.readUInt32BE(1)
  var req = bytes.readInt32BE(5)

  return {
    req    : req,
    stream : !!(flags & 8),
    end    : !!(flags & 4),
    value  : null,
    length : length,
    type   : flags & 3
  }
}

function decodeBody (bytes, msg) {
  if(bytes.length !== msg.length)
    throw new Error('incorrect length, expected:'+msg.length+' found:'+bytes.length)
  if(BUFFER === msg.type) msg.value = bytes
  else if(STRING === msg.type) msg.value = bytes.toString()
  else if(OBJECT === msg.type) msg.value = JSON.parse(bytes.toString())
  else throw new Error('unknown message type')
  return msg
}

function encode () {
  return Through(function (d) {
    var c = encodePair(d)
    this.queue(c[0])
    if(c[1] !== null)
      this.queue(c[1])
  })
}

function decode () {
  var reader = Reader(), ended = false

  return function (read) {
    reader(read)

    return function (abort, cb) {
      if(ended) return cb(true)
      if(abort) return reader.abort(abort, cb)
      reader.read(9, function (err, head) {
        if(err) return cb(err)
        var msg = decodeHead(head)
        if(msg.length === 0) { //final packet
          ended = true
          return cb(null, GOODBYE)
        }
        reader.read(msg.length, function (err, body) {
          if(err) return cb(err)
          try {
            decodeBody(body, msg)
          } catch(e) {
            return cb(e)
          }
          cb(null, msg)
        })
      })
    }
  }
}

exports = module.exports = function (stream) {
  return {
    source: encode()(stream.source),
    sink: function (read) { return stream.sink(decode()(read)) }
  }
}

exports.encodePair = encodePair
exports.decodeHead = decodeHead
exports.decodeBody = decodeBody

exports.encode = encode
exports.decode = decode


}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","pull-reader":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-reader/index.js","pull-through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-through/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/packet-stream/index.js":[function(require,module,exports){
function flat(err) {
  if(!err) return err
  if(err === true) return true
  return {message: err.message, name: err.name, stack: err.stack}
}

module.exports = function (opts) {
  return new PacketStream(opts)
}

function PacketStream (opts) {
  this.ended = false
  this.opts  = opts // must release, may capture `this`

  this._req_counter = 1
  this._requests    = {} // must release, may capture `this`
  this._instreams   = {} // must release, may capture `this`
  this._outstreams  = {} // must release, may capture `this`
  this._closecbs    = [] // must release, may capture `this`
  this._closing     = false
  this._closed      = false
  if (opts.close)
    this._closecbs.push(opts.close)
}

// Sends a single message to the other end
PacketStream.prototype.message = function (obj) {
  this.read({req: 0, stream: false, end: false, value: obj})
}

// Sends a message to the other end, expects an (err, obj) response
PacketStream.prototype.request = function (obj, cb) {
  if (this._closing) return cb(new Error('parent stream is closing'))
  var rid = this._req_counter++
  var self = this
  this._requests[rid] = function (err, value) {
    delete self._requests[rid]
    cb(err, value)
    self._maybedone(err)
  }
  this.read({ req:rid, stream: false, end: false, value: obj })
}

// Sends a request to the other end for a stream
PacketStream.prototype.stream = function () {
  if (this._closing) throw new Error('parent stream is closing')
  var rid = this._req_counter++
  var self = this
  this._outstreams[rid] = new PacketStreamSubstream(rid, this, function() { delete self._outstreams[rid] })
  return this._outstreams[rid]
}

// Marks the packetstream to close when all current IO is finished
PacketStream.prototype.close = function (cb) {
  if(!cb) throw new Error('packet-stream.close *must* have callback')
  if (this._closed)
    return cb()
  this._closecbs.push(cb)
  this._closing = true
  this._maybedone()
}

// Forces immediate close of the PacketStream
// - usually triggered by an `end` packet from the other end
PacketStream.prototype.destroy = function (end) {
  end = end || flat(end)
  this.ended = end
  this._closing = true

  var err = (end === true)
    ? new Error('unexpected end of parent stream')
    : end

  // force-close all requests and substreams
  var numended = 0
  for (var k in this._requests)   { numended++; this._requests[k](err) }
  for (var k in this._instreams)  {
    numended++
    // destroy substream without sending it a message
    this._instreams[k].writeEnd = true
    this._instreams[k].destroy(err)
  }
  for (var k in this._outstreams) {
    numended++
    // destroy substream without sending it a message
    this._outstreams[k].writeEnd = true
    this._outstreams[k].destroy(err)
  }

  //from the perspective of the outside stream it's not an error
  //if the stream was in a state that where end was okay. (no open requests/streams)
  if (numended === 0 && end === true)
    err = null
  this._maybedone(err)
}

PacketStream.prototype._maybedone = function (err) {
  if (this._closed || !this._closing)
    return

  // check if all requests and streams finished
  if (Object.keys(this._requests).length !== 0 ||
      Object.keys(this._instreams).length !== 0 ||
      Object.keys(this._outstreams).length !== 0)
    return // not yet

  // close
  this._closed = true
  this._closecbs.forEach(function (cb) { cb(err) })
  this.read(null, err || true)

  // deallocate
  this.opts = null
  this._closecbs.length = 0
  this.read = closedread
}

function closedread (msg) {
  console.error('packet-stream asked to read after closed', msg)
}

// Sends data out to the other end
// - to be overridden by the PacketStream consumer
PacketStream.prototype.read = function (msg) {
  console.error('please overwrite read method to do IO', msg)
}

// Accepts data from the other end
PacketStream.prototype.write = function (msg, end) {
  if (this.ended)
    return

  if (end)                         this.destroy(end)
  else if (msg.req && !msg.stream) this._onrequest(msg)
  else if (msg.req && msg.stream)  this._onstream(msg)
  else                             this._onmessage(msg)
}

// Internal handler of incoming message msgs
PacketStream.prototype._onmessage = function (msg) {
  if (this.opts && 'function' === typeof this.opts.message)
    this.opts.message(msg.value)
}

// Internal handler of incoming request msgs
PacketStream.prototype._onrequest = function (msg) {
  var rid = msg.req*-1
  if(msg.req < 0) {
    // A incoming response
    if (typeof this._requests[rid] == 'function')
      this._requests[rid](
        msg.end ? msg.value: null,
        msg.end ? null : msg.value
      )
  }
  else {
    // An incoming request
    if (this.opts && typeof this.opts.request == 'function') {
      var once = false
      var self = this
      this.opts.request(msg.value, function (err, value) {
        if(once) throw new Error('cb called twice from local api')
        once = true
        if(err) self.read({ value: flat(err), end: true, req: rid })
        else    self.read({ value: value, end: false, req: rid })
        self._maybedone()
      })
    } else {
      if (this.ended) {
        var err = (this.ended === true)
          ? new Error('unexpected end of parent stream')
          : this.ended
        this.read({ value: flat(err), end: true, stream: false, req: rid })
      }
      else
        this.read({ value: {
            message: 'Unable to handle requests',
            name: 'NO_REQUEST_HANDLER', stack: null
          },
          end: true, stream: false, req: rid
        })
      this._maybedone()
    }
  }
}

// Internal handler of incoming stream msgs
PacketStream.prototype._onstream = function (msg) {
  if(msg.req < 0) {
    // Incoming stream data
    var rid = msg.req*-1
    var outs = this._outstreams[rid]
    if (!outs)
      return console.error('no stream for incoming msg', msg)

    if (msg.end) {
      if (outs.writeEnd)
        delete this._outstreams[rid]
      outs.readEnd = true
      outs.read(null, msg.value)
      this._maybedone()
    }
    else
      outs.read(msg.value)
  }
  else {
    // Incoming stream request
    var rid = msg.req
    var ins = this._instreams[rid]

    if (!ins) {
      // New stream
      var self = this
      ins = this._instreams[rid] = new PacketStreamSubstream(rid*-1, this, function() { delete self._instreams[rid] })
      if (this.opts && typeof this.opts.stream == 'function')
        this.opts.stream(ins)
    }

    if(msg.end) {
      if (ins.writeEnd)
        delete this._instreams[rid]
      ins.readEnd = true
      if(ins.read)
        ins.read(null, msg.value)
      this._maybedone()
    }
    else if(ins.read)
      ins.read(msg.value)
    else
      console.error('no .read for stream:', ins.id, 'dropped:', msg)
  }
}


function PacketStreamSubstream (id, ps, remove) {
  this.id       = id
  this.read     = null // must release, may capture `this`
  this.writeEnd = null
  this.readEnd  = null

  this._ps          = ps     // must release, may capture `this`
  this._remove      = remove // must release, may capture `this`
  this._seq_counter = 1
}

PacketStreamSubstream.prototype.write = function (data, err) {
  if (err) {
    this.writeEnd = err
    var ps = this._ps
    if (ps) {
      ps.read({ req: this.id, stream: true, end: true, value: flat(err) })
      if (this.readEnd)
        this.destroy(err)
      ps._maybedone(err)
    }
  }
  else {
    if (this._ps) this._ps.read({ req: this.id, stream: true, end: false, value: data })
  }
}

// Send the `end` message for the substream
PacketStreamSubstream.prototype.end = function (err) {
  this.write(null, flat(err || true))
}

PacketStreamSubstream.prototype.destroy = function (err) {
  if (!this.writeEnd) {
    this.writeEnd = true
    if (!this.readEnd) {
      this.readEnd = true
      try {
        // catch errors to ensure cleanup
        this.read(null, err)
      } catch (e) {
        console.error('Exception thrown by PacketStream substream end handler', e)
        console.error(e.stack)
      }
    }
    this.write(null, err)
  }
  else if (!this.readEnd) {
    this.readEnd = true
    try {
      // catch errors to ensure cleanup
      // don't assume that a stream has been piped anywhere.
      if(this.read) this.read(null, err)
    } catch (e) {
      console.error('Exception thrown by PacketStream substream end handler', e)
      console.error(e.stack)
    }
  }

  // deallocate
  if (this._ps) {
    this._remove()
    this._remove = null
    this.read = closedread
    this._ps = null
  }
}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/aesid.json":[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/asn1.js":[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/certificate.js","asn1.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/certificate.js":[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional(),
    this.key('curve').objid().optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int().optional(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/lib/asn1.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/fixProc.js":[function(require,module,exports){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
var Buffer = require('safe-buffer').Buffer
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = Buffer.from(match[2], 'hex')
    var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

},{"browserify-aes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/browser.js","evp_bytestokey":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/evp_bytestokey/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/index.js":[function(require,module,exports){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
var Buffer = require('safe-buffer').Buffer
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

},{"./aesid.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/aesid.json","./asn1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/asn1.js","./fixProc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/fixProc.js","browserify-aes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-aes/browser.js","pbkdf2":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js":[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/browser.js":[function(require,module,exports){
exports.pbkdf2 = require('./lib/async')
exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/async.js","./lib/sync":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/sync-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/async.js":[function(require,module,exports){
(function (process,global){(function (){
var Buffer = require('safe-buffer').Buffer

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var toBuffer = require('./to-buffer')

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  sha: 'SHA-1',
  'sha-1': 'SHA-1',
  sha1: 'SHA-1',
  sha256: 'SHA-256',
  'sha-256': 'SHA-256',
  sha384: 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  sha512: 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }

  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/default-encoding.js","./precondition":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/precondition.js","./sync":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/sync-browser.js","./to-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/to-buffer.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/default-encoding.js":[function(require,module,exports){
(function (process){(function (){
var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else if (process.version) {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
} else {
  defaultEncoding = 'utf-8'
}
module.exports = defaultEncoding

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/precondition.js":[function(require,module,exports){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/sync-browser.js":[function(require,module,exports){
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Buffer = require('safe-buffer').Buffer

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var toBuffer = require('./to-buffer')

var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }
  function rmd160Func (data) {
    return new RIPEMD160().update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/default-encoding.js","./precondition":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/precondition.js","./to-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/to-buffer.js","create-hash/md5":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/md5.js","ripemd160":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ripemd160/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js","sha.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/lib/to-buffer.js":[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

module.exports = function (thing, encoding, name) {
  if (Buffer.isBuffer(thing)) {
    return thing
  } else if (typeof thing === 'string') {
    return Buffer.from(thing, encoding)
  } else if (ArrayBuffer.isView(thing)) {
    return Buffer.from(thing.buffer)
  } else {
    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')
  }
}

},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/hash.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js"][0].apply(exports,arguments)
},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/index.js"][0].apply(exports,arguments)
},{"./sha":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha.js","./sha1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha1.js","./sha224":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha224.js","./sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha256.js","./sha384":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha384.js","./sha512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha512.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha.js"][0].apply(exports,arguments)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha1.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha1.js"][0].apply(exports,arguments)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha224.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha224.js"][0].apply(exports,arguments)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/hash.js","./sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha256.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha256.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha256.js"][0].apply(exports,arguments)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha384.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha384.js"][0].apply(exports,arguments)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/hash.js","./sha512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha512.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/sha512.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha512.js"][0].apply(exports,arguments)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pbkdf2/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/piexifjs/piexif.js":[function(require,module,exports){
/* piexifjs

The MIT License (MIT)

Copyright (c) 2014, 2015 hMatoba(https://github.com/hMatoba)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

(function () {
    "use strict";
    var that = {};
    that.version = "1.0.4";

    that.remove = function (jpeg) {
        var b64 = false;
        if (jpeg.slice(0, 2) == "\xff\xd8") {
        } else if (jpeg.slice(0, 23) == "data:image/jpeg;base64," || jpeg.slice(0, 22) == "data:image/jpg;base64,") {
            jpeg = atob(jpeg.split(",")[1]);
            b64 = true;
        } else {
            throw new Error("Given data is not jpeg.");
        }
        
        var segments = splitIntoSegments(jpeg);
        var newSegments = segments.filter(function(seg){
          return  !(seg.slice(0, 2) == "\xff\xe1" &&
                   seg.slice(4, 10) == "Exif\x00\x00"); 
        });
        
        var new_data = newSegments.join("");
        if (b64) {
            new_data = "data:image/jpeg;base64," + btoa(new_data);
        }

        return new_data;
    };


    that.insert = function (exif, jpeg) {
        var b64 = false;
        if (exif.slice(0, 6) != "\x45\x78\x69\x66\x00\x00") {
            throw new Error("Given data is not exif.");
        }
        if (jpeg.slice(0, 2) == "\xff\xd8") {
        } else if (jpeg.slice(0, 23) == "data:image/jpeg;base64," || jpeg.slice(0, 22) == "data:image/jpg;base64,") {
            jpeg = atob(jpeg.split(",")[1]);
            b64 = true;
        } else {
            throw new Error("Given data is not jpeg.");
        }

        var exifStr = "\xff\xe1" + pack(">H", [exif.length + 2]) + exif;
        var segments = splitIntoSegments(jpeg);
        var new_data = mergeSegments(segments, exifStr);
        if (b64) {
            new_data = "data:image/jpeg;base64," + btoa(new_data);
        }

        return new_data;
    };


    that.load = function (data) {
        var input_data;
        if (typeof (data) == "string") {
            if (data.slice(0, 2) == "\xff\xd8") {
                input_data = data;
            } else if (data.slice(0, 23) == "data:image/jpeg;base64," || data.slice(0, 22) == "data:image/jpg;base64,") {
                input_data = atob(data.split(",")[1]);
            } else if (data.slice(0, 4) == "Exif") {
                input_data = data.slice(6);
            } else {
                throw new Error("'load' gots invalid file data.");
            }
        } else {
            throw new Error("'load' gots invalid type argument.");
        }

        var exifDict = {};
        var exif_dict = {
            "0th": {},
            "Exif": {},
            "GPS": {},
            "Interop": {},
            "1st": {},
            "thumbnail": null
        };
        var exifReader = new ExifReader(input_data);
        if (exifReader.tiftag === null) {
            return exif_dict;
        }

        if (exifReader.tiftag.slice(0, 2) == "\x49\x49") {
            exifReader.endian_mark = "<";
        } else {
            exifReader.endian_mark = ">";
        }

        var pointer = unpack(exifReader.endian_mark + "L",
            exifReader.tiftag.slice(4, 8))[0];
        exif_dict["0th"] = exifReader.get_ifd(pointer, "0th");

        var first_ifd_pointer = exif_dict["0th"]["first_ifd_pointer"];
        delete exif_dict["0th"]["first_ifd_pointer"];

        if (34665 in exif_dict["0th"]) {
            pointer = exif_dict["0th"][34665];
            exif_dict["Exif"] = exifReader.get_ifd(pointer, "Exif");
        }
        if (34853 in exif_dict["0th"]) {
            pointer = exif_dict["0th"][34853];
            exif_dict["GPS"] = exifReader.get_ifd(pointer, "GPS");
        }
        if (40965 in exif_dict["Exif"]) {
            pointer = exif_dict["Exif"][40965];
            exif_dict["Interop"] = exifReader.get_ifd(pointer, "Interop");
        }
        if (first_ifd_pointer != "\x00\x00\x00\x00") {
            pointer = unpack(exifReader.endian_mark + "L",
                first_ifd_pointer)[0];
            exif_dict["1st"] = exifReader.get_ifd(pointer, "1st");
            if ((513 in exif_dict["1st"]) && (514 in exif_dict["1st"])) {
                var end = exif_dict["1st"][513] + exif_dict["1st"][514];
                var thumb = exifReader.tiftag.slice(exif_dict["1st"][513], end);
                exif_dict["thumbnail"] = thumb;
            }
        }

        return exif_dict;
    };


    that.dump = function (exif_dict_original) {
        var TIFF_HEADER_LENGTH = 8;

        var exif_dict = copy(exif_dict_original);
        var header = "Exif\x00\x00\x4d\x4d\x00\x2a\x00\x00\x00\x08";
        var exif_is = false;
        var gps_is = false;
        var interop_is = false;
        var first_is = false;

        var zeroth_ifd,
            exif_ifd,
            interop_ifd,
            gps_ifd,
            first_ifd;
        
        if ("0th" in exif_dict) {
            zeroth_ifd = exif_dict["0th"];
        } else {
            zeroth_ifd = {};
        }
        
        if ((("Exif" in exif_dict) && (Object.keys(exif_dict["Exif"]).length)) ||
            (("Interop" in exif_dict) && (Object.keys(exif_dict["Interop"]).length))) {
            zeroth_ifd[34665] = 1;
            exif_is = true;
            exif_ifd = exif_dict["Exif"];
            if (("Interop" in exif_dict) && Object.keys(exif_dict["Interop"]).length) {
                exif_ifd[40965] = 1;
                interop_is = true;
                interop_ifd = exif_dict["Interop"];
            } else if (Object.keys(exif_ifd).indexOf(that.ExifIFD.InteroperabilityTag.toString()) > -1) {
                delete exif_ifd[40965];
            }
        } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.ExifTag.toString()) > -1) {
            delete zeroth_ifd[34665];
        }

        if (("GPS" in exif_dict) && (Object.keys(exif_dict["GPS"]).length)) {
            zeroth_ifd[that.ImageIFD.GPSTag] = 1;
            gps_is = true;
            gps_ifd = exif_dict["GPS"];
        } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.GPSTag.toString()) > -1) {
            delete zeroth_ifd[that.ImageIFD.GPSTag];
        }
        
        if (("1st" in exif_dict) &&
            ("thumbnail" in exif_dict) &&
            (exif_dict["thumbnail"] != null)) {
            first_is = true;
            exif_dict["1st"][513] = 1;
            exif_dict["1st"][514] = 1;
            first_ifd = exif_dict["1st"];
        }
        
        var zeroth_set = _dict_to_bytes(zeroth_ifd, "0th", 0);
        var zeroth_length = (zeroth_set[0].length + exif_is * 12 + gps_is * 12 + 4 +
            zeroth_set[1].length);

        var exif_set,
            exif_bytes = "",
            exif_length = 0,
            gps_set,
            gps_bytes = "",
            gps_length = 0,
            interop_set,
            interop_bytes = "",
            interop_length = 0,
            first_set,
            first_bytes = "",
            thumbnail;
        if (exif_is) {
            exif_set = _dict_to_bytes(exif_ifd, "Exif", zeroth_length);
            exif_length = exif_set[0].length + interop_is * 12 + exif_set[1].length;
        }
        if (gps_is) {
            gps_set = _dict_to_bytes(gps_ifd, "GPS", zeroth_length + exif_length);
            gps_bytes = gps_set.join("");
            gps_length = gps_bytes.length;
        }
        if (interop_is) {
            var offset = zeroth_length + exif_length + gps_length;
            interop_set = _dict_to_bytes(interop_ifd, "Interop", offset);
            interop_bytes = interop_set.join("");
            interop_length = interop_bytes.length;
        }
        if (first_is) {
            var offset = zeroth_length + exif_length + gps_length + interop_length;
            first_set = _dict_to_bytes(first_ifd, "1st", offset);
            thumbnail = _get_thumbnail(exif_dict["thumbnail"]);
            if (thumbnail.length > 64000) {
                throw new Error("Given thumbnail is too large. max 64kB");
            }
        }

        var exif_pointer = "",
            gps_pointer = "",
            interop_pointer = "",
            first_ifd_pointer = "\x00\x00\x00\x00";
        if (exif_is) {
            var pointer_value = TIFF_HEADER_LENGTH + zeroth_length;
            var pointer_str = pack(">L", [pointer_value]);
            var key = 34665;
            var key_str = pack(">H", [key]);
            var type_str = pack(">H", [TYPES["Long"]]);
            var length_str = pack(">L", [1]);
            exif_pointer = key_str + type_str + length_str + pointer_str;
        }
        if (gps_is) {
            var pointer_value = TIFF_HEADER_LENGTH + zeroth_length + exif_length;
            var pointer_str = pack(">L", [pointer_value]);
            var key = 34853;
            var key_str = pack(">H", [key]);
            var type_str = pack(">H", [TYPES["Long"]]);
            var length_str = pack(">L", [1]);
            gps_pointer = key_str + type_str + length_str + pointer_str;
        }
        if (interop_is) {
            var pointer_value = (TIFF_HEADER_LENGTH +
                zeroth_length + exif_length + gps_length);
            var pointer_str = pack(">L", [pointer_value]);
            var key = 40965;
            var key_str = pack(">H", [key]);
            var type_str = pack(">H", [TYPES["Long"]]);
            var length_str = pack(">L", [1]);
            interop_pointer = key_str + type_str + length_str + pointer_str;
        }
        if (first_is) {
            var pointer_value = (TIFF_HEADER_LENGTH + zeroth_length +
                exif_length + gps_length + interop_length);
            first_ifd_pointer = pack(">L", [pointer_value]);
            var thumbnail_pointer = (pointer_value + first_set[0].length + 24 +
                4 + first_set[1].length);
            var thumbnail_p_bytes = ("\x02\x01\x00\x04\x00\x00\x00\x01" +
                pack(">L", [thumbnail_pointer]));
            var thumbnail_length_bytes = ("\x02\x02\x00\x04\x00\x00\x00\x01" +
                pack(">L", [thumbnail.length]));
            first_bytes = (first_set[0] + thumbnail_p_bytes +
                thumbnail_length_bytes + "\x00\x00\x00\x00" +
                first_set[1] + thumbnail);
        }

        var zeroth_bytes = (zeroth_set[0] + exif_pointer + gps_pointer +
            first_ifd_pointer + zeroth_set[1]);
        if (exif_is) {
            exif_bytes = exif_set[0] + interop_pointer + exif_set[1];
        }

        return (header + zeroth_bytes + exif_bytes + gps_bytes +
            interop_bytes + first_bytes);
    };


    function copy(obj) {
        return JSON.parse(JSON.stringify(obj));
    }


    function _get_thumbnail(jpeg) {
        var segments = splitIntoSegments(jpeg);
        while (("\xff\xe0" <= segments[1].slice(0, 2)) && (segments[1].slice(0, 2) <= "\xff\xef")) {
            segments = [segments[0]].concat(segments.slice(2));
        }
        return segments.join("");
    }


    function _pack_byte(array) {
        return pack(">" + nStr("B", array.length), array);
    }


    function _pack_short(array) {
        return pack(">" + nStr("H", array.length), array);
    }


    function _pack_long(array) {
        return pack(">" + nStr("L", array.length), array);
    }


    function _value_to_bytes(raw_value, value_type, offset) {
        var four_bytes_over = "";
        var value_str = "";
        var length,
            new_value,
            num,
            den;

        if (value_type == "Byte") {
            length = raw_value.length;
            if (length <= 4) {
                value_str = (_pack_byte(raw_value) +
                    nStr("\x00", 4 - length));
            } else {
                value_str = pack(">L", [offset]);
                four_bytes_over = _pack_byte(raw_value);
            }
        } else if (value_type == "Short") {
            length = raw_value.length;
            if (length <= 2) {
                value_str = (_pack_short(raw_value) +
                    nStr("\x00\x00", 2 - length));
            } else {
                value_str = pack(">L", [offset]);
                four_bytes_over = _pack_short(raw_value);
            }
        } else if (value_type == "Long") {
            length = raw_value.length;
            if (length <= 1) {
                value_str = _pack_long(raw_value);
            } else {
                value_str = pack(">L", [offset]);
                four_bytes_over = _pack_long(raw_value);
            }
        } else if (value_type == "Ascii") {
            new_value = raw_value + "\x00";
            length = new_value.length;
            if (length > 4) {
                value_str = pack(">L", [offset]);
                four_bytes_over = new_value;
            } else {
                value_str = new_value + nStr("\x00", 4 - length);
            }
        } else if (value_type == "Rational") {
            if (typeof (raw_value[0]) == "number") {
                length = 1;
                num = raw_value[0];
                den = raw_value[1];
                new_value = pack(">L", [num]) + pack(">L", [den]);
            } else {
                length = raw_value.length;
                new_value = "";
                for (var n = 0; n < length; n++) {
                    num = raw_value[n][0];
                    den = raw_value[n][1];
                    new_value += (pack(">L", [num]) +
                        pack(">L", [den]));
                }
            }
            value_str = pack(">L", [offset]);
            four_bytes_over = new_value;
        } else if (value_type == "SRational") {
            if (typeof (raw_value[0]) == "number") {
                length = 1;
                num = raw_value[0];
                den = raw_value[1];
                new_value = pack(">l", [num]) + pack(">l", [den]);
            } else {
                length = raw_value.length;
                new_value = "";
                for (var n = 0; n < length; n++) {
                    num = raw_value[n][0];
                    den = raw_value[n][1];
                    new_value += (pack(">l", [num]) +
                        pack(">l", [den]));
                }
            }
            value_str = pack(">L", [offset]);
            four_bytes_over = new_value;
        } else if (value_type == "Undefined") {
            length = raw_value.length;
            if (length > 4) {
                value_str = pack(">L", [offset]);
                four_bytes_over = raw_value;
            } else {
                value_str = raw_value + nStr("\x00", 4 - length);
            }
        }

        var length_str = pack(">L", [length]);

        return [length_str, value_str, four_bytes_over];
    }

    function _dict_to_bytes(ifd_dict, ifd, ifd_offset) {
        var TIFF_HEADER_LENGTH = 8;
        var tag_count = Object.keys(ifd_dict).length;
        var entry_header = pack(">H", [tag_count]);
        var entries_length;
        if (["0th", "1st"].indexOf(ifd) > -1) {
            entries_length = 2 + tag_count * 12 + 4;
        } else {
            entries_length = 2 + tag_count * 12;
        }
        var entries = "";
        var values = "";
        var key;

        for (var key in ifd_dict) {
            if (typeof (key) == "string") {
                key = parseInt(key);
            }
            if ((ifd == "0th") && ([34665, 34853].indexOf(key) > -1)) {
                continue;
            } else if ((ifd == "Exif") && (key == 40965)) {
                continue;
            } else if ((ifd == "1st") && ([513, 514].indexOf(key) > -1)) {
                continue;
            }

            var raw_value = ifd_dict[key];
            var key_str = pack(">H", [key]);
            var value_type = TAGS[ifd][key]["type"];
            var type_str = pack(">H", [TYPES[value_type]]);

            if (typeof (raw_value) == "number") {
                raw_value = [raw_value];
            }
            var offset = TIFF_HEADER_LENGTH + entries_length + ifd_offset + values.length;
            var b = _value_to_bytes(raw_value, value_type, offset);
            var length_str = b[0];
            var value_str = b[1];
            var four_bytes_over = b[2];

            entries += key_str + type_str + length_str + value_str;
            values += four_bytes_over;
        }

        return [entry_header + entries, values];
    }



    function ExifReader(data) {
        var segments,
            app1;
        if (data.slice(0, 2) == "\xff\xd8") { // JPEG
            segments = splitIntoSegments(data);
            app1 = getExifSeg(segments);
            if (app1) {
                this.tiftag = app1.slice(10);
            } else {
                this.tiftag = null;
            }
        } else if (["\x49\x49", "\x4d\x4d"].indexOf(data.slice(0, 2)) > -1) { // TIFF
            this.tiftag = data;
        } else if (data.slice(0, 4) == "Exif") { // Exif
            this.tiftag = data.slice(6);
        } else {
            throw new Error("Given file is neither JPEG nor TIFF.");
        }
    }

    ExifReader.prototype = {
        get_ifd: function (pointer, ifd_name) {
            var ifd_dict = {};
            var tag_count = unpack(this.endian_mark + "H",
                this.tiftag.slice(pointer, pointer + 2))[0];
            var offset = pointer + 2;
            var t;
            if (["0th", "1st"].indexOf(ifd_name) > -1) {
                t = "Image";
            } else {
                t = ifd_name;
            }

            for (var x = 0; x < tag_count; x++) {
                pointer = offset + 12 * x;
                var tag = unpack(this.endian_mark + "H",
                    this.tiftag.slice(pointer, pointer + 2))[0];
                var value_type = unpack(this.endian_mark + "H",
                    this.tiftag.slice(pointer + 2, pointer + 4))[0];
                var value_num = unpack(this.endian_mark + "L",
                    this.tiftag.slice(pointer + 4, pointer + 8))[0];
                var value = this.tiftag.slice(pointer + 8, pointer + 12);

                var v_set = [value_type, value_num, value];
                if (tag in TAGS[t]) {
                    ifd_dict[tag] = this.convert_value(v_set);
                }
            }

            if (ifd_name == "0th") {
                pointer = offset + 12 * tag_count;
                ifd_dict["first_ifd_pointer"] = this.tiftag.slice(pointer, pointer + 4);
            }

            return ifd_dict;
        },

        convert_value: function (val) {
            var data = null;
            var t = val[0];
            var length = val[1];
            var value = val[2];
            var pointer;

            if (t == 1) { // BYTE
                if (length > 4) {
                    pointer = unpack(this.endian_mark + "L", value)[0];
                    data = unpack(this.endian_mark + nStr("B", length),
                        this.tiftag.slice(pointer, pointer + length));
                } else {
                    data = unpack(this.endian_mark + nStr("B", length), value.slice(0, length));
                }
            } else if (t == 2) { // ASCII
                if (length > 4) {
                    pointer = unpack(this.endian_mark + "L", value)[0];
                    data = this.tiftag.slice(pointer, pointer + length - 1);
                } else {
                    data = value.slice(0, length - 1);
                }
            } else if (t == 3) { // SHORT
                if (length > 2) {
                    pointer = unpack(this.endian_mark + "L", value)[0];
                    data = unpack(this.endian_mark + nStr("H", length),
                        this.tiftag.slice(pointer, pointer + length * 2));
                } else {
                    data = unpack(this.endian_mark + nStr("H", length),
                        value.slice(0, length * 2));
                }
            } else if (t == 4) { // LONG
                if (length > 1) {
                    pointer = unpack(this.endian_mark + "L", value)[0];
                    data = unpack(this.endian_mark + nStr("L", length),
                        this.tiftag.slice(pointer, pointer + length * 4));
                } else {
                    data = unpack(this.endian_mark + nStr("L", length),
                        value);
                }
            } else if (t == 5) { // RATIONAL
                pointer = unpack(this.endian_mark + "L", value)[0];
                if (length > 1) {
                    data = [];
                    for (var x = 0; x < length; x++) {
                        data.push([unpack(this.endian_mark + "L",
                                this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0],
                                   unpack(this.endian_mark + "L",
                                this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]
                                   ]);
                    }
                } else {
                    data = [unpack(this.endian_mark + "L",
                            this.tiftag.slice(pointer, pointer + 4))[0],
                            unpack(this.endian_mark + "L",
                            this.tiftag.slice(pointer + 4, pointer + 8))[0]
                            ];
                }
            } else if (t == 7) { // UNDEFINED BYTES
                if (length > 4) {
                    pointer = unpack(this.endian_mark + "L", value)[0];
                    data = this.tiftag.slice(pointer, pointer + length);
                } else {
                    data = value.slice(0, length);
                }
            } else if (t == 9) { // SLONG
                if (length > 1) {
                    pointer = unpack(this.endian_mark + "L", value)[0];
                    data = unpack(this.endian_mark + nStr("l", length),
                        this.tiftag.slice(pointer, pointer + length * 4));
                } else {
                    data = unpack(this.endian_mark + nStr("l", length),
                        value);
                }
            } else if (t == 10) { // SRATIONAL
                pointer = unpack(this.endian_mark + "L", value)[0];
                if (length > 1) {
                    data = [];
                    for (var x = 0; x < length; x++) {
                        data.push([unpack(this.endian_mark + "l",
                                this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0],
                                   unpack(this.endian_mark + "l",
                                this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]
                                  ]);
                    }
                } else {
                    data = [unpack(this.endian_mark + "l",
                            this.tiftag.slice(pointer, pointer + 4))[0],
                            unpack(this.endian_mark + "l",
                            this.tiftag.slice(pointer + 4, pointer + 8))[0]
                           ];
                }
            } else {
                throw new Error("Exif might be wrong. Got incorrect value " +
                    "type to decode. type:" + t);
            }

            if ((data instanceof Array) && (data.length == 1)) {
                return data[0];
            } else {
                return data;
            }
        },
    };


    if (typeof window !== "undefined" && typeof window.btoa === "function") {
        var btoa = window.btoa;
    }
    if (typeof btoa === "undefined") {
        var btoa = function (input) {        var output = "";
            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
            var i = 0;
            var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

            while (i < input.length) {

                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);

                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;

                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }

                output = output +
                keyStr.charAt(enc1) + keyStr.charAt(enc2) +
                keyStr.charAt(enc3) + keyStr.charAt(enc4);

            }

            return output;
        };
    }
    
    
    if (typeof window !== "undefined" && typeof window.atob === "function") {
        var atob = window.atob;
    }
    if (typeof atob === "undefined") {
        var atob = function (input) {
            var output = "";
            var chr1, chr2, chr3;
            var enc1, enc2, enc3, enc4;
            var i = 0;
            var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

            while (i < input.length) {

                enc1 = keyStr.indexOf(input.charAt(i++));
                enc2 = keyStr.indexOf(input.charAt(i++));
                enc3 = keyStr.indexOf(input.charAt(i++));
                enc4 = keyStr.indexOf(input.charAt(i++));

                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;

                output = output + String.fromCharCode(chr1);

                if (enc3 != 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 != 64) {
                    output = output + String.fromCharCode(chr3);
                }

            }

            return output;
        };
    }


    function getImageSize(imageArray) {
        var segments = slice2Segments(imageArray);
        var seg,
            width,
            height,
            SOF = [192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207];

        for (var x = 0; x < segments.length; x++) {
            seg = segments[x];
            if (SOF.indexOf(seg[1]) >= 0) {
                height = seg[5] * 256 + seg[6];
                width = seg[7] * 256 + seg[8];
                break;
            }
        }
        return [width, height];
    }


    function pack(mark, array) {
        if (!(array instanceof Array)) {
            throw new Error("'pack' error. Got invalid type argument.");
        }
        if ((mark.length - 1) != array.length) {
            throw new Error("'pack' error. " + (mark.length - 1) + " marks, " + array.length + " elements.");
        }

        var littleEndian;
        if (mark[0] == "<") {
            littleEndian = true;
        } else if (mark[0] == ">") {
            littleEndian = false;
        } else {
            throw new Error("");
        }
        var packed = "";
        var p = 1;
        var val = null;
        var c = null;
        var valStr = null;

        while (c = mark[p]) {
            if (c.toLowerCase() == "b") {
                val = array[p - 1];
                if ((c == "b") && (val < 0)) {
                    val += 0x100;
                }
                if ((val > 0xff) || (val < 0)) {
                    throw new Error("'pack' error.");
                } else {
                    valStr = String.fromCharCode(val);
                }
            } else if (c == "H") {
                val = array[p - 1];
                if ((val > 0xffff) || (val < 0)) {
                    throw new Error("'pack' error.");
                } else {
                    valStr = String.fromCharCode(Math.floor((val % 0x10000) / 0x100)) +
                        String.fromCharCode(val % 0x100);
                    if (littleEndian) {
                        valStr = valStr.split("").reverse().join("");
                    }
                }
            } else if (c.toLowerCase() == "l") {
                val = array[p - 1];
                if ((c == "l") && (val < 0)) {
                    val += 0x100000000;
                }
                if ((val > 0xffffffff) || (val < 0)) {
                    throw new Error("'pack' error.");
                } else {
                    valStr = String.fromCharCode(Math.floor(val / 0x1000000)) +
                        String.fromCharCode(Math.floor((val % 0x1000000) / 0x10000)) +
                        String.fromCharCode(Math.floor((val % 0x10000) / 0x100)) +
                        String.fromCharCode(val % 0x100);
                    if (littleEndian) {
                        valStr = valStr.split("").reverse().join("");
                    }
                }
            } else {
                throw new Error("'pack' error.");
            }

            packed += valStr;
            p += 1;
        }

        return packed;
    }

    function unpack(mark, str) {
        if (typeof (str) != "string") {
            throw new Error("'unpack' error. Got invalid type argument.");
        }
        var l = 0;
        for (var markPointer = 1; markPointer < mark.length; markPointer++) {
            if (mark[markPointer].toLowerCase() == "b") {
                l += 1;
            } else if (mark[markPointer].toLowerCase() == "h") {
                l += 2;
            } else if (mark[markPointer].toLowerCase() == "l") {
                l += 4;
            } else {
                throw new Error("'unpack' error. Got invalid mark.");
            }
        }

        if (l != str.length) {
            throw new Error("'unpack' error. Mismatch between symbol and string length. " + l + ":" + str.length);
        }

        var littleEndian;
        if (mark[0] == "<") {
            littleEndian = true;
        } else if (mark[0] == ">") {
            littleEndian = false;
        } else {
            throw new Error("'unpack' error.");
        }
        var unpacked = [];
        var strPointer = 0;
        var p = 1;
        var val = null;
        var c = null;
        var length = null;
        var sliced = "";

        while (c = mark[p]) {
            if (c.toLowerCase() == "b") {
                length = 1;
                sliced = str.slice(strPointer, strPointer + length);
                val = sliced.charCodeAt(0);
                if ((c == "b") && (val >= 0x80)) {
                    val -= 0x100;
                }
            } else if (c == "H") {
                length = 2;
                sliced = str.slice(strPointer, strPointer + length);
                if (littleEndian) {
                    sliced = sliced.split("").reverse().join("");
                }
                val = sliced.charCodeAt(0) * 0x100 +
                    sliced.charCodeAt(1);
            } else if (c.toLowerCase() == "l") {
                length = 4;
                sliced = str.slice(strPointer, strPointer + length);
                if (littleEndian) {
                    sliced = sliced.split("").reverse().join("");
                }
                val = sliced.charCodeAt(0) * 0x1000000 +
                    sliced.charCodeAt(1) * 0x10000 +
                    sliced.charCodeAt(2) * 0x100 +
                    sliced.charCodeAt(3);
                if ((c == "l") && (val >= 0x80000000)) {
                    val -= 0x100000000;
                }
            } else {
                throw new Error("'unpack' error. " + c);
            }

            unpacked.push(val);
            strPointer += length;
            p += 1;
        }

        return unpacked;
    }

    function nStr(ch, num) {
        var str = "";
        for (var i = 0; i < num; i++) {
            str += ch;
        }
        return str;
    }

    function splitIntoSegments(data) {
        if (data.slice(0, 2) != "\xff\xd8") {
            throw new Error("Given data isn't JPEG.");
        }

        var head = 2;
        var segments = ["\xff\xd8"];
        while (true) {
            if (data.slice(head, head + 2) == "\xff\xda") {
                segments.push(data.slice(head));
                break;
            } else {
                var length = unpack(">H", data.slice(head + 2, head + 4))[0];
                var endPoint = head + length + 2;
                segments.push(data.slice(head, endPoint));
                head = endPoint;
            }

            if (head >= data.length) {
                throw new Error("Wrong JPEG data.");
            }
        }
        return segments;
    }


    function getExifSeg(segments) {
        var seg;
        for (var i = 0; i < segments.length; i++) {
            seg = segments[i];
            if (seg.slice(0, 2) == "\xff\xe1" &&
                   seg.slice(4, 10) == "Exif\x00\x00") {
                return seg;
            }
        }
        return null;
    }


    function mergeSegments(segments, exif) {
        var hasExifSegment = false;
        var additionalAPP1ExifSegments = [];

        segments.forEach(function(segment, i) {
            // Replace first occurence of APP1:Exif segment
            if (segment.slice(0, 2) == "\xff\xe1" &&
                segment.slice(4, 10) == "Exif\x00\x00"
            ) {
                if (!hasExifSegment) {
                    segments[i] = exif;
                    hasExifSegment = true;
                } else {
                    additionalAPP1ExifSegments.unshift(i);
                }
            }
        });

        // Remove additional occurences of APP1:Exif segment
        additionalAPP1ExifSegments.forEach(function(segmentIndex) {
            segments.splice(segmentIndex, 1);
        });

        if (!hasExifSegment && exif) {
            segments = [segments[0], exif].concat(segments.slice(1));
        }

        return segments.join("");
    }


    function toHex(str) {
        var hexStr = "";
        for (var i = 0; i < str.length; i++) {
            var h = str.charCodeAt(i);
            var hex = ((h < 10) ? "0" : "") + h.toString(16);
            hexStr += hex + " ";
        }
        return hexStr;
    }


    var TYPES = {
        "Byte": 1,
        "Ascii": 2,
        "Short": 3,
        "Long": 4,
        "Rational": 5,
        "Undefined": 7,
        "SLong": 9,
        "SRational": 10
    };


    var TAGS = {
        'Image': {
            11: {
                'name': 'ProcessingSoftware',
                'type': 'Ascii'
            },
            254: {
                'name': 'NewSubfileType',
                'type': 'Long'
            },
            255: {
                'name': 'SubfileType',
                'type': 'Short'
            },
            256: {
                'name': 'ImageWidth',
                'type': 'Long'
            },
            257: {
                'name': 'ImageLength',
                'type': 'Long'
            },
            258: {
                'name': 'BitsPerSample',
                'type': 'Short'
            },
            259: {
                'name': 'Compression',
                'type': 'Short'
            },
            262: {
                'name': 'PhotometricInterpretation',
                'type': 'Short'
            },
            263: {
                'name': 'Threshholding',
                'type': 'Short'
            },
            264: {
                'name': 'CellWidth',
                'type': 'Short'
            },
            265: {
                'name': 'CellLength',
                'type': 'Short'
            },
            266: {
                'name': 'FillOrder',
                'type': 'Short'
            },
            269: {
                'name': 'DocumentName',
                'type': 'Ascii'
            },
            270: {
                'name': 'ImageDescription',
                'type': 'Ascii'
            },
            271: {
                'name': 'Make',
                'type': 'Ascii'
            },
            272: {
                'name': 'Model',
                'type': 'Ascii'
            },
            273: {
                'name': 'StripOffsets',
                'type': 'Long'
            },
            274: {
                'name': 'Orientation',
                'type': 'Short'
            },
            277: {
                'name': 'SamplesPerPixel',
                'type': 'Short'
            },
            278: {
                'name': 'RowsPerStrip',
                'type': 'Long'
            },
            279: {
                'name': 'StripByteCounts',
                'type': 'Long'
            },
            282: {
                'name': 'XResolution',
                'type': 'Rational'
            },
            283: {
                'name': 'YResolution',
                'type': 'Rational'
            },
            284: {
                'name': 'PlanarConfiguration',
                'type': 'Short'
            },
            290: {
                'name': 'GrayResponseUnit',
                'type': 'Short'
            },
            291: {
                'name': 'GrayResponseCurve',
                'type': 'Short'
            },
            292: {
                'name': 'T4Options',
                'type': 'Long'
            },
            293: {
                'name': 'T6Options',
                'type': 'Long'
            },
            296: {
                'name': 'ResolutionUnit',
                'type': 'Short'
            },
            301: {
                'name': 'TransferFunction',
                'type': 'Short'
            },
            305: {
                'name': 'Software',
                'type': 'Ascii'
            },
            306: {
                'name': 'DateTime',
                'type': 'Ascii'
            },
            315: {
                'name': 'Artist',
                'type': 'Ascii'
            },
            316: {
                'name': 'HostComputer',
                'type': 'Ascii'
            },
            317: {
                'name': 'Predictor',
                'type': 'Short'
            },
            318: {
                'name': 'WhitePoint',
                'type': 'Rational'
            },
            319: {
                'name': 'PrimaryChromaticities',
                'type': 'Rational'
            },
            320: {
                'name': 'ColorMap',
                'type': 'Short'
            },
            321: {
                'name': 'HalftoneHints',
                'type': 'Short'
            },
            322: {
                'name': 'TileWidth',
                'type': 'Short'
            },
            323: {
                'name': 'TileLength',
                'type': 'Short'
            },
            324: {
                'name': 'TileOffsets',
                'type': 'Short'
            },
            325: {
                'name': 'TileByteCounts',
                'type': 'Short'
            },
            330: {
                'name': 'SubIFDs',
                'type': 'Long'
            },
            332: {
                'name': 'InkSet',
                'type': 'Short'
            },
            333: {
                'name': 'InkNames',
                'type': 'Ascii'
            },
            334: {
                'name': 'NumberOfInks',
                'type': 'Short'
            },
            336: {
                'name': 'DotRange',
                'type': 'Byte'
            },
            337: {
                'name': 'TargetPrinter',
                'type': 'Ascii'
            },
            338: {
                'name': 'ExtraSamples',
                'type': 'Short'
            },
            339: {
                'name': 'SampleFormat',
                'type': 'Short'
            },
            340: {
                'name': 'SMinSampleValue',
                'type': 'Short'
            },
            341: {
                'name': 'SMaxSampleValue',
                'type': 'Short'
            },
            342: {
                'name': 'TransferRange',
                'type': 'Short'
            },
            343: {
                'name': 'ClipPath',
                'type': 'Byte'
            },
            344: {
                'name': 'XClipPathUnits',
                'type': 'Long'
            },
            345: {
                'name': 'YClipPathUnits',
                'type': 'Long'
            },
            346: {
                'name': 'Indexed',
                'type': 'Short'
            },
            347: {
                'name': 'JPEGTables',
                'type': 'Undefined'
            },
            351: {
                'name': 'OPIProxy',
                'type': 'Short'
            },
            512: {
                'name': 'JPEGProc',
                'type': 'Long'
            },
            513: {
                'name': 'JPEGInterchangeFormat',
                'type': 'Long'
            },
            514: {
                'name': 'JPEGInterchangeFormatLength',
                'type': 'Long'
            },
            515: {
                'name': 'JPEGRestartInterval',
                'type': 'Short'
            },
            517: {
                'name': 'JPEGLosslessPredictors',
                'type': 'Short'
            },
            518: {
                'name': 'JPEGPointTransforms',
                'type': 'Short'
            },
            519: {
                'name': 'JPEGQTables',
                'type': 'Long'
            },
            520: {
                'name': 'JPEGDCTables',
                'type': 'Long'
            },
            521: {
                'name': 'JPEGACTables',
                'type': 'Long'
            },
            529: {
                'name': 'YCbCrCoefficients',
                'type': 'Rational'
            },
            530: {
                'name': 'YCbCrSubSampling',
                'type': 'Short'
            },
            531: {
                'name': 'YCbCrPositioning',
                'type': 'Short'
            },
            532: {
                'name': 'ReferenceBlackWhite',
                'type': 'Rational'
            },
            700: {
                'name': 'XMLPacket',
                'type': 'Byte'
            },
            18246: {
                'name': 'Rating',
                'type': 'Short'
            },
            18249: {
                'name': 'RatingPercent',
                'type': 'Short'
            },
            32781: {
                'name': 'ImageID',
                'type': 'Ascii'
            },
            33421: {
                'name': 'CFARepeatPatternDim',
                'type': 'Short'
            },
            33422: {
                'name': 'CFAPattern',
                'type': 'Byte'
            },
            33423: {
                'name': 'BatteryLevel',
                'type': 'Rational'
            },
            33432: {
                'name': 'Copyright',
                'type': 'Ascii'
            },
            33434: {
                'name': 'ExposureTime',
                'type': 'Rational'
            },
            34377: {
                'name': 'ImageResources',
                'type': 'Byte'
            },
            34665: {
                'name': 'ExifTag',
                'type': 'Long'
            },
            34675: {
                'name': 'InterColorProfile',
                'type': 'Undefined'
            },
            34853: {
                'name': 'GPSTag',
                'type': 'Long'
            },
            34857: {
                'name': 'Interlace',
                'type': 'Short'
            },
            34858: {
                'name': 'TimeZoneOffset',
                'type': 'Long'
            },
            34859: {
                'name': 'SelfTimerMode',
                'type': 'Short'
            },
            37387: {
                'name': 'FlashEnergy',
                'type': 'Rational'
            },
            37388: {
                'name': 'SpatialFrequencyResponse',
                'type': 'Undefined'
            },
            37389: {
                'name': 'Noise',
                'type': 'Undefined'
            },
            37390: {
                'name': 'FocalPlaneXResolution',
                'type': 'Rational'
            },
            37391: {
                'name': 'FocalPlaneYResolution',
                'type': 'Rational'
            },
            37392: {
                'name': 'FocalPlaneResolutionUnit',
                'type': 'Short'
            },
            37393: {
                'name': 'ImageNumber',
                'type': 'Long'
            },
            37394: {
                'name': 'SecurityClassification',
                'type': 'Ascii'
            },
            37395: {
                'name': 'ImageHistory',
                'type': 'Ascii'
            },
            37397: {
                'name': 'ExposureIndex',
                'type': 'Rational'
            },
            37398: {
                'name': 'TIFFEPStandardID',
                'type': 'Byte'
            },
            37399: {
                'name': 'SensingMethod',
                'type': 'Short'
            },
            40091: {
                'name': 'XPTitle',
                'type': 'Byte'
            },
            40092: {
                'name': 'XPComment',
                'type': 'Byte'
            },
            40093: {
                'name': 'XPAuthor',
                'type': 'Byte'
            },
            40094: {
                'name': 'XPKeywords',
                'type': 'Byte'
            },
            40095: {
                'name': 'XPSubject',
                'type': 'Byte'
            },
            50341: {
                'name': 'PrintImageMatching',
                'type': 'Undefined'
            },
            50706: {
                'name': 'DNGVersion',
                'type': 'Byte'
            },
            50707: {
                'name': 'DNGBackwardVersion',
                'type': 'Byte'
            },
            50708: {
                'name': 'UniqueCameraModel',
                'type': 'Ascii'
            },
            50709: {
                'name': 'LocalizedCameraModel',
                'type': 'Byte'
            },
            50710: {
                'name': 'CFAPlaneColor',
                'type': 'Byte'
            },
            50711: {
                'name': 'CFALayout',
                'type': 'Short'
            },
            50712: {
                'name': 'LinearizationTable',
                'type': 'Short'
            },
            50713: {
                'name': 'BlackLevelRepeatDim',
                'type': 'Short'
            },
            50714: {
                'name': 'BlackLevel',
                'type': 'Rational'
            },
            50715: {
                'name': 'BlackLevelDeltaH',
                'type': 'SRational'
            },
            50716: {
                'name': 'BlackLevelDeltaV',
                'type': 'SRational'
            },
            50717: {
                'name': 'WhiteLevel',
                'type': 'Short'
            },
            50718: {
                'name': 'DefaultScale',
                'type': 'Rational'
            },
            50719: {
                'name': 'DefaultCropOrigin',
                'type': 'Short'
            },
            50720: {
                'name': 'DefaultCropSize',
                'type': 'Short'
            },
            50721: {
                'name': 'ColorMatrix1',
                'type': 'SRational'
            },
            50722: {
                'name': 'ColorMatrix2',
                'type': 'SRational'
            },
            50723: {
                'name': 'CameraCalibration1',
                'type': 'SRational'
            },
            50724: {
                'name': 'CameraCalibration2',
                'type': 'SRational'
            },
            50725: {
                'name': 'ReductionMatrix1',
                'type': 'SRational'
            },
            50726: {
                'name': 'ReductionMatrix2',
                'type': 'SRational'
            },
            50727: {
                'name': 'AnalogBalance',
                'type': 'Rational'
            },
            50728: {
                'name': 'AsShotNeutral',
                'type': 'Short'
            },
            50729: {
                'name': 'AsShotWhiteXY',
                'type': 'Rational'
            },
            50730: {
                'name': 'BaselineExposure',
                'type': 'SRational'
            },
            50731: {
                'name': 'BaselineNoise',
                'type': 'Rational'
            },
            50732: {
                'name': 'BaselineSharpness',
                'type': 'Rational'
            },
            50733: {
                'name': 'BayerGreenSplit',
                'type': 'Long'
            },
            50734: {
                'name': 'LinearResponseLimit',
                'type': 'Rational'
            },
            50735: {
                'name': 'CameraSerialNumber',
                'type': 'Ascii'
            },
            50736: {
                'name': 'LensInfo',
                'type': 'Rational'
            },
            50737: {
                'name': 'ChromaBlurRadius',
                'type': 'Rational'
            },
            50738: {
                'name': 'AntiAliasStrength',
                'type': 'Rational'
            },
            50739: {
                'name': 'ShadowScale',
                'type': 'SRational'
            },
            50740: {
                'name': 'DNGPrivateData',
                'type': 'Byte'
            },
            50741: {
                'name': 'MakerNoteSafety',
                'type': 'Short'
            },
            50778: {
                'name': 'CalibrationIlluminant1',
                'type': 'Short'
            },
            50779: {
                'name': 'CalibrationIlluminant2',
                'type': 'Short'
            },
            50780: {
                'name': 'BestQualityScale',
                'type': 'Rational'
            },
            50781: {
                'name': 'RawDataUniqueID',
                'type': 'Byte'
            },
            50827: {
                'name': 'OriginalRawFileName',
                'type': 'Byte'
            },
            50828: {
                'name': 'OriginalRawFileData',
                'type': 'Undefined'
            },
            50829: {
                'name': 'ActiveArea',
                'type': 'Short'
            },
            50830: {
                'name': 'MaskedAreas',
                'type': 'Short'
            },
            50831: {
                'name': 'AsShotICCProfile',
                'type': 'Undefined'
            },
            50832: {
                'name': 'AsShotPreProfileMatrix',
                'type': 'SRational'
            },
            50833: {
                'name': 'CurrentICCProfile',
                'type': 'Undefined'
            },
            50834: {
                'name': 'CurrentPreProfileMatrix',
                'type': 'SRational'
            },
            50879: {
                'name': 'ColorimetricReference',
                'type': 'Short'
            },
            50931: {
                'name': 'CameraCalibrationSignature',
                'type': 'Byte'
            },
            50932: {
                'name': 'ProfileCalibrationSignature',
                'type': 'Byte'
            },
            50934: {
                'name': 'AsShotProfileName',
                'type': 'Byte'
            },
            50935: {
                'name': 'NoiseReductionApplied',
                'type': 'Rational'
            },
            50936: {
                'name': 'ProfileName',
                'type': 'Byte'
            },
            50937: {
                'name': 'ProfileHueSatMapDims',
                'type': 'Long'
            },
            50938: {
                'name': 'ProfileHueSatMapData1',
                'type': 'Float'
            },
            50939: {
                'name': 'ProfileHueSatMapData2',
                'type': 'Float'
            },
            50940: {
                'name': 'ProfileToneCurve',
                'type': 'Float'
            },
            50941: {
                'name': 'ProfileEmbedPolicy',
                'type': 'Long'
            },
            50942: {
                'name': 'ProfileCopyright',
                'type': 'Byte'
            },
            50964: {
                'name': 'ForwardMatrix1',
                'type': 'SRational'
            },
            50965: {
                'name': 'ForwardMatrix2',
                'type': 'SRational'
            },
            50966: {
                'name': 'PreviewApplicationName',
                'type': 'Byte'
            },
            50967: {
                'name': 'PreviewApplicationVersion',
                'type': 'Byte'
            },
            50968: {
                'name': 'PreviewSettingsName',
                'type': 'Byte'
            },
            50969: {
                'name': 'PreviewSettingsDigest',
                'type': 'Byte'
            },
            50970: {
                'name': 'PreviewColorSpace',
                'type': 'Long'
            },
            50971: {
                'name': 'PreviewDateTime',
                'type': 'Ascii'
            },
            50972: {
                'name': 'RawImageDigest',
                'type': 'Undefined'
            },
            50973: {
                'name': 'OriginalRawFileDigest',
                'type': 'Undefined'
            },
            50974: {
                'name': 'SubTileBlockSize',
                'type': 'Long'
            },
            50975: {
                'name': 'RowInterleaveFactor',
                'type': 'Long'
            },
            50981: {
                'name': 'ProfileLookTableDims',
                'type': 'Long'
            },
            50982: {
                'name': 'ProfileLookTableData',
                'type': 'Float'
            },
            51008: {
                'name': 'OpcodeList1',
                'type': 'Undefined'
            },
            51009: {
                'name': 'OpcodeList2',
                'type': 'Undefined'
            },
            51022: {
                'name': 'OpcodeList3',
                'type': 'Undefined'
            }
        },
        'Exif': {
            33434: {
                'name': 'ExposureTime',
                'type': 'Rational'
            },
            33437: {
                'name': 'FNumber',
                'type': 'Rational'
            },
            34850: {
                'name': 'ExposureProgram',
                'type': 'Short'
            },
            34852: {
                'name': 'SpectralSensitivity',
                'type': 'Ascii'
            },
            34855: {
                'name': 'ISOSpeedRatings',
                'type': 'Short'
            },
            34856: {
                'name': 'OECF',
                'type': 'Undefined'
            },
            34864: {
                'name': 'SensitivityType',
                'type': 'Short'
            },
            34865: {
                'name': 'StandardOutputSensitivity',
                'type': 'Long'
            },
            34866: {
                'name': 'RecommendedExposureIndex',
                'type': 'Long'
            },
            34867: {
                'name': 'ISOSpeed',
                'type': 'Long'
            },
            34868: {
                'name': 'ISOSpeedLatitudeyyy',
                'type': 'Long'
            },
            34869: {
                'name': 'ISOSpeedLatitudezzz',
                'type': 'Long'
            },
            36864: {
                'name': 'ExifVersion',
                'type': 'Undefined'
            },
            36867: {
                'name': 'DateTimeOriginal',
                'type': 'Ascii'
            },
            36868: {
                'name': 'DateTimeDigitized',
                'type': 'Ascii'
            },
            37121: {
                'name': 'ComponentsConfiguration',
                'type': 'Undefined'
            },
            37122: {
                'name': 'CompressedBitsPerPixel',
                'type': 'Rational'
            },
            37377: {
                'name': 'ShutterSpeedValue',
                'type': 'SRational'
            },
            37378: {
                'name': 'ApertureValue',
                'type': 'Rational'
            },
            37379: {
                'name': 'BrightnessValue',
                'type': 'SRational'
            },
            37380: {
                'name': 'ExposureBiasValue',
                'type': 'SRational'
            },
            37381: {
                'name': 'MaxApertureValue',
                'type': 'Rational'
            },
            37382: {
                'name': 'SubjectDistance',
                'type': 'Rational'
            },
            37383: {
                'name': 'MeteringMode',
                'type': 'Short'
            },
            37384: {
                'name': 'LightSource',
                'type': 'Short'
            },
            37385: {
                'name': 'Flash',
                'type': 'Short'
            },
            37386: {
                'name': 'FocalLength',
                'type': 'Rational'
            },
            37396: {
                'name': 'SubjectArea',
                'type': 'Short'
            },
            37500: {
                'name': 'MakerNote',
                'type': 'Undefined'
            },
            37510: {
                'name': 'UserComment',
                'type': 'Ascii'
            },
            37520: {
                'name': 'SubSecTime',
                'type': 'Ascii'
            },
            37521: {
                'name': 'SubSecTimeOriginal',
                'type': 'Ascii'
            },
            37522: {
                'name': 'SubSecTimeDigitized',
                'type': 'Ascii'
            },
            40960: {
                'name': 'FlashpixVersion',
                'type': 'Undefined'
            },
            40961: {
                'name': 'ColorSpace',
                'type': 'Short'
            },
            40962: {
                'name': 'PixelXDimension',
                'type': 'Long'
            },
            40963: {
                'name': 'PixelYDimension',
                'type': 'Long'
            },
            40964: {
                'name': 'RelatedSoundFile',
                'type': 'Ascii'
            },
            40965: {
                'name': 'InteroperabilityTag',
                'type': 'Long'
            },
            41483: {
                'name': 'FlashEnergy',
                'type': 'Rational'
            },
            41484: {
                'name': 'SpatialFrequencyResponse',
                'type': 'Undefined'
            },
            41486: {
                'name': 'FocalPlaneXResolution',
                'type': 'Rational'
            },
            41487: {
                'name': 'FocalPlaneYResolution',
                'type': 'Rational'
            },
            41488: {
                'name': 'FocalPlaneResolutionUnit',
                'type': 'Short'
            },
            41492: {
                'name': 'SubjectLocation',
                'type': 'Short'
            },
            41493: {
                'name': 'ExposureIndex',
                'type': 'Rational'
            },
            41495: {
                'name': 'SensingMethod',
                'type': 'Short'
            },
            41728: {
                'name': 'FileSource',
                'type': 'Undefined'
            },
            41729: {
                'name': 'SceneType',
                'type': 'Undefined'
            },
            41730: {
                'name': 'CFAPattern',
                'type': 'Undefined'
            },
            41985: {
                'name': 'CustomRendered',
                'type': 'Short'
            },
            41986: {
                'name': 'ExposureMode',
                'type': 'Short'
            },
            41987: {
                'name': 'WhiteBalance',
                'type': 'Short'
            },
            41988: {
                'name': 'DigitalZoomRatio',
                'type': 'Rational'
            },
            41989: {
                'name': 'FocalLengthIn35mmFilm',
                'type': 'Short'
            },
            41990: {
                'name': 'SceneCaptureType',
                'type': 'Short'
            },
            41991: {
                'name': 'GainControl',
                'type': 'Short'
            },
            41992: {
                'name': 'Contrast',
                'type': 'Short'
            },
            41993: {
                'name': 'Saturation',
                'type': 'Short'
            },
            41994: {
                'name': 'Sharpness',
                'type': 'Short'
            },
            41995: {
                'name': 'DeviceSettingDescription',
                'type': 'Undefined'
            },
            41996: {
                'name': 'SubjectDistanceRange',
                'type': 'Short'
            },
            42016: {
                'name': 'ImageUniqueID',
                'type': 'Ascii'
            },
            42032: {
                'name': 'CameraOwnerName',
                'type': 'Ascii'
            },
            42033: {
                'name': 'BodySerialNumber',
                'type': 'Ascii'
            },
            42034: {
                'name': 'LensSpecification',
                'type': 'Rational'
            },
            42035: {
                'name': 'LensMake',
                'type': 'Ascii'
            },
            42036: {
                'name': 'LensModel',
                'type': 'Ascii'
            },
            42037: {
                'name': 'LensSerialNumber',
                'type': 'Ascii'
            },
            42240: {
                'name': 'Gamma',
                'type': 'Rational'
            }
        },
        'GPS': {
            0: {
                'name': 'GPSVersionID',
                'type': 'Byte'
            },
            1: {
                'name': 'GPSLatitudeRef',
                'type': 'Ascii'
            },
            2: {
                'name': 'GPSLatitude',
                'type': 'Rational'
            },
            3: {
                'name': 'GPSLongitudeRef',
                'type': 'Ascii'
            },
            4: {
                'name': 'GPSLongitude',
                'type': 'Rational'
            },
            5: {
                'name': 'GPSAltitudeRef',
                'type': 'Byte'
            },
            6: {
                'name': 'GPSAltitude',
                'type': 'Rational'
            },
            7: {
                'name': 'GPSTimeStamp',
                'type': 'Rational'
            },
            8: {
                'name': 'GPSSatellites',
                'type': 'Ascii'
            },
            9: {
                'name': 'GPSStatus',
                'type': 'Ascii'
            },
            10: {
                'name': 'GPSMeasureMode',
                'type': 'Ascii'
            },
            11: {
                'name': 'GPSDOP',
                'type': 'Rational'
            },
            12: {
                'name': 'GPSSpeedRef',
                'type': 'Ascii'
            },
            13: {
                'name': 'GPSSpeed',
                'type': 'Rational'
            },
            14: {
                'name': 'GPSTrackRef',
                'type': 'Ascii'
            },
            15: {
                'name': 'GPSTrack',
                'type': 'Rational'
            },
            16: {
                'name': 'GPSImgDirectionRef',
                'type': 'Ascii'
            },
            17: {
                'name': 'GPSImgDirection',
                'type': 'Rational'
            },
            18: {
                'name': 'GPSMapDatum',
                'type': 'Ascii'
            },
            19: {
                'name': 'GPSDestLatitudeRef',
                'type': 'Ascii'
            },
            20: {
                'name': 'GPSDestLatitude',
                'type': 'Rational'
            },
            21: {
                'name': 'GPSDestLongitudeRef',
                'type': 'Ascii'
            },
            22: {
                'name': 'GPSDestLongitude',
                'type': 'Rational'
            },
            23: {
                'name': 'GPSDestBearingRef',
                'type': 'Ascii'
            },
            24: {
                'name': 'GPSDestBearing',
                'type': 'Rational'
            },
            25: {
                'name': 'GPSDestDistanceRef',
                'type': 'Ascii'
            },
            26: {
                'name': 'GPSDestDistance',
                'type': 'Rational'
            },
            27: {
                'name': 'GPSProcessingMethod',
                'type': 'Undefined'
            },
            28: {
                'name': 'GPSAreaInformation',
                'type': 'Undefined'
            },
            29: {
                'name': 'GPSDateStamp',
                'type': 'Ascii'
            },
            30: {
                'name': 'GPSDifferential',
                'type': 'Short'
            },
            31: {
                'name': 'GPSHPositioningError',
                'type': 'Rational'
            }
        },
        'Interop': {
            1: {
                'name': 'InteroperabilityIndex',
                'type': 'Ascii'
            }
        },
    };
    TAGS["0th"] = TAGS["Image"];
    TAGS["1st"] = TAGS["Image"];
    that.TAGS = TAGS;

    
    that.ImageIFD = {
        ProcessingSoftware:11,
        NewSubfileType:254,
        SubfileType:255,
        ImageWidth:256,
        ImageLength:257,
        BitsPerSample:258,
        Compression:259,
        PhotometricInterpretation:262,
        Threshholding:263,
        CellWidth:264,
        CellLength:265,
        FillOrder:266,
        DocumentName:269,
        ImageDescription:270,
        Make:271,
        Model:272,
        StripOffsets:273,
        Orientation:274,
        SamplesPerPixel:277,
        RowsPerStrip:278,
        StripByteCounts:279,
        XResolution:282,
        YResolution:283,
        PlanarConfiguration:284,
        GrayResponseUnit:290,
        GrayResponseCurve:291,
        T4Options:292,
        T6Options:293,
        ResolutionUnit:296,
        TransferFunction:301,
        Software:305,
        DateTime:306,
        Artist:315,
        HostComputer:316,
        Predictor:317,
        WhitePoint:318,
        PrimaryChromaticities:319,
        ColorMap:320,
        HalftoneHints:321,
        TileWidth:322,
        TileLength:323,
        TileOffsets:324,
        TileByteCounts:325,
        SubIFDs:330,
        InkSet:332,
        InkNames:333,
        NumberOfInks:334,
        DotRange:336,
        TargetPrinter:337,
        ExtraSamples:338,
        SampleFormat:339,
        SMinSampleValue:340,
        SMaxSampleValue:341,
        TransferRange:342,
        ClipPath:343,
        XClipPathUnits:344,
        YClipPathUnits:345,
        Indexed:346,
        JPEGTables:347,
        OPIProxy:351,
        JPEGProc:512,
        JPEGInterchangeFormat:513,
        JPEGInterchangeFormatLength:514,
        JPEGRestartInterval:515,
        JPEGLosslessPredictors:517,
        JPEGPointTransforms:518,
        JPEGQTables:519,
        JPEGDCTables:520,
        JPEGACTables:521,
        YCbCrCoefficients:529,
        YCbCrSubSampling:530,
        YCbCrPositioning:531,
        ReferenceBlackWhite:532,
        XMLPacket:700,
        Rating:18246,
        RatingPercent:18249,
        ImageID:32781,
        CFARepeatPatternDim:33421,
        CFAPattern:33422,
        BatteryLevel:33423,
        Copyright:33432,
        ExposureTime:33434,
        ImageResources:34377,
        ExifTag:34665,
        InterColorProfile:34675,
        GPSTag:34853,
        Interlace:34857,
        TimeZoneOffset:34858,
        SelfTimerMode:34859,
        FlashEnergy:37387,
        SpatialFrequencyResponse:37388,
        Noise:37389,
        FocalPlaneXResolution:37390,
        FocalPlaneYResolution:37391,
        FocalPlaneResolutionUnit:37392,
        ImageNumber:37393,
        SecurityClassification:37394,
        ImageHistory:37395,
        ExposureIndex:37397,
        TIFFEPStandardID:37398,
        SensingMethod:37399,
        XPTitle:40091,
        XPComment:40092,
        XPAuthor:40093,
        XPKeywords:40094,
        XPSubject:40095,
        PrintImageMatching:50341,
        DNGVersion:50706,
        DNGBackwardVersion:50707,
        UniqueCameraModel:50708,
        LocalizedCameraModel:50709,
        CFAPlaneColor:50710,
        CFALayout:50711,
        LinearizationTable:50712,
        BlackLevelRepeatDim:50713,
        BlackLevel:50714,
        BlackLevelDeltaH:50715,
        BlackLevelDeltaV:50716,
        WhiteLevel:50717,
        DefaultScale:50718,
        DefaultCropOrigin:50719,
        DefaultCropSize:50720,
        ColorMatrix1:50721,
        ColorMatrix2:50722,
        CameraCalibration1:50723,
        CameraCalibration2:50724,
        ReductionMatrix1:50725,
        ReductionMatrix2:50726,
        AnalogBalance:50727,
        AsShotNeutral:50728,
        AsShotWhiteXY:50729,
        BaselineExposure:50730,
        BaselineNoise:50731,
        BaselineSharpness:50732,
        BayerGreenSplit:50733,
        LinearResponseLimit:50734,
        CameraSerialNumber:50735,
        LensInfo:50736,
        ChromaBlurRadius:50737,
        AntiAliasStrength:50738,
        ShadowScale:50739,
        DNGPrivateData:50740,
        MakerNoteSafety:50741,
        CalibrationIlluminant1:50778,
        CalibrationIlluminant2:50779,
        BestQualityScale:50780,
        RawDataUniqueID:50781,
        OriginalRawFileName:50827,
        OriginalRawFileData:50828,
        ActiveArea:50829,
        MaskedAreas:50830,
        AsShotICCProfile:50831,
        AsShotPreProfileMatrix:50832,
        CurrentICCProfile:50833,
        CurrentPreProfileMatrix:50834,
        ColorimetricReference:50879,
        CameraCalibrationSignature:50931,
        ProfileCalibrationSignature:50932,
        AsShotProfileName:50934,
        NoiseReductionApplied:50935,
        ProfileName:50936,
        ProfileHueSatMapDims:50937,
        ProfileHueSatMapData1:50938,
        ProfileHueSatMapData2:50939,
        ProfileToneCurve:50940,
        ProfileEmbedPolicy:50941,
        ProfileCopyright:50942,
        ForwardMatrix1:50964,
        ForwardMatrix2:50965,
        PreviewApplicationName:50966,
        PreviewApplicationVersion:50967,
        PreviewSettingsName:50968,
        PreviewSettingsDigest:50969,
        PreviewColorSpace:50970,
        PreviewDateTime:50971,
        RawImageDigest:50972,
        OriginalRawFileDigest:50973,
        SubTileBlockSize:50974,
        RowInterleaveFactor:50975,
        ProfileLookTableDims:50981,
        ProfileLookTableData:50982,
        OpcodeList1:51008,
        OpcodeList2:51009,
        OpcodeList3:51022,
        NoiseProfile:51041,
    };

    
    that.ExifIFD = {
        ExposureTime:33434,
        FNumber:33437,
        ExposureProgram:34850,
        SpectralSensitivity:34852,
        ISOSpeedRatings:34855,
        OECF:34856,
        SensitivityType:34864,
        StandardOutputSensitivity:34865,
        RecommendedExposureIndex:34866,
        ISOSpeed:34867,
        ISOSpeedLatitudeyyy:34868,
        ISOSpeedLatitudezzz:34869,
        ExifVersion:36864,
        DateTimeOriginal:36867,
        DateTimeDigitized:36868,
        ComponentsConfiguration:37121,
        CompressedBitsPerPixel:37122,
        ShutterSpeedValue:37377,
        ApertureValue:37378,
        BrightnessValue:37379,
        ExposureBiasValue:37380,
        MaxApertureValue:37381,
        SubjectDistance:37382,
        MeteringMode:37383,
        LightSource:37384,
        Flash:37385,
        FocalLength:37386,
        SubjectArea:37396,
        MakerNote:37500,
        UserComment:37510,
        SubSecTime:37520,
        SubSecTimeOriginal:37521,
        SubSecTimeDigitized:37522,
        FlashpixVersion:40960,
        ColorSpace:40961,
        PixelXDimension:40962,
        PixelYDimension:40963,
        RelatedSoundFile:40964,
        InteroperabilityTag:40965,
        FlashEnergy:41483,
        SpatialFrequencyResponse:41484,
        FocalPlaneXResolution:41486,
        FocalPlaneYResolution:41487,
        FocalPlaneResolutionUnit:41488,
        SubjectLocation:41492,
        ExposureIndex:41493,
        SensingMethod:41495,
        FileSource:41728,
        SceneType:41729,
        CFAPattern:41730,
        CustomRendered:41985,
        ExposureMode:41986,
        WhiteBalance:41987,
        DigitalZoomRatio:41988,
        FocalLengthIn35mmFilm:41989,
        SceneCaptureType:41990,
        GainControl:41991,
        Contrast:41992,
        Saturation:41993,
        Sharpness:41994,
        DeviceSettingDescription:41995,
        SubjectDistanceRange:41996,
        ImageUniqueID:42016,
        CameraOwnerName:42032,
        BodySerialNumber:42033,
        LensSpecification:42034,
        LensMake:42035,
        LensModel:42036,
        LensSerialNumber:42037,
        Gamma:42240,
    };


    that.GPSIFD = {
        GPSVersionID:0,
        GPSLatitudeRef:1,
        GPSLatitude:2,
        GPSLongitudeRef:3,
        GPSLongitude:4,
        GPSAltitudeRef:5,
        GPSAltitude:6,
        GPSTimeStamp:7,
        GPSSatellites:8,
        GPSStatus:9,
        GPSMeasureMode:10,
        GPSDOP:11,
        GPSSpeedRef:12,
        GPSSpeed:13,
        GPSTrackRef:14,
        GPSTrack:15,
        GPSImgDirectionRef:16,
        GPSImgDirection:17,
        GPSMapDatum:18,
        GPSDestLatitudeRef:19,
        GPSDestLatitude:20,
        GPSDestLongitudeRef:21,
        GPSDestLongitude:22,
        GPSDestBearingRef:23,
        GPSDestBearing:24,
        GPSDestDistanceRef:25,
        GPSDestDistance:26,
        GPSProcessingMethod:27,
        GPSAreaInformation:28,
        GPSDateStamp:29,
        GPSDifferential:30,
        GPSHPositioningError:31,
    };


    that.InteropIFD = {
        InteroperabilityIndex:1,
    };

    that.GPSHelper = {
        degToDmsRational:function (degFloat) {
            var degAbs = Math.abs(degFloat);
            var minFloat = degAbs % 1 * 60;
            var secFloat = minFloat % 1 * 60;
            var deg = Math.floor(degAbs);
            var min = Math.floor(minFloat);
            var sec = Math.round(secFloat * 100);

            return [[deg, 1], [min, 1], [sec, 100]];
        },

        dmsRationalToDeg:function (dmsArray, ref) {
            var sign = (ref === 'S' || ref === 'W') ? -1.0 : 1.0;
            var deg = dmsArray[0][0] / dmsArray[0][1] +
                      dmsArray[1][0] / dmsArray[1][1] / 60.0 +
                      dmsArray[2][0] / dmsArray[2][1] / 3600.0;

            return deg * sign;
        }
    };
    
    
    if (typeof exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
            exports = module.exports = that;
        }
        exports.piexif = that;
    } else {
        window.piexif = that;
    }

})();

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/polyraf/browser.js":[function(require,module,exports){
const RAF = require('random-access-web')({name: 'raw', storeName: 'raw'})

module.exports = function (filename, opts) {
  if('string' === typeof filename) {
    const raf = RAF(filename, opts)
    raf.filename = filename
    return raf
  }
  if('function' === typeof filename) throw new Error('expected a filename or a random-access-storage instance')
  return filename
}


},{"random-access-web":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-web/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/private-box/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var sodium = require('chloride')
var scalarmult = sodium.crypto_scalarmult
var box  = sodium.crypto_box_easy
var secretbox = sodium.crypto_secretbox_easy
var secretbox_open = sodium.crypto_secretbox_open_easy
var keypair = sodium.crypto_box_keypair
var concat = Buffer.concat

function randombytes(n) {
  var b = new Buffer(n)
  sodium.randombytes(b)
  return b
}

function setMax (m) {
  m = m || DEFAULT_MAX
  if (m < 1 || m > 255)
    throw new Error('max recipients must be between 0 and 255.')
  return m
}


const DEFAULT_MAX = 7

exports.encrypt =
exports.multibox = function (msg, recipients, max) {

  max = setMax(max)

  if(recipients.length > max)
    throw new Error('max recipients is:'+max+' found:'+recipients.length)

  var nonce = randombytes(24)
  var key = randombytes(32)
  var onetime = keypair()

  var length_and_key = concat([new Buffer([recipients.length]), key])
  return concat([
    nonce,
    onetime.publicKey,
    concat(recipients.map(function (r_pk, i) {
      return secretbox(length_and_key, nonce, scalarmult(onetime.secretKey, r_pk))
    })),
    secretbox(msg, nonce, key)
  ])
}

exports.multibox_open_key = function (ctxt, sk, max) { //, groups...

  max = setMax(max)

  var nonce = ctxt.slice(0, 24)
  var onetime_pk = ctxt.slice(24, 24+32)
  var my_key = scalarmult(sk, onetime_pk)
  var length_and_key, key, length, start = 24+32, size = 32+1+16
  for(var i = 0; i <= max; i++) {
    var s = start+size*i
    if(s + size > (ctxt.length - 16)) return null
    length_and_key = secretbox_open(ctxt.slice(s, s + size), nonce, my_key)
    if(length_and_key) return length_and_key
  }
}

exports.multibox_open_body = function (ctxt, length_and_key) { //, groups...
  if(!length_and_key) return
  var key = length_and_key.slice(1)
  var length = length_and_key[0]
  var start = 24+32, size = 32+1+16
  var nonce = ctxt.slice(0, 24)
  return secretbox_open(ctxt.slice(start+length*size), nonce, key)
}

exports.decrypt =
exports.multibox_open = function (ctxt, sk, max) { //, groups...
  var _key = exports.multibox_open_key(ctxt, sk, max)
  if(_key) return exports.multibox_open_body(ctxt, _key)
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js":[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisify-4loc/index.js":[function(require,module,exports){
module.exports = (fn) => (...args) =>
  new Promise((resolve, reject) => {
    fn(...args, (err, val) => err ? reject(err) : resolve(val))
  })

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisify-tuple/index.js":[function(require,module,exports){
module.exports = function run(fn) {
  return (...args) =>
    new Promise(resolve => {
      fn(...args, (err, res) => resolve([err, res]));
    });
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisize/index.js":[function(require,module,exports){
module.exports = promisize

function promisize (cb) {
  var promise
  var res
  var rej

  if (cb != null && typeof cb !== 'function') throw new Error('cb must be a function')

  if (cb == null && typeof Promise !== 'undefined') {
    promise = new Promise(function (resolve, reject) {
      res = resolve
      rej = reject
    })
  }

  function intercept (err, result) {
    if (promise) {
      if (err) rej(err)
      else res(result)
    } else {
      if (cb) cb(err, result)
      else if (err) throw err
    }
  }

  intercept.promise = promise

  return intercept
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/prr/prr.js":[function(require,module,exports){
/*!
  * prr
  * (c) 2013 Rod Vagg <rod@vagg.org>
  * https://github.com/rvagg/prr
  * License: MIT
  */

(function (name, context, definition) {
  if (typeof module != 'undefined' && module.exports)
    module.exports = definition()
  else
    context[name] = definition()
})('prr', this, function() {

  var setProperty = typeof Object.defineProperty == 'function'
      ? function (obj, key, options) {
          Object.defineProperty(obj, key, options)
          return obj
        }
      : function (obj, key, options) { // < es5
          obj[key] = options.value
          return obj
        }

    , makeOptions = function (value, options) {
        var oo = typeof options == 'object'
          , os = !oo && typeof options == 'string'
          , op = function (p) {
              return oo
                ? !!options[p]
                : os
                  ? options.indexOf(p[0]) > -1
                  : false
            }

        return {
            enumerable   : op('enumerable')
          , configurable : op('configurable')
          , writable     : op('writable')
          , value        : value
        }
      }

    , prr = function (obj, key, value, options) {
        var k

        options = makeOptions(value, options)

        if (typeof key == 'object') {
          for (k in key) {
            if (Object.hasOwnProperty.call(key, k)) {
              options.value = key[k]
              setProperty(obj, k, options)
            }
          }
          return obj
        }

        return setProperty(obj, key, options)
      }

  return prr
})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/browser.js":[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt')
exports.privateDecrypt = require('./privateDecrypt')

exports.privateEncrypt = function privateEncrypt (key, buf) {
  return exports.publicEncrypt(key, buf, true)
}

exports.publicDecrypt = function publicDecrypt (key, buf) {
  return exports.privateDecrypt(key, buf, true)
}

},{"./privateDecrypt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/privateDecrypt.js","./publicEncrypt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/publicEncrypt.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/mgf.js":[function(require,module,exports){
var createHash = require('create-hash')
var Buffer = require('safe-buffer').Buffer

module.exports = function (seed, len) {
  var t = Buffer.alloc(0)
  var i = 0
  var c
  while (t.length < len) {
    c = i2ops(i++)
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
  }
  return t.slice(0, len)
}

function i2ops (c) {
  var out = Buffer.allocUnsafe(4)
  out.writeUInt32BE(c, 0)
  return out
}

},{"create-hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/node_modules/bn.js/lib/bn.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/asn1.js/node_modules/bn.js/lib/bn.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/privateDecrypt.js":[function(require,module,exports){
var parseKeys = require('parse-asn1')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var crt = require('browserify-rsa')
var createHash = require('create-hash')
var withPublic = require('./withPublic')
var Buffer = require('safe-buffer').Buffer

module.exports = function privateDecrypt (privateKey, enc, reverse) {
  var padding
  if (privateKey.padding) {
    padding = privateKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }

  var key = parseKeys(privateKey)
  var k = key.modulus.byteLength()
  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error')
  }
  var msg
  if (reverse) {
    msg = withPublic(new BN(enc), key)
  } else {
    msg = crt(enc, key)
  }
  var zBuffer = Buffer.alloc(k - msg.length)
  msg = Buffer.concat([zBuffer, msg], k)
  if (padding === 4) {
    return oaep(key, msg)
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    return msg
  } else {
    throw new Error('unknown padding')
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  if (msg[0] !== 0) {
    throw new Error('decryption error')
  }
  var maskedSeed = msg.slice(1, hLen + 1)
  var maskedDb = msg.slice(hLen + 1)
  var seed = xor(maskedSeed, mgf(maskedDb, hLen))
  var db = xor(maskedDb, mgf(seed, k - hLen - 1))
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error')
  }
  var i = hLen
  while (db[i] === 0) {
    i++
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error')
  }
  return db.slice(i)
}

function pkcs1 (key, msg, reverse) {
  var p1 = msg.slice(0, 2)
  var i = 2
  var status = 0
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++
      break
    }
  }
  var ps = msg.slice(2, i - 1)

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
    status++
  }
  if (ps.length < 8) {
    status++
  }
  if (status) {
    throw new Error('decryption error')
  }
  return msg.slice(i)
}
function compare (a, b) {
  a = Buffer.from(a)
  b = Buffer.from(b)
  var dif = 0
  var len = a.length
  if (a.length !== b.length) {
    dif++
    len = Math.min(a.length, b.length)
  }
  var i = -1
  while (++i < len) {
    dif += (a[i] ^ b[i])
  }
  return dif
}

},{"./mgf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/mgf.js","./withPublic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/withPublic.js","./xor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/xor.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","browserify-rsa":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-rsa/index.js","create-hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/browser.js","parse-asn1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/index.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/publicEncrypt.js":[function(require,module,exports){
var parseKeys = require('parse-asn1')
var randomBytes = require('randombytes')
var createHash = require('create-hash')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var withPublic = require('./withPublic')
var crt = require('browserify-rsa')
var Buffer = require('safe-buffer').Buffer

module.exports = function publicEncrypt (publicKey, msg, reverse) {
  var padding
  if (publicKey.padding) {
    padding = publicKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }
  var key = parseKeys(publicKey)
  var paddedMsg
  if (padding === 4) {
    paddedMsg = oaep(key, msg)
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    paddedMsg = new BN(msg)
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus')
    }
  } else {
    throw new Error('unknown padding')
  }
  if (reverse) {
    return crt(paddedMsg, key)
  } else {
    return withPublic(paddedMsg, key)
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var mLen = msg.length
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  var hLen2 = 2 * hLen
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long')
  }
  var ps = Buffer.alloc(k - mLen - hLen2 - 2)
  var dblen = k - hLen - 1
  var seed = randomBytes(hLen)
  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
  var maskedSeed = xor(seed, mgf(maskedDb, hLen))
  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
}
function pkcs1 (key, msg, reverse) {
  var mLen = msg.length
  var k = key.modulus.byteLength()
  if (mLen > k - 11) {
    throw new Error('message too long')
  }
  var ps
  if (reverse) {
    ps = Buffer.alloc(k - mLen - 3, 0xff)
  } else {
    ps = nonZero(k - mLen - 3)
  }
  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
}
function nonZero (len) {
  var out = Buffer.allocUnsafe(len)
  var i = 0
  var cache = randomBytes(len * 2)
  var cur = 0
  var num
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len * 2)
      cur = 0
    }
    num = cache[cur++]
    if (num) {
      out[i++] = num
    }
  }
  return out
}

},{"./mgf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/mgf.js","./withPublic":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/withPublic.js","./xor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/xor.js","bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","browserify-rsa":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-rsa/index.js","create-hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hash/browser.js","parse-asn1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/parse-asn1/index.js","randombytes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randombytes/browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/withPublic.js":[function(require,module,exports){
var BN = require('bn.js')
var Buffer = require('safe-buffer').Buffer

function withPublic (paddedMsg, key) {
  return Buffer.from(paddedMsg
    .toRed(BN.mont(key.modulus))
    .redPow(new BN(key.publicExponent))
    .fromRed()
    .toArray())
}

module.exports = withPublic

},{"bn.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/public-encrypt/xor.js":[function(require,module,exports){
module.exports = function xor (a, b) {
  var len = a.length
  var i = -1
  while (++i < len) {
    a[i] ^= b[i]
  }
  return a
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-abortable/index.js":[function(require,module,exports){
function abortable(onEnd) {
  var aborted = false, reading = false, ended = false, _cb, _read

  function terminate (err) {
    if(onEnd) onEnd(ended === true ? null :  ended)
    var cb = _cb; _cb = null
    if(cb) cb(ended)
  }

  function cancel () {
    ended = ended || true
    terminate(aborted || ended)
    _read(aborted, function (err) {
      if(_cb) _cb(err)
    })
  }

  function reader (read) {
    _read = read
    return function (abort, cb) {
      _cb = cb
      if(abort)   aborted = abort
      if(ended)   return cb(ended)
      if(aborted) return
      reading = true
      read(abort, function (end, data) {
        reading = false
        if(aborted) return !abort && read(aborted, function () {})
        if(!_cb) return
        var cb = _cb
        _cb = null
        if(end) {
          ended = end
          onEnd && onEnd(ended === true ? null :  ended)
          cb(end)
        }
        else {
          cb(end, data)
        }
      })
    }
  }

  reader.abort = function () {
    aborted = true
    if(ended) return
    cancel()
  }

  return reader
}

module.exports = abortable


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-async/index.js":[function(require,module,exports){
module.exports = pullAsync

function pullAsync (continuable) {
  var done
  return function (abort, cb) {
    if (abort) return cb(abort)
    if (done) return cb(true)
    continuable(function (err, data) {
      done = true
      cb(err, data)
    })
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-awaitable/index.js":[function(require,module,exports){
const thenable = require('pull-thenable');

module.exports = async function* awaitable(readable) {
  while (true) {
    try {
      yield await thenable(readable);
    } catch (err) {
      if (err === true) return;
      else throw err;
    }
  }
};

},{"pull-thenable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-thenable/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-box-stream/index.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
var sodium = require('chloride')
var Reader = require('pull-reader')
var increment = require('increment-buffer')
var through = require('pull-through')
var split = require('split-buffer')

var isBuffer = Buffer.isBuffer
var concat = Buffer.concat

var box = sodium.crypto_secretbox_easy
var unbox = sodium.crypto_secretbox_open_easy  

function unbox_detached (mac, boxed, nonce, key) {
  return sodium.crypto_secretbox_open_easy(concat([mac, boxed]), nonce, key)
}

var max = 1024*4

var NONCE_LEN = 24
var HEADER_LEN = 2+16+16

function isZeros(b) {
  for(var i = 0; i < b.length; i++)
    if(b[i] !== 0) return false
  return true
}

function randomSecret(n) {
  var rand = new Buffer(n)
  sodium.randombytes(rand)
  return rand
}

function copy (a) {
  var b = new Buffer(a.length)
  a.copy(b, 0, 0, a.length)
  return b
}

exports.createBoxStream =
exports.createEncryptStream = function (key, init_nonce) {

  if(key.length === 56) {
    init_nonce = key.slice(32, 56)
    key = key.slice(0, 32)
  }
  else if(!(key.length === 32 && init_nonce.length === 24))
    throw new Error('nonce must be 24 bytes')

  // we need two nonces because increment mutates,
  // and we need the next for the header,
  // and the next next nonce for the packet
  var nonce1 = copy(init_nonce), nonce2 = copy(init_nonce)
  var head = new Buffer(18)

  return through(function (data) {

    if('string' === typeof data)
      data = new Buffer(data, 'utf8')
    else if(!isBuffer(data))
      return this.emit('error', new Error('must be buffer'))

    if(data.length === 0) return

    var input = split(data, max)

    for(var i = 0; i < input.length; i++) {
      head.writeUInt16BE(input[i].length, 0)
      var boxed = box(input[i], increment(nonce2), key)
      //write the mac into the header.
      boxed.copy(head, 2, 0, 16)

      this.queue(box(head, nonce1, key))
      this.queue(boxed.slice(16, 16 + input[i].length))

      increment(increment(nonce1)); increment(nonce2)
    }
  }, function (err) {
    if(err) return this.queue(null)

    //handle special-case of empty session
    //final header is same length as header except all zeros (inside box)
    var final = new Buffer(2+16); final.fill(0)
    this.queue(box(final, nonce1, key))
    this.queue(null)
  })

}
exports.createUnboxStream =
exports.createDecryptStream = function (key, nonce) {


  if(key.length == 56) {
    nonce = key.slice(32, 56)
    key = key.slice(0, 32)
  }
  else if(!(key.length === 32 && nonce.length === 24))
    throw new Error('nonce must be 24 bytes')
  nonce = copy(nonce)

  var reader = Reader(), first = true,  ended
  var first = true

  return function (read) {
    reader(read)
    return function (end, cb) {
      if(end) return reader.abort(end, cb)
      //use abort when the input was invalid,
      //but the source hasn't actually ended yet.
      function abort(err) {
        reader.abort(ended = err || true, cb)
      }

      if(ended) return cb(ended)
      reader.read(HEADER_LEN, function (err, cipherheader) {
        if(err === true) return cb(ended = new Error('unexpected hangup'))
        if(err) return cb(ended = err)

        var header = unbox(cipherheader, nonce, key)

        if(!header)
          return abort(new Error('invalid header'))

        //valid end of stream
        if(isZeros(header))
          return cb(ended = true)

        var length = header.readUInt16BE(0)
        var mac = header.slice(2, 34)

        reader.read(length, function (err, cipherpacket) {
          if(err) return cb(ended = err)
          //recreate a valid packet
          //TODO: PR to sodium bindings for detached box/open
          var plainpacket = unbox_detached(mac, cipherpacket, increment(nonce), key)
          if(!plainpacket)
            return abort(new Error('invalid packet'))

          increment(nonce)
          cb(null, plainpacket)
        })
      })
    }
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js","increment-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/increment-buffer/index.js","pull-reader":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-reader/index.js","pull-through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-through/index.js","split-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/split-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cat/index.js":[function(require,module,exports){
var noop = function () {}

function abortAll(ary, abort, cb) {
  var n = ary.length
  if(!n) return cb(abort)
  ary.forEach(function (f) {
    if(f) f(abort, next)
    else next()
  })

  function next() {
    if(--n) return
    cb(abort)
  }
  if(!n) next()
}

module.exports = function (streams) {
  return function (abort, cb) {
    ;(function next () {
      if(abort)
        abortAll(streams, abort, cb)
      else if(!streams.length)
        cb(true)
      else if(!streams[0])
        streams.shift(), next()
      else
        streams[0](null, function (err, data) {
          if(err) {
            streams.shift() //drop the first, has already ended.
            if(err === true) next()
            else             abortAll(streams, err, cb)
          }
          else
            cb(null, data)
        })
    })()
  }
}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/duplex.js":[function(require,module,exports){
var Source = require('./')
var Sink = require('./sink')

function Set () {
  var err, value, cb
  return {
    set: function (_err, _value) {
      if(cb) cb(_err, _value)
      else err = _err, value = _value
    },
    get: function (_cb) {
      if(err || value) _cb(err, value)
      else cb = _cb
    }
  }
}

module.exports = function (continuable) {
  var set = Set()

  return {
    sink: Sink(function (cb) {
      continuable(function (err, stream) {
        if(err) {
          cb(err)
          set.set(err)
        }
        else {
          cb(null, stream.sink)
          set.set(null, stream.source)
        }
      })
    }),
    source: Source(set.get)
  }
}











},{"./":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/index.js","./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/sink.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/index.js":[function(require,module,exports){

var Source = require('./source')
var Sink = require('./sink')
var Duplex = require('./duplex')

module.exports = function (cont) {
  return Source(cont)
}

module.exports.Source = Source
module.exports.Sink = Sink
module.exports.Duplex = Duplex

},{"./duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/duplex.js","./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/sink.js","./source":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/source.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/sink.js":[function(require,module,exports){

module.exports = function (cont) {
  return function (read) {
    cont(function again (err, value) {
      if(err) read(err, function () {
        value(function (abort, cb) { cb(err) })
      })
      else value(read)
    })
  }
}


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/source.js":[function(require,module,exports){
'use strict'
function isFunction (f) {
  return 'function' === typeof f
}
function isContinuable (c) {
  return isFunction(c) && c.length === 1
}
function isSource (s) {
  return isFunction(s) && s.length === 2
}

module.exports = function (continuable) {
  var read = null
  return function (abort, cb) {
    if(read) return read(abort, cb)
    if(abort) return cb(abort)

    continuable(function again (err, value) {
      if(err) return cb(err)
      if(isSource(value)) (read = value)(abort, cb) //if it's a source... then read from it
      else if(isContinuable(value)) value(again) //if it's another continuable... then continue
      else throw new Error('not a valid source stream or continuable')
    })
  }
}











},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/duplex.js":[function(require,module,exports){

var Source = require('./source')
var Sink = require('./sink')

module.exports = function () {

  var source = Source()
  var sink = Sink()

  return {
    source: source,
    sink: sink,
    resolve: function (duplex) {
      source.resolve(duplex.source)
      sink.resolve(duplex.sink)

    }
  }


}

},{"./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/sink.js","./source":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/source.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/index.js":[function(require,module,exports){

exports.source = require('./source')
exports.through = require('./through')
exports.sink = require('./sink')
exports.duplex = require('./duplex')

},{"./duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/duplex.js","./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/sink.js","./source":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/source.js","./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/through.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/sink.js":[function(require,module,exports){
module.exports = function (stream) {
  var read, started = false

  function consume (_read) {
    if(!_read) throw new Error('must be passed a readable')
    read = _read
    if(started) stream(read)
  }

  consume.resolve =
  consume.ready =
  consume.start = function (_stream) {
    started = true; stream = _stream || stream
    if(read) stream(read)
    return consume
  }

  return consume
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/source.js":[function(require,module,exports){

module.exports = function () {
  var _read, _cb, abortCb, _end

  var read = function (end, cb) {
    if(!_read) {
      if(end) {
        _end = end
        abortCb = cb
      }
      else
        _cb = cb
    }
    else _read(end, cb)
  }
  read.resolve = function (read) {
    if(_read) throw new Error('already resolved')
    _read = read
    if(!_read) throw new Error('no read cannot resolve!' + _read)
    if(_cb) read(null, _cb)
    if(abortCb) read(_end, abortCb)
  }
  read.abort = function(err) {
    read.resolve(function (_, cb) {
      cb(err || true)
    })
  }
  return read
}


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/through.js":[function(require,module,exports){

module.exports = function () {
  var read, reader, cb, abort, stream

  function delayed (_read) {
    //if we already have the stream, go!
    if(stream) return stream(_read)

    read = _read
    return function (_abort, _cb) {
      if(reader) reader(_abort, _cb)
      else abort = _abort, cb = _cb

    }
  }

  delayed.resolve = function (_stream) {
    if(stream) throw new Error('already resolved')
    stream = _stream
    if(!stream) throw new Error('resolve *must* be passed a transform stream')
    if(read) {
      reader = stream(read)
      if(cb) reader(abort, cb)
    }
  }

  return delayed
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/endable.js":[function(require,module,exports){

module.exports = function endable (goodbye) {
  var ended, waiting, sentEnd
  function h (read) {
    return function (abort, cb) {
      read(abort, function (end, data) {
        if(end && !sentEnd) {
          sentEnd = true
          return cb(null, goodbye)
        }
        //send end message...

        if(end && ended) cb(end)
        else if(end)     waiting = cb
        else             cb(null, data)
      })
    }
  }
  h.end = function () {
    ended = true
    if(waiting) waiting(ended)
    return h
  }
  return h
}


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/index.js":[function(require,module,exports){

var endable = require('./endable')
var pull = require('pull-stream')
module.exports = function (stream, goodbye) {
  goodbye = goodbye || 'GOODBYE'
  var e = endable(goodbye)

  return {
    // when the source ends,
    // send the goodbye and then wait to recieve
    // the other goodbye.
    source: pull(stream.source, e),
    sink: pull(
      //when the goodbye is received, allow the source to end.
      pull.filter(function (data) {
        if(data !== goodbye) return true
        e.end()
      }),
      stream.sink
    )
  }

}

},{"./endable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/endable.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/index.js":[function(require,module,exports){
'use strict'

var sources  = require('./sources')
var sinks    = require('./sinks')
var throughs = require('./throughs')

exports = module.exports = require('./pull')

for(var k in sources)
  exports[k] = sources[k]

for(var k in throughs)
  exports[k] = throughs[k]

for(var k in sinks)
  exports[k] = sinks[k]


},{"./pull":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/pull.js","./sinks":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/index.js","./sources":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/index.js","./throughs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/pull.js":[function(require,module,exports){
'use strict'

module.exports = function pull (a) {
  var length = arguments.length
  if (typeof a === 'function' && a.length === 1) {
    var args = new Array(length)
    for(var i = 0; i < length; i++)
      args[i] = arguments[i]
    return function (read) {
      if (args == null) {
        throw new TypeError("partial sink should only be called once!")
      }

      // Grab the reference after the check, because it's always an array now
      // (engines like that kind of consistency).
      var ref = args
      args = null

      // Prioritize common case of small number of pulls.
      switch (length) {
      case 1: return pull(read, ref[0])
      case 2: return pull(read, ref[0], ref[1])
      case 3: return pull(read, ref[0], ref[1], ref[2])
      case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
      default:
        ref.unshift(read)
        return pull.apply(null, ref)
      }
    }
  }

  var read = a

  if (read && typeof read.source === 'function') {
    read = read.source
  }

  for (var i = 1; i < length; i++) {
    var s = arguments[i]
    if (typeof s === 'function') {
      read = s(read)
    } else if (s && typeof s === 'object') {
      s.sink(read)
      read = s.source
    }
  }

  return read
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/collect.js":[function(require,module,exports){
'use strict'

var reduce = require('./reduce')

module.exports = function collect (cb) {
  return reduce(function (arr, item) {
    arr.push(item)
    return arr
  }, [], cb)
}

},{"./reduce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/reduce.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/concat.js":[function(require,module,exports){
'use strict'

var reduce = require('./reduce')

module.exports = function concat (cb) {
  return reduce(function (a, b) {
    return a + b
  }, '', cb)
}

},{"./reduce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/reduce.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/drain.js":[function(require,module,exports){
'use strict'

module.exports = function drain (op, done) {
  var read, abort

  function sink (_read) {
    read = _read
    if(abort) return sink.abort()
    //this function is much simpler to write if you
    //just use recursion, but by using a while loop
    //we do not blow the stack if the stream happens to be sync.
    ;(function next() {
        var loop = true, cbed = false
        while(loop) {
          cbed = false
          read(null, function (end, data) {
            cbed = true
            if(end = end || abort) {
              loop = false
              if(done) done(end === true ? null : end)
              else if(end && end !== true)
                throw end
            }
            else if(op && false === op(data) || abort) {
              loop = false
              read(abort || true, done || function () {})
            }
            else if(!loop){
              next()
            }
          })
          if(!cbed) {
            loop = false
            return
          }
        }
      })()
  }

  sink.abort = function (err, cb) {
    if('function' == typeof err)
      cb = err, err = true
    abort = err || true
    if(read) return read(abort, cb || function () {})
  }

  return sink
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/find.js":[function(require,module,exports){
'use strict'

function id (e) { return e }
var prop = require('../util/prop')
var drain = require('./drain')

module.exports = function find (test, cb) {
  var ended = false
  if(!cb)
    cb = test, test = id
  else
    test = prop(test) || id

  return drain(function (data) {
    if(test(data)) {
      ended = true
      cb(null, data)
    return false
    }
  }, function (err) {
    if(ended) return //already called back
    cb(err === true ? null : err, null)
  })
}





},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/prop.js","./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/index.js":[function(require,module,exports){
'use strict'

module.exports = {
  drain: require('./drain'),
  onEnd: require('./on-end'),
  log: require('./log'),
  find: require('./find'),
  reduce: require('./reduce'),
  collect: require('./collect'),
  concat: require('./concat')
}


},{"./collect":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/collect.js","./concat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/concat.js","./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/drain.js","./find":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/find.js","./log":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/log.js","./on-end":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/on-end.js","./reduce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/reduce.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/log.js":[function(require,module,exports){
'use strict'

var drain = require('./drain')

module.exports = function log (done) {
  return drain(function (data) {
    console.log(data)
  }, done)
}

},{"./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/on-end.js":[function(require,module,exports){
'use strict'

var drain = require('./drain')

module.exports = function onEnd (done) {
  return drain(null, done)
}

},{"./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/reduce.js":[function(require,module,exports){
'use strict'

var drain = require('./drain')

module.exports = function reduce (reducer, acc, cb ) {
  if(!cb) cb = acc, acc = null
  var sink = drain(function (data) {
    acc = reducer(acc, data)
  }, function (err) {
    cb(err, acc)
  })
  if (arguments.length === 2)
    return function (source) {
      source(null, function (end, data) {
        //if ended immediately, and no initial...
        if(end) return cb(end === true ? null : end)
        acc = data; sink(source)
      })
    }
  else
    return sink
}

},{"./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/count.js":[function(require,module,exports){
'use strict'

module.exports = function count (max) {
  var i = 0; max = max || Infinity
  return function (end, cb) {
    if(end) return cb && cb(end)
    if(i > max)
      return cb(true)
    cb(null, i++)
  }
}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/empty.js":[function(require,module,exports){
'use strict'
//a stream that ends immediately.
module.exports = function empty () {
  return function (abort, cb) {
    cb(true)
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/error.js":[function(require,module,exports){
'use strict'
//a stream that errors immediately.
module.exports = function error (err) {
  return function (abort, cb) {
    cb(err)
  }
}


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/index.js":[function(require,module,exports){
'use strict'
module.exports = {
  keys: require('./keys'),
  once: require('./once'),
  values: require('./values'),
  count: require('./count'),
  infinite: require('./infinite'),
  empty: require('./empty'),
  error: require('./error')
}

},{"./count":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/count.js","./empty":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/empty.js","./error":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/error.js","./infinite":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/infinite.js","./keys":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/keys.js","./once":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/once.js","./values":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/values.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/infinite.js":[function(require,module,exports){
'use strict'
module.exports = function infinite (generate) {
  generate = generate || Math.random
  return function (end, cb) {
    if(end) return cb && cb(end)
    return cb(null, generate())
  }
}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/keys.js":[function(require,module,exports){
'use strict'
var values = require('./values')
module.exports = function (object) {
  return values(Object.keys(object))
}



},{"./values":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/values.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/once.js":[function(require,module,exports){
'use strict'
var abortCb = require('../util/abort-cb')

module.exports = function once (value, onAbort) {
  return function (abort, cb) {
    if(abort)
      return abortCb(cb, abort, onAbort)
    if(value != null) {
      var _value = value; value = null
      cb(null, _value)
    } else
      cb(true)
  }
}



},{"../util/abort-cb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/abort-cb.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/values.js":[function(require,module,exports){
'use strict'
var abortCb = require('../util/abort-cb')

module.exports = function values (array, onAbort) {
  if(!array)
    return function (abort, cb) {
      if(abort) return abortCb(cb, abort, onAbort)
      return cb(true)
    }
  if(!Array.isArray(array))
    array = Object.keys(array).map(function (k) {
      return array[k]
    })
  var i = 0
  return function (abort, cb) {
    if(abort)
      return abortCb(cb, abort, onAbort)
    if(i >= array.length)
      cb(true)
    else
      cb(null, array[i++])
  }
}

},{"../util/abort-cb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/abort-cb.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/async-map.js":[function(require,module,exports){
'use strict'

function id (e) { return e }
var prop = require('../util/prop')

module.exports = function asyncMap (map) {
  if(!map) return id
  map = prop(map)
  var busy = false, abortCb, aborted
  return function (read) {
    return function next (abort, cb) {
      if(aborted) return cb(aborted)
      if(abort) {
        aborted = abort
        if(!busy) read(abort, cb)
        else read(abort, function () {
          //if we are still busy, wait for the mapper to complete.
          if(busy) abortCb = cb
          else cb(abort)
        })
      }
      else
        read(null, function (end, data) {
          if(end) cb(end)
          else if(aborted) cb(aborted)
          else {
            busy = true
            map(data, function (err, data) {
              busy = false
              if(aborted) {
                cb(aborted)
                abortCb(aborted)
              }
              else if(err) next (err, cb)
              else cb(null, data)
            })
          }
        })
    }
  }
}



},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/prop.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter-not.js":[function(require,module,exports){
'use strict'

var tester = require('../util/tester')
var filter = require('./filter')

module.exports = function filterNot (test) {
  test = tester(test)
  return filter(function (data) { return !test(data) })
}

},{"../util/tester":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/tester.js","./filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter.js":[function(require,module,exports){
'use strict'

var tester = require('../util/tester')

module.exports = function filter (test) {
  //regexp
  test = tester(test)
  return function (read) {
    return function next (end, cb) {
      var sync, loop = true
      while(loop) {
        loop = false
        sync = true
        read(end, function (end, data) {
          if(!end && !test(data))
            return sync ? loop = true : next(end, cb)
          cb(end, data)
        })
        sync = false
      }
    }
  }
}


},{"../util/tester":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/tester.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/flatten.js":[function(require,module,exports){
'use strict'

var values = require('../sources/values')
var once = require('../sources/once')

//convert a stream of arrays or streams into just a stream.
module.exports = function flatten () {
  return function (read) {
    var _read
    return function (abort, cb) {
      if (abort) { //abort the current stream, and then stream of streams.
        _read ? _read(abort, function(err) {
          read(err || abort, cb)
        }) : read(abort, cb)
      }
      else if(_read) nextChunk()
      else nextStream()

      function nextChunk () {
        _read(null, function (err, data) {
          if (err === true) nextStream()
          else if (err) {
            read(true, function(abortErr) {
              // TODO: what do we do with the abortErr?
              cb(err)
            })
          }
          else cb(null, data)
        })
      }
      function nextStream () {
        _read = null
        read(null, function (end, stream) {
          if(end)
            return cb(end)
          if(Array.isArray(stream) || stream && 'object' === typeof stream)
            stream = values(stream)
          else if('function' != typeof stream)
            stream = once(stream)
          _read = stream
          nextChunk()
        })
      }
    }
  }
}


},{"../sources/once":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/once.js","../sources/values":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/values.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/index.js":[function(require,module,exports){
'use strict'

module.exports = {
  map: require('./map'),
  asyncMap: require('./async-map'),
  filter: require('./filter'),
  filterNot: require('./filter-not'),
  through: require('./through'),
  take: require('./take'),
  unique: require('./unique'),
  nonUnique: require('./non-unique'),
  flatten: require('./flatten')
}




},{"./async-map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/async-map.js","./filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter.js","./filter-not":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter-not.js","./flatten":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/flatten.js","./map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/map.js","./non-unique":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/non-unique.js","./take":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/take.js","./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/through.js","./unique":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/unique.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/map.js":[function(require,module,exports){
'use strict'

function id (e) { return e }
var prop = require('../util/prop')

module.exports = function map (mapper) {
  if(!mapper) return id
  mapper = prop(mapper)
  return function (read) {
    return function (abort, cb) {
      read(abort, function (end, data) {
        try {
        data = !end ? mapper(data) : null
        } catch (err) {
          return read(err, function () {
            return cb(err)
          })
        }
        cb(end, data)
      })
    }
  }
}

},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/prop.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/non-unique.js":[function(require,module,exports){
'use strict'

var unique = require('./unique')

//passes an item through when you see it for the second time.
module.exports = function nonUnique (field) {
  return unique(field, true)
}

},{"./unique":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/unique.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/take.js":[function(require,module,exports){
'use strict'

//read a number of items and then stop.
module.exports = function take (test, opts) {
  opts = opts || {}
  var last = opts.last || false // whether the first item for which !test(item) should still pass
  var ended = false
  if('number' === typeof test) {
    last = true
    var n = test; test = function () {
      return --n
    }
  }

  return function (read) {

    function terminate (cb) {
      read(true, function (err) {
        last = false; cb(err || true)
      })
    }

    return function (end, cb) {
      if(ended)            last ? terminate(cb) : cb(ended)
      else if(ended = end) read(ended, cb)
      else
        read(null, function (end, data) {
          if(ended = ended || end) {
            //last ? terminate(cb) :
            cb(ended)
          }
          else if(!test(data)) {
            ended = true
            last ? cb(null, data) : terminate(cb)
          }
          else
            cb(null, data)
        })
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/through.js":[function(require,module,exports){
'use strict'

//a pass through stream that doesn't change the value.
module.exports = function through (op, onEnd) {
  var a = false

  function once (abort) {
    if(a || !onEnd) return
    a = true
    onEnd(abort === true ? null : abort)
  }

  return function (read) {
    return function (end, cb) {
      if(end) once(end)
      return read(end, function (end, data) {
        if(!end) op && op(data)
        else once(end)
        cb(end, data)
      })
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/unique.js":[function(require,module,exports){
'use strict'

function id (e) { return e }
var prop = require('../util/prop')
var filter = require('./filter')

//drop items you have already seen.
module.exports = function unique (field, invert) {
  field = prop(field) || id
  var seen = {}
  return filter(function (data) {
    var key = field(data)
    if(seen[key]) return !!invert //false, by default
    else seen[key] = true
    return !invert //true by default
  })
}


},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/prop.js","./filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/abort-cb.js":[function(require,module,exports){
module.exports = function abortCb(cb, abort, onAbort) {
  cb(abort)
  onAbort && onAbort(abort === true ? null: abort)
  return
}


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/prop.js":[function(require,module,exports){
module.exports = function prop (key) {
  return key && (
    'string' == typeof key
    ? function (data) { return data[key] }
    : 'object' === typeof key && 'function' === typeof key.exec //regexp
    ? function (data) { var v = key.exec(data); return v && v[0] }
    : key
  )
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/tester.js":[function(require,module,exports){
var prop = require('./prop')

function id (e) { return e }

module.exports = function tester (test) {
  return (
    'object' === typeof test && 'function' === typeof test.test //regexp
    ? function (data) { return test.test(data) }
    : prop (test) || id
  )
}

},{"./prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/prop.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-handshake/index.js":[function(require,module,exports){
var Reader = require('pull-reader')
var Writer = require('pull-pushable')
var cat = require('pull-cat')
var pair = require('pull-pair')

function once (cb) {
  var called = 0
  return function (a, b, c) {
    if(called++) return
    cb(a, b, c)
  }
}

function isFunction (f) {
  return 'function' === typeof f
}

module.exports = function (opts, _cb) {
  if(isFunction(opts)) _cb = opts, opts = {}
  _cb = once(_cb || function noop () {})
  var reader = Reader(opts && opts.timeout || 5e3)
  var writer = Writer(function (err) {
    if(err) _cb(err)
  })

  var p = pair()

  return {
    handshake: {
      read: reader.read,
      abort: function (err) {
        writer.end(err)
        reader.abort(err, function (err) {
        })
        _cb(err)
      },
      write: writer.push,
      rest: function () {
        writer.end()
        return {
          source: reader.read(),
          sink: p.sink
        }
      }
    },
    sink: reader,
    source: cat([writer, p.source])
  }
}

},{"pull-cat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cat/index.js","pull-pair":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pair/index.js","pull-pushable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pushable/index.js","pull-reader":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-reader/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-inactivity/index.js":[function(require,module,exports){

var pull = require('pull-stream/pull')
var Through = require('pull-stream/throughs/through')
var Abortable = require('pull-abortable')
var Rate = require('./rate')

module.exports = function (duplex, min, onEnd) {
  if('function' === typeof min)
    onEnd = min, min = null

  var n = 2, error, interval

  function done (err) {
    error = error || err
    if(--n) return
    clearInterval(interval)
    onEnd && onEnd(error)
  }

  min = min || 1000 //close after 1 second inactivity.

  var sourceAbort = Abortable(done)
  var sinkAbort   = Abortable(done)
  var sourceRate  = Rate()
  var sinkRate    = Rate()

  function rate () {
    return sourceRate.rate() + sinkRate.rate()
  }

  function abort () {
    clearInterval(interval)
    sourceAbort.abort()
    sinkAbort.abort()
  }

  interval = setInterval(function () {
    if(!min) return
    if(Math.max(sourceRate.ts, sinkRate.ts) + min < Date.now())
      abort()
  }, 200)
  interval.unref && interval.unref()

  return {
    source: pull(duplex.source, sourceRate, sourceAbort),
    sink  : pull(sinkRate, sinkAbort, duplex.sink),
    rate  : rate,
    setTTL: function (_min) {
      if(!_min) clearInterval(interval)
      min = _min
      return this
    },
    abort : abort
  }

}

module.exports.through = function (min, onEnd) {
  min = min || 0.002 //2k per second
  var abortable = Abortable(onEnd)
  var flow = Rate()
  var interval = setInterval(function () {
    if(flow.rate() < min) {
      clearInterval(interval)
      abortable.abort()
    }
  }, 500)

  var stream = pull(
    flow,
    abortable,
    Through(null, function () {
      clearInterval(interval)
    })
  )

  stream.rate = flow.rate

  return stream
}


},{"./rate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-inactivity/rate.js","pull-abortable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-abortable/index.js","pull-stream/pull":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/pull.js","pull-stream/throughs/through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/through.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-inactivity/rate.js":[function(require,module,exports){
var pull = require('pull-stream')

function rate (s) {
  var recent = []
  var stream = pull.through(function (d) {
    stream.ts = Date.now()
    recent.push({size: d.length, ts: stream.ts})
    if(recent.length > 5)
      recent.shift()

  })

  stream.ts = Date.now()

  stream.rate = function () {
    var ts = Date.now()
    if(recent.length > 1) {
      var rate = (recent.reduce(function (size, item) {
        return size + item.size
      }, 0)/1000000) / ((ts - recent[0].ts)/1000)

      return rate
    }
  }

  return stream
}

module.exports = rate

},{"pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/index.js":[function(require,module,exports){
var Live     = require('pull-live')

exports.old = require('./old')
exports.live = require('./live')


exports.read =
exports.readStream =
exports.createReadStream = require('./read')

exports.write =
exports.writeStream =
exports.createWriteStream = require('./write')

},{"./live":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/live.js","./old":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/old.js","./read":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/read.js","./write":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/write.js","pull-live":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-live/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/live.js":[function(require,module,exports){
var pushable = require('pull-pushable')
var cat      = require('pull-cat')
var post     = require('level-post')

module.exports = function (db, opts) {
  opts = opts || {}

  var l = pushable(function (err) {
    if(opts.onAbort) opts.onAbort(err)
    cleanup()
  })

  var cleanup = post(db, opts, function (ch) {
    if(opts.keys === false)
      l.push(ch.value)
    else if(opts.values === false)
      l.push(ch.key)
    else
      l.push(ch)
  })

  return l

}


},{"level-post":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level-post/index.js","pull-cat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cat/index.js","pull-pushable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pushable/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/old.js":[function(require,module,exports){
var toPull   = require('stream-to-pull-stream')

module.exports = function read(db, opts) {
  return toPull.read1(db.createReadStream(opts))
}


},{"stream-to-pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-to-pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/read.js":[function(require,module,exports){
var Live = require('pull-live')

var old = require('./old')
var live = require('./live')

module.exports = function (db, opts) {
  if(opts && opts.tail) {
    console.error('pull-level: .tail option is depreciated. use .live instead')
    opts.live = opts.tail
  }
  return Live(function (opts) {
    return old(db, opts)
  }, function (opts) {
    return live(db, opts)
  })(opts)
}

},{"./live":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/live.js","./old":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/old.js","pull-live":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-live/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/write.js":[function(require,module,exports){
var pull     = require('pull-stream/pull')
var Map      = require('pull-stream/throughs/map')
var AsyncMap = require('pull-stream/throughs/async-map')
var Drain    = require('pull-stream/sinks/drain')
var Window   = require('pull-window')

module.exports = function (db, opts, done) {
  if('function' === typeof opts)
    done = opts, opts = null
  opts = opts || {}
  return pull(
    Map(function (e) {
      if(e.type) return e
      return {
        key   : e.key, 
        value : e.value,
        type  : e.value == null ? 'del' : 'put'
      }
    }),
    Window.recent(opts.windowSize, opts.windowTime),
    AsyncMap(function (batch, cb) {
      db.batch(batch, cb)
    }),
    Drain(null, done)
  )
}


},{"pull-stream/pull":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/pull.js","pull-stream/sinks/drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js","pull-stream/throughs/async-map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/async-map.js","pull-stream/throughs/map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/map.js","pull-window":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-window/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-live/index.js":[function(require,module,exports){
var pull = require('pull-stream/pull')
var Cat = require('pull-cat')
var Once = require('pull-stream/sources/once')

module.exports = function (createSource, createLive) {

  return function (opts) {
      opts = opts || {}
      var isOld = opts.old !== false
      var isLive = opts.live === true || opts.old === false

      if(!isLive && !isOld)
        throw new Error('ls with neither old or new is empty')

      if(isLive && isOld)
        return Cat([
          createSource(opts),
          opts.sync === false ? null : Once({sync: true}),
          createLive(opts)
        ])
      else if(!isLive)
        return createSource(opts)
      else
        return createLive(opts)
  }
}







},{"pull-cat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cat/index.js","pull-stream/pull":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/pull.js","pull-stream/sources/once":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/once.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-looper/index.js":[function(require,module,exports){
var looper = require('looper')

module.exports = function (read) {
  var _abort, _cb
  var loop = looper(function () {
    read(_abort, _cb)
  })
  return function (abort, cb) {
    _abort = abort
    _cb = cb
    loop()
  }
}

},{"looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/looper/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-notify/index.js":[function(require,module,exports){

var pushable = require('pull-pushable')

module.exports = function () {
  var listeners = []

  function notify (message) {
    // notify by pushing to all listeners
    for (var i = 0; i < listeners.length; i++) {
      listeners[i].push(message)
    }
    return message
  }

  notify.listen = function () {
    // create listener with `onClose` handler
    var listener = pushable(function onClose () {
      // if listener is found, delete from list
      var index = listeners.indexOf(listener)
      if (index !== -1) listeners.splice(index, 1)
    })
    listeners.push(listener)
    return listener
  }

  notify.abort = function (err) {
    // abort by ending all listeners
    while (listeners.length) listeners[0].end(err)
  }

  notify.end = function () {
    return notify.abort(true)
  }

  return notify
}

},{"pull-pushable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pushable/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pair/duplex.js":[function(require,module,exports){

var Pair = require('./')
module.exports = function () {
  var a = Pair(), b = Pair()
  return [
    {
      source: a.source,
      sink: b.sink
    },
    {
      source: b.source,
      sink: a.sink
    }
  ]
}

},{"./":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pair/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pair/index.js":[function(require,module,exports){
'use strict'

//a pair of pull streams where one drains from the other
module.exports = function () {
  var _read, waiting
  function sink (read) {
    if('function' !== typeof read)
      throw new Error('read must be function')

    if(_read)
      throw new Error('already piped')
    _read = read
    if(waiting) {
      var _waiting = waiting
      waiting = null
      _read.apply(null, _waiting)
    }
  }
  function source (abort, cb) {
    if(_read)
      _read(abort, cb)
    else
      waiting = [abort, cb]
  }

  return {
    source: source, sink: sink
  }
}


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-paramap/index.js":[function(require,module,exports){
var looper = require('looper')
module.exports = function (map, width, inOrder) {
  inOrder = inOrder === undefined ? true : inOrder
  var reading = false, abort
  return function (read) {
    var i = 0, j = 0, last = 0
    var seen = [], started = false, ended = false, _cb, error

    function drain () {
      if(_cb) {
        var cb = _cb
        if(error) {
          _cb = null
          return cb(error)
        }
        if(Object.hasOwnProperty.call(seen, j)) {
          _cb = null
          var data = seen[j]; delete seen[j]; j++
          cb(null, data)
          if(width) start()
        } else if(j >= last && ended) {
          _cb = null
          cb(ended)
        }
      }
    }

    var start = looper(function () {
      started = true
      if(ended) return drain()
      if(reading || width && (i - width >= j)) return
      reading = true
      read(abort, function (end, data) {
        reading = false
        if(end) {
          last = i; ended = end
          drain()
        } else {
          var k = i++

          map(data, function (err, data) {
            if (inOrder) seen[k] = data
            else seen.push(data)
            if(err) error = err
            drain()
          })

          if(!ended)
            start()

        }
      })
    })

    return function (_abort, cb) {
      if(_abort)
        read(ended = abort = _abort, function (err) {
          if(cb) return cb(err)
        })
      else {
        _cb = cb
        if(!started) start()
        drain()
      }
    }
  }
}


},{"looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/looper/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pause/index.js":[function(require,module,exports){


module.exports = function (onPause) {

  var wait, read, paused

  function reader (_read) {
    read = _read
    return function (abort, cb) {
      if(!paused) read(abort, cb)
      else        wait = [abort, cb]
    }
  }

  reader.pause = function () {
    if(paused) return
    paused = true
    onPause && onPause(paused)
  }

  reader.resume = function () {
    if(!paused) return
    paused = false
    onPause && onPause(paused)
    if(wait) {
      var _wait = wait
      wait = null
      read(_wait[0], _wait[1])
    }
  }

  return reader

}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ping/index.js":[function(require,module,exports){
var Pushable = require('pull-pushable')
var stats = require('statistics/mutate')
var Drain = require('pull-stream/sinks/drain')

module.exports = function (opts) {
  var timeout = opts && opts.timeout || 5*60*1000 //default: 5 minutes
  var serve = false, timer
  var source = Pushable()
  var rtt = stats.initial(), skew = stats.initial()

  function ping () {
    //serve the ping pong, opponent
    //will volley it back to us, keeping connection alive
    //and revealing clock skew.
    serve = true
    source.push(ts = Date.now())
  }

  //we send the first ping
  if(opts && opts.serve) ping()

  var self
  return self = {
    source: source,
    sink: Drain(function (remote_ts) {
      if(serve) {
        var ts2 = Date.now()
        self.rtt = stats(self.rtt, ts2 - ts)
        //if their time is behind half a round trip behing ts2
        //consider that to be negative skew.
        self.skew = stats(self.skew, remote_ts - ((ts2 + ts)/2))
        serve = false
      }
      else {
        //volley timestamp back to opponent.
        source.push(ts = Date.now())
        //we'll serve next time.
        timer = setTimeout(ping, timeout)
      }
    }, function (err) {
      clearTimeout(timer)
    }),
    rtt: rtt, skew: skew
  }

}


},{"pull-pushable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pushable/index.js","pull-stream/sinks/drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js","statistics/mutate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/statistics/mutate.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pushable/index.js":[function(require,module,exports){
module.exports = pullPushable

function pullPushable (separated, onClose) {
  if (typeof separated === 'function') {
    onClose = separated
    separated = false
  }

  // create a buffer for data
  // that have been pushed
  // but not yet pulled.
  var buffer = []

  // a pushable is a source stream
  // (abort, cb) => cb(end, data)
  //
  // when pushable is pulled,
  // keep references to abort and cb
  // so we can call back after
  // .end(end) or .push(data)
  var abort, cb
  function read (_abort, _cb) {
    if (_abort) {
      abort = _abort
      // if there is already a cb waiting, abort it.
      if (cb) callback(abort)
    }
    cb = _cb
    drain()
  }

  var ended
  function end (end) {
    ended = ended || end || true
    // attempt to drain
    drain()
  }

  function push (data) {
    if (ended) return
    // if sink already waiting,
    // we can call back directly.
    if (cb) {
      callback(abort, data)
      return
    }
    // otherwise buffer data
    buffer.push(data)
  }

  // Return functions separated from source { push, end, source }
  if (separated) {
    return { push: push, end: end, source: read, buffer: buffer }
  }

  // Return normal
  read.push = push
  read.end = end
  read.buffer = buffer
  return read

  // `drain` calls back to (if any) waiting
  // sink with abort, end, or next data.
  function drain () {
    if (!cb) return

    if (abort) callback(abort)
    else if (!buffer.length && ended) callback(ended)
    else if (buffer.length) callback(null, buffer.shift())
  }

  // `callback` calls back to waiting sink,
  // and removes references to sink cb.
  function callback (err, val) {
    var _cb = cb
    // if error and pushable passed onClose, call it
    // the first time this stream ends or errors.
    if (err && onClose) {
      var c = onClose
      onClose = null
      c(err === true ? null : err)
    }
    cb = null
    _cb(err, val)
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-reader/index.js":[function(require,module,exports){
'use strict'
var State = require('./state')

function isInteger (i) {
  return Number.isFinite(i)
}

function isFunction (f) {
  return 'function' === typeof f
}

function maxDelay(fn, delay) {
  if(!delay) return fn
  return function (a, cb) {
    var timer = setTimeout(function () {
      fn(new Error('pull-reader: read exceeded timeout'), cb)
    }, delay)
    fn(a, function (err, value) {
      clearTimeout(timer)
      cb(err, value)
    })

  }

}

module.exports = function (timeout) {

  var queue = [], read, readTimed, reading = false
  var state = State(), ended, streaming, abort

  function drain () {
    while (queue.length) {
      if(null == queue[0].length && state.has(1)) {
        queue.shift().cb(null, state.get())
      }
      else if(state.has(queue[0].length)) {
        var next = queue.shift()
        next.cb(null, state.get(next.length))
      }
      else if(ended == true && queue[0].length && state.length < queue[0].length) {
        var msg = 'stream ended with:'+state.length+' but wanted:'+queue[0].length
        queue.shift().cb(new Error(msg))
      }
      else if(ended)
        queue.shift().cb(ended)
      else
        return !!queue.length
    }
    //always read a little data
    return queue.length || !state.has(1) || abort
  }

  function more () {
    var d = drain()
    if(d && !reading)
    if(read && !reading && !streaming) {
      reading = true
      readTimed (null, function (err, data) {
        reading = false
        if(err) {
          ended = err
          return drain()
        }
        state.add(data)
        more()
      })
    }
  }

  function reader (_read) {
    if(abort) {
      while(queue.length) queue.shift().cb(abort)
      return cb && cb(abort)
    }
    readTimed = maxDelay(_read, timeout)
    read = _read
    more()
  }

  reader.abort = function (err, cb) {
    abort = err || true
    if(read) {
      reading = true
      read(abort, function () {
        while(queue.length) queue.shift().cb(abort)
        cb && cb(abort)
      })
    }
    else
      cb()
  }

  reader.read = function (len, _timeout, cb) {
    if(isFunction(_timeout))
      cb = _timeout, _timeout = timeout
    if(isFunction(cb)) {
      queue.push({length: isInteger(len) ? len : null, cb: cb})
      more()
    }
    else {
      //switch into streaming mode for the rest of the stream.
      streaming = true
      //wait for the current read to complete
      return function (abort, cb) {
        //if there is anything still in the queue,
        if(reading || state.has(1)) {
          if(abort) return read(abort, cb)
          queue.push({length: null, cb: cb})
          more()
        }
        else
          maxDelay(read, _timeout)(abort, function (err, data) {
            cb(err, data)
          })
      }
    }
  }

  return reader
}







},{"./state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-reader/state.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-reader/state.js":[function(require,module,exports){
(function (Buffer){(function (){

module.exports = function () {

  var buffers = [], length = 0

  //just used for debugging...
  function calcLength () {
    return buffers.reduce(function (a, b) {
      return a + b.length
    }, 0)
  }

  return {
    length: length,
    data: this,
    add: function (data) {
      if(!Buffer.isBuffer(data))
        throw new Error('data must be a buffer, was: ' + JSON.stringify(data))
      this.length = length = length + data.length
      buffers.push(data)
      return this
    },
    has: function (n) {
      if(null == n) return length > 0
      return length >= n
    },
    get: function (n) {
      var _length
      if(n == null || n === length) {
        length = 0
        var _buffers = buffers
        buffers = []
        if(_buffers.length == 1)
          return _buffers[0]
        else
          return Buffer.concat(_buffers)
      } else if (buffers.length > 1 && n <= (_length = buffers[0].length)) {
        var buf = buffers[0].slice(0, n)
        if(n === _length) {
          buffers.shift()
        }
        else {
          buffers[0] = buffers[0].slice(n, _length)
        }
        length -= n
        return buf
      }  else if(n < length) {
        var out = [], len = 0

        while((len + buffers[0].length) < n) {
          var b = buffers.shift()
          len += b.length
          out.push(b)
        }

        if(len < n) {
          out.push(buffers[0].slice(0, n - len))
          buffers[0] = buffers[0].slice(n - len, buffers[0].length)
          this.length = length = length - n
        }
        return Buffer.concat(out)
      }
      else
        throw new Error('could not get ' + n + ' bytes')
    }
  }

}






}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js":[function(require,module,exports){
'use strict'

var sources  = require('./sources')
var sinks    = require('./sinks')
var throughs = require('./throughs')

exports = module.exports = require('./pull')

exports.pull = exports

for(var k in sources)
  exports[k] = sources[k]

for(var k in throughs)
  exports[k] = throughs[k]

for(var k in sinks)
  exports[k] = sinks[k]


},{"./pull":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/pull.js","./sinks":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/index.js","./sources":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/index.js","./throughs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/pull.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/pull.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/collect.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/collect.js"][0].apply(exports,arguments)
},{"./reduce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/reduce.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/concat.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/concat.js"][0].apply(exports,arguments)
},{"./reduce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/reduce.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/drain.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/find.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/find.js"][0].apply(exports,arguments)
},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/prop.js","./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/index.js"][0].apply(exports,arguments)
},{"./collect":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/collect.js","./concat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/concat.js","./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js","./find":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/find.js","./log":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/log.js","./on-end":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/on-end.js","./reduce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/reduce.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/log.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/log.js"][0].apply(exports,arguments)
},{"./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/on-end.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/on-end.js"][0].apply(exports,arguments)
},{"./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/reduce.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sinks/reduce.js"][0].apply(exports,arguments)
},{"./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/count.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/count.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/empty.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/empty.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/error.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/error.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/index.js"][0].apply(exports,arguments)
},{"./count":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/count.js","./empty":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/empty.js","./error":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/error.js","./infinite":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/infinite.js","./keys":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/keys.js","./once":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/once.js","./values":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/values.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/infinite.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/infinite.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/keys.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/keys.js"][0].apply(exports,arguments)
},{"./values":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/values.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/once.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/once.js"][0].apply(exports,arguments)
},{"../util/abort-cb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/abort-cb.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/values.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/sources/values.js"][0].apply(exports,arguments)
},{"../util/abort-cb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/abort-cb.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/async-map.js":[function(require,module,exports){
'use strict'

function id (e) { return e }
var prop = require('../util/prop')

module.exports = function asyncMap (map) {
  if(!map) return id
  map = prop(map)
  var busy = false, abortCb, aborted
  return function (read) {
    return function next (abort, cb) {
      if(aborted) return cb(aborted)
      if(abort) {
        aborted = abort
        if(!busy) read(abort, function (err) {
          //incase the source has already ended normally,
          //we should pass our own error.
          cb(abort)
        })
        else read(abort, function (err) {
          //if we are still busy, wait for the mapper to complete.
          if(busy) abortCb = cb
          else cb(abort)
        })
      }
      else
        read(null, function (end, data) {
          if(end) cb(end)
          else if(aborted) cb(aborted)
          else {
            busy = true
            map(data, function (err, data) {
              busy = false
              if(aborted) {
                cb(aborted)
                abortCb && abortCb(aborted)
              }
              else if(err) next (err, cb)
              else cb(null, data)
            })
          }
        })
    }
  }
}








},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/prop.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/filter-not.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter-not.js"][0].apply(exports,arguments)
},{"../util/tester":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/tester.js","./filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/filter.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/filter.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/filter.js"][0].apply(exports,arguments)
},{"../util/tester":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/tester.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/flatten.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/flatten.js"][0].apply(exports,arguments)
},{"../sources/once":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/once.js","../sources/values":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/sources/values.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/index.js"][0].apply(exports,arguments)
},{"./async-map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/async-map.js","./filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/filter.js","./filter-not":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/filter-not.js","./flatten":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/flatten.js","./map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/map.js","./non-unique":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/non-unique.js","./take":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/take.js","./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/through.js","./unique":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/unique.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/map.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/map.js"][0].apply(exports,arguments)
},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/prop.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/non-unique.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/non-unique.js"][0].apply(exports,arguments)
},{"./unique":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/unique.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/take.js":[function(require,module,exports){
'use strict'

//read a number of items and then stop.
module.exports = function take (test, opts) {
  opts = opts || {}
  var last = opts.last || false // whether the first item for which !test(item) should still pass
  var ended = false
  if('number' === typeof test) {
    last = true
    var n = test; test = function () {
      return --n
    }
  }

  return function (read) {

    function terminate (cb) {
      read(true, function (err) {
        last = false; cb(err || true)
      })
    }

    return function (end, cb) {
      if(ended && !end) last ? terminate(cb) : cb(ended)
      else if(ended = end) read(ended, cb)
      else
        read(null, function (end, data) {
          if(ended = ended || end) {
            //last ? terminate(cb) :
            cb(ended)
          }
          else if(!test(data)) {
            ended = true
            last ? cb(null, data) : terminate(cb)
          }
          else
            cb(null, data)
        })
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/through.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/through.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/unique.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/throughs/unique.js"][0].apply(exports,arguments)
},{"../util/prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/prop.js","./filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/throughs/filter.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/abort-cb.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/abort-cb.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/prop.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/prop.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/tester.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-goodbye/node_modules/pull-stream/util/tester.js"][0].apply(exports,arguments)
},{"./prop":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/util/prop.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-thenable/index.js":[function(require,module,exports){
var quicktask = require('quicktask').default;
var schedule = quicktask();
module.exports = function thenable(readable, prev) {
  return {
    cont: {},
    then: function then(resolve, reject) {
      var cont = this.cont;
      function run() {
        readable(null, function(errOrEnd, data) {
          if (errOrEnd === true) reject(true);
          else if (errOrEnd) reject(errOrEnd);
          else {
            resolve(data);
            if (cont.run) cont.run();
          }
        });
      }
      if (prev) prev.run = run;
      else schedule(run);
      return thenable(readable, cont);
    },
  };
};

},{"quicktask":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/quicktask/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-through/index.js":[function(require,module,exports){
var looper = require('looper')

module.exports = function (writer, ender) {
  return function (read) {
    var queue = [], ended, error

    function enqueue (data) {
      queue.push(data)
    }

    writer = writer || function (data) {
      this.queue(data)
    }

    ender = ender || function () {
      this.queue(null)
    }

    var emitter = {
      emit: function (event, data) {
        if(event == 'data') enqueue(data)
        if(event == 'end')  ended = true, enqueue(null)
        if(event == 'error') error = data
      },
      queue: enqueue
    }
    var _cb
    return function (end, cb) {
      ended = ended || end
      if(end)
        return read(end, function () {
          if(_cb) {
            var t = _cb; _cb = null; t(end)
          }
          cb(end)
        })

      _cb = cb
      looper(function pull (next) {
        //if it's an error
        if(!_cb) return
        cb = _cb
        if(error) _cb = null, cb(error)
        else if(queue.length) {
          var data = queue.shift()
          _cb = null,cb(data === null, data)
        }
        else {
          read(ended, function (end, data) {
             //null has no special meaning for pull-stream
            if(end && end !== true) {
              error = end; return next()
            }
            if(ended = ended || end)  ender.call(emitter)
            else if(data !== null) {
              writer.call(emitter, data)
              if(error || ended)
                return read(error || ended, function () {
                  _cb = null; cb(error || ended)
                })
            }
            next(pull)
          })
        }
      })
    }
  }
}


},{"looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-through/node_modules/looper/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-through/node_modules/looper/index.js":[function(require,module,exports){

var looper = module.exports = function (fun) {
  (function next () {
    var loop = true, returned = false, sync = false
    do {
      sync = true; loop = false
      fun.call(this, function () {
        if(sync) loop = true
        else     next()
      })
      sync = false
    } while(loop)
  })()
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-window/index.js":[function(require,module,exports){
var looper = require('looper')

var window = module.exports = function (init, start) {
return function (read) {
  start = start || function (start, data) {
    return {start: start, data: data}
  }
  var windows = [], output = [], ended = null
  var data, end
  var j = 0

  return function (abort, cb) {
    if(output.length)
      return cb(null, output.shift())
    if(ended)
      return cb(ended)
    var i = 0
    var k = j ++
    read(abort, looper(function (end, data) {
      var next = this
      var reduce, update, once = false
      if(end)
        ended = end

      function _update (end, _data) {
        if(once) return
        once = true
        delete windows[windows.indexOf(update)]
        output.push(start(data, _data))
      }

      if(!ended)
        update = init(data, _update)

      if(update)
        windows.push(update)
      else
        //don't allow data unless a window started here!
        once = true

      windows.forEach(function (update, i) {
        update(end, data)
      })

      if(output.length)
        return cb(null, output.shift())
      else if(ended)
        return cb(ended)
      else
        read(null, next)

  }))
  }
}}

window.recent = function (size, time) {
  var current = null
  return window(function (data, cb) {
    if(current) return
    current = []
    var timer
      
    function done () {
      var _current = current
      current = null
      clearTimeout(timer)
      cb(null, _current)
    }

    if(time)
      timer = setTimeout(done, time)

    return function (end, data) {
      if(end) return done()
      current.push(data)
      if(size != null && current.length >= size)
        done()
    }
  }, function (_, data) {
    return data
  })
}

window.sliding = function (reduce, width) {
  width = width || 10
  var k = 0
  return window(function (data, cb) {
    var acc
    var i = 0
    var l = k++
    return function (end, data) {
      if(end) return
      acc = reduce(acc, data)
      if(width <= ++ i)
        cb(null, acc)
    }
  })
}


},{"looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-window/node_modules/looper/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-window/node_modules/looper/index.js":[function(require,module,exports){

var looper = module.exports = function (fun) {
  return function next (a, b, c) {
    var loop = true, returned = false, sync = false
    do {
      sync = true; loop = false
      fun.call(function (x, y, z) {
        if(sync) {
          a = x; b = y; c = z
          loop = true
        }
        else
          next(x, y, z)
      }, a, b, c)
      sync = false
    } while(loop)
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/client.js":[function(require,module,exports){
'use strict';

//load websocket library if we are not in the browser
var WebSocket = require('./web-socket')
var duplex = require('./duplex')
var wsurl = require('./ws-url')

function isFunction (f) {
  return 'function' === typeof f
}

module.exports = function (addr, opts) {
  if (isFunction(opts)) opts = {onConnect: opts}

  var location = typeof window === 'undefined' ? {} : window.location

  var url = wsurl(addr, location)
  var socket = new WebSocket(url)

  var stream = duplex(socket, opts)
  stream.remoteAddress = url
  stream.close = function (cb) {
    if (isFunction(cb)) {
      socket.addEventListener('close', cb)
    }
    socket.close()
  }

  socket.addEventListener('open', function (e) {
    if (opts && isFunction(opts.onConnect)) {
      opts.onConnect(null, stream)
    }
  })

  return stream
}

module.exports.connect = module.exports

},{"./duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/duplex.js","./web-socket":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/web-socket.js","./ws-url":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/ws-url.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/duplex.js":[function(require,module,exports){
var source = require('./source')
var sink = require('./sink')

module.exports = duplex

function duplex (ws, opts) {
  var req = ws.upgradeReq || {}
  if(opts && opts.binaryType)
    ws.binaryType = opts.binaryType
  else if(opts && opts.binary)
    ws.binaryType = 'arraybuffer'
  return {
    source: source(ws, opts && opts.onConnect),
    sink: sink(ws, opts),

    //http properties - useful for routing or auth.
    headers: req.headers,
    url: req.url,
    upgrade: req.upgrade,
    method: req.method
  };
};


},{"./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/sink.js","./source":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/source.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/index.js":[function(require,module,exports){
var exports = module.exports = require('./duplex')

exports.source = require('./source');
exports.sink = require('./sink');
exports.createServer = require('./server')
exports.connect = require('./client')

},{"./client":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/client.js","./duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/duplex.js","./server":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js","./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/sink.js","./source":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/source.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/ready.js":[function(require,module,exports){
module.exports = function(socket, callback) {
  var remove = socket && (socket.removeEventListener || socket.removeListener);

  function cleanup () {
    if (typeof remove == 'function') {
      remove.call(socket, 'open', handleOpen);
      remove.call(socket, 'error', handleErr);
    }
  }

  function handleOpen(evt) {
    cleanup(); callback();
  }

  function handleErr (evt) {
    cleanup(); callback(evt);
  }

  // if the socket is closing or closed, return end
  if (socket.readyState >= 2) {
    return callback(true);
  }

  // if open, trigger the callback
  if (socket.readyState === 1) {
    return callback();
  }

  socket.addEventListener('open', handleOpen);
  socket.addEventListener('error', handleErr);
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/sink.js":[function(require,module,exports){
(function (process,setImmediate){(function (){
var ready = require('./ready');

/**
  ### `sink(socket, opts?)`

  Create a pull-stream `Sink` that will write data to the `socket`.

  <<< examples/write.js

**/

var nextTick = typeof setImmediate !== 'undefined' ? setImmediate : process.nextTick

module.exports = function(socket, opts) {
  return function (read) {
    opts = opts || {}
    var closeOnEnd = opts.closeOnEnd !== false;
    var onClose = 'function' === typeof opts ? opts : opts.onClose;

    function next(end, data) {
      // if the stream has ended, simply return
      if (end) {
        if (closeOnEnd && socket.readyState <= 1) {
          if(onClose)
            socket.addEventListener('close', function (ev) {
              if(ev.wasClean || ev.code === 1006) onClose()
              else {
                var err = new Error('ws error')
                err.event = ev
                onClose(err)
              }
            });

          socket.close()
        }

        return;
      }

      // socket ready?
      ready(socket, function(end) {
        if (end) {
          return read(end, function () {});
        }
        socket.send(data);
        nextTick(function() {
          read(null, next);
        });
      });
    }

    read(null, next);
  }
}

}).call(this)}).call(this,require('_process'),require("timers").setImmediate)
},{"./ready":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/ready.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","timers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/timers-browserify/main.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/source.js":[function(require,module,exports){
/**
  ### `source(socket)`

  Create a pull-stream `Source` that will read data from the `socket`.

  <<< examples/read.js

**/
var Buffer = require('safe-buffer').Buffer;

// copied from github.com/feross/buffer
// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

module.exports = function(socket, cb) {
  var buffer = [];
  var receiver;
  var ended;
  var started = false;
  socket.addEventListener('message', function(evt) {
    var data = evt.data;
    if (isArrayBuffer(data)) {
      data = Buffer.from(data);
    }

    if (receiver) {
      return receiver(null, data);
    }

    buffer.push(data);
  });

  socket.addEventListener('close', function(evt) {
    if (ended) return
    if (receiver) {
      receiver(ended = true)
    }
  });

  socket.addEventListener('error', function (evt) {
    if (ended) return;
    ended = evt;
    if(!started) {
      started = true
      cb && cb(evt)
    }
    if (receiver) {
      receiver(ended)
    }
  });

  socket.addEventListener('open', function (evt) {
    if(started || ended) return
    started = true
  })

  function read(abort, cb) {
    receiver = null;

    //if stream has already ended.
    if (ended)
      return cb(ended);

    // if ended, abort
    else if (abort) {
      //this will callback when socket closes
      receiver = cb
      socket.close()
    }

    // return data, if any
    else if(buffer.length > 0)
      cb(null, buffer.shift());

    // wait for more data (or end)
    else
      receiver = cb;

  };

  return read;
};

},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/web-socket.js":[function(require,module,exports){

module.exports = 'undefined' === typeof WebSocket ? require('ws') : WebSocket

},{"ws":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ws/ws-url.js":[function(require,module,exports){
var rurl = require('relative-url')
var map = {http:'ws', https:'wss'}
var def = 'ws'
module.exports = function (url, location) {
  return rurl(url, location, map, def)
}



},{"relative-url":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/relative-url/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/punycode/punycode.js":[function(require,module,exports){
(function (global){(function (){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/duplex.js":[function(require,module,exports){
var toSource = require('./source')
var toSink = require('./sink')

module.exports = function (push) {
  return {
    source: toSource(push),
    sink: toSink(push)
  }
}

},{"./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/sink.js","./source":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/source.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/index.js":[function(require,module,exports){
var duplex = require('./duplex')
var source = require('./source')
var sink = require('./sink')

function duplex (push, cb) {
  return {
    source: toSource(push, cb),
    sink: toSink(push)
  }
}

function transform (push) {
  return function (read) {
    var reader = source(push)
    sink(push)(read)
    return reader
  }
}

exports = module.exports = function (push, cb) {
  if(push.write && push.resume)
    return duplex(push, cb)
  else if(push.write && !push.resume)
    return sink(push, cb)
  else
    return source(push)
}

exports.source = source
exports.sink = sink
exports.duplex = duplex
exports.transform = transform


},{"./duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/duplex.js","./sink":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/sink.js","./source":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/source.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/sink.js":[function(require,module,exports){
'use strict'

var looper = require('pull-looper')

module.exports = function (push, cb) {
  var reading = false, ended, read
  while(push.source) push = push.source

  var adapter = push.source = {
    resume: more,
    paused: false,
    abort: function (err) {
      ended = err || true
      if(read)
        read(ended, function (err) {
          if(!push.ended) push.end(err)
        })
    }
  }

  function more () {
    if(reading) return
    if(!(adapter.paused = push.paused)) {
      reading = true
      read(null, function next (err, data) {
        reading = false
        if(err && err !== true) {
          if(!push.ended)
            push.end(ended = err)
        } else {
          //if the push-stream has already ended, abort the source.
          if(push.ended) {
            if(!err) read(push.ended, function () {})
            return
          }
          if(err) push.end(err)
          else push.write(data)
          if(push.ended && !err) return read(push.ended, cb || function () {})
          if(!push.paused && !err && !reading) more()
        }
      })
    }
  }

  return function (_read) {
    read = looper(_read)
    if(!push.paused && !ended) more()
  }
}



},{"pull-looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-looper/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/source.js":[function(require,module,exports){
'use strict'
var looper = require('pull-looper')
module.exports = function (push, length, done) {
  var abort_cb, ended, buffer = [], _cb
  length = length || 0

  var adapter = {
    paused: false,
    write: function (data) {
      if(_cb) {
        var cb = _cb; _cb = null; cb(null, data)
      }
      else {
        buffer.push(data)
        if(buffer.length > length) {
          adapter.paused = true
        }
      }
    },
    end: function (err) {
      ended = err || true
      if(_cb && (err || !buffer.length)) {
        var cb = _cb; _cb = null; cb(ended)
        if(done) {
          var _done = done; done = null; _done(err)
        }
      }
    },
    source: null
  }

  push.pipe(adapter)

  return looper(function (abort, cb) {
    if(_cb && !abort) {
      throw new Error('source:read twice')
    }

    if(abort) {
      push.abort(abort)
//      abort_cb = cb
      cb(abort)
    }
    // if it ended with an error, cb immedately, dropping the buffer
    else if(ended && ended !== true) {
      cb(ended)
      if(done) {
        var _done = done; done = null; _done(ended)
      }
    }
    // else read the buffer
    else if(buffer.length) {
      var data = buffer.shift()
      cb(null, data)
      if(buffer.length <= length/2 && adapter.paused) {
        adapter.paused = false
        push.resume()
      }
    }
    else if(ended === true) {
      cb(true)
      if(done) {
        var _done = done; done = null; _done()
      }
    }
    else _cb = cb
  })
}


},{"pull-looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-looper/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/index.js":[function(require,module,exports){
var sources = require('./sources')
var sinks = require('./sinks')
var throughs = require('./throughs')

function push () {
  var args = [].slice.call(arguments)
  var source = args[0]
  for(var i = 1; i < args.length; i++) {
    source = source.pipe(args[i])
  }
  return source
}

for(var k in sources)  push[k] =  sources[k]
for(var k in sinks)    push[k] =    sinks[k]
for(var k in throughs) push[k] = throughs[k]

module.exports = push

},{"./sinks":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/index.js","./sources":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/index.js","./throughs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/pipe.js":[function(require,module,exports){

/*
A push stream pipeline is a doublely linked list.
data (write/end) travels one way, and signals (pause/resume/abort) travels the other way.

when you pipe to a stream, if it already has a source, find the first
source and pipe to that. this makes a.pipe(b.pipe(c) work, or a.pipe(b)

also, duplex streams (which, like in pull streams, are a pair {source, sink} streams)

*/

module.exports = function pipe (sink) {
  if(!sink) throw new Error('sink must be provided')
  var _sink = sink
  while(sink.source) sink = sink.source
  this.sink = sink
  sink.source = this
  if(!sink.paused) this.resume()
  return _sink
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/collect.js":[function(require,module,exports){

module.exports = function (cb) {
  return new CollectStream(cb)
}

function CollectStream (cb) {
  this.paused = false
  this.buffer = []
  this._cb = cb
}

CollectStream.prototype.write = function (data) {
  this.buffer.push(data)
}

CollectStream.prototype.end = function (err) {
  if(err && err !== true) this._cb(err, this.buffer)
  else this._cb(null, this.buffer)
}

//this is a writable so it doesn't have pipe or resume

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/drain.js":[function(require,module,exports){

module.exports = function (each, done) {
  return {
    paused: false,
    write: function (data) {
      if(each(data) === false) {
        this.abort()
      }
    },
    end: done,
    abort: function (err) {
      this.ended = err || true
      this.source.abort(err)
    }
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/index.js":[function(require,module,exports){

exports.collect = require('./collect')
exports.drain = require('./drain')
exports.reduce = require('./reduce')

},{"./collect":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/collect.js","./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/drain.js","./reduce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/reduce.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/reduce.js":[function(require,module,exports){

var drain = require('./drain')

module.exports = function (reduce, acc, cb) {
  if(!cb) cb = acc, acc = null
  return drain(function (item) {
    acc = reduce(acc, item)
  }, function () {
    cb(null, acc)
  })
}

},{"./drain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sinks/drain.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/empty.js":[function(require,module,exports){
'use strict'

module.exports =
function Empty (err) {
  return {
    resume: function () {
      this.sink.end(err)
    },
    pipe: require('../pipe')
  }
}

},{"../pipe":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/pipe.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/index.js":[function(require,module,exports){

exports.empty = require('./empty')
exports.values = require('./values')
exports.infinite = require('./infinite')

},{"./empty":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/empty.js","./infinite":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/infinite.js","./values":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/values.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/infinite.js":[function(require,module,exports){

module.exports = function () {
  var i = 0, looping = false
  return {
    resume: function () {
      looping = true
      while(!this.sink.paused)
        if(this.ended) {this.sink.end(this.ended === true ? null : this.ended); break}
        else           this.sink.write(i++)
      looping = false
    },
    abort: function (err) {
      this.ended = err || true
      if(!looping && this.sink) this.resume()
    },
    pipe: require('../pipe')
  }
}

},{"../pipe":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/pipe.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/sources/values.js":[function(require,module,exports){

module.exports = function (values) {
  return new ValueStream(values)
}

function ValueStream (values) {
//  if(!(this instanceof ValueStream)) return new ValueStream(values)
  this._i = 0
  this._values = values
  this.paused = true
  this.sink = null //no source, because this is the source.
}

ValueStream.prototype.resume = function () {
  while(!this.sink.paused && !(this.ended || (this.ended = this._i >= this._values.length)))
    this.sink.write(this._values[this._i++])

  if(this.ended && !this.sink.ended)
    this.sink.end()
}

ValueStream.prototype.abort = function (err) {
  this.sink.end(this.ended = err || true)
}

ValueStream.prototype.pipe = require('../pipe')

},{"../pipe":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/pipe.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/async-map.js":[function(require,module,exports){

var ThroughStream = require('./through')

function AsyncMapStream(fn) {
  ThroughStream.call(this)
  this.fn = fn
  this.async = false
}

AsyncMapStream.prototype = new ThroughStream()

AsyncMapStream.prototype.write = function (data) {
  var self = this
  if(this.paused) throw new Error('received write while paused')
  this.async = true
  this.fn(data, function (err, data) {
    self.async = false
    if(err) self.source.abort(self.ended = err)
    else {
      self.sink.write(data)
      if(self.ended) self.sink.end(self.ended)
      else if(self.paused) self.resume()
    }
  })
  if(this.async) this.paused = true
  else           this.paused = this.sink.paused
}

AsyncMapStream.prototype.end = function (err) {
  if(this.async) this.ended = err || true
  else this.sink.end(err)
}

module.exports = function (fn) {
  return new AsyncMapStream(fn)
}

},{"./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/through.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/filter.js":[function(require,module,exports){

var ThroughStream = require('./through')

function FilterStream(fn) {
  if(!(this instanceof FilterStream)) return new FilterStream(fn)
  ThroughStream.call(this)
  this.fn = fn
}

FilterStream.prototype = new ThroughStream()

FilterStream.prototype.write = function (data) {
  if(this.fn(data)) this.sink.write(data)
  this.paused = this.sink.paused
}

module.exports = FilterStream

},{"./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/through.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/index.js":[function(require,module,exports){
exports.asyncMap = require('./async-map')
exports.filter   = require('./filter')
exports.map      = require('./map')
exports.take     = require('./take')
exports.through  = require('./through')

},{"./async-map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/async-map.js","./filter":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/filter.js","./map":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/map.js","./take":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/take.js","./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/through.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/map.js":[function(require,module,exports){

var ThroughStream = require('./through')

function MapStream(fn) {
  ThroughStream.call(this)
  this.fn = fn
}

MapStream.prototype = new ThroughStream()

MapStream.prototype.write = function (data) {
  this.sink.write(this.fn(data))
  this.paused = this.sink.paused
}

module.exports = MapStream

},{"./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/through.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/take.js":[function(require,module,exports){
module.exports = function (fn, opts) {
  return new TakeStream(fn, opts)
}

var ThroughStream = require('./through')

function TakeStream(test, opts) {
  this.fn = test
  this._includeLast = opts && opts.last

  if('number' === typeof test) {
    var n = test
    this._includeLast = true
    this.fn = function () { return --n }
  }

  this.paused = true
  this.ended = false
  this.source = this.sink = null

}

TakeStream.prototype = ThroughStream()

TakeStream.prototype.write = function (data) {
  var test = this.fn(data)
  if(test) {
    this.sink.write(data)
    this.paused = this.sink.paused
  }
  else if(this._includeLast) {
    //abort immediately, so we don't stall waiting for the next message just to end
    this._includeLast = false
    this.sink.write(data)
    this.source.abort()
  }
  else
    this.source.abort()
}

},{"./through":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/through.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/throughs/through.js":[function(require,module,exports){
module.exports = function (op, done) {
  return new ThroughStream(op, done)
}

function noop () {}

function ThroughStream(op, done) {
  this._op = op || noop
  this._done = done || noop
  this.paused = true
  this.ended = false
  this.source = this.sink = null
}

ThroughStream.prototype.resume = function () {
  if(this.source && this.sink && !(this.paused = this.sink.paused)) this.source.resume()
}

ThroughStream.prototype.end = function (err) {
  this.ended = err || true
  this._done(err === true ? null : err)
  return this.sink.end(err)
}

ThroughStream.prototype.abort = function (err) {
  //should this check if the sink has already ended?
  this.ended = err
  return this.source.abort(err)
}

ThroughStream.prototype.write = function (data) {
  this._op(data)
  this.sink.write(data)
}

ThroughStream.prototype.pipe = require('../pipe')

//module.exports = ThroughStream

},{"../pipe":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/pipe.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/decode.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/encode.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/index.js":[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/decode.js","./encode":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/encode.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/quicktask/index.js":[function(require,module,exports){
(function (process){(function (){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function microtask() {
    if (typeof MutationObserver !== 'undefined') {
        var node_1 = document.createTextNode('');
        var queue_1 = [];
        var i_1 = 0;
        new MutationObserver(function () {
            while (queue_1.length) {
                queue_1.shift()();
            }
        }).observe(node_1, { characterData: true });
        return function (fn) {
            queue_1.push(fn);
            node_1.data = i_1 = 1 - i_1;
        };
    }
    else if (typeof process !== 'undefined') {
        return process.nextTick;
    }
    else {
        return setTimeout;
    }
}
exports.default = microtask;

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-chrome-file/index.js":[function(require,module,exports){
(function (Buffer){(function (){
const ras = require('random-access-storage')

const TYPE = {type: 'octet/stream'}
const requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem
const persistentStorage = navigator.persistentStorage || navigator.webkitPersistentStorage
const FileReader = window.FileReader
const Blob = window.Blob

createFile.DEFAULT_MAX_SIZE = Number.MAX_SAFE_INTEGER
createFile.requestQuota = requestQuota

module.exports = createFile

function requestQuota (n, force, cb) {
  if (typeof force === 'function') return requestQuota(n, true, force)
  persistentStorage.queryUsageAndQuota(function (used, quota) {
    if (quota && !force) return cb(null, quota)
    persistentStorage.requestQuota(n, function (quota) {
      cb(null, quota)
    }, cb)
  }, cb)
}

function createFile (name, opts) {
  if (!opts) opts = {}

  const maxSize = opts.maxSize || createFile.DEFAULT_MAX_SIZE
  const mutex = new Mutex()

  var fs = null
  var entry = null
  var toDestroy = null
  var readers = []
  var writers = []

  return ras({read, write, open, stat, close, destroy})

  function read (req) {
    const r = readers.pop() || new ReadRequest(readers, entry, mutex)
    r.run(req)
  }

  function write (req) {
    const w = writers.pop() || new WriteRequest(writers, entry, mutex)
    w.run(req)
  }

  function close (req) {
    readers = writers = entry = fs = null
    req.callback(null)
  }

  function stat (req) {
    entry.file(file => {
      req.callback(null, file)
    }, err => req.callback(err))
  }

  function destroy (req) {
    toDestroy.remove(ondone, onerror)

    function ondone () {
      toDestroy = null
      req.callback(null, null)
    }

    function onerror (err) {
      toDestroy = null
      req.callback(err, null)
    }
  }

  function open (req) {
    requestQuota(maxSize, false, function (err, granted) {
      if (err) return onerror(err)
      requestFileSystem(window.PERSISTENT, granted, function (res) {
        fs = res
        mkdirp(parentFolder(name), function () {
          fs.root.getFile(name, {create: true}, function (e) {
            entry = toDestroy = e
            req.callback(null)
          }, onerror)
        })
      }, onerror)
    })

    function mkdirp (name, ondone) {
      if (!name) return ondone()
      fs.root.getDirectory(name, {create: true}, ondone, function () {
        mkdirp(parentFolder(name), function () {
          fs.root.getDirectory(name, {create: true}, ondone, ondone)
        })
      })
    }

    function onerror (err) {
      fs = entry = null
      req.callback(err)
    }
  }
}

function parentFolder (path) {
  const i = path.lastIndexOf('/')
  const j = path.lastIndexOf('\\')
  const p = path.slice(0, Math.max(0, i, j))
  return /^\w:$/.test(p) ? '' : p
}

function WriteRequest (pool, entry, mutex) {
  this.pool = pool
  this.entry = entry
  this.mutex = mutex
  this.writer = null
  this.req = null
  this.locked = false
  this.truncating = false
}

WriteRequest.prototype.makeWriter = function () {
  const self = this
  this.entry.createWriter(function (writer) {
    self.writer = writer

    writer.onwriteend = function () {
      self.onwrite(null)
    }

    writer.onerror = function (err) {
      self.onwrite(err)
    }

    self.run(self.req)
  })
}

WriteRequest.prototype.onwrite = function (err) {
  const req = this.req
  this.req = null

  if (this.locked) {
    this.locked = false
    this.mutex.release()
  }

  if (this.truncating) {
    this.truncating = false
    if (!err) return this.run(req)
  }

  this.pool.push(this)
  req.callback(err, null)
}

WriteRequest.prototype.truncate = function () {
  this.truncating = true
  this.writer.truncate(this.req.offset)
}

WriteRequest.prototype.lock = function () {
  if (this.locked) return true
  this.locked = this.mutex.lock(this)
  return this.locked
}

WriteRequest.prototype.run = function (req) {
  this.entry.file(file => {
    this.req = req
    if (!this.writer || this.writer.length !== file.size) return this.makeWriter()

    const end = req.offset + req.size
    if (end > file.size && !this.lock()) return

    if (req.offset > this.writer.length) {
      if (req.offset > file.size) return this.truncate()
      return this.makeWriter()
    }

    this.writer.seek(req.offset)
    this.writer.write(new Blob([req.data], TYPE))
  }, err => req.callback(err))
}

function Mutex () {
  this.queued = null
}

Mutex.prototype.release = function () {
  const queued = this.queued
  this.queued = null
  for (var i = 0; i < queued.length; i++) {
    queued[i].run(queued[i].req)
  }
}

Mutex.prototype.lock = function (req) {
  if (this.queued) {
    this.queued.push(req)
    return false
  }
  this.queued = []
  return true
}

function ReadRequest (pool, entry, mutex) {
  this.pool = pool
  this.entry = entry
  this.mutex = mutex
  this.reader = new FileReader()
  this.req = null
  this.retry = true
  this.locked = false

  const self = this

  this.reader.onerror = function () {
    self.onread(this.error, null)
  }

  this.reader.onload = function () {
    const buf = Buffer.from(this.result)
    self.onread(null, buf)
  }
}

ReadRequest.prototype.lock = function () {
  if (this.locked) return true
  this.locked = this.mutex.lock(this)
  return this.locked
}

ReadRequest.prototype.onread = function (err, buf) {
  const req = this.req

  if (err && this.retry) {
    this.retry = false
    if (this.lock(this)) this.run(req)
    return
  }

  this.req = null
  this.pool.push(this)
  this.retry = true

  if (this.locked) {
    this.locked = false
    this.mutex.release()
  }

  req.callback(err, buf)
}

ReadRequest.prototype.run = function (req) {
  this.entry.file(file => {
    const end = req.offset + req.size
    this.req = req
    if (end > file.size) return this.onread(new Error('Could not satisfy length'), null)
    this.reader.readAsArrayBuffer(file.slice(req.offset, end))
  }, err => req.callback(err))
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","random-access-storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-storage/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb-mutable-file/lib/IndexedDB.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
const indexedDB = exports.indexedDB = window.indexedDB;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb-mutable-file/lib/random-access-idb-mutable-file.js":[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _randomAccessStorage = require("random-access-storage");

var _randomAccessStorage2 = _interopRequireDefault(_randomAccessStorage);

var _IndexedDB = require("./IndexedDB");

var _buffer = require("buffer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const promise = (request) => new Promise((resolve, reject) => {
  request.onsuccess = () => resolve(request.result);
  request.onerror = () => reject(request.error);
});

class RandomAccessIDBFileVolume {
  constructor(db, name, version, storeName, options) {
    this.db = db;
    this.name = name;
    this.version = version;
    this.storeName = storeName;
    this.options = options;
  }
  store() {
    const { db, storeName } = this;
    const transaction = db.transaction([storeName], "readwrite");
    return transaction.objectStore(storeName);
  }
  async delete(url) {
    return await promise(this.store().delete(url));
  }
  async save(url, file) {
    return await promise(this.store().put(file, url));
  }
  async open(url, mode) {
    const file = await promise(this.store().get(url));
    if (file) {
      return file;
    } else if (mode === "readwrite") {
      const file = await promise(this.db.createMutableFile(url, "binary/random"));
      await this.save(url, file);
      return file;
    } else {
      throw new RangeError(`File ${url} does not exist`);
    }
  }

  mount(file, options) {
    return new RandomAccessProvider(this, `/${file}`, options);
  }
}

class RandomAccessProvider extends _randomAccessStorage2.default {

  static async mount(options = {}) {
    if (!self.IDBMutableFile) {
      throw Error(`Runtime does not supports IDBMutableFile https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile`);
    } else {
      const name = options.name || `RandomAccess`;
      const version = options.version || 1.0;
      const storeName = options.storeName || `IDBMutableFile`;

      const request = _IndexedDB.indexedDB.open(name, version);
      request.onupgradeneeded = () => {
        const db = request.result;
        if (!db.objectStoreNames.contains(storeName)) {
          db.createObjectStore(storeName);
        }
      };
      const db = await promise(request);
      const volume = new RandomAccessIDBFileVolume(db, name, version, storeName, options);
      return (path, options) => volume.mount(path, options);
    }
  }
  static async open(self, request) {
    const { options } = self;
    const mode = request.preferReadonly ? "readonly" : "readwrite";
    self.debug && console.log(`>> open ${self.url} ${mode}`);

    if (!self.file || self.mode !== mode && mode === "readwrite") {
      self.mode = mode;
      self.file = await self.volume.open(self.url, mode);
    }

    if (!(mode === "readonly" || !options.truncate)) {
      const file = self.activate();
      await promise(file.truncate(options.size || 0));
    }

    self.debug && console.log(`<< open ${self.url} ${mode}`);
  }
  static async read(self, { data, offset, size }) {
    self.debug && console.log(`>> read ${self.url} <${offset}, ${size}>`);
    const buffer = data || _buffer.Buffer.allocUnsafe(size);
    if (size === 0) {
      return buffer;
    }

    const file = self.activate();
    file.location = offset;
    const chunk = await promise(file.readAsArrayBuffer(size));
    if (chunk.byteLength !== size) {
      throw new Error("Could not satisfy length");
    }

    _buffer.Buffer.from(chunk).copy(buffer);
    self.debug && console.log(`<< read ${self.url} <${offset}, ${size}>`, buffer);
    return buffer;
  }
  static async write(self, { data, offset, size }) {
    self.debug && console.log(`>> write ${self.url} <${offset}, ${size}>`, data);
    const { byteLength, byteOffset } = data;
    const chunk = byteLength === size ? data : data.slice(0, size);

    const file = self.activate();
    file.location = offset;
    const wrote = await promise(file.write(chunk));

    self.debug && console.log(`<< write ${self.url} <${offset}, ${size}>`);

    return wrote;
  }
  static async delete(self, { offset, size }) {
    self.debug && console.log(`>> delete ${self.url} <${offset}, ${size}>`);
    const stat = await this.stat(self);
    if (offset + size >= stat.size) {
      const file = self.activate();
      await promise(file.truncate(offset));
    }

    self.debug && console.log(`<< delete ${self.url} <${offset}, ${size}>`);
  }
  static async stat(self) {
    self.debug && console.log(`>> stat ${self.url}`);
    const file = self.activate();
    const stat = await promise(file.getMetadata());
    self.debug && console.log(`<< stat {size:${stat.size}} ${self.url} `);

    return stat;
  }
  static async close(self) {
    self.debug && console.log(`>> close ${self.url}`);
    const { lockedFile } = self;
    if (lockedFile && lockedFile.active) {
      await promise(lockedFile.flush());
    }
    self.lockedFile = null;
    self.file = null;
    self.debug && console.log(`<< close ${self.url}`);
  }
  static async destroy(self) {
    self.debug && console.log(`>> destroy ${self.url}`);
    await self.volume.delete(self.url);
    self.debug && console.log(`<< destroy ${self.url}`);
  }

  static async awake(self) {
    const { workQueue } = self;
    self.isIdle = false;
    let index = 0;
    while (index < workQueue.length) {
      const request = workQueue[index++];
      await this.perform(self, request);
    }
    workQueue.length = 0;
    self.isIdle = true;
  }
  static schedule(self, request) {
    self.workQueue.push(request);
    if (self.isIdle) {
      this.awake(self);
    }
  }
  static async perform(self, request) {
    try {
      switch (request.type) {
        case RequestType.open:
          {
            return request.callback(null, (await this.open(self, request)));
          }
        case RequestType.read:
          {
            return request.callback(null, (await this.read(self, request)));
          }
        case RequestType.write:
          {
            return request.callback(null, (await this.write(self, request)));
          }
        case RequestType.delete:
          {
            return request.callback(null, (await this.delete(self, request)));
          }
        case RequestType.stat:
          {
            return request.callback(null, (await this.stat(self)));
          }
        case RequestType.close:
          {
            return request.callback(null, (await this.close(self)));
          }
        case RequestType.destroy:
          {
            return request.callback(null, (await this.destroy(self)));
          }
      }
    } catch (error) {
      request.callback(error);
    }
  }
  _open(request) {
    RandomAccessProvider.schedule(this, request);
  }
  _openReadonly(request) {
    RandomAccessProvider.schedule(this, request);
  }
  _write(request) {
    RandomAccessProvider.schedule(this, request);
  }
  _read(request) {
    RandomAccessProvider.schedule(this, request);
  }
  _del(request) {
    RandomAccessProvider.schedule(this, request);
  }
  _stat(request) {
    RandomAccessProvider.perform(this, request);
  }
  _close(request) {
    RandomAccessProvider.schedule(this, request);
  }
  _destroy(request) {
    RandomAccessProvider.schedule(this, request);
  }
  constructor(volume, url, options = {}) {
    super();
    this.volume = volume;
    this.url = url;
    this.options = options;
    this.mode = "readonly";
    this.file = null;
    this.lockedFile = null;

    this.workQueue = [];
    this.isIdle = true;
    this.debug = !!volume.options.debug;
  }
  activate() {
    const { lockedFile, file, mode } = this;
    if (lockedFile && lockedFile.active) {
      return lockedFile;
    } else if (file) {
      const lockedFile = file.open(mode);
      this.lockedFile = lockedFile;
      return lockedFile;
    } else {
      throw new RangeError(`Unable to activate file, likely provider was destroyed`);
    }
  }
}

const RequestType = {
  open: 0,
  read: 1,
  write: 2,
  delete: 3,
  stat: 4,
  close: 5,
  destroy: 6
};

exports.default = RandomAccessProvider;
module.exports = exports["default"];

},{"./IndexedDB":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb-mutable-file/lib/IndexedDB.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","random-access-storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb-mutable-file/node_modules/random-access-storage/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb-mutable-file/node_modules/random-access-storage/index.js":[function(require,module,exports){
(function (process){(function (){
var events = require('events')
var inherits = require('inherits')

var NOT_READABLE = defaultImpl(new Error('Not readable'))
var NOT_WRITABLE = defaultImpl(new Error('Not writable'))
var NOT_DELETABLE = defaultImpl(new Error('Not deletable'))
var NOT_STATABLE = defaultImpl(new Error('Not statable'))
var NO_OPEN_READABLE = defaultImpl(new Error('No readonly open'))

module.exports = RandomAccess

function RandomAccess (opts) {
  if (!(this instanceof RandomAccess)) return new RandomAccess(opts)
  events.EventEmitter.call(this)

  this._queued = []
  this._pending = 0
  this._needsOpen = true

  this.opened = false
  this.closed = false
  this.destroyed = false

  if (opts) {
    if (opts.openReadonly) this._openReadonly = opts.openReadonly
    if (opts.open) this._open = opts.open
    if (opts.read) this._read = opts.read
    if (opts.write) this._write = opts.write
    if (opts.del) this._del = opts.del
    if (opts.stat) this._stat = opts.stat
    if (opts.close) this._close = opts.close
    if (opts.destroy) this._destroy = opts.destroy
  }

  this.preferReadonly = this._openReadonly !== NO_OPEN_READABLE
  this.readable = this._read !== NOT_READABLE
  this.writable = this._write !== NOT_WRITABLE
  this.deletable = this._del !== NOT_DELETABLE
  this.statable = this._stat !== NOT_STATABLE
}

inherits(RandomAccess, events.EventEmitter)

RandomAccess.prototype.open = function (cb) {
  if (!cb) cb = noop
  if (this.opened && !this._needsOpen) return process.nextTick(cb, null)
  queueAndRun(this, new Request(this, 0, 0, 0, null, cb))
}

RandomAccess.prototype._open = defaultImpl(null)
RandomAccess.prototype._openReadonly = NO_OPEN_READABLE

RandomAccess.prototype.read = function (offset, size, cb) {
  this.run(new Request(this, 1, offset, size, null, cb))
}

RandomAccess.prototype._read = NOT_READABLE

RandomAccess.prototype.write = function (offset, data, cb) {
  if (!cb) cb = noop
  openWritable(this)
  this.run(new Request(this, 2, offset, data.length, data, cb))
}

RandomAccess.prototype._write = NOT_WRITABLE

RandomAccess.prototype.del = function (offset, size, cb) {
  if (!cb) cb = noop
  openWritable(this)
  this.run(new Request(this, 3, offset, size, null, cb))
}

RandomAccess.prototype._del = NOT_DELETABLE

RandomAccess.prototype.stat = function (cb) {
  this.run(new Request(this, 4, 0, 0, null, cb))
}

RandomAccess.prototype._stat = NOT_STATABLE

RandomAccess.prototype.close = function (cb) {
  if (!cb) cb = noop
  if (this.closed) return process.nextTick(cb, null)
  queueAndRun(this, new Request(this, 5, 0, 0, null, cb))
}

RandomAccess.prototype._close = defaultImpl(null)

RandomAccess.prototype.destroy = function (cb) {
  if (!cb) cb = noop
  if (!this.closed) this.close(noop)
  queueAndRun(this, new Request(this, 6, 0, 0, null, cb))
}

RandomAccess.prototype._destroy = defaultImpl(null)

RandomAccess.prototype.run = function (req) {
  if (this._needsOpen) this.open(noop)
  if (this._queued.length) this._queued.push(req)
  else req._run()
}

function noop () {}

function Request (self, type, offset, size, data, cb) {
  this.type = type
  this.offset = offset
  this.data = data
  this.size = size
  this.storage = self

  this._sync = false
  this._callback = cb
  this._openError = null
}

Request.prototype._maybeOpenError = function (err) {
  if (this.type !== 0) return
  var queued = this.storage._queued
  for (var i = 0; i < queued.length; i++) queued[i]._openError = err
}

Request.prototype._unqueue = function (err) {
  var ra = this.storage
  var queued = ra._queued

  if (!err) {
    switch (this.type) {
      case 0:
        if (!ra.opened) {
          ra.opened = true
          ra.emit('open')
        }
        break

      case 5:
        if (!ra.closed) {
          ra.closed = true
          ra.emit('close')
        }
        break

      case 6:
        if (!ra.destroyed) {
          ra.destroyed = true
          ra.emit('destroy')
        }
        break
    }
  } else {
    this._maybeOpenError(err)
  }

  if (queued.length && queued[0] === this) queued.shift()
  if (!--ra._pending && queued.length) queued[0]._run()
}

Request.prototype.callback = function (err, val) {
  if (this._sync) return nextTick(this, err, val)
  this._unqueue(err)
  this._callback(err, val)
}

Request.prototype._openAndNotClosed = function () {
  var ra = this.storage
  if (ra.opened && !ra.closed) return true
  if (!ra.opened) nextTick(this, this._openError || new Error('Not opened'))
  else if (ra.closed) nextTick(this, new Error('Closed'))
  return false
}

Request.prototype._open = function () {
  var ra = this.storage

  if (ra.opened && !ra._needsOpen) return nextTick(this, null)
  if (ra.closed) return nextTick(this, new Error('Closed'))

  ra._needsOpen = false
  if (ra.preferReadonly) ra._openReadonly(this)
  else ra._open(this)
}

Request.prototype._run = function () {
  var ra = this.storage
  ra._pending++

  this._sync = true

  switch (this.type) {
    case 0:
      this._open()
      break

    case 1:
      if (this._openAndNotClosed()) ra._read(this)
      break

    case 2:
      if (this._openAndNotClosed()) ra._write(this)
      break

    case 3:
      if (this._openAndNotClosed()) ra._del(this)
      break

    case 4:
      if (this._openAndNotClosed()) ra._stat(this)
      break

    case 5:
      if (ra.closed || !ra.opened) nextTick(this, null)
      else ra._close(this)
      break

    case 6:
      if (ra.destroyed) nextTick(this, null)
      else ra._destroy(this)
      break
  }

  this._sync = false
}

function queueAndRun (self, req) {
  self._queued.push(req)
  if (!self._pending) req._run()
}

function openWritable (self) {
  if (self.preferReadonly) {
    self._needsOpen = true
    self.preferReadonly = false
  }
}

function defaultImpl (err) {
  return overridable

  function overridable (req) {
    nextTick(req, err)
  }
}

function nextTick (req, err, val) {
  process.nextTick(nextTickCallback, req, err, val)
}

function nextTickCallback (req, err, val) {
  req.callback(err, val)
}

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var RandomAccess = require('random-access-storage')
var inherits = require('inherits')
var nextTick = require('next-tick')
var once = require('once')
var blocks = require('./lib/blocks.js')
var bufferFrom = require('buffer-from')
var bufferAlloc = require('buffer-alloc')

var DELIM = '\0'
var win = typeof window !== 'undefined' ? window
  : (typeof self !== 'undefined' ? self : {})

module.exports = function (dbname, xopts) {
  if (!xopts) xopts = {}
  var idb = xopts.idb || (typeof win !== 'undefined'
    ? win.indexedDB || win.mozIndexedDB
      || win.webkitIndexedDB || win.msIndexedDB
    : null)
  if (!idb) throw new Error('indexedDB not present and not given')
  var db = null, dbqueue = []
  if (typeof idb.open === 'function') {
    var req = idb.open(dbname)
    req.addEventListener('upgradeneeded', function () {
      db = req.result
      db.createObjectStore('data')
    })
    req.addEventListener('success', function () {
      db = req.result
      dbqueue.forEach(function (cb) { cb(db) })
      dbqueue = null
    })
  } else {
    db = idb
  }
  return function (name, opts) {
    if (typeof name === 'object') {
      opts = name
      name = opts.name
    }

    if (!opts) opts = {}
    opts.name = name

    return new Store(Object.assign({ db: getdb }, xopts, opts))
  }
  function getdb (cb) {
    if (db) nextTick(function () { cb(db) })
    else dbqueue.push(cb)
  }
}

function Store (opts) {
  if (!(this instanceof Store)) return new Store(opts)
  RandomAccess.call(this)
  if (!opts) opts = {}
  if (typeof opts === 'string') opts = { name: opts }
  this.size = opts.size || 4096
  this.name = opts.name
  this.length = opts.length || 0
  this._getdb = opts.db
}
inherits(Store, RandomAccess)

Store.prototype._blocks = function (i, j) {
  return blocks(this.size, i, j)
}

Store.prototype._read = function (req) {
  var self = this
  var buffers = []
  self._store('readonly', function (err, store) {
    if ((self.length || 0) < req.offset+req.size) {
      return req.callback(new Error('Could not satisfy length'))
    }
    if (err) return req.callback(err)
    var offsets = self._blocks(req.offset, req.offset+req.size)
    var pending = offsets.length + 1
    var firstBlock = offsets.length > 0 ? offsets[0].block : 0
    var j = 0
    for (var i = 0; i < offsets.length; i++) (function (o) {
      var key = self.name + DELIM + o.block
      backify(store.get(key), function (err, ev) {
        if (err) return req.callback(err)
        buffers[o.block-firstBlock] = ev.target.result
          ? bufferFrom(ev.target.result.subarray(o.start,o.end))
          : bufferAlloc(o.end-o.start)
        if (--pending === 0) req.callback(null, Buffer.concat(buffers))
      })
    })(offsets[i])
    if (--pending === 0) req.callback(null, Buffer.concat(buffers))
  })
}

Store.prototype._write = function (req) {
  var self = this
  self._store('readwrite', function (err, store) {
    if (err) return req.callback(err)
    var offsets = self._blocks(req.offset, req.offset + req.data.length)
    var pending = 1
    var buffers = {}
    for (var i = 0; i < offsets.length; i++) (function (o,i) {
      if (o.end-o.start === self.size) return
      pending++
      var key = self.name + DELIM + o.block
      backify(store.get(key), function (err, ev) {
        if (err) return req.callback(err)
        buffers[i] = bufferFrom(ev.target.result || bufferAlloc(self.size))
        if (--pending === 0) write(store, offsets, buffers)
      })
    })(offsets[i],i)
    if (--pending === 0) write(store, offsets, buffers)
  })
  function write (store, offsets, buffers) {
    for (var i = 0, j = 0; i < offsets.length; i++) {
      var o = offsets[i]
      var len = o.end - o.start
      if (len === self.size) {
        block = bufferFrom(req.data.slice(j, j+len))
      } else {
        block = buffers[i]
        req.data.copy(block, o.start, j, j+len)
      }
      store.put(block,self.name + DELIM + o.block)
      j += len
    }
    var length = Math.max(self.length || 0, req.offset + req.data.length)
    store.put(length, self.name + DELIM + 'length')
    store.transaction.addEventListener('complete', function () {
      self.length = length
      req.callback(null)
    })
    store.transaction.addEventListener('error', function (err) {
      req.callback(err)
    })
  }
}

Store.prototype._store = function (mode, cb) {
  cb = once(cb)
  var self = this
  self._getdb(function (db) {
    var tx = db.transaction(['data'], mode)
    var store = tx.objectStore('data')
    tx.addEventListener('error', cb)
    cb(null, store)
  })
}

Store.prototype._open = function (req) {
  var self = this
  this._getdb(function(db) {
    self._store('readonly', function (err, store) {
      backify(store.get(self.name + DELIM + "length"), function(err, ev) {
        self.length = ev.target.result || 0
        req.callback(null)
      })
    })
  })
}

Store.prototype._close = function (req) {
  this._getdb(function (db) {
    db.close()
    req.callback()
  })
}

Store.prototype._stat = function (req) {
  var self = this
  nextTick(function () {
    req.callback(null, { size: self.length })
  })
}

function backify (r, cb) {
  r.addEventListener('success', function (ev) { cb(null, ev) })
  r.addEventListener('error', cb)
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./lib/blocks.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb/lib/blocks.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","buffer-alloc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-alloc/index.js","buffer-from":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/buffer-from/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","next-tick":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/next-tick/index.js","once":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/once/once.js","random-access-storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-storage/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb/lib/blocks.js":[function(require,module,exports){
module.exports = function (size, start, end) {
  var result = []
  for (var n = Math.floor(start/size)*size; n < end; n += size) {
    result.push({
      block: Math.floor(n/size),
      start: Math.max(n,start) % size,
      end: Math.min(n+size,end) % size || size
    })
  }
  return result
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-memory/index.js":[function(require,module,exports){
(function (process,Buffer){(function (){
const RandomAccess = require('random-access-storage')
const isOptions = require('is-options')
const inherits = require('inherits')

const DEFAULT_PAGE_SIZE = 1024 * 1024

module.exports = RAM

function RAM (opts) {
  if (!(this instanceof RAM)) return new RAM(opts)
  if (typeof opts === 'number') opts = {length: opts}
  if (!opts) opts = {}

  RandomAccess.call(this)

  if (Buffer.isBuffer(opts)) {
    opts = {length: opts.length, buffer: opts}
  }
  if (!isOptions(opts)) opts = {}

  this.length = opts.length || 0
  this.pageSize = opts.length || opts.pageSize || DEFAULT_PAGE_SIZE
  this.buffers = []

  if (opts.buffer) this.buffers.push(opts.buffer)
}

inherits(RAM, RandomAccess)

RAM.prototype._stat = function (req) {
  callback(req, null, {size: this.length})
}

RAM.prototype._write = function (req) {
  var i = Math.floor(req.offset / this.pageSize)
  var rel = req.offset - i * this.pageSize
  var start = 0

  const len = req.offset + req.size
  if (len > this.length) this.length = len

  while (start < req.size) {
    const page = this._page(i++, true)
    const free = this.pageSize - rel
    const end = free < (req.size - start)
      ? start + free
      : req.size

    req.data.copy(page, rel, start, end)
    start = end
    rel = 0
  }

  callback(req, null, null)
}

RAM.prototype._read = function (req) {
  var i = Math.floor(req.offset / this.pageSize)
  var rel = req.offset - i * this.pageSize
  var start = 0

  if (req.offset + req.size > this.length) {
    return callback(req, new Error('Could not satisfy length'), null)
  }

  const data = Buffer.alloc(req.size)

  while (start < req.size) {
    const page = this._page(i++, false)
    const avail = this.pageSize - rel
    const wanted = req.size - start
    const len = avail < wanted ? avail : wanted

    if (page) page.copy(data, start, rel, rel + len)
    start += len
    rel = 0
  }

  callback(req, null, data)
}

RAM.prototype._del = function (req) {
  var i = Math.floor(req.offset / this.pageSize)
  var rel = req.offset - i * this.pageSize
  var start = 0

  if (req.offset + req.size > this.length) {
    req.size = Math.max(0, this.length - req.offset)
  }

  while (start < req.size) {
    if (rel === 0 && req.size - start >= this.pageSize) {
      this.buffers[i++] = undefined
    }

    rel = 0
    start += this.pageSize - rel
  }

  if (req.offset + req.size >= this.length) {
    this.length = req.offset
  }

  callback(req, null, null)
}

RAM.prototype._destroy = function (req) {
  this._buffers = []
  this.length = 0
  callback(req, null, null)
}

RAM.prototype._page = function (i, upsert) {
  var page = this.buffers[i]
  if (page || !upsert) return page
  page = this.buffers[i] = Buffer.alloc(this.pageSize)
  return page
}

RAM.prototype.toBuffer = function () {
  const buf = Buffer.alloc(this.length)

  for (var i = 0; i < this.buffers.length; i++) {
    if (this.buffers[i]) this.buffers[i].copy(buf, i * this.pageSize)
  }

  return buf
}

function callback (req, err, data) {
  process.nextTick(callbackNT, req, err, data)
}

function callbackNT (req, err, data) {
  req.callback(err, data)
}

}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","is-options":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-options/index.js","random-access-storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-storage/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-storage/index.js":[function(require,module,exports){
(function (process){(function (){
var events = require('events')
var inherits = require('inherits')

var NOT_READABLE = defaultImpl(new Error('Not readable'))
var NOT_WRITABLE = defaultImpl(new Error('Not writable'))
var NOT_DELETABLE = defaultImpl(new Error('Not deletable'))
var NOT_STATABLE = defaultImpl(new Error('Not statable'))
var NO_OPEN_READABLE = defaultImpl(new Error('No readonly open'))

// NON_BLOCKING_OPS
var READ_OP = 0
var WRITE_OP = 1
var DEL_OP = 2
var STAT_OP = 3

// BLOCKING_OPS
var OPEN_OP = 4
var CLOSE_OP = 5
var DESTROY_OP = 6

module.exports = RandomAccess

function RandomAccess (opts) {
  if (!(this instanceof RandomAccess)) return new RandomAccess(opts)
  events.EventEmitter.call(this)

  this._queued = []
  this._pending = 0
  this._needsOpen = true

  this.opened = false
  this.closed = false
  this.destroyed = false

  if (opts) {
    if (opts.openReadonly) this._openReadonly = opts.openReadonly
    if (opts.open) this._open = opts.open
    if (opts.read) this._read = opts.read
    if (opts.write) this._write = opts.write
    if (opts.del) this._del = opts.del
    if (opts.stat) this._stat = opts.stat
    if (opts.close) this._close = opts.close
    if (opts.destroy) this._destroy = opts.destroy
  }

  this.preferReadonly = this._openReadonly !== NO_OPEN_READABLE
  this.readable = this._read !== NOT_READABLE
  this.writable = this._write !== NOT_WRITABLE
  this.deletable = this._del !== NOT_DELETABLE
  this.statable = this._stat !== NOT_STATABLE
}

inherits(RandomAccess, events.EventEmitter)

RandomAccess.prototype.read = function (offset, size, cb) {
  this.run(new Request(this, READ_OP, offset, size, null, cb))
}

RandomAccess.prototype._read = NOT_READABLE

RandomAccess.prototype.write = function (offset, data, cb) {
  if (!cb) cb = noop
  openWritable(this)
  this.run(new Request(this, WRITE_OP, offset, data.length, data, cb))
}

RandomAccess.prototype._write = NOT_WRITABLE

RandomAccess.prototype.del = function (offset, size, cb) {
  if (!cb) cb = noop
  openWritable(this)
  this.run(new Request(this, DEL_OP, offset, size, null, cb))
}

RandomAccess.prototype._del = NOT_DELETABLE

RandomAccess.prototype.stat = function (cb) {
  this.run(new Request(this, STAT_OP, 0, 0, null, cb))
}

RandomAccess.prototype._stat = NOT_STATABLE

RandomAccess.prototype.open = function (cb) {
  if (!cb) cb = noop
  if (this.opened && !this._needsOpen) return process.nextTick(cb, null)
  queueAndRun(this, new Request(this, OPEN_OP, 0, 0, null, cb))
}

RandomAccess.prototype._open = defaultImpl(null)
RandomAccess.prototype._openReadonly = NO_OPEN_READABLE

RandomAccess.prototype.close = function (cb) {
  if (!cb) cb = noop
  if (this.closed) return process.nextTick(cb, null)
  queueAndRun(this, new Request(this, CLOSE_OP, 0, 0, null, cb))
}

RandomAccess.prototype._close = defaultImpl(null)

RandomAccess.prototype.destroy = function (cb) {
  if (!cb) cb = noop
  if (!this.closed) this.close(noop)
  queueAndRun(this, new Request(this, DESTROY_OP, 0, 0, null, cb))
}

RandomAccess.prototype._destroy = defaultImpl(null)

RandomAccess.prototype.run = function (req) {
  if (this._needsOpen) this.open(noop)
  if (this._queued.length) this._queued.push(req)
  else req._run()
}

function noop () {}

function Request (self, type, offset, size, data, cb) {
  this.type = type
  this.offset = offset
  this.data = data
  this.size = size
  this.storage = self

  this._sync = false
  this._callback = cb
  this._openError = null
}

Request.prototype._maybeOpenError = function (err) {
  if (this.type !== OPEN_OP) return
  var queued = this.storage._queued
  for (var i = 0; i < queued.length; i++) queued[i]._openError = err
}

Request.prototype._unqueue = function (err) {
  var ra = this.storage
  var queued = ra._queued

  if (!err) {
    switch (this.type) {
      case OPEN_OP:
        if (!ra.opened) {
          ra.opened = true
          ra.emit('open')
        }
        break

      case CLOSE_OP:
        if (!ra.closed) {
          ra.closed = true
          ra.emit('close')
        }
        break

      case DESTROY_OP:
        if (!ra.destroyed) {
          ra.destroyed = true
          ra.emit('destroy')
        }
        break
    }
  } else {
    this._maybeOpenError(err)
  }

  if (queued.length && queued[0] === this) queued.shift()

  if (!--ra._pending) drainQueue(ra)
}

Request.prototype.callback = function (err, val) {
  if (this._sync) return nextTick(this, err, val)
  this._unqueue(err)
  this._callback(err, val)
}

Request.prototype._openAndNotClosed = function () {
  var ra = this.storage
  if (ra.opened && !ra.closed) return true
  if (!ra.opened) nextTick(this, this._openError || new Error('Not opened'))
  else if (ra.closed) nextTick(this, new Error('Closed'))
  return false
}

Request.prototype._open = function () {
  var ra = this.storage

  if (ra.opened && !ra._needsOpen) return nextTick(this, null)
  if (ra.closed) return nextTick(this, new Error('Closed'))

  ra._needsOpen = false
  if (ra.preferReadonly) ra._openReadonly(this)
  else ra._open(this)
}

Request.prototype._run = function () {
  var ra = this.storage
  ra._pending++

  this._sync = true

  switch (this.type) {
    case READ_OP:
      if (this._openAndNotClosed()) ra._read(this)
      break

    case WRITE_OP:
      if (this._openAndNotClosed()) ra._write(this)
      break

    case DEL_OP:
      if (this._openAndNotClosed()) ra._del(this)
      break

    case STAT_OP:
      if (this._openAndNotClosed()) ra._stat(this)
      break

    case OPEN_OP:
      this._open()
      break

    case CLOSE_OP:
      if (ra.closed || !ra.opened) nextTick(this, null)
      else ra._close(this)
      break

    case DESTROY_OP:
      if (ra.destroyed) nextTick(this, null)
      else ra._destroy(this)
      break
  }

  this._sync = false
}

function queueAndRun (self, req) {
  self._queued.push(req)
  if (!self._pending) req._run()
}

function drainQueue (self) {
  var queued = self._queued

  while (queued.length > 0) {
    var blocking = queued[0].type > 3
    if (!blocking || !self._pending) queued[0]._run()
    if (blocking) return
    queued.shift()
  }
}

function openWritable (self) {
  if (self.preferReadonly) {
    self._needsOpen = true
    self.preferReadonly = false
  }
}

function defaultImpl (err) {
  return overridable

  function overridable (req) {
    nextTick(req, err)
  }
}

function nextTick (req, err, val) {
  process.nextTick(nextTickCallback, req, err, val)
}

function nextTickCallback (req, err, val) {
  req.callback(err, val)
}

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-web/index.js":[function(require,module,exports){
/* global self */
const global = (typeof window !== 'undefined') ? window : self

const requestFileSystem = global.requestFileSystem || global.webkitRequestFileSystem
const mutableFile = global.IDBMutableFile
const idb = global.indexedDB

const DEFAULT_DB_NAME = 'random-access-web'

let storage = () => require('random-access-memory')

if (requestFileSystem) {
  storage = (options) => {
    const RACF = require('random-access-chrome-file')
    if ((typeof options === 'object') && options.maxSize) {
      RACF.DEFAULT_MAX_SIZE = options.maxSize
    }

    return RACF
  }
} else if (mutableFile) {
  storage = (options = {}) => {
    if (typeof options === 'string') options = { name: options }
    return require('./mutable-file-wrapper.js')(options)
  }
} else if (idb) {
  storage = (options = {}) => {
    if (typeof options === 'string') options = { name: options }
    const name = options.name || DEFAULT_DB_NAME
    return require('random-access-idb')(name, options)
  }
}

module.exports = storage

},{"./mutable-file-wrapper.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-web/mutable-file-wrapper.js","random-access-chrome-file":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-chrome-file/index.js","random-access-idb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb/index.js","random-access-memory":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-memory/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-web/mutable-file-wrapper.js":[function(require,module,exports){

module.exports = function mutableStorage (options) {
  const randomAccess = require('random-access-storage')
  const mutableAccess = require('random-access-idb-mutable-file')

  let mounted = null
  let loading = null

  function doMount () {
    return mutableAccess.mount(options).then((requestFile) => {
      mounted = requestFile
      loading = null
    })
  }

  return (name) => {
    let file = null

    return randomAccess({
      open: function (req) {
        if (!mounted && !loading) {
          loading = doMount()
        }
        if(loading) {
          loading.then(() => {
            this._open(req)
          }, (err) => {
            req.callback(err)
          })
          return
        }

        file = mounted(name)

        req.callback()
      },
      write: function (req) {
        file.write(req.offset, req.data, function(err, data) {
          req.callback(err, data)
        })
      },
      read: function (req) {
        file.read(req.offset, req.size,  function(err, data) {
          req.callback(err, data)
        })
      },
      del: function (req) {
        file.del(req.offset, req.size,  function(err, data) {
          req.callback(err, data)
        })
      },
      stat: function (req) {
        file.stat( function(err, data) {
          req.callback(err, data)
        })
      },
      close: function (req) {
        file.close( function(err, data) {
          req.callback(err, data)
        })
      },
      destroy: function (req) {
        file.destroy( function(err, data) {
          req.callback(err, data)
        })
      }
    })
  }
}

},{"random-access-idb-mutable-file":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb-mutable-file/lib/random-access-idb-mutable-file.js","random-access-storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-storage/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randombytes/browser.js":[function(require,module,exports){
(function (process,global){(function (){
'use strict'

// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

  var bytes = Buffer.allocUnsafe(size)

  if (size > 0) {  // getRandomValues fails on IE if size == 0
    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
      for (var generated = 0; generated < size; generated += MAX_BYTES) {
        // buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
      }
    } else {
      crypto.getRandomValues(bytes)
    }
  }

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randomfill/browser.js":[function(require,module,exports){
(function (process,global){(function (){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = require('safe-buffer')
var randombytes = require('randombytes')
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","randombytes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/randombytes/browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/relative-url/index.js":[function(require,module,exports){

//normalize a ws url.
var URL = require('url')
module.exports = function (url, location, protocolMap, defaultProtocol) {
  protocolMap = protocolMap ||{}
  /*

  https://nodejs.org/dist/latest-v6.x/docs/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost

  I didn't know this, but url.parse takes a 3rd
  argument which interprets "//foo.com" as the hostname,
  but without the protocol. by default, // is interpreted
  as the path.

  that lets us do what the wsurl module does.
  https://www.npmjs.com/package/wsurl

  but most of the time, I want to write js
  that will work on localhost, and will work
  on a server...

  so I want to just do createWebSocket('/')
  and get "ws://mydomain.com/"

  */

  var url = URL.parse(url, false, true)

  var proto
  if(url.protocol) proto = url.protocol
  else {
    proto = location.protocol ? location.protocol.replace(/:$/,'') : 'http'
    proto = ((protocolMap)[proto] || defaultProtocol || proto) + ':'
  }

  //handle quirk in url package
  if(url.host && url.host[0] === ':')
    url.host = null

  //useful for websockets
  if(url.hostname) {
    return URL.format({
      protocol: proto,
      slashes: true,
      hostname: url.hostname,
      port: url.port,
      pathname: url.pathname,
      search: url.search
    })
  }
  else url.host = location.host

  //included for completeness. would you want to do this?
  if(url.port) {
    return URL.format({
      protocol: proto,
      slashes: true,
      host: location.hostname + ':' + url.port,
      port: url.port,
      pathname: url.pathname,
      search: url.search
    })
  }

  //definately useful for websockets
  if(url.pathname) {
    return URL.format({
      protocol: proto,
      slashes: true,
      host: url.host,
      pathname: url.pathname,
      search: url.search
    })
  }
  else
    url.pathname = location.pathname

  //included for completeness. would you want to do this?
  if(url.search) {
    return URL.format({
      protocol: proto,
      slashes: true,
      host: url.host,
      pathname: url.pathname,
      search: url.search
    })
  }
  else url.search = location.search

  return url.format(url)
}






},{"url":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/url/url.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ripemd160/index.js":[function(require,module,exports){
'use strict'
var Buffer = require('buffer').Buffer
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","hash-base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hash-base/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js":[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safer-buffer/safer.js":[function(require,module,exports){
(function (process){(function (){
/* eslint-disable node/no-deprecated-api */

'use strict'

var buffer = require('buffer')
var Buffer = buffer.Buffer

var safer = {}

var key

for (key in buffer) {
  if (!buffer.hasOwnProperty(key)) continue
  if (key === 'SlowBuffer' || key === 'Buffer') continue
  safer[key] = buffer[key]
}

var Safer = safer.Buffer = {}
for (key in Buffer) {
  if (!Buffer.hasOwnProperty(key)) continue
  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue
  Safer[key] = Buffer[key]
}

safer.Buffer.prototype = Buffer.prototype

if (!Safer.from || Safer.from === Uint8Array.from) {
  Safer.from = function (value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)
    }
    if (value && typeof value.length === 'undefined') {
      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)
    }
    return Buffer(value, encodingOrOffset, length)
  }
}

if (!Safer.alloc) {
  Safer.alloc = function (size, fill, encoding) {
    if (typeof size !== 'number') {
      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)
    }
    if (size < 0 || size >= 2 * (1 << 30)) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"')
    }
    var buf = Buffer(size)
    if (!fill || fill.length === 0) {
      buf.fill(0)
    } else if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
    return buf
  }
}

if (!safer.kStringMaxLength) {
  try {
    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength
  } catch (e) {
    // we can't determine kStringMaxLength in environments where process.binding
    // is unsupported, so let's not set it
  }
}

if (!safer.constants) {
  safer.constants = {
    MAX_LENGTH: safer.kMaxLength
  }
  if (safer.kStringMaxLength) {
    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength
  }
}

module.exports = safer

}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sanitize-filename/index.js":[function(require,module,exports){
/*jshint node:true*/
'use strict';

/**
 * Replaces characters in strings that are illegal/unsafe for filenames.
 * Unsafe characters are either removed or replaced by a substitute set
 * in the optional `options` object.
 *
 * Illegal Characters on Various Operating Systems
 * / ? < > \ : * | "
 * https://kb.acronis.com/content/39790
 *
 * Unicode Control codes
 * C0 0x00-0x1f & C1 (0x80-0x9f)
 * http://en.wikipedia.org/wiki/C0_and_C1_control_codes
 *
 * Reserved filenames on Unix-based systems (".", "..")
 * Reserved filenames in Windows ("CON", "PRN", "AUX", "NUL", "COM1",
 * "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8", "COM9",
 * "LPT1", "LPT2", "LPT3", "LPT4", "LPT5", "LPT6", "LPT7", "LPT8", and
 * "LPT9") case-insesitively and with or without filename extensions.
 *
 * Capped at 255 characters in length.
 * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs
 *
 * @param  {String} input   Original filename
 * @param  {Object} options {replacement: String | Function }
 * @return {String}         Sanitized filename
 */

var truncate = require("truncate-utf8-bytes");

var illegalRe = /[\/\?<>\\:\*\|"]/g;
var controlRe = /[\x00-\x1f\x80-\x9f]/g;
var reservedRe = /^\.+$/;
var windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i;
var windowsTrailingRe = /[\. ]+$/;

function sanitize(input, replacement) {
  if (typeof input !== 'string') {
    throw new Error('Input must be string');
  }
  var sanitized = input
    .replace(illegalRe, replacement)
    .replace(controlRe, replacement)
    .replace(reservedRe, replacement)
    .replace(windowsReservedRe, replacement)
    .replace(windowsTrailingRe, replacement);
  return truncate(sanitized, 255);
}

module.exports = function (input, options) {
  var replacement = (options && options.replacement) || '';
  var output = sanitize(input, replacement);
  if (replacement === '') {
    return output;
  }
  return sanitize(output, '');
};

},{"truncate-utf8-bytes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/truncate-utf8-bytes/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/crypto.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
var sodium      = require('chloride')

// var keypair     = sodium.crypto_box_seed_keypair
var from_seed   = sodium.crypto_sign_seed_keypair
var shared      = sodium.crypto_scalarmult
var hash        = sodium.crypto_hash_sha256
var sign        = sodium.crypto_sign_detached
var verify      = sodium.crypto_sign_verify_detached
var auth        = sodium.crypto_auth
var verify_auth = sodium.crypto_auth_verify
var curvify_pk  = sodium.crypto_sign_ed25519_pk_to_curve25519
var curvify_sk  = sodium.crypto_sign_ed25519_sk_to_curve25519
var box         = sodium.crypto_secretbox_easy
var unbox       = sodium.crypto_secretbox_open_easy

var concat = Buffer.concat

var nonce = Buffer.alloc(24); nonce.fill(0)

var isBuffer = Buffer.isBuffer

exports.challenge_length = 64
exports.client_auth_length = 16+32+64
exports.server_auth_length = 16+64
exports.mac_length = 16

//both client and server

function assert_length(buf, name, length) {
  if(buf.length !== length)
    throw new Error('expected '+name+' to have length' + length + ', but was:'+buf.length)
}

exports.initialize = function (state) {

  if(state.seed) state.local = from_seed(state.seed)

  //TODO: sodium is missing box_seed_keypair. should make PR for that.
  // mix: sodium-native has this fn https://github.com/sodium-friends/sodium-native

  var _key = from_seed(state.random)
  //  var kx = keypair(random)
  var kx_pk = curvify_pk(_key.publicKey)
  var kx_sk = curvify_sk(_key.secretKey)

  state.local = {
    kx_pk: kx_pk,
    kx_sk: kx_sk,
    publicKey: state.local.publicKey,
    secretKey: state.local.secretKey,
    app_mac: auth(kx_pk, state.app_key)
  }

  state.remote = state.remote || {}

  return state
}

exports.createChallenge = function (state) {
  return concat([state.local.app_mac, state.local.kx_pk])
}


exports.verifyChallenge = function (state, challenge) {
  assert_length(challenge, 'challenge', exports.challenge_length)

  var mac = challenge.slice(0, 32)
  var remote_pk = challenge.slice(32, exports.challenge_length)

  if(0 !== verify_auth(mac, remote_pk, state.app_key))
    return null

  state.remote.kx_pk = remote_pk
  state.remote.app_mac = mac
  state.secret = shared(state.local.kx_sk, state.remote.kx_pk)
  state.shash = hash(state.secret)

  return state
}

exports.clean = function (state) {
  // clean away all the secrets for forward security.
  // use a different secret hash(secret3) in the rest of the session,
  // and so that a sloppy application cannot compromise the handshake.

  state.shash.fill(0)
  state.secret.fill(0)
  state.a_bob.fill(0)
  state.b_alice.fill(0)

  state.secret = hash(state.secret3)
  state.encryptKey = hash(concat([state.secret, state.remote.publicKey]))
  state.decryptKey = hash(concat([state.secret, state.local.publicKey]))

  state.secret2.fill(0)
  state.secret3.fill(0)
  state.local.kx_sk.fill(0)

  state.shash = null
  state.secret2 = null
  state.secret3 = null
  state.a_bob = null
  state.b_alice = null
  state.local.kx_sk = null
  return state
}

//client side only (Alice)

exports.clientVerifyChallenge = function (state, challenge) {
  assert_length(challenge, 'challenge', exports.challenge_length)
  state = exports.verifyChallenge(state, challenge)
  if(!state) return null

  //now we have agreed on the secret.
  //this can be an encryption secret,
  //or a hmac secret.
  var curve = curvify_pk(state.remote.publicKey)
  if(!curve) return null
  var a_bob = shared(state.local.kx_sk, curve)
  state.a_bob = a_bob
  state.secret2 = hash(concat([state.app_key, state.secret, a_bob]))

  var signed = concat([state.app_key, state.remote.publicKey, state.shash])
  var sig = sign(signed, state.local.secretKey)

  state.local.hello = Buffer.concat([sig, state.local.publicKey])
  return state
}

exports.clientCreateAuth = function (state) {
  return box(state.local.hello, nonce, state.secret2)
}

exports.clientVerifyAccept = function (state, boxed_okay) {
  assert_length(boxed_okay, 'server_auth', exports.server_auth_length)

  var b_alice = shared(curvify_sk(state.local.secretKey), state.remote.kx_pk)
  state.b_alice = b_alice
  state.secret3 = hash(concat([state.app_key, state.secret, state.a_bob, state.b_alice]))

  var sig = unbox(boxed_okay, nonce, state.secret3)
  if(!sig) return null
  var signed = concat([state.app_key, state.local.hello, state.shash])
  if(!verify(sig, signed, state.remote.publicKey))
      return null
  return state
}

//server side only (Bob)

exports.serverVerifyAuth = function (state, data) {
  assert_length(data, 'client_auth', exports.client_auth_length)

  var a_bob = shared(curvify_sk(state.local.secretKey), state.remote.kx_pk)
  state.a_bob = a_bob
  state.secret2 = hash(concat([state.app_key, state.secret, a_bob]))

  state.remote.hello = unbox(data, nonce, state.secret2)
  if(!state.remote.hello)
    return null

  var sig = state.remote.hello.slice(0, 64)
  var publicKey = state.remote.hello.slice(64, 96)

  var signed = concat([state.app_key, state.local.publicKey, state.shash])
  if(!verify(sig, signed, publicKey))
    return null

  state.remote.publicKey = publicKey
  //shared key between my local ephemeral key + remote public
  var b_alice = shared(state.local.kx_sk, curvify_pk(state.remote.publicKey))
  state.b_alice = b_alice
  state.secret3 = hash(concat([state.app_key, state.secret, state.a_bob, state.b_alice]))

  return state

}

exports.serverCreateAccept = function (state) {
  var signed = concat([state.app_key, state.remote.hello, state.shash])
  var okay = sign(signed, state.local.secretKey)
  return box(okay, nonce, state.secret3)
}

exports.toKeys = function (keys) {
  if(isBuffer(keys, 32))
    return sodium.crypto_sign_seed_keypair(keys)
  return keys
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/errors.js":[function(require,module,exports){
//phases:
// 1 client sends challenge
// 2 server sends challenge
// 3 client sends hello (include proof they know the server)
// 4 server decides if they want client to connect with them
// 5 server sends acknowledgement to client

module.exports = {
  serverErrorOnChallenge:
    "shs.client: error when expecting server to accept challenge (phase 1).\n" +
    "possibly the server is busy, does not speak shs or uses a different application cap",

  serverInvalidChallenge:
    "shs.client: server responded with invalid challenge (phase 2). possibly server does not speak shs",

  serverHungUp:
    "shs.client: server hung up when we sent hello (phase 3).\n" +
    "Possibly we dailed a wrong number, or the server does not wish to talk to us.",

  serverAcceptInvalid:
    "shs.client: the server's response accepting us our hello (phase 5) was invalid, so we hung up",

  clientErrorOnChallenge:
    "shs.server: error when waiting for client to send challenge (phase 1)",

  clientInvalidChallenge:
    "shs.server: client sent invalid challenge (phase 1), possibly they tried to speak a different protocol or had wrong application cap",

  //we got a networking error:
  clientErrorOnHello:
    "shs.server: error when expecting client to say hello (phase 2)",

  clientInvalidHello:
    "shs.server: client hello invalid (phase 3). they dailed a wrong number - they didn't have our public key",

  clientUnauthorized:
    "shs.server: we did not authorize the client (phase 4), so we hung up.",

  serverErrorOnAuthorization:
    "shs.server: while trying to decide if the client should be authorized (phase 4), we got an error on the server. This could be a database error",
}





},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/index.js":[function(require,module,exports){
'use strict'
module.exports = require('./protocol')(require('./crypto'))

},{"./crypto":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/crypto.js","./protocol":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/protocol.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/protocol.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
var pull = require('pull-stream')
var boxes = require('pull-box-stream')
var explain = require('explain-error')
var errors = require('./errors')
var Handshake = require('pull-handshake')
var random = require('./random')

function isBuffer(buf, len) {
  return Buffer.isBuffer(buf) && buf.length === len
}

module.exports = function (stateless) {
  var exports = {}
  //client is Alice
  //create the client stream with the public key you expect to connect to.
  exports.createClientStream = function (alice, app_key, timeout) {

    return function (bob_pub, seed, cb) {
      if('function' == typeof seed)
        cb = seed, seed = null

      //alice may be null.
      var state = stateless.initialize({
        app_key: app_key,
        local: alice,
        remote: {publicKey: bob_pub},
        seed: seed,
        random: random(32)
      })

      var stream = Handshake({timeout: timeout}, cb)
      var shake = stream.handshake
      stream.handshake = null

      function abort(err, reason) {
        if(err && err !== true) shake.abort(explain(err, reason), cb)
        else                    shake.abort(new Error(reason), cb)
      }

      shake.write(stateless.createChallenge(state))

      shake.read(stateless.challenge_length, function (err, msg) {
        if(err) return abort(err, errors.serverErrorOnChallenge)
        //create the challenge first, because we need to generate a local key
        if(!(state = stateless.clientVerifyChallenge(state, msg)))
          return abort(null, errors.serverInvalidChallenge)

        shake.write(stateless.clientCreateAuth(state))

        shake.read(stateless.server_auth_length, function (err, boxed_sig) {
          if(err) return abort(err, errors.serverHungUp)

          if(!(state = stateless.clientVerifyAccept(state, boxed_sig)))
            return abort(null, errors.serverAcceptInvalid)

          cb(null, shake.rest(), state = stateless.clean(state))
        })
      })

      return stream
    }
  }

  //server is Bob.
  exports.createServerStream = function (bob, authorize, app_key, timeout) {

    return function (cb) {
      var state = stateless.initialize({
        app_key: app_key,
        local: bob,
        //note, the server doesn't know the remote until it receives ClientAuth
        random: random(32)
      })
      var stream = Handshake({timeout: timeout}, cb)

      var shake = stream.handshake
      stream.handshake = null

      function abort (err, reason) {
        if(err && err !== true) shake.abort(err)
        else                    shake.abort(new Error(reason))
        // shake.abort(err) triggers cb(err)
      }

      shake.read(stateless.challenge_length, function (err, challenge) {
        if(err) return abort(err, errors.clientErrorOnChallenge)
        if(!(state = stateless.verifyChallenge(state, challenge)))
          return shake.abort(new Error(errors.clientInvalidChallenge))

        shake.write(stateless.createChallenge(state))
        shake.read(stateless.client_auth_length, function (err, hello) {
          if(err) return abort(err, errors.clientErrorOnHello)

          if(!(state = stateless.serverVerifyAuth(state, hello)))
            return abort(null, errors.clientInvalidHello)

          //check if the user wants to speak to alice.
          authorize(state.remote.publicKey, function (err, auth) {
            if(err) return abort(err, errors.serverErrorOnAuthorization)
            if(!auth) return abort(null, errors.clientUnauthorized)
            state.auth = auth
            shake.write(stateless.serverCreateAccept(state))
            cb(null, shake.rest(), state = stateless.clean(state))
          })
        })
      })
      return stream
    }
  }

  //wrap the above into an actual handshake + encrypted session

  exports.toKeys = stateless.toKeys

  function secure (cb) {
    return function (err, stream, state) {
      if(err) return cb(err)

      var encryptNonce = state.remote.app_mac.slice(0, 24)
      var decryptNonce = state.local.app_mac.slice(0, 24)

      cb(null, {
        remote: state.remote.publicKey,
        //on the server, attach any metadata gathered
        //during `authorize` call
        auth: state.auth,
        crypto: {
          encryptKey: state.encryptKey,
          decryptKey: state.decryptKey,
          encryptNonce: encryptNonce,
          decryptNonce: decryptNonce
        },
        source: pull(
          stream.source,
          boxes.createUnboxStream(state.decryptKey, decryptNonce)
        ),
        sink: pull(
          boxes.createBoxStream(state.encryptKey, encryptNonce),
          stream.sink
        )
      })
    }
  }

  exports.client =
  exports.createClient = function (alice, app_key, timeout) {
    var create = exports.createClientStream(alice, app_key, timeout)

    return function (bob, seed, cb) {
      if(!isBuffer(bob, 32))
        throw new Error('createClient *must* be passed a public key')
      if('function' === typeof seed)
        return create(bob, secure(seed))
      else
        return create(bob, seed, secure(cb))
    }
  }

  exports.server =
  exports.createServer = function (bob, authorize, app_key, timeout) {
    var create = exports.createServerStream(bob, authorize, app_key, timeout)

    return function (cb) {
      return create(secure(cb))
    }
  }

  return exports
}

}).call(this)}).call(this,{"isBuffer":require("../is-buffer/index.js")})
},{"../is-buffer/index.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-buffer/index.js","./errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/errors.js","./random":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/random.js","explain-error":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/explain-error/index.js","pull-box-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-box-stream/index.js","pull-handshake":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-handshake/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-handshake/random.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
var cl = require('chloride')

module.exports = function (bytes) {
  var b = Buffer.alloc(bytes)
  cl.randombytes(b, bytes)
  return b
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack-decorators/lib/index.js":[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function muxrpc(type, perms) {
    return function DecorateManifestMethod(target, methodName) {
        var statics = target.constructor;
        if (target[methodName] && typeof target[methodName] !== 'function') {
            throw new Error('You can only use the @muxrpc decorator on methods, ' +
                'are you sure that is the case for `' +
                methodName +
                '`?');
        }
        // Augment the 'manifest' static field
        if (!statics.manifest) {
            statics.manifest = {};
        }
        statics.manifest[methodName] = type;
        // Augment the 'permissions' static field
        if (perms) {
            if (!statics.permissions) {
                statics.permissions = {};
            }
            for (var _i = 0, _a = Object.keys(perms); _i < _a.length; _i++) {
                var role = _a[_i];
                var decision = perms[role];
                if (!statics.permissions[role]) {
                    statics.permissions[role] = {};
                }
                if (!statics.permissions[role][decision]) {
                    statics.permissions[role][decision] = [];
                }
                statics.permissions[role][decision].push(methodName);
            }
        }
    };
}
exports.muxrpc = muxrpc;
function plugin(version) {
    return function DecorateSecretStackPlugin(constructor) {
        if (!version || typeof version !== 'string') {
            throw new Error('The @plugin decorator expects one argument: a `version` string');
        }
        // Set the 'version' static field
        constructor.version = version;
        // Set the 'init' static field
        constructor.init = function init() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var api = new (constructor.bind.apply(constructor, [void 0].concat(args)))();
            // Hide all other properties and methods, except
            // those declared in the manifest
            for (var property in api) {
                if (property in constructor.manifest) {
                    var propertyValue = api[property];
                    if (typeof propertyValue === 'function' && !Object.getOwnPropertyDescriptors(api)[property]) {
                        // not a this-bound method, bind it
                        propertyValue = propertyValue.bind(api);
                    }
                    Object.defineProperty(api, property, {
                        enumerable: true,
                        configurable: false,
                        writable: true,
                        value: propertyValue,
                    });
                }
                else {
                    Object.defineProperty(api, property, {
                        enumerable: false,
                        configurable: false,
                        writable: true,
                        value: api[property],
                    });
                }
            }
            for (var property in constructor.manifest) {
                Object.defineProperty(api, property, {
                    enumerable: true,
                    configurable: false,
                    writable: true,
                    value: api[property],
                });
            }
            return api;
        };
    };
}
exports.plugin = plugin;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/api.js":[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
var u = require("./util");
var EventEmitter = require('events');
var Hookable = require('hoox');
var identity = function (x) { return x; };
function merge(a, b, mapper) {
    mapper = mapper !== null && mapper !== void 0 ? mapper : identity;
    for (var k in b) {
        if (b[k] &&
            typeof b[k] === 'object' &&
            !Buffer.isBuffer(b[k]) &&
            !Array.isArray(b[k])) {
            a[k] = {};
            merge(a[k], b[k], mapper);
        }
        else {
            a[k] = mapper(b[k], k);
        }
    }
    return a;
}
module.exports = function Api(plugins, defaultConfig) {
    function create(inputOpts) {
        var opts = merge(merge({}, defaultConfig), inputOpts);
        var api = new EventEmitter();
        create.plugins.forEach(function (plug) {
            var _api = plug.init.call({}, api, opts, create.permissions, create.manifest);
            if (plug.name) {
                var camelCaseName = u.toCamelCase(plug.name);
                var o = {};
                o[camelCaseName] = _api;
                _api = o;
            }
            api = merge(api, _api, function (val, key) {
                if (typeof val === 'function') {
                    val = Hookable(val);
                    if (plug.manifest && plug.manifest[key] === 'sync') {
                        u.hookOptionalCB(val);
                    }
                }
                return val;
            });
        });
        return api;
    }
    create.plugins = [];
    create.manifest = {};
    create.permissions = {};
    create.use = function (plug) {
        if (Array.isArray(plug)) {
            plug.forEach(create.use);
            return create;
        }
        if (!plug.init) {
            if (typeof plug === 'function') {
                create.plugins.push({ init: plug });
                return create;
            }
            else {
                throw new Error('plugins *must* have "init" method');
            }
        }
        if (plug.name && typeof plug.name === 'string') {
            var found = create.plugins.some(function (p) { return p.name === plug.name; });
            if (found) {
                console.error('plugin named:' + plug.name + ' is already loaded, skipping');
                return create;
            }
        }
        var name = plug.name;
        if (plug.manifest) {
            create.manifest = u.merge.manifest(create.manifest, plug.manifest, u.toCamelCase(name));
        }
        if (plug.permissions) {
            create.permissions = u.merge.permissions(create.permissions, plug.permissions, u.toCamelCase(name));
        }
        create.plugins.push(plug);
        return create;
    };
    [].concat(plugins).filter(Boolean).forEach(create.use);
    return create;
};

}).call(this)}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-buffer/index.js","./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/util.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","hoox":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/hoox/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/core.js":[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var u = require("./util");
var Muxrpc = require('muxrpc');
var pull = require('pull-stream');
var MultiServer = require('multiserver');
var Inactive = require('pull-inactivity');
var debug = require('debug')('secret-stack');
function isPlainObject(o) {
    return o && typeof o === 'object' && !Array.isArray(o);
}
function toBase64(s) {
    if (typeof s === 'string')
        return s;
    else
        return s.toString('base64');
}
function each(objOrArr, iter) {
    if (Array.isArray(objOrArr)) {
        objOrArr.forEach(iter);
    }
    else {
        for (var key in objOrArr)
            iter(objOrArr[key], key, objOrArr);
    }
}
function assertHasNameAndCreate(obj, type) {
    if (!isPlainObject(obj) ||
        typeof obj.name !== 'string' ||
        typeof obj.create !== 'function') {
        throw new Error(type + ' must be {name: string, create: function}');
    }
}
function coearseAddress(address) {
    if (isPlainObject(address)) {
        var protocol = 'net';
        if (typeof address.host === 'string' && address.host.endsWith('.onion')) {
            protocol = 'onion';
        }
        return ([protocol, address.host, address.port].join(':') +
            '~' +
            ['shs', toBase64(address.key)].join(':'));
    }
    return address;
}
function isPermsList(list) {
    if (list === null)
        return true;
    if (typeof list === 'undefined')
        return true;
    return Array.isArray(list) && list.every(function (x) { return typeof x === 'string'; });
}
function isPermissions(perms) {
    return (perms &&
        isPlainObject(perms) &&
        isPermsList(perms.allow) &&
        isPermsList(perms.deny));
}
module.exports = {
    manifest: {
        auth: 'async',
        address: 'sync',
        manifest: 'sync',
        multiserver: {
            parse: 'sync',
            address: 'sync'
        }
    },
    init: function (api, opts, permissions, manifest) {
        var _a, _b;
        var timeoutInactivity;
        if (!isNaN((_a = opts.timers) === null || _a === void 0 ? void 0 : _a.inactivity)) {
            timeoutInactivity = (_b = opts.timers) === null || _b === void 0 ? void 0 : _b.inactivity;
        }
        timeoutInactivity = timeoutInactivity || (opts.timers ? 600e3 : 5e3);
        if (!opts.connections) {
            var netIn = __assign(__assign({ scope: ['device', 'local', 'public'], transform: 'shs' }, (opts.host ? { host: opts.host } : null)), (opts.port ? { port: opts.port } : null));
            var netOut = {
                transform: 'shs'
            };
            opts.connections = {
                incoming: {
                    net: [netIn]
                },
                outgoing: {
                    net: [netOut]
                }
            };
        }
        var peers = (api.peers = {});
        var transports = [];
        var transforms = [];
        var server;
        var ms;
        var msClient;
        function setupMultiserver() {
            if (api.closed)
                return;
            if (server)
                return server;
            if (transforms.length < 1) {
                throw new Error('secret-stack needs at least 1 transform protocol');
            }
            var serverSuites = [];
            var clientSuites = [];
            var _loop_1 = function (incTransport) {
                opts.connections.incoming[incTransport].forEach(function (inc) {
                    transforms.forEach(function (transform) {
                        transports.forEach(function (transport) {
                            if (transport.name === incTransport &&
                                transform.name === inc.transform) {
                                var msPlugin = transport.create(inc);
                                var msTransformPlugin = transform.create();
                                if (msPlugin.scope() !== inc.scope) {
                                    throw new Error('transport:' +
                                        transport.name +
                                        ' did not remember scope, expected:' +
                                        inc.scope +
                                        ' got:' +
                                        msPlugin.scope());
                                }
                                debug('creating server %s %s host=%s port=%d scope=%s', incTransport, transform.name, inc.host, inc.port, inc.scope || 'undefined');
                                serverSuites.push([msPlugin, msTransformPlugin]);
                            }
                        });
                    });
                });
            };
            for (var incTransport in opts.connections.incoming) {
                _loop_1(incTransport);
            }
            var _loop_2 = function (outTransport) {
                opts.connections.outgoing[outTransport].forEach(function (out) {
                    transforms.forEach(function (transform) {
                        transports.forEach(function (transport) {
                            if (transport.name === outTransport &&
                                transform.name === out.transform) {
                                var msPlugin = transport.create(out);
                                var msTransformPlugin = transform.create();
                                clientSuites.push([msPlugin, msTransformPlugin]);
                            }
                        });
                    });
                });
            };
            for (var outTransport in opts.connections.outgoing) {
                _loop_2(outTransport);
            }
            msClient = MultiServer(clientSuites);
            ms = MultiServer(serverSuites);
            server = ms.server(setupRPC, null, function () {
                api.emit('multiserver:listening');
            });
            if (!server)
                throw new Error('expected server');
            return server;
        }
        setImmediate(setupMultiserver);
        function setupRPC(stream, manf, isClient) {
            var _id = '@' + u.toId(stream.remote);
            var rpc = Muxrpc(manifest, manf !== null && manf !== void 0 ? manf : manifest, api, _id, isClient
                ? permissions.anonymous
                : isPermissions(stream.auth)
                    ? stream.auth
                    : permissions.anonymous, false);
            rpc.id = _id;
            var rpcStream = rpc.stream;
            if (timeoutInactivity > 0 && api.id !== rpc.id) {
                rpcStream = Inactive(rpcStream, timeoutInactivity);
            }
            rpc.meta = stream.meta;
            rpc.stream.address = stream.address;
            pull(stream, rpcStream, stream);
            if (!peers[rpc.id])
                peers[rpc.id] = [];
            peers[rpc.id].push(rpc);
            rpc.once('closed', function () {
                peers[rpc.id].splice(peers[rpc.id].indexOf(rpc), 1);
            });
            api.emit('rpc:connect', rpc, !!isClient);
            return rpc;
        }
        return {
            config: opts,
            auth: function (_pub, cb) {
                cb();
            },
            address: function (scope) {
                return api.getAddress(scope);
            },
            getAddress: function (scope) {
                setupMultiserver();
                return ms.stringify(scope) || null;
            },
            manifest: function () {
                return manifest;
            },
            getManifest: function () {
                return this.manifest();
            },
            connect: function (address, cb) {
                setupMultiserver();
                msClient.client(coearseAddress(address), function (err, stream) {
                    if (err)
                        cb(err);
                    else
                        cb(null, setupRPC(stream, null, true));
                });
            },
            multiserver: {
                transport: function (transport) {
                    if (server) {
                        throw new Error('cannot add protocol after server initialized');
                    }
                    assertHasNameAndCreate(transport, 'transport');
                    debug('Adding transport %s', transport.name);
                    transports.push(transport);
                    return this;
                },
                transform: function (transform) {
                    assertHasNameAndCreate(transform, 'transform');
                    debug('Adding transform %s', transform.name);
                    transforms.push(transform);
                    return this;
                },
                parse: function (str) {
                    return ms.parse(str);
                },
                address: function (scope) {
                    setupMultiserver();
                    return ms.stringify(scope) || null;
                }
            },
            close: function (err, cb) {
                var _a;
                if (typeof err === 'function') {
                    cb = err;
                    err = null;
                }
                api.closed = true;
                if (!server)
                    cb && cb();
                else {
                    ((_a = server.close) !== null && _a !== void 0 ? _a : server)(function (err) {
                        api.emit('close', err);
                        cb && cb(err);
                    });
                }
                if (err) {
                    each(peers, function (connections) {
                        each(connections, function (rpc) {
                            rpc.close(err);
                        });
                    });
                }
            }
        };
    }
};

}).call(this)}).call(this,require("timers").setImmediate)
},{"./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/util.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","multiserver":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/index.js","muxrpc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/muxrpc/index.js","pull-inactivity":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-inactivity/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","timers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/timers-browserify/main.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/index.js":[function(require,module,exports){
"use strict";
var Api = require("./api");
module.exports = function SecretStack(config) {
    var create = Api([], config !== null && config !== void 0 ? config : {});
    return (create
        .use(require('./core'))
        .use(require('./plugins/net'))
        .use(require('./plugins/shs')));
};

},{"./api":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/api.js","./core":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/core.js","./plugins/net":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/plugins/net.js","./plugins/shs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/plugins/shs.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/plugins/net.js":[function(require,module,exports){
"use strict";
var Net = require('multiserver/plugins/net');
var debug = require('debug')('secret-stack net plugin');
module.exports = {
    name: 'multiserver-net',
    version: '1.0.0',
    init: function (api) {
        api.multiserver.transport({
            name: 'net',
            create: function (opts) {
                debug('creating transport host=%s port=%d scope=%s', opts.host, opts.port, opts.scope);
                return Net(opts);
            }
        });
    }
};

},{"debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","multiserver/plugins/net":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/net.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/plugins/shs.js":[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
var u = require("../util");
var Shs = require('multiserver/plugins/shs');
function toBuffer(base64) {
    if (Buffer.isBuffer(base64))
        return base64;
    var i = base64.indexOf('.');
    return Buffer.from(~i ? base64.substring(0, i) : base64, 'base64');
}
function toSodiumKeys(keys) {
    if (typeof keys.public !== 'string' || typeof keys.private !== 'string') {
        return keys;
    }
    return {
        publicKey: toBuffer(keys.public),
        secretKey: toBuffer(keys.private)
    };
}
module.exports = {
    name: 'multiserver-shs',
    version: '1.0.0',
    init: function (api, config) {
        var _a, _b, _c;
        var timeoutHandshake;
        if (!isNaN((_a = config.timers) === null || _a === void 0 ? void 0 : _a.handshake)) {
            timeoutHandshake = (_b = config.timers) === null || _b === void 0 ? void 0 : _b.handshake;
        }
        if (!timeoutHandshake) {
            timeoutHandshake = (config.timers ? 15e3 : 5e3);
        }
        if (config.timeout) {
            timeoutHandshake = config.timeout;
        }
        var shsCap = (_c = (config.caps && config.caps.shs)) !== null && _c !== void 0 ? _c : config.appKey;
        if (!shsCap) {
            throw new Error('secret-stack/plugins/shs must have caps.shs configured');
        }
        var shs = Shs({
            keys: config.keys && toSodiumKeys(config.keys),
            seed: config.seed,
            appKey: toBuffer(shsCap),
            timeout: timeoutHandshake,
            authenticate: function (pub, cb) {
                var id = '@' + u.toId(pub);
                api.auth(id, function (err, auth) {
                    if (err)
                        cb(err);
                    else
                        cb(null, auth || true);
                });
            }
        });
        var id = '@' + u.toId(shs.publicKey);
        api.id = id;
        api.publicKey = id;
        api.multiserver.transform({
            name: 'shs',
            create: function () { return shs; }
        });
    }
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"../util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/util.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","multiserver/plugins/shs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/shs.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack/lib/util.js":[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCamelCase = exports.hookOptionalCB = exports.merge = exports.toId = exports.clone = void 0;
var mapMerge = require('map-merge');
var camelize = require('to-camel-case');
function isObject(o) {
    return o && typeof o === 'object';
}
function clone(obj, mapper) {
    function map(v, k) {
        return isObject(v) ? clone(v, mapper) : mapper(v, k);
    }
    if (Array.isArray(obj)) {
        return obj.map(map);
    }
    else if (isObject(obj)) {
        var o = {};
        for (var k in obj) {
            o[k] = map(obj[k], k);
        }
        return o;
    }
    else {
        return map(obj);
    }
}
exports.clone = clone;
function toId(pub) {
    return Buffer.isBuffer(pub) ? pub.toString('base64') + '.ed25519' : pub;
}
exports.toId = toId;
exports.merge = {
    permissions: function (perms, _perms, name) {
        return mapMerge(perms, clone(_perms, function (v) { return name ? name + '.' + v : v; }));
    },
    manifest: function (manf, _manf, name) {
        if (name) {
            var o = {};
            o[name] = _manf;
            _manf = o;
        }
        return mapMerge(manf, _manf);
    }
};
function hookOptionalCB(syncFn) {
    syncFn.hook(function (fn, args) {
        var cb = args[args.length - 1];
        if (typeof cb === 'function') {
            var res = void 0;
            args.pop();
            try {
                res = fn.apply(this, args);
            }
            catch (e) {
                return cb(e);
            }
            cb(null, res);
        }
        else {
            return fn.apply(this, args);
        }
    });
}
exports.hookOptionalCB = hookOptionalCB;
function toCamelCase(n) {
    return n ? camelize(n) : n;
}
exports.toCamelCase = toCamelCase;

}).call(this)}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-buffer/index.js","map-merge":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/map-merge/index.js","to-camel-case":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/to-camel-case/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/separator-escape/index.js":[function(require,module,exports){

//module.exports = function (sep, esc) {
//  sep = sep || ','
//  esc = esc || '\\'
//
//  new RegExp('([^'+sep+']|'+esc+sep+')
//}

module.exports = function (sep, esc) {
  if(sep.length != 1) throw new Error('separator must be a single char')
  if(esc.length != 1) throw new Error('escape must be a single char')

  return {
    parse: function (str) {
      var ary = []
      var cur = ''
      for(var i = 0; i < str.length; i++) {
       if(str[i] == esc && i+1 < str.length) {
          cur += str[++i]
        }
        else if(str[i] === sep) {
          ary.push(cur)
          cur = ''
        }
        else
          cur += str[i]
      }
      ary.push(cur)
      return ary

    },
    stringify: function (ary) {
      //for each item in the array.
      return ary.map(function (str) {
        var s = ''
        for(var i = 0; i < str.length; i++) {
          if(str[i] === esc || str[i] === sep)
            s += esc + str[i]
          else
            s += str[i]
        }
        return s
      }).join(sep)
    }
  }
}



},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/hash.js":[function(require,module,exports){
(function (Buffer){(function (){
// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = new Buffer(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
  this._s = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = new Buffer(data, enc)
  }

  var l = this._len += data.length
  var s = this._s || 0
  var f = 0
  var buffer = this._block

  while (s < l) {
    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
    var ch = (t - f)

    for (var i = 0; i < ch; i++) {
      buffer[(s % this._blockSize) + i] = data[i + f]
    }

    s += ch
    f += ch

    if ((s % this._blockSize) === 0) {
      this._update(buffer)
    }
  }
  this._s = s

  return this
}

Hash.prototype.digest = function (enc) {
  // Suppose the length of the message M, in bits, is l
  var l = this._len * 8

  // Append the bit 1 to the end of the message
  this._block[this._len % this._blockSize] = 0x80

  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
  this._block.fill(0, this._len % this._blockSize + 1)

  if (l % (this._blockSize * 8) >= this._finalSize * 8) {
    this._update(this._block)
    this._block.fill(0)
  }

  // to this append the block which is equal to the number l written in binary
  // TODO: handle case where l is > Math.pow(2, 29)
  this._block.writeInt32BE(l, this._blockSize - 4)

  var hash = this._update(this._block) || this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/index.js"][0].apply(exports,arguments)
},{"./sha":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha.js","./sha1":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha1.js","./sha224":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha224.js","./sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha256.js","./sha384":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha384.js","./sha512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha512.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha.js":[function(require,module,exports){
(function (Buffer){(function (){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

}).call(this)}).call(this,require("buffer").Buffer)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/hash.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha1.js":[function(require,module,exports){
(function (Buffer){(function (){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

}).call(this)}).call(this,require("buffer").Buffer)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/hash.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha224.js":[function(require,module,exports){
(function (Buffer){(function (){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = new Buffer(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

}).call(this)}).call(this,require("buffer").Buffer)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/hash.js","./sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha256.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha256.js":[function(require,module,exports){
(function (Buffer){(function (){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = new Buffer(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

}).call(this)}).call(this,require("buffer").Buffer)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/hash.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha384.js":[function(require,module,exports){
(function (Buffer){(function (){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = new Buffer(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

}).call(this)}).call(this,require("buffer").Buffer)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/hash.js","./sha512":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha512.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha512.js":[function(require,module,exports){
(function (Buffer){(function (){
var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = new Buffer(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

}).call(this)}).call(this,require("buffer").Buffer)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/hash.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/simple-mime/simple-mime.js":[function(require,module,exports){
// A simple mime database.
var types;
module.exports = function setup(defaultMime) {
  return function getMime(path) {
    path = path.toLowerCase().trim();
    var index = path.lastIndexOf("/");
    if (index >= 0) {
      path = path.substr(index + 1);
    }
    index = path.lastIndexOf(".");
    if (index >= 0) {
      path = path.substr(index + 1);
    }
    return types[path] || defaultMime;
  };
};

// Borrowed and passed around from who knows where, last grabbed from connect.
types = {
  "3gp": "video/3gpp",
  a: "application/octet-stream",
  ai: "application/postscript",
  aif: "audio/x-aiff",
  aiff: "audio/x-aiff",
  asc: "application/pgp-signature",
  asf: "video/x-ms-asf",
  asm: "text/x-asm",
  asx: "video/x-ms-asf",
  atom: "application/atom+xml",
  au: "audio/basic",
  avi: "video/x-msvideo",
  bat: "application/x-msdownload",
  bin: "application/octet-stream",
  bmp: "image/bmp",
  bz2: "application/x-bzip2",
  c: "text/x-csrc",
  cab: "application/vnd.ms-cab-compressed",
  can: "application/candor",
  cc: "text/x-c++src",
  chm: "application/vnd.ms-htmlhelp",
  "class": "application/octet-stream",
  com: "application/x-msdownload",
  conf: "text/plain",
  cpp: "text/x-c",
  crt: "application/x-x509-ca-cert",
  css: "text/css",
  csv: "text/csv",
  cxx: "text/x-c",
  deb: "application/x-debian-package",
  der: "application/x-x509-ca-cert",
  diff: "text/x-diff",
  djv: "image/vnd.djvu",
  djvu: "image/vnd.djvu",
  dll: "application/x-msdownload",
  dmg: "application/octet-stream",
  doc: "application/msword",
  dot: "application/msword",
  dtd: "application/xml-dtd",
  dvi: "application/x-dvi",
  ear: "application/java-archive",
  eml: "message/rfc822",
  eps: "application/postscript",
  exe: "application/x-msdownload",
  f: "text/x-fortran",
  f77: "text/x-fortran",
  f90: "text/x-fortran",
  flv: "video/x-flv",
  "for": "text/x-fortran",
  gem: "application/octet-stream",
  gemspec: "text/x-script.ruby",
  gif: "image/gif",
  gyp: "text/x-script.python",
  gypi: "text/x-script.python",
  gz: "application/x-gzip",
  h: "text/x-chdr",
  hh: "text/x-c++hdr",
  htm: "text/html",
  html: "text/html",
  ico: "image/vnd.microsoft.icon",
  ics: "text/calendar",
  ifb: "text/calendar",
  iso: "application/octet-stream",
  jar: "application/java-archive",
  java: "text/x-java-source",
  jnlp: "application/x-java-jnlp-file",
  jpeg: "image/jpeg",
  jpg: "image/jpeg",
  js: "application/javascript",
  json: "application/json",
  less: "text/css",
  log: "text/plain",
  lua: "text/x-script.lua",
  luac: "application/x-bytecode.lua",
  makefile: "text/x-makefile",
  m3u: "audio/x-mpegurl",
  m4v: "video/mp4",
  man: "text/troff",
  manifest: "text/cache-manifest",
  markdown: "text/x-markdown",
  mathml: "application/mathml+xml",
  mbox: "application/mbox",
  mdoc: "text/troff",
  md: "text/x-markdown",
  me: "text/troff",
  mid: "audio/midi",
  midi: "audio/midi",
  mime: "message/rfc822",
  mml: "application/mathml+xml",
  mng: "video/x-mng",
  mov: "video/quicktime",
  mp3: "audio/mpeg",
  mp4: "video/mp4",
  mp4v: "video/mp4",
  mpeg: "video/mpeg",
  mpg: "video/mpeg",
  ms: "text/troff",
  msi: "application/x-msdownload",
  odp: "application/vnd.oasis.opendocument.presentation",
  ods: "application/vnd.oasis.opendocument.spreadsheet",
  odt: "application/vnd.oasis.opendocument.text",
  ogg: "application/ogg",
  p: "text/x-pascal",
  pas: "text/x-pascal",
  pbm: "image/x-portable-bitmap",
  pdf: "application/pdf",
  pem: "application/x-x509-ca-cert",
  pgm: "image/x-portable-graymap",
  pgp: "application/pgp-encrypted",
  pkg: "application/octet-stream",
  pl: "text/x-script.perl",
  pm: "text/x-script.perl-module",
  png: "image/png",
  pnm: "image/x-portable-anymap",
  ppm: "image/x-portable-pixmap",
  pps: "application/vnd.ms-powerpoint",
  ppt: "application/vnd.ms-powerpoint",
  ps: "application/postscript",
  psd: "image/vnd.adobe.photoshop",
  py: "text/x-script.python",
  qt: "video/quicktime",
  ra: "audio/x-pn-realaudio",
  rake: "text/x-script.ruby",
  ram: "audio/x-pn-realaudio",
  rar: "application/x-rar-compressed",
  rb: "text/x-script.ruby",
  rdf: "application/rdf+xml",
  roff: "text/troff",
  rpm: "application/x-redhat-package-manager",
  rss: "application/rss+xml",
  rtf: "application/rtf",
  ru: "text/x-script.ruby",
  s: "text/x-asm",
  sgm: "text/sgml",
  sgml: "text/sgml",
  sh: "application/x-sh",
  sig: "application/pgp-signature",
  snd: "audio/basic",
  so: "application/octet-stream",
  svg: "image/svg+xml",
  svgz: "image/svg+xml",
  swf: "application/x-shockwave-flash",
  t: "text/troff",
  tar: "application/x-tar",
  tbz: "application/x-bzip-compressed-tar",
  tci: "application/x-topcloud",
  tcl: "application/x-tcl",
  tex: "application/x-tex",
  texi: "application/x-texinfo",
  texinfo: "application/x-texinfo",
  text: "text/plain",
  tif: "image/tiff",
  tiff: "image/tiff",
  torrent: "application/x-bittorrent",
  tr: "text/troff",
  ttf: "application/x-font-ttf",
  txt: "text/plain",
  vcf: "text/x-vcard",
  vcs: "text/x-vcalendar",
  vrml: "model/vrml",
  war   : "application/java-archive",
  wav   : "audio/x-wav",
  webapp: "application/x-web-app-manifest+json",
  webm: "video/webm",
  wma: "audio/x-ms-wma",
  wmv: "video/x-ms-wmv",
  wmx: "video/x-ms-wmx",
  wrl: "model/vrml",
  wsdl: "application/wsdl+xml",
  xbm: "image/x-xbitmap",
  xhtml: "application/xhtml+xml",
  xls: "application/vnd.ms-excel",
  xml: "application/xml",
  xpm: "image/x-xpixmap",
  xsl: "application/xml",
  xslt: "application/xslt+xml",
  yaml: "text/yaml",
  yml: "text/yaml",
  zip: "application/zip"
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/index.js":[function(require,module,exports){
(function (Buffer){(function (){

var tweetnacl = require('tweetnacl/nacl-fast')
var Sha256 = require('sha.js/sha256')
var ed2curve = require('ed2curve')
var auth = require('tweetnacl-auth')

//low order points that should not be allowed to scalarmult with:
var low_order = [
  '0000000000000000000000000000000000000000000000000000000000000000',
  '0100000000000000000000000000000000000000000000000000000000000000', //1 in little endian
  'e0eb7a7c3b41b8ae1656e3faf19fc46ada098deb9c32b1fd866205165f49b800',
  '5f9c95bca3508c24b1d0b1559c83ef5b04445cc4581c8e86d8224eddd09f1157',
  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',
  'edffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',
  'eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f'
].map(function (e) {
  return Buffer.from(e, 'hex')
})

exports.crypto_hash_sha256 = function (msg) {
  return new Sha256().update(msg).digest()
}

function fix_keys(keys) {
  return {
    publicKey: new Buffer(keys.publicKey),
    secretKey: new Buffer(keys.secretKey),
  }
}

exports.crypto_sign_seed_keypair = function (seed) {
  return fix_keys(tweetnacl.sign.keyPair.fromSeed(seed))
}

exports.crypto_sign_keypair = function () {
  return fix_keys(tweetnacl.sign.keyPair())
}

exports.crypto_sign_detached = function (msg, skey) {
  return new Buffer(tweetnacl.sign.detached(msg, skey))
}

exports.crypto_sign = function (msg, sk) {
  return new Buffer(tweetnacl.sign(msg, sk))
}
exports.crypto_sign_open = function (ctxt, pk) {
  return new Buffer(tweetnacl.sign.open(ctxt, pk))
}

exports.crypto_sign_verify_detached = function (sig, msg, pkey) {
  return tweetnacl.sign.detached.verify(msg, sig, pkey)
}

exports.crypto_box_keypair = function () {
  return fix_keys(tweetnacl.box.keyPair())
}


exports.crypto_hash = function (msg) {
  return new Buffer(tweetnacl.hash(msg))
}

exports.crypto_secretbox_easy = function (msg, key, nonce) {
  return new Buffer(tweetnacl.secretbox(msg, key, nonce))
}

exports.crypto_secretbox_open_easy = function (ctxt, nonce, key) {
  var r = tweetnacl.secretbox.open(ctxt, nonce, key)
  return r ? new Buffer(r) : null
}

exports.crypto_sign_ed25519_pk_to_curve25519 = function (pk) {
  return new Buffer(ed2curve.convertPublicKey(pk))
}
exports.crypto_sign_ed25519_sk_to_curve25519 = function (sk) {
  return new Buffer(ed2curve.convertSecretKey(sk))
}

exports.crypto_box_easy = function (msg, nonce, pkey, skey) {
  return new Buffer(tweetnacl.box(msg, nonce, pkey, skey))
}

exports.crypto_box_open_easy = function (ctxt, nonce, pkey, skey) {
  var r = tweetnacl.box.open(ctxt, nonce, pkey, skey)
  return r ? new Buffer(r) : null
}

exports.crypto_scalarmult = function (sk, pk) {
  for(var i = 0; i < low_order.length; i++) {
    if(low_order[i].compare(pk) === 0) throw new Error('weak public key detected')
  }
  return new Buffer(tweetnacl.scalarMult(sk, pk))
}

//exports.crypto_auth = tweetnacl.auth
//exports.crypto_auth_verify = tweetnacl.auth.verify

exports.crypto_auth = function (msg, key) {
  return new Buffer(auth(msg, key))
}

exports.crypto_auth_verify = function (mac, msg, key) {
  var _mac = exports.crypto_auth(msg, key)
  var d = true
  //constant time comparson
  for(var i = 0; i < _mac.length; i++) {
    d = d && (_mac[i] === mac[i])
  }
  return +!d
}

exports.randombytes = function (buf) {
  var b = new Buffer(tweetnacl.randomBytes(buf.length))
  b.copy(buf)
  return null
}


}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","ed2curve":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ed2curve/ed2curve.js","sha.js/sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/node_modules/sha.js/sha256.js","tweetnacl-auth":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/tweetnacl-auth/nacl-auth.js","tweetnacl/nacl-fast":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/node_modules/tweetnacl/nacl-fast.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/node_modules/sha.js/hash.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/hash.js"][0].apply(exports,arguments)
},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/node_modules/sha.js/sha256.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/create-hmac/node_modules/sha.js/sha256.js"][0].apply(exports,arguments)
},{"./hash":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/node_modules/sha.js/hash.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/node_modules/tweetnacl/nacl-fast.js":[function(require,module,exports){
(function(nacl) {
'use strict';

// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

//  Pluggable, initialized in high-level API below.
var randombytes = function(/* x, n */) { throw new Error('no PRNG'); };

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_16(x, xi, y, yi) {
  return vn(x,xi,y,yi,16);
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function core_salsa20(o, p, k, c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }
   x0 =  x0 +  j0 | 0;
   x1 =  x1 +  j1 | 0;
   x2 =  x2 +  j2 | 0;
   x3 =  x3 +  j3 | 0;
   x4 =  x4 +  j4 | 0;
   x5 =  x5 +  j5 | 0;
   x6 =  x6 +  j6 | 0;
   x7 =  x7 +  j7 | 0;
   x8 =  x8 +  j8 | 0;
   x9 =  x9 +  j9 | 0;
  x10 = x10 + j10 | 0;
  x11 = x11 + j11 | 0;
  x12 = x12 + j12 | 0;
  x13 = x13 + j13 | 0;
  x14 = x14 + j14 | 0;
  x15 = x15 + j15 | 0;

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x1 >>>  0 & 0xff;
  o[ 5] = x1 >>>  8 & 0xff;
  o[ 6] = x1 >>> 16 & 0xff;
  o[ 7] = x1 >>> 24 & 0xff;

  o[ 8] = x2 >>>  0 & 0xff;
  o[ 9] = x2 >>>  8 & 0xff;
  o[10] = x2 >>> 16 & 0xff;
  o[11] = x2 >>> 24 & 0xff;

  o[12] = x3 >>>  0 & 0xff;
  o[13] = x3 >>>  8 & 0xff;
  o[14] = x3 >>> 16 & 0xff;
  o[15] = x3 >>> 24 & 0xff;

  o[16] = x4 >>>  0 & 0xff;
  o[17] = x4 >>>  8 & 0xff;
  o[18] = x4 >>> 16 & 0xff;
  o[19] = x4 >>> 24 & 0xff;

  o[20] = x5 >>>  0 & 0xff;
  o[21] = x5 >>>  8 & 0xff;
  o[22] = x5 >>> 16 & 0xff;
  o[23] = x5 >>> 24 & 0xff;

  o[24] = x6 >>>  0 & 0xff;
  o[25] = x6 >>>  8 & 0xff;
  o[26] = x6 >>> 16 & 0xff;
  o[27] = x6 >>> 24 & 0xff;

  o[28] = x7 >>>  0 & 0xff;
  o[29] = x7 >>>  8 & 0xff;
  o[30] = x7 >>> 16 & 0xff;
  o[31] = x7 >>> 24 & 0xff;

  o[32] = x8 >>>  0 & 0xff;
  o[33] = x8 >>>  8 & 0xff;
  o[34] = x8 >>> 16 & 0xff;
  o[35] = x8 >>> 24 & 0xff;

  o[36] = x9 >>>  0 & 0xff;
  o[37] = x9 >>>  8 & 0xff;
  o[38] = x9 >>> 16 & 0xff;
  o[39] = x9 >>> 24 & 0xff;

  o[40] = x10 >>>  0 & 0xff;
  o[41] = x10 >>>  8 & 0xff;
  o[42] = x10 >>> 16 & 0xff;
  o[43] = x10 >>> 24 & 0xff;

  o[44] = x11 >>>  0 & 0xff;
  o[45] = x11 >>>  8 & 0xff;
  o[46] = x11 >>> 16 & 0xff;
  o[47] = x11 >>> 24 & 0xff;

  o[48] = x12 >>>  0 & 0xff;
  o[49] = x12 >>>  8 & 0xff;
  o[50] = x12 >>> 16 & 0xff;
  o[51] = x12 >>> 24 & 0xff;

  o[52] = x13 >>>  0 & 0xff;
  o[53] = x13 >>>  8 & 0xff;
  o[54] = x13 >>> 16 & 0xff;
  o[55] = x13 >>> 24 & 0xff;

  o[56] = x14 >>>  0 & 0xff;
  o[57] = x14 >>>  8 & 0xff;
  o[58] = x14 >>> 16 & 0xff;
  o[59] = x14 >>> 24 & 0xff;

  o[60] = x15 >>>  0 & 0xff;
  o[61] = x15 >>>  8 & 0xff;
  o[62] = x15 >>> 16 & 0xff;
  o[63] = x15 >>> 24 & 0xff;
}

function core_hsalsa20(o,p,k,c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x5 >>>  0 & 0xff;
  o[ 5] = x5 >>>  8 & 0xff;
  o[ 6] = x5 >>> 16 & 0xff;
  o[ 7] = x5 >>> 24 & 0xff;

  o[ 8] = x10 >>>  0 & 0xff;
  o[ 9] = x10 >>>  8 & 0xff;
  o[10] = x10 >>> 16 & 0xff;
  o[11] = x10 >>> 24 & 0xff;

  o[12] = x15 >>>  0 & 0xff;
  o[13] = x15 >>>  8 & 0xff;
  o[14] = x15 >>> 16 & 0xff;
  o[15] = x15 >>> 24 & 0xff;

  o[16] = x6 >>>  0 & 0xff;
  o[17] = x6 >>>  8 & 0xff;
  o[18] = x6 >>> 16 & 0xff;
  o[19] = x6 >>> 24 & 0xff;

  o[20] = x7 >>>  0 & 0xff;
  o[21] = x7 >>>  8 & 0xff;
  o[22] = x7 >>> 16 & 0xff;
  o[23] = x7 >>> 24 & 0xff;

  o[24] = x8 >>>  0 & 0xff;
  o[25] = x8 >>>  8 & 0xff;
  o[26] = x8 >>> 16 & 0xff;
  o[27] = x8 >>> 24 & 0xff;

  o[28] = x9 >>>  0 & 0xff;
  o[29] = x9 >>>  8 & 0xff;
  o[30] = x9 >>> 16 & 0xff;
  o[31] = x9 >>> 24 & 0xff;
}

function crypto_core_salsa20(out,inp,k,c) {
  core_salsa20(out,inp,k,c);
}

function crypto_core_hsalsa20(out,inp,k,c) {
  core_hsalsa20(out,inp,k,c);
}

var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            // "expand 32-byte k"

function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
    mpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];
  }
  return 0;
}

function crypto_stream_salsa20(c,cpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = x[i];
  }
  return 0;
}

function crypto_stream(c,cpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20(c,cpos,d,sn,s);
}

function crypto_stream_xor(c,cpos,m,mpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);
}

/*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/

var poly1305 = function(key) {
  this.buffer = new Uint8Array(16);
  this.r = new Uint16Array(10);
  this.h = new Uint16Array(10);
  this.pad = new Uint16Array(8);
  this.leftover = 0;
  this.fin = 0;

  var t0, t1, t2, t3, t4, t5, t6, t7;

  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;
  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;
  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;
  this.r[5] = ((t4 >>>  1)) & 0x1ffe;
  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;
  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
  this.r[9] = ((t7 >>>  5)) & 0x007f;

  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
};

poly1305.prototype.blocks = function(m, mpos, bytes) {
  var hibit = this.fin ? 0 : (1 << 11);
  var t0, t1, t2, t3, t4, t5, t6, t7, c;
  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;

  var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];

  var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];

  while (bytes >= 16) {
    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;
    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;
    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;
    h5 += ((t4 >>>  1)) & 0x1fff;
    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;
    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
    h9 += ((t7 >>> 5)) | hibit;

    c = 0;

    d0 = c;
    d0 += h0 * r0;
    d0 += h1 * (5 * r9);
    d0 += h2 * (5 * r8);
    d0 += h3 * (5 * r7);
    d0 += h4 * (5 * r6);
    c = (d0 >>> 13); d0 &= 0x1fff;
    d0 += h5 * (5 * r5);
    d0 += h6 * (5 * r4);
    d0 += h7 * (5 * r3);
    d0 += h8 * (5 * r2);
    d0 += h9 * (5 * r1);
    c += (d0 >>> 13); d0 &= 0x1fff;

    d1 = c;
    d1 += h0 * r1;
    d1 += h1 * r0;
    d1 += h2 * (5 * r9);
    d1 += h3 * (5 * r8);
    d1 += h4 * (5 * r7);
    c = (d1 >>> 13); d1 &= 0x1fff;
    d1 += h5 * (5 * r6);
    d1 += h6 * (5 * r5);
    d1 += h7 * (5 * r4);
    d1 += h8 * (5 * r3);
    d1 += h9 * (5 * r2);
    c += (d1 >>> 13); d1 &= 0x1fff;

    d2 = c;
    d2 += h0 * r2;
    d2 += h1 * r1;
    d2 += h2 * r0;
    d2 += h3 * (5 * r9);
    d2 += h4 * (5 * r8);
    c = (d2 >>> 13); d2 &= 0x1fff;
    d2 += h5 * (5 * r7);
    d2 += h6 * (5 * r6);
    d2 += h7 * (5 * r5);
    d2 += h8 * (5 * r4);
    d2 += h9 * (5 * r3);
    c += (d2 >>> 13); d2 &= 0x1fff;

    d3 = c;
    d3 += h0 * r3;
    d3 += h1 * r2;
    d3 += h2 * r1;
    d3 += h3 * r0;
    d3 += h4 * (5 * r9);
    c = (d3 >>> 13); d3 &= 0x1fff;
    d3 += h5 * (5 * r8);
    d3 += h6 * (5 * r7);
    d3 += h7 * (5 * r6);
    d3 += h8 * (5 * r5);
    d3 += h9 * (5 * r4);
    c += (d3 >>> 13); d3 &= 0x1fff;

    d4 = c;
    d4 += h0 * r4;
    d4 += h1 * r3;
    d4 += h2 * r2;
    d4 += h3 * r1;
    d4 += h4 * r0;
    c = (d4 >>> 13); d4 &= 0x1fff;
    d4 += h5 * (5 * r9);
    d4 += h6 * (5 * r8);
    d4 += h7 * (5 * r7);
    d4 += h8 * (5 * r6);
    d4 += h9 * (5 * r5);
    c += (d4 >>> 13); d4 &= 0x1fff;

    d5 = c;
    d5 += h0 * r5;
    d5 += h1 * r4;
    d5 += h2 * r3;
    d5 += h3 * r2;
    d5 += h4 * r1;
    c = (d5 >>> 13); d5 &= 0x1fff;
    d5 += h5 * r0;
    d5 += h6 * (5 * r9);
    d5 += h7 * (5 * r8);
    d5 += h8 * (5 * r7);
    d5 += h9 * (5 * r6);
    c += (d5 >>> 13); d5 &= 0x1fff;

    d6 = c;
    d6 += h0 * r6;
    d6 += h1 * r5;
    d6 += h2 * r4;
    d6 += h3 * r3;
    d6 += h4 * r2;
    c = (d6 >>> 13); d6 &= 0x1fff;
    d6 += h5 * r1;
    d6 += h6 * r0;
    d6 += h7 * (5 * r9);
    d6 += h8 * (5 * r8);
    d6 += h9 * (5 * r7);
    c += (d6 >>> 13); d6 &= 0x1fff;

    d7 = c;
    d7 += h0 * r7;
    d7 += h1 * r6;
    d7 += h2 * r5;
    d7 += h3 * r4;
    d7 += h4 * r3;
    c = (d7 >>> 13); d7 &= 0x1fff;
    d7 += h5 * r2;
    d7 += h6 * r1;
    d7 += h7 * r0;
    d7 += h8 * (5 * r9);
    d7 += h9 * (5 * r8);
    c += (d7 >>> 13); d7 &= 0x1fff;

    d8 = c;
    d8 += h0 * r8;
    d8 += h1 * r7;
    d8 += h2 * r6;
    d8 += h3 * r5;
    d8 += h4 * r4;
    c = (d8 >>> 13); d8 &= 0x1fff;
    d8 += h5 * r3;
    d8 += h6 * r2;
    d8 += h7 * r1;
    d8 += h8 * r0;
    d8 += h9 * (5 * r9);
    c += (d8 >>> 13); d8 &= 0x1fff;

    d9 = c;
    d9 += h0 * r9;
    d9 += h1 * r8;
    d9 += h2 * r7;
    d9 += h3 * r6;
    d9 += h4 * r5;
    c = (d9 >>> 13); d9 &= 0x1fff;
    d9 += h5 * r4;
    d9 += h6 * r3;
    d9 += h7 * r2;
    d9 += h8 * r1;
    d9 += h9 * r0;
    c += (d9 >>> 13); d9 &= 0x1fff;

    c = (((c << 2) + c)) | 0;
    c = (c + d0) | 0;
    d0 = c & 0x1fff;
    c = (c >>> 13);
    d1 += c;

    h0 = d0;
    h1 = d1;
    h2 = d2;
    h3 = d3;
    h4 = d4;
    h5 = d5;
    h6 = d6;
    h7 = d7;
    h8 = d8;
    h9 = d9;

    mpos += 16;
    bytes -= 16;
  }
  this.h[0] = h0;
  this.h[1] = h1;
  this.h[2] = h2;
  this.h[3] = h3;
  this.h[4] = h4;
  this.h[5] = h5;
  this.h[6] = h6;
  this.h[7] = h7;
  this.h[8] = h8;
  this.h[9] = h9;
};

poly1305.prototype.finish = function(mac, macpos) {
  var g = new Uint16Array(10);
  var c, mask, f, i;

  if (this.leftover) {
    i = this.leftover;
    this.buffer[i++] = 1;
    for (; i < 16; i++) this.buffer[i] = 0;
    this.fin = 1;
    this.blocks(this.buffer, 0, 16);
  }

  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  for (i = 2; i < 10; i++) {
    this.h[i] += c;
    c = this.h[i] >>> 13;
    this.h[i] &= 0x1fff;
  }
  this.h[0] += (c * 5);
  c = this.h[0] >>> 13;
  this.h[0] &= 0x1fff;
  this.h[1] += c;
  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  this.h[2] += c;

  g[0] = this.h[0] + 5;
  c = g[0] >>> 13;
  g[0] &= 0x1fff;
  for (i = 1; i < 10; i++) {
    g[i] = this.h[i] + c;
    c = g[i] >>> 13;
    g[i] &= 0x1fff;
  }
  g[9] -= (1 << 13);

  mask = (c ^ 1) - 1;
  for (i = 0; i < 10; i++) g[i] &= mask;
  mask = ~mask;
  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];

  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;
  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;
  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;
  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;
  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;
  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;
  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;
  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;

  f = this.h[0] + this.pad[0];
  this.h[0] = f & 0xffff;
  for (i = 1; i < 8; i++) {
    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
    this.h[i] = f & 0xffff;
  }

  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;
  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;
  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;
  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;
  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;
  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;
  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;
  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;
  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;
  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;
  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;
  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;
  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;
  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;
  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;
  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;
};

poly1305.prototype.update = function(m, mpos, bytes) {
  var i, want;

  if (this.leftover) {
    want = (16 - this.leftover);
    if (want > bytes)
      want = bytes;
    for (i = 0; i < want; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    bytes -= want;
    mpos += want;
    this.leftover += want;
    if (this.leftover < 16)
      return;
    this.blocks(this.buffer, 0, 16);
    this.leftover = 0;
  }

  if (bytes >= 16) {
    want = bytes - (bytes % 16);
    this.blocks(m, mpos, want);
    mpos += want;
    bytes -= want;
  }

  if (bytes) {
    for (i = 0; i < bytes; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    this.leftover += bytes;
  }
};

function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
  var s = new poly1305(k);
  s.update(m, mpos, n);
  s.finish(out, outpos);
  return 0;
}

function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
  var x = new Uint8Array(16);
  crypto_onetimeauth(x,0,m,mpos,n,k);
  return crypto_verify_16(h,hpos,x,0);
}

function crypto_secretbox(c,m,d,n,k) {
  var i;
  if (d < 32) return -1;
  crypto_stream_xor(c,0,m,0,d,n,k);
  crypto_onetimeauth(c, 16, c, 32, d - 32, c);
  for (i = 0; i < 16; i++) c[i] = 0;
  return 0;
}

function crypto_secretbox_open(m,c,d,n,k) {
  var i;
  var x = new Uint8Array(32);
  if (d < 32) return -1;
  crypto_stream(x,0,32,n,k);
  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;
  crypto_stream_xor(m,0,c,0,d,n,k);
  for (i = 0; i < 32; i++) m[i] = 0;
  return 0;
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

function crypto_box_keypair(y, x) {
  randombytes(x, 32);
  return crypto_scalarmult_base(y, x);
}

function crypto_box_beforenm(k, y, x) {
  var s = new Uint8Array(32);
  crypto_scalarmult(s, x, y);
  return crypto_core_hsalsa20(k, _0, s, sigma);
}

var crypto_box_afternm = crypto_secretbox;
var crypto_box_open_afternm = crypto_secretbox_open;

function crypto_box(c, m, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_afternm(c, m, d, n, k);
}

function crypto_box_open(m, c, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_open_afternm(m, c, d, n, k);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

function crypto_sign_keypair(pk, sk, seeded) {
  var d = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];
  var i;

  if (!seeded) randombytes(sk, 32);
  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  scalarbase(p, d);
  pack(pk, p);

  for (i = 0; i < 32; i++) sk[i+32] = pk[i];
  return 0;
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = Math.floor((x[j] + 128) / 256);
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Note: difference from C - smlen returned, not passed as argument.
function crypto_sign(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  var smlen = n + 64;
  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 32; i < 64; i++) sm[i] = sk[i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * d[j];
    }
  }

  modL(sm.subarray(32), x);
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  return n;
}

var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;

nacl.lowlevel = {
  crypto_core_hsalsa20: crypto_core_hsalsa20,
  crypto_stream_xor: crypto_stream_xor,
  crypto_stream: crypto_stream,
  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
  crypto_stream_salsa20: crypto_stream_salsa20,
  crypto_onetimeauth: crypto_onetimeauth,
  crypto_onetimeauth_verify: crypto_onetimeauth_verify,
  crypto_verify_16: crypto_verify_16,
  crypto_verify_32: crypto_verify_32,
  crypto_secretbox: crypto_secretbox,
  crypto_secretbox_open: crypto_secretbox_open,
  crypto_scalarmult: crypto_scalarmult,
  crypto_scalarmult_base: crypto_scalarmult_base,
  crypto_box_beforenm: crypto_box_beforenm,
  crypto_box_afternm: crypto_box_afternm,
  crypto_box: crypto_box,
  crypto_box_open: crypto_box_open,
  crypto_box_keypair: crypto_box_keypair,
  crypto_hash: crypto_hash,
  crypto_sign: crypto_sign,
  crypto_sign_keypair: crypto_sign_keypair,
  crypto_sign_open: crypto_sign_open,

  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
  crypto_sign_BYTES: crypto_sign_BYTES,
  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
  crypto_hash_BYTES: crypto_hash_BYTES,

  gf: gf,
  D: D,
  L: L,
  pack25519: pack25519,
  unpack25519: unpack25519,
  M: M,
  A: A,
  S: S,
  Z: Z,
  pow2523: pow2523,
  add: add,
  set25519: set25519,
  modL: modL,
  scalarmult: scalarmult,
  scalarbase: scalarbase,
};

/* High-level API */

function checkLengths(k, n) {
  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
}

function checkBoxLengths(pk, sk) {
  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
}

function checkArrayTypes() {
  for (var i = 0; i < arguments.length; i++) {
    if (!(arguments[i] instanceof Uint8Array))
      throw new TypeError('unexpected type, use Uint8Array');
  }
}

function cleanup(arr) {
  for (var i = 0; i < arr.length; i++) arr[i] = 0;
}

nacl.randomBytes = function(n) {
  var b = new Uint8Array(n);
  randombytes(b, n);
  return b;
};

nacl.secretbox = function(msg, nonce, key) {
  checkArrayTypes(msg, nonce, key);
  checkLengths(key, nonce);
  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
  var c = new Uint8Array(m.length);
  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];
  crypto_secretbox(c, m, m.length, nonce, key);
  return c.subarray(crypto_secretbox_BOXZEROBYTES);
};

nacl.secretbox.open = function(box, nonce, key) {
  checkArrayTypes(box, nonce, key);
  checkLengths(key, nonce);
  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
  var m = new Uint8Array(c.length);
  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];
  if (c.length < 32) return null;
  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
  return m.subarray(crypto_secretbox_ZEROBYTES);
};

nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;

nacl.scalarMult = function(n, p) {
  checkArrayTypes(n, p);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult(q, n, p);
  return q;
};

nacl.scalarMult.base = function(n) {
  checkArrayTypes(n);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult_base(q, n);
  return q;
};

nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;

nacl.box = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox(msg, nonce, k);
};

nacl.box.before = function(publicKey, secretKey) {
  checkArrayTypes(publicKey, secretKey);
  checkBoxLengths(publicKey, secretKey);
  var k = new Uint8Array(crypto_box_BEFORENMBYTES);
  crypto_box_beforenm(k, publicKey, secretKey);
  return k;
};

nacl.box.after = nacl.secretbox;

nacl.box.open = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox.open(msg, nonce, k);
};

nacl.box.open.after = nacl.secretbox.open;

nacl.box.keyPair = function() {
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
  crypto_box_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.box.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_box_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  crypto_scalarmult_base(pk, secretKey);
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
nacl.box.nonceLength = crypto_box_NONCEBYTES;
nacl.box.overheadLength = nacl.secretbox.overheadLength;

nacl.sign = function(msg, secretKey) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);
  crypto_sign(signedMsg, msg, msg.length, secretKey);
  return signedMsg;
};

nacl.sign.open = function(signedMsg, publicKey) {
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

nacl.sign.detached = function(msg, secretKey) {
  var signedMsg = nacl.sign(msg, secretKey);
  var sig = new Uint8Array(crypto_sign_BYTES);
  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
  return sig;
};

nacl.sign.detached.verify = function(msg, sig, publicKey) {
  checkArrayTypes(msg, sig, publicKey);
  if (sig.length !== crypto_sign_BYTES)
    throw new Error('bad signature size');
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
  var m = new Uint8Array(crypto_sign_BYTES + msg.length);
  var i;
  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];
  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
};

nacl.sign.keyPair = function() {
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  crypto_sign_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.sign.keyPair.fromSeed = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== crypto_sign_SEEDBYTES)
    throw new Error('bad seed size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  for (var i = 0; i < 32; i++) sk[i] = seed[i];
  crypto_sign_keypair(pk, sk, true);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
nacl.sign.seedLength = crypto_sign_SEEDBYTES;
nacl.sign.signatureLength = crypto_sign_BYTES;

nacl.hash = function(msg) {
  checkArrayTypes(msg);
  var h = new Uint8Array(crypto_hash_BYTES);
  crypto_hash(h, msg, msg.length);
  return h;
};

nacl.hash.hashLength = crypto_hash_BYTES;

nacl.verify = function(x, y) {
  checkArrayTypes(x, y);
  // Zero length arguments are considered not equal.
  if (x.length === 0 || y.length === 0) return false;
  if (x.length !== y.length) return false;
  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
};

nacl.setPRNG = function(fn) {
  randombytes = fn;
};

(function() {
  // Initialize PRNG if environment provides CSPRNG.
  // If not, methods calling randombytes will throw.
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;
  if (crypto && crypto.getRandomValues) {
    // Browsers.
    var QUOTA = 65536;
    nacl.setPRNG(function(x, n) {
      var i, v = new Uint8Array(n);
      for (i = 0; i < n; i += QUOTA) {
        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
      }
      for (i = 0; i < n; i++) x[i] = v[i];
      cleanup(v);
    });
  } else if (typeof require !== 'undefined') {
    // Node.js.
    crypto = require('crypto');
    if (crypto && crypto.randomBytes) {
      nacl.setPRNG(function(x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    }
  }
})();

})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));

},{"crypto":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify/browser.js":[function(require,module,exports){
(function (Buffer){(function (){

module.exports = function (sodium, exports) {

function I(b) {
  return Buffer.isBuffer(b) ? new Uint8Array(b) : b
}

function B(b) {
  return (b instanceof Uint8Array) ? new Buffer(b) : b
}

function bufferize(fn) {
  if('function' !== typeof fn)
    throw new Error('not a function:'+fn)

  return function () {
    var args = [].map.call(arguments, I)
    var r =  B(fn.apply(this, args))
    return r
  }
}

function keys (k) {
  return {
    publicKey: B(k.publicKey),
    secretKey: B(k.secretKey || k.privateKey)
  }
}

exports.crypto_sign_seed_keypair = function (seed) {
  return keys(sodium.crypto_sign_seed_keypair(I(seed)))
}

exports.crypto_sign_keypair = function () {
  return keys(sodium.crypto_sign_keypair())
}

exports.crypto_box_keypair = function () {
  return keys(sodium.crypto_box_keypair())
}

;[
  'sign_verify_detached',
  'sign_detached',
  'sign',
  'sign_open',
  'sign_ed25519_pk_to_curve25519',
  'sign_ed25519_sk_to_curve25519',
  'scalarmult',
  'secretbox_easy',
  'secretbox_open_easy',
  'box_easy',
  'box_open_easy',
  'auth',
  'auth_verify',
  'hash'
].forEach(function (name) {
  if(name === 'auth_verify') {
    //this is inconsistent with sign_verify!!
    var fn = bufferize(sodium.crypto_auth_verify)
    exports['crypto_'+name] = function (msg, tok, key) { return fn(msg, tok, key) ? 0 : 1 }
  }
  else if(sodium['crypto_'+name]){
    exports['crypto_'+name] = bufferize(sodium['crypto_'+name])
  }
  else
    throw new Error('missing:'+name)
})

var Sha256 = require('sha.js/sha256')
exports.crypto_hash_sha256 = function (msg) {
  return new Sha256().update(msg).digest()
}

function nullIfThrew (fn) {
  return function () {
    try { return fn.apply(this, [].slice.call(arguments)) }
    catch (err) { return null }
  }
}

exports.crypto_secretbox_open_easy = nullIfThrew(exports.crypto_secretbox_open_easy)
exports.crypto_box_open_easy = nullIfThrew(exports.crypto_box_open_easy)

exports.randombytes = function (buf) {
  new Buffer(sodium.randombytes_buf(buf.length)).copy(buf)
  return null
}
return exports
}



}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","sha.js/sha256":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sha.js/sha256.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify/index.js":[function(require,module,exports){
(function (process){(function (){
//only exports browser api. use chloride module
//to get automatic fallbacks!

//load tweetnacl first, so that it works sync, and everything is there.
var exports = require('sodium-browserify-tweetnacl')

var EventEmitter = require('events')
module.exports.events = new EventEmitter()

for(var k in exports) (function (k) {
  if('function' == typeof exports[k])
    //functions that wrap references to exports,
    //so if you grab a reference when it's pointing at tweetnacl
    //it will switch to wasm when that's ready.
    module.exports[k] = function () {
      return exports[k].apply(this, arguments)
    }
})(k)

//now load wasm which has to be async, ugh.
var libsodium = require('libsodium-wrappers')
libsodium.ready.then(function (value, what) {
  require('./browser') (libsodium, exports)
  //set module.exports so that it 
  module.exports.events.emit("sodium-browserify:wasm loaded")
  module.exports = exports
}).catch(function (err) {
  //escape from promise land, ugh
  setTimeout(function () {
    console.log(err.stack)
    process.exit(1)
  })
})

}).call(this)}).call(this,require('_process'))
},{"./browser":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify/browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","libsodium-wrappers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js","sodium-browserify-tweetnacl":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify-tweetnacl/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/split-buffer/index.js":[function(require,module,exports){

module.exports = function split (data, max) {

  if(max <= 0) throw new Error('cannot split into zero (or smaller) length buffers')

  if(data.length <= max)
    return [data]
  var out = [], len = 0

  while(len < data.length) {
    out.push(data.slice(len, Math.min(len + max, data.length)))
    len += max
  }

  return out
}


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/async/blobify.js":[function(require,module,exports){
module.exports = function blobify (doc, cb) {
  if (!doc.blob) {
    doc.blob = dataURItoBlob(doc.data)
    delete doc.data
  }

  cb(null, doc)
}

function dataURItoBlob (dataURI) {
  var byteString = window.atob(dataURI.split(',')[1])
  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]
  var ab = new ArrayBuffer(byteString.length)
  var ia = new Uint8Array(ab)
  for (var i = 0; i < byteString.length; i++) {
    ia[i] = byteString.charCodeAt(i)
  }
  return new window.Blob([ab], { type: mimeString })
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/async/image-process.js":[function(require,module,exports){
const piexif = require('piexifjs')
const resizeDimensions = require('../lib/resize-dimensions')
const { resolve } = require('../utils')

module.exports = function imageProcess (opts) {
  const { quality = 0.85, resize, stripExif } = opts

  return function (doc, cb) {
    var orientation = 0
    if (doc.mimeType === 'image/jpeg') {
      try {
        orientation = getOrientation(doc.data)
        if (resolve(stripExif) === true) doc.data = removeExif(doc.data, orientation)
      } catch (ex) {
        console.log('exif exception:', ex)
      }
    }

    // handle exif orientation data and resize
    if (orientation >= 3 || resize) {
      getImage(doc.data, (image) => {
        image = rotate(image, orientation)
        if (resize) {
          image = doResize(image, resize.width, resize.height)
        }
        if (image.toBlob) {
          if (doc.mimeType !== 'image/jpeg' && doc.mimeType !== 'image/png') {
            doc.mimeType = 'image/jpeg'
          }
          image.toBlob(blob => {
            doc.blob = blob
            delete doc.data
            cb(null, doc)
          }, doc.mimeType, quality)
        } else {
          cb(null, doc)
        }
      })
    } else {
      cb(null, doc)
    }
  }
}

function getImage (data, cb) {
  var image = document.createElement('img')
  image.onload = () => cb(image)
  image.src = data
  image.style.display = 'block'
  //if (image.complete) cb(image)
}

function doResize (image, width, height) {
  if (image.height < height && image.width < width)
    return image

  const final = resizeDimensions(width, height, image)

  var canvas = document.createElement('canvas')
  canvas.width = final.width
  canvas.height = final.height

  var ctx = canvas.getContext('2d')
  ctx.drawImage(image, final.x, final.y, final.width, final.height)

  return canvas
}

function removeExif (fileData, orientation) {
  var clean = piexif.remove(fileData)
  if (orientation !== undefined) { // preserve
    var exifData = { '0th': {} }
    exifData['0th'][piexif.ImageIFD.Orientation] = orientation
    var exifStr = piexif.dump(exifData)
    return piexif.insert(exifStr, clean)
  } else {
    return clean
  }
}

function getOrientation (fileData) {
  var exif = piexif.load(fileData)
  return exif['0th'][piexif.ImageIFD.Orientation]
}

function rotate (img, orientation) {
  var canvas = document.createElement('canvas')
  var ctx = canvas.getContext('2d')

  if (orientation === 6 || orientation === 8) {
    canvas.width = img.height
    canvas.height = img.width
    ctx.translate(img.height / 2, img.width / 2)
    if (orientation === 6) {
      ctx.rotate(0.5 * Math.PI)
    } else {
      ctx.rotate(1.5 * Math.PI)
    }
  } else if (orientation === 3) {
    canvas.width = img.width
    canvas.height = img.height
    ctx.translate(img.width / 2, img.height / 2)
    ctx.rotate(1 * Math.PI)
  } else {
    return img
  }

  ctx.drawImage(img, -img.width / 2, -img.height / 2)
  return canvas
}


},{"../lib/resize-dimensions":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/lib/resize-dimensions.js","../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/utils.js","piexifjs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/piexifjs/piexif.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/async/publish-blob.js":[function(require,module,exports){
(function (Buffer){(function (){
const pull = require('pull-stream')
const pullDefer = require('pull-defer')
const pullBoxStream = require('pull-box-stream')
const split = require('split-buffer')
const crypto = require('crypto')
const MaxSizeError = require('../lib/max-size-error')
const zeros = Buffer.alloc(24, 0)
const { resolve, onceTrue } = require('../utils')

module.exports = function publishBlob ({ server, isPrivate, maxSize }) {
  return function (doc, cb) {
    const { name, mimeType: type, blob } = doc

    var reader = new FileReader()
    reader.onload = function () {
      // TODO bail out and run onError(?) if size > 5MB

      const size = reader.result.length || reader.result.byteLength
      if (size > maxSize) {
        return cb(null, new MaxSizeError({
          fileSize: size,
          fileName: name,
          maxFileSize: maxSize
        }))
      }

      pull(
        pull.values(split(Buffer.from(reader.result), 64 * 1024)),
        pullAddBlobSink({ server, encrypt: resolve(isPrivate) }, (err, link) => {
          if (err) return cb(err)

          cb(null, { link, name, size, type })
        })
      )
    }
    reader.readAsArrayBuffer(blob)
  }
}

function pullAddBlobSink ({ server, encrypt = false }, cb) {
  var sink = pullDefer.sink()

  onceTrue(server, sbot => {
    if (!encrypt) {
      sink.resolve(Hash(function (err, buffers, hash) {
        var id = '&' + hash.toString('base64') + '.sha256'
        sbot.blobs.add(id, new Blob(buffers), (err) => {
          if (err) return cb(err)

          cb(null, id)
        })
      }))
    }
    else
    {
      // FROM: https://github.com/ssbc/ssb-secret-blob/blob/master/index.js
      // here we need to hash something twice, first, hash the plain text to use as the
      // key. This has the benefit of encrypting deterministically - the same file will
      // have the same hash. This can be used to deduplicate storage, but has privacy
      // implications. I do it here just because it's early days and this makes testing
      // easier.

      sink.resolve(Hash(function (err, buffers, key) {
        if (err) return cb(err)
        pull(
          pull.once(Buffer.concat(buffers)),
          pullBoxStream.createBoxStream(key, zeros),
          Hash(function (err, encryptedBuffers, hash) {
            if (err) return cb(err)
            var id = '&' + hash.toString('base64') + '.sha256'

            sbot.blobs.addPrivate(id, new Blob(buffers), () => {
              if (err) return cb(err)

              sbot.blobs.add(id, new Blob(encryptedBuffers), function (err) {
                if (err) return cb(err)

                sbot.blobs.push(id, function (err) {
                  if (err) return cb(err)

                  cb(null, id + '?unbox=' + key.toString('base64') + '.boxs')
                })
              })
            })
          })
        )
      }))
    }
  })

  return sink
}

function Hash (cb) {
  var hash = crypto.createHash('sha256')
  var buffers = []

  return pull.drain(
    data => {
      data = typeof data === 'string' ? Buffer.from(data) : data
      buffers.push(data)
      hash.update(data)
    },
    err => cb(err, buffers, hash.digest())
  )
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"../lib/max-size-error":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/lib/max-size-error.js","../utils":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/utils.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","crypto":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/crypto-browserify/index.js","pull-box-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-box-stream/index.js","pull-defer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","split-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/split-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/index.js":[function(require,module,exports){
const pull = require('pull-stream')
const mime = require('simple-mime')('application/octet-stream')

const imageProcess = require('./async/image-process')
const blobify = require('./async/blobify')
const publishBlob = require('./async/publish-blob')
const MAX_SIZE = 5 * 1024 * 1024 // 5MB
const MaxSizeError = require('./lib/max-size-error')

module.exports = function blobFiles (files, server, opts, cb) {
  if (!files.length) return
  if (typeof opts === 'function') return blobFiles(files, server, {}, opts)

  const { stripExif, resize, quality, isPrivate, maxSize = MAX_SIZE } = opts
  pull(
    pull.values(files),
    pull.asyncMap(buildFileDoc),
    pull.asyncMap(imageProcess({ stripExif, resize, quality })),
    pull.asyncMap(blobify),
    pull.asyncMap(publishBlob({ server, isPrivate, maxSize })),
    pull.drain(
      result => {
        // this catches the maxSize errors from publishBlob
        if (result.constructor === Error) cb(result)
        else cb(null, result)
      },
      err => {
        if (err === null) return // done signal
        cb(err)
      }
    )
  )

  function buildFileDoc (file, cb) {
    if (resize || file.size < maxSize) {
      const reader = new FileReader()
      reader.onload = function (e) {
        cb(null, {
          name: file.name,
          mimeType: mime(file.name),
          data: e.target.result
        })
      }
      reader.readAsDataURL(file)
    } else {
      // files larger than 20 MB or so will take a long time to process with readAsDataURL
      // larger than 100 MB and they might lock up the entire app (fill the ram)
      // We'll just bail before it gets serious! (since ssb can only accept files < 5 MB anyway)
      cb(new MaxSizeError({
        fileName: file.name,
        fileSize: file.size,
        maxFileSize: maxSize
      }))
    }
  }
}

// re-export error so that it can be used to check the type
module.exports.MaxSizeError = MaxSizeError

},{"./async/blobify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/async/blobify.js","./async/image-process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/async/image-process.js","./async/publish-blob":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/async/publish-blob.js","./lib/max-size-error":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/lib/max-size-error.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","simple-mime":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/simple-mime/simple-mime.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/lib/max-size-error.js":[function(require,module,exports){
class MaxSizeError extends Error {
  constructor ({ fileName, fileSize, maxFileSize }) {
    super(`${fileName} (${humanSize(fileSize)}) is larger than the allowed limit of ${humanSize(maxFileSize)}`)

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, MaxSizeError)
    }

    this.fileName = fileName
    this.fileSize = fileSize
    this.maxFileSize = maxFileSize
    this.code = 'EXCEEDS_MAX_SIZE'
  }
}

module.exports = MaxSizeError

function humanSize (size) {
  return (Math.ceil(size / (1024 * 1024) * 10) / 10) + ' MB'
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/lib/resize-dimensions.js":[function(require,module,exports){
module.exports = (width, height, image) => {
  var ratioX = width / image.width
  var ratioY = height / image.height
  var ratio = Math.min(ratioX, ratioY)

  return {
    x: 0,
    y: 0,
    width: image.width * ratio,
    height: image.height * ratio
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-blob-files/utils.js":[function(require,module,exports){
(function (setImmediate){(function (){
module.exports = {
  resolve,
  onceTrue
}

// stolen from mutant:

function resolve (source) {
  return typeof source === 'function' ? source() : source
}

function onceTrue (value, fn) {
  var done = false
  var release = watch(value, (v) => {
    if (v && !done) {
      done = true
      setImmediate(doRelease)
      fn(v)
    }
  }, { nextTick: true })

  return release

  function doRelease () {
    release()
  }
}

function watch (observable, listener) {
  listener = listener || noop
  if (typeof observable === 'function') {
    var remove = observable(listener)
    listener(observable())
    return remove
  } else {
    listener(observable)
    return noop
  }
}

function noop () {}

}).call(this)}).call(this,require("timers").setImmediate)
},{"timers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/timers-browserify/main.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-caps/caps.json":[function(require,module,exports){
module.exports={
  "shs": "1KHLiKZvAvjbY1ziZEHMXawbCEIM6qwjCDm3VYRan/s=",
  "sign": null,
  "invite": "HT0wIYuk3OWc2FtaCfHNnakV68jSGRrjRMP9Kos7IQc="
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/lib/atomic-file-codecs.js":[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.selfHealingJSONCodec = {
    encode: function (obj) {
        return JSON.stringify(obj, null, 2);
    },
    decode: function (input) {
        var str = input.toString();
        var MAX_TRIM = 10;
        var foundCorruption = false;
        for (var i = 0; i < MAX_TRIM; i++) {
            try {
                return JSON.parse(str.substring(0, str.length - i));
            }
            catch (err) {
                if (!foundCorruption) {
                    foundCorruption = true;
                    console.warn('WARNING: ssb-conn-db found a corrupted conn.json file ' +
                        'and is attempting to heal it');
                }
                continue;
            }
        }
        console.error('ERROR! ssb-conn-db failed to heal corrupted conn.json file');
        return {};
    },
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/lib/index.js":[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var fs = require("fs");
var path = require("path");
var os = require("os");
var migration_1 = require("./migration");
var atomic_file_codecs_1 = require("./atomic-file-codecs");
var AtomicFile = require('atomic-file');
var Notify = require('pull-notify');
var msAddress = require('multiserver-address');
var debug = require('debug')('ssb:conn-db');
var defaultOpts = {
    path: path.join(os.homedir(), '.ssb'),
    writeTimeout: 2000,
};
var ConnDB = (function () {
    function ConnDB(opts) {
        var _this = this;
        var _a;
        var dirPath = (_a = opts.path) !== null && _a !== void 0 ? _a : defaultOpts.path;
        var modernPath = path.join(dirPath, 'conn.json');
        var legacyPath = path.join(dirPath, 'gossip.json');
        this._map = new Map();
        this._notify = Notify();
        this._stateFile = AtomicFile(modernPath, '~', atomic_file_codecs_1.selfHealingJSONCodec);
        this._writeTimeout =
            typeof opts.writeTimeout === 'number'
                ? opts.writeTimeout
                : defaultOpts.writeTimeout;
        this._scheduledWriteTask = null;
        this._closed = false;
        this._loadedPromise = new Promise(function (resolve, reject) {
            _this._loadedResolve = resolve;
            _this._loadedReject = reject;
        });
        this._init(modernPath, legacyPath);
    }
    ConnDB.prototype._fileExists = function (path, cb) {
        if (typeof localStorage === 'undefined' || localStorage === null) {
            cb(fs.existsSync(path));
        }
        else {
            var file = AtomicFile(path);
            file.get(function (err) {
                if (err)
                    cb(false);
                else
                    cb(true);
            });
        }
    };
    ConnDB.prototype._init = function (modernPath, legacyPath) {
        var _this = this;
        this._fileExists(modernPath, function (modernExists) {
            _this._fileExists(legacyPath, function (legacyExists) {
                if (!modernExists && !legacyExists) {
                    _this._stateFile.set({}, function () { });
                    _this._loadedResolve(true);
                    debug('Created new conn.json because there was no existing ' +
                        'conn.json nor gossip.json');
                    return;
                }
                if (!modernExists && legacyExists) {
                    var legacyStateFile = AtomicFile(legacyPath);
                    legacyStateFile.get(function (err, oldVals) {
                        if (err) {
                            _this._loadedReject(err);
                            debug('Failed to load gossip.json, for creating conn.json');
                            return;
                        }
                        var newVals = migration_1.migrateMany(oldVals);
                        return _this._stateFile.set(newVals, function (err2) {
                            if (err2) {
                                _this._loadedReject(err2);
                                debug('Failed to create conn.json from an existing gossip.json');
                                return;
                            }
                            debug('Migrated gossip.json into conn.json');
                            _this._load(newVals);
                        });
                    });
                    return;
                }
                if (modernExists) {
                    _this._stateFile.get(function (err, vals) {
                        if (err) {
                            _this._loadedReject(err);
                            debug('Failed to load conn.json');
                            return;
                        }
                        _this._load(vals);
                    });
                }
            });
        });
    };
    ConnDB.prototype._load = function (vals) {
        var e_1, _a;
        var keys = Object.keys(vals);
        try {
            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
                var key = keys_1_1.value;
                this._map.set(key, vals[key]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this._loadedResolve(true);
        debug('Loaded conn.json into ConnDB in memory');
    };
    ConnDB.prototype._serialize = function () {
        var e_2, _a;
        var record = {};
        try {
            for (var _b = __values(this._map.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), address = _d[0], data = _d[1];
                record[address] = data;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return record;
    };
    ConnDB.prototype._write = function (cb) {
        if (!this._map)
            return;
        if (!this._stateFile)
            return;
        debug('Begun serializing and writing ConnDB into conn.json');
        var record = this._serialize();
        this._stateFile.set(record, function (err) {
            if (!err)
                debug('Done serializing and writing ConnDB into conn.json');
            if (cb)
                cb(err);
        });
    };
    ConnDB.prototype._cancelScheduleWrite = function () {
        if (this._scheduledWriteTask) {
            clearTimeout(this._scheduledWriteTask);
        }
    };
    ConnDB.prototype._scheduleWrite = function () {
        var _this = this;
        this._cancelScheduleWrite();
        this._scheduledWriteTask = setTimeout(function () {
            _this._write(function (_err) {
                _this._scheduledWriteTask = null;
            });
        }, this._writeTimeout);
    };
    ConnDB.prototype._assertNotClosed = function () {
        if (this._closed) {
            throw new Error('This ConnDB instance is closed, create a new one.');
        }
    };
    ConnDB.prototype._assertValidAddress = function (address) {
        if (!msAddress.check(address)) {
            throw new Error('The given address is not a valid multiserver-address');
        }
    };
    ConnDB.prototype._assertValidData = function (data) {
        if (!data || typeof data !== 'object') {
            throw new Error('The given connection data should have been an object');
        }
    };
    ConnDB.prototype.replace = function (address, data) {
        this._assertNotClosed();
        this._assertValidAddress(address);
        this._assertValidData(data);
        var existed = this._map.has(address);
        if (existed) {
            var birth = this._map.get(address).birth;
            this._map.set(address, __assign({ birth: birth !== null && birth !== void 0 ? birth : Date.now() }, data));
            this._notify({ type: 'update', address: address });
        }
        else {
            this._map.set(address, __assign({ birth: Date.now() }, data));
            this._notify({ type: 'insert', address: address });
        }
        this._scheduleWrite();
        return this;
    };
    ConnDB.prototype.set = function (address, data) {
        var _a;
        this._assertNotClosed();
        this._assertValidAddress(address);
        this._assertValidData(data);
        var existed = this._map.has(address);
        if (existed) {
            var previous = this._map.get(address);
            this._map.set(address, __assign(__assign({ birth: (_a = previous.birth) !== null && _a !== void 0 ? _a : Date.now() }, previous), data));
            this._notify({ type: 'update', address: address });
        }
        else {
            this._map.set(address, __assign({ birth: Date.now() }, data));
            this._notify({ type: 'insert', address: address });
        }
        this._scheduleWrite();
        return this;
    };
    ConnDB.prototype.update = function (address, x) {
        var _a;
        this._assertNotClosed();
        this._assertValidAddress(address);
        if (!x || (typeof x !== 'object' && typeof x !== 'function')) {
            throw new Error('update() expects an object or a function');
        }
        var existed = this._map.has(address);
        if (!existed)
            return this;
        var previous = this._map.get(address);
        var next = typeof x === 'function' ? x(previous) : x;
        this._map.set(address, __assign(__assign({ birth: (_a = previous.birth) !== null && _a !== void 0 ? _a : Date.now() }, previous), next));
        this._notify({ type: 'update', address: address });
        this._scheduleWrite();
        return this;
    };
    ConnDB.prototype.get = function (address) {
        this._assertNotClosed();
        return this._map.get(address);
    };
    ConnDB.prototype.getAddressForId = function (id) {
        var e_3, _a;
        this._assertNotClosed();
        try {
            for (var _b = __values(this._map.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), address = _d[0], data = _d[1];
                if (data.key === id)
                    return address;
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return undefined;
    };
    ConnDB.prototype.has = function (address) {
        this._assertNotClosed();
        return this._map.has(address);
    };
    ConnDB.prototype.delete = function (address) {
        this._assertNotClosed();
        var hasDeleted = this._map.delete(address);
        if (hasDeleted) {
            this._notify({ type: 'delete', address: address });
            this._scheduleWrite();
        }
        return hasDeleted;
    };
    ConnDB.prototype.entries = function () {
        this._assertNotClosed();
        return this._map.entries();
    };
    ConnDB.prototype.listen = function () {
        this._assertNotClosed();
        return this._notify.listen();
    };
    ConnDB.prototype.loaded = function () {
        this._assertNotClosed();
        return this._loadedPromise;
    };
    ConnDB.prototype.close = function () {
        var _a;
        this._closed = true;
        this._cancelScheduleWrite();
        this._write();
        (_a = this._map) === null || _a === void 0 ? void 0 : _a.clear();
        this._map = void 0;
        this._notify = void 0;
        this._stateFile = void 0;
        debug('Closed the ConnDB instance');
    };
    return ConnDB;
}());
module.exports = ConnDB;

},{"./atomic-file-codecs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/lib/atomic-file-codecs.js","./migration":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/lib/migration.js","atomic-file":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomic-file/browser.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/debug/src/browser.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","multiserver-address":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js","os":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/os-browserify/browser.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js","pull-notify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-notify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/lib/migration.js":[function(require,module,exports){
"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ref = require('ssb-ref');
function migrateOne(old) {
    if (!old)
        throw new Error('Cannot migrate undefined entry');
    if (!old.address) {
        try {
            old.address = ref.toMultiServerAddress(old);
        }
        catch (err) {
            throw new Error('Cannot migrate entry without field "address" ' +
                'or legacy {host,port,key}');
        }
    }
    var copy;
    try {
        copy = JSON.parse(JSON.stringify(old));
    }
    catch (err) {
        throw new Error('Cannot migrate entry that is not serializable');
    }
    var address = copy.address;
    delete copy.address;
    return [address, copy];
}
exports.migrateOne = migrateOne;
function migrateMany(olds) {
    if (!Array.isArray(olds))
        return {};
    return olds.reduce(function (obj, old) {
        try {
            var _a = __read(migrateOne(old), 2), address = _a[0], data = _a[1];
            obj[address] = data;
        }
        catch (err) {
            console.warn(err.message || err);
        }
        return obj;
    }, {});
}
exports.migrateMany = migrateMany;

},{"ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/debug/src/browser.js":[function(require,module,exports){
(function (process){(function (){
/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */
function log(...args) {
	// This hackery is required for IE8/9, where
	// the `console.log` function doesn't have 'apply'
	return typeof console === 'object' &&
		console.log &&
		console.log(...args);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = require('./common')(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};

}).call(this)}).call(this,require('_process'))
},{"./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/debug/src/common.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/debug/src/common.js":[function(require,module,exports){

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = require('ms');

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* Active `debug` instances.
	*/
	createDebug.instances = [];

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return match;
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.enabled = createDebug.enabled(namespace);
		debug.useColors = createDebug.useColors();
		debug.color = selectColor(namespace);
		debug.destroy = destroy;
		debug.extend = extend;
		// Debug.formatArgs = formatArgs;
		// debug.rawLog = rawLog;

		// env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		createDebug.instances.push(debug);

		return debug;
	}

	function destroy() {
		const index = createDebug.instances.indexOf(this);
		if (index !== -1) {
			createDebug.instances.splice(index, 1);
			return true;
		}
		return false;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}

		for (i = 0; i < createDebug.instances.length; i++) {
			const instance = createDebug.instances[i];
			instance.enabled = createDebug.enabled(instance.namespace);
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;

},{"ms":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ms/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/ssb-ref/index.js":[function(require,module,exports){
var isCanonicalBase64 = require('is-canonical-base64')
var isDomain = require('is-valid-domain')
var Querystring = require('querystring')
var ip = require('ip')

var parseLinkRegex = /^((@|%|&)[A-Za-z0-9\/+]{43}=\.[\w\d]+)(\?(.+))?$/
var linkRegex = exports.linkRegex = /^(@|%|&)[A-Za-z0-9\/+]{43}=\.[\w\d]+$/
var feedIdRegex = exports.feedIdRegex = isCanonicalBase64('@', '\.(?:sha256|ed25519)', 32)
var blobIdRegex = exports.blobIdRegex = isCanonicalBase64('&', '\.sha256', 32)
var msgIdRegex = exports.msgIdRegex = isCanonicalBase64('%', '\.sha256', 32)

var extractRegex = /([@%&][A-Za-z0-9\/+]{43}=\.[\w\d]+)/

var MultiServerAddress = require('multiserver-address')

function isMultiServerAddress (str) {
  //a http url fits into the multiserver scheme,
  //but all ssb address must have a transport and a transform
  //so check there is at least one unescaped ~ in the address
  return MultiServerAddress.check(str) && /[^!][~]/.test(str)
}

function isIP (s) {
  return ip.isV4Format(s) || ip.isV6Format(s)
}

var isInteger = Number.isInteger
var DEFAULT_PORT = 8008

function isString(s) {
  return 'string' === typeof s
}

var isHost = function (addr) {
  if(!isString(addr)) return
  addr = addr.replace(/^wss?:\/\//, '')
  return (isIP(addr)) || isDomain(addr) || addr === 'localhost'
}

var isPort = function (p) {
  return isInteger(p) && p <= 65536
}

function isObject (o) {
  return o && 'object' === typeof o && !Array.isArray(o)
}

var isFeedId = exports.isFeed = exports.isFeedId =
  function (data) {
    return isString(data) && feedIdRegex.test(data)
  }

var isMsgId = exports.isMsg = exports.isMsgId =
  function (data) {
    return isString(data) && msgIdRegex.test(data)
  }

var isBlobId = exports.isBlob = exports.isBlobId =
  function (data) {
    return isString(data) && blobIdRegex.test(data)
  }

var isLink = exports.isLink =
  function (data) {
    if(!isString(data)) return false
    var index = data.indexOf('?')
    data = ~index ? data.substring(0, index) : data
    return isString(data) && (isFeedId(data) || isMsgId(data) || isBlobId(data))
  }


exports.isBlobLink = function (s) {
  return s[0] === '&' && isLink(s)
}

exports.isMsgLink = function (s) {
  return s[0] === '%' && isLink(s)
}


var normalizeChannel = exports.normalizeChannel =
  function (data) {
    if (typeof data === 'string') {
      data = data.toLowerCase().replace(/\s|,|\.|\?|!|<|>|\(|\)|\[|\]|"|#/g, '')
      if (data.length > 0 && data.length < 30) {
        return data
      }
    }
  }

function deprecate (name, fn) {
  var logged = false
  return function () {
    var args = [].slice.call(arguments)
    if(!logged) {
      console.trace('deprecated api used: '+name)
      logged = true
    }
    return fn.apply(this, args)
  }
}

var parseMultiServerAddress = function (data) {
  if(!isString(data)) return false
  if(!MultiServerAddress.check(data)) return false

  var addr = MultiServerAddress.decode(data)
  addr = addr.find(function (address) {
    if (!address[0]) return false
    if (!address[1]) return false
    return /^(net|wss?|onion)$/.test(address[0].name) && /^shs/.test(address[1].name)
  })
  if (!Array.isArray(addr)) {
    return false
  }
  var port = +addr[0].data.pop() //last item always port, to handle ipv6

  //preserve protocol type on websocket addresses
  var host = (/^wss?$/.test(addr[0].name) ? addr[0].name+':' : '') + addr[0].data.join(':')
  var key = '@'+addr[1].data[0]+'.ed25519'
  var seed = addr[1].data[2]
  // allow multiserver addresses that are not currently understood!
  if(!(isHost(host) && isPort(+port) && isFeedId(key))) return false
  var address = {
    host: host,
    port: port,
    key: key,
  }
  if(seed)
    address.seed = seed

  return address
}

var toLegacyAddress = parseMultiServerAddress
exports.toLegacyAddress = deprecate('ssb-ref.toLegacyAddress', toLegacyAddress)

var isLegacyAddress = exports.isLegacyAddress = function (addr) {
  return isObject(addr) && isHost(addr.host) && isPort(addr.port) && isFeedId(addr.key)
}

var toMultiServerAddress = exports.toMultiServerAddress = function (addr) {
  if(MultiServerAddress.check(addr)) return addr
  if(!isPort(addr.port)) throw new Error('ssb-ref.toMultiServerAddress - invalid port:'+addr.port)
  if(!isHost(addr.host)) throw new Error('ssb-ref.toMultiServerAddress - invalid host:'+addr.host)
  if(!isFeedId(addr.key)) throw new Error('ssb-ref.toMultiServerAddress - invalid key:'+addr.key)

  return (
    /^wss?:/.test(addr.host)   ? addr.host
  : /\.onion$/.test(addr.host) ? 'onion:'+addr.host
  :                              'net:'+addr.host
  )+':'+addr.port+'~shs:'+addr.key.substring(1, addr.key.indexOf('.'))
}

var isAddress = exports.isAddress = function (data) {
  var host, port, id
  if(isObject(data)) {
    id = data.key; host = data.host; port = data.port
  }
  else if(!isString(data)) return false
  else if(isMultiServerAddress(data)) return true
  else {
    var parts = data.split(':')
    id = parts.pop(); port = parts.pop(); host = parts.join(':')
  }
  return (
    isFeedId(id) && isPort(+port)
    && isHost(host)
  )
}

//This is somewhat fragile, because maybe non-shs protocols get added...
//it would be better to treat all addresses as opaque or have multiserver handle
//extraction of a signing key from the address.
var getKeyFromAddress = exports.getKeyFromAddress = function (addr) {
  if(addr.key) return addr.key
  var data = MultiServerAddress.decode(addr)
  if(!data) return
  for(var k in data) {
    var address = data[k]
    for(var j in address) {
      var protocol = address[j]
      if(/^shs/.test(protocol.name)) //forwards compatible with future shs versions...
        return '@'+protocol.data[0]+'.ed25519'
    }
  }
}

var parseAddress = function (e) {
  if(isString(e)) {
    if(~e.indexOf('~'))
      return parseMultiServerAddress(e)
    var parts = e.split(':')
    var id = parts.pop(), port = parts.pop(), host = parts.join(':')
    var e = {
      host: host,
      port: +(port || DEFAULT_PORT),
      key: id
    }
    return e
  }
  return e
}
exports.parseAddress = deprecate('ssb-ref.parseAddress',parseAddress)

var toAddress = exports.toAddress = function (e) {
  e = parseAddress(e)
  e.port = e.port || DEFAULT_PORT
  e.host = e.host || 'localhost'
  return e
}


var legacyInviteRegex = /^[A-Za-z0-9\/+]{43}=$/
var legacyInviteFixerRegex = /#.*$/
var isLegacyInvite = exports.isLegacyInvite =
  function (data) {
    if(!isString(data)) return false
    data = data.replace(legacyInviteFixerRegex, '')
    var parts = data.split('~')
    return parts.length == 2 && isAddress(parts[0]) && legacyInviteRegex.test(parts[1])
  }

var isMultiServerInvite = exports.isMultiServerInvite =
  function (data) {
    if(!isString(data)) return false
    return !!parseMultiServerInvite(data)
  }

var isInvite = exports.isInvite =
  function (data) {
    if(!isString(data)) return false
    return isLegacyInvite(data) || isMultiServerInvite(data)
  }

exports.parseLink = function parseBlob (ref) {
  var match = parseLinkRegex.exec(ref)
  if (match && match[1]) {
    if (match[3]) {
      var query = Querystring.parse(match[4])
      // unbox keys have a '+' in them that is parsed into a ' ', this changes it back
      if (isString(query.unbox)) query.unbox = query.unbox.replace(/ /g, '+')
      return {link: match[1], query }
    } else {
      return {link: match[1]}
    }
  }
}

function parseLegacyInvite (invite) {
  var redirect = invite.split('#')
  invite = redirect.shift()
  var parts = invite.split('~')
  var addr = toAddress(parts[0])//.split(':')
  //convert legacy code to multiserver invite code.
  invite = remote+':'+parts[1]
  var remote = toMultiServerAddress(addr)
  return {
    invite: remote + ':' + parts[1],
    key: addr.key,
    redirect: null,
    remote: remote,
    redirect: redirect.length ? '#' + redirect.join('#') : null
  }
}

function parseMultiServerInvite (invite) {

  var redirect = invite.split('#')
  if(!redirect.length) return null

  invite = redirect.shift()
  var addr = toLegacyAddress(invite)
  if(!addr) return null
  delete addr.seed
  return {
    invite: invite,
    remote: toMultiServerAddress(addr),
    key: addr.key,
    redirect: redirect.length ? '#' + redirect.join('#') : null
  }
}

exports.parseLegacyInvite = deprecate('ssb-ref.parseLegacyInvite', parseLegacyInvite)
exports.parseMultiServerInvite = deprecate('ssb-ref.parseMultiServerInvite', parseMultiServerInvite)

exports.parseInvite = deprecate('ssb-ref.parseInvite', function (invite) {
  return (
    isLegacyInvite(invite)
  ? parseLegacyInvite(invite)
  : isMultiServerInvite(invite)
  ? parseMultiServerInvite(invite)
  : null
  )
})

exports.type =
  function (id) {
    if(!isString(id)) return false
    var c = id.charAt(0)
    if (c == '@' && isFeedId(id))
      return 'feed'
    else if (c == '%' && isMsgId(id))
      return 'msg'
    else if (c == '&' && isBlobId(id))
      return 'blob'
    else if(isAddress(id)) return 'address'
    else if(isInvite(id)) return 'invite'
    else
    return false
  }

exports.extract =
  function (data) {
    if (!isString(data))
      return false

    var _data = data

    var res = extractRegex.exec(_data)
    if (res) {
      return res && res[0]
    } else {
      try { _data = decodeURIComponent(data) }
      catch (e) {} // this may fail if it's not encoded, so don't worry if it does
      _data = _data.replace(/&amp;/g, '&')

      var res = extractRegex.exec(_data)
      return res && res[0]
    }
  }









},{"ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js","is-canonical-base64":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-canonical-base64/index.js","is-valid-domain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-valid-domain/index.js","multiserver-address":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js","querystring":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-hub/lib/index.js":[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var run = require("promisify-tuple");
var pull = require('pull-stream');
var cat = require('pull-cat');
var Notify = require('pull-notify');
var IP = require('ip');
var msNetPlugin = require('multiserver/plugins/net')({});
var msAddress = require('multiserver-address');
var Ref = require('ssb-ref');
var debug = require('debug')('ssb:conn-hub');
function noop() { }
function inferPeerType(address, meta) {
    if (address.startsWith('bt:'))
        return 'bt';
    if (address.startsWith('dht:') || meta === 'dht')
        return 'dht';
    if (address.startsWith('tunnel:'))
        return 'tunnel';
    if (address.startsWith('net:')) {
        var netAddr = address.split('~')[0];
        var parsed = msNetPlugin.parse(netAddr);
        if (parsed && parsed.host) {
            if (IP.isPrivate(parsed.host))
                return 'lan';
            else
                return 'internet';
        }
    }
    return;
}
var ConnHub = (function () {
    function ConnHub(server) {
        var _this = this;
        this._onRpcConnect = function (rpc, isClient) {
            if (rpc.id === _this._server.id)
                return;
            if (_this._server.ready && !_this._server.ready()) {
                rpc.close(true, noop);
                return;
            }
            var peer = _this._getPeerByKey(rpc.id);
            if (!peer && isClient) {
                rpc._connectRetries = rpc._connectRetries || 0;
                if (isClient && rpc._connectRetries < 4) {
                    setTimeout(function () {
                        _this._onRpcConnect(rpc, isClient);
                    }, 200);
                    rpc._connectRetries += 1;
                }
                else if (isClient) {
                    debug('our secret-stack initiated an RPC connection with %s but not ' +
                        'through the ssb-conn-hub connect() API', rpc.id);
                }
                return;
            }
            if (!peer) {
                debug('peer %s initiated an RPC connection with us', rpc.id);
            }
            var _a = __read(!peer
                ? [rpc.stream.address, { key: rpc.id }]
                : peer, 2), address = _a[0], data = _a[1];
            if (!data.type) {
                data.inferredType = inferPeerType(address, rpc.stream.meta);
            }
            var key = data.key;
            var state = 'connected';
            var disconnect = function (cb) { return rpc.close(true, cb || noop); };
            _this._setPeer(address, __assign(__assign({}, data), { state: state, disconnect: disconnect }));
            debug('connected to %s', address);
            _this._notifyEvent({
                type: state,
                address: address,
                key: key,
                details: { rpc: rpc, isClient: isClient },
            });
            _this._updateLiveEntries();
            rpc.on('closed', function () {
                _this._peers.delete(address);
                debug('disconnected from %s', address);
                _this._notifyEvent({ type: 'disconnected', address: address, key: key });
                _this._updateLiveEntries();
            });
        };
        this._server = server;
        this._closed = false;
        this._connectRetries = new Set();
        this._peers = new Map();
        this._notifyEvent = Notify();
        this._notifyEntries = Notify();
        this._init();
    }
    ConnHub.prototype._init = function () {
        this._server.addListener('rpc:connect', this._onRpcConnect);
    };
    ConnHub.prototype._assertNotClosed = function () {
        if (this._closed) {
            throw new Error('This ConnHub instance is closed, create a new one.');
        }
    };
    ConnHub.prototype._assertValidAddress = function (address) {
        if (!msAddress.check(address)) {
            throw new Error('The given address is not a valid multiserver-address');
        }
    };
    ConnHub.prototype._updateLiveEntries = function () {
        this._notifyEntries(Array.from(this._peers.entries()));
    };
    ConnHub.prototype._setPeer = function (address, data) {
        var now = Date.now();
        var hubUpdated = now;
        var previousData = this._peers.get(address);
        if (previousData) {
            Object.keys(data).forEach(function (key) {
                var k = key;
                if (typeof data[k] === 'undefined')
                    delete data[k];
            });
            this._peers.set(address, __assign(__assign(__assign({}, previousData), { hubUpdated: hubUpdated }), data));
        }
        else if (!data.state) {
            debug('unexpected control flow, we cannot add a peer without state');
        }
        else {
            var hubBirth = now;
            this._peers.set(address, __assign({ hubBirth: hubBirth, hubUpdated: hubUpdated }, data));
        }
    };
    ConnHub.prototype._getPeerByKey = function (key) {
        var e_1, _a;
        try {
            for (var _b = __values(this._peers.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), address = _d[0], data = _d[1];
                if (data.key === key)
                    return [address, data];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return undefined;
    };
    ConnHub.prototype.connect = function (address, data) {
        return __awaiter(this, void 0, void 0, function () {
            var peer_1, state, key, _a, err, rpc, peer, state_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this._assertNotClosed();
                        this._assertValidAddress(address);
                        if (this._peers.has(address)) {
                            peer_1 = this._peers.get(address);
                            if (peer_1.state === 'connecting' || peer_1.state === 'connected') {
                                return [2, false];
                            }
                            else if (peer_1.state === 'disconnecting') {
                                this._connectRetries.add(address);
                                return [2, false];
                            }
                            else {
                                debug('unexpected control flow, peer %o has bad state', peer_1);
                            }
                        }
                        state = 'connecting';
                        key = Ref.getKeyFromAddress(address);
                        if (data) {
                            this._setPeer(address, __assign(__assign({}, data), { state: state, key: key }));
                        }
                        else {
                            this._setPeer(address, { state: state, key: key });
                        }
                        debug('connecting to %s', address);
                        this._notifyEvent({ type: state, address: address, key: key });
                        this._updateLiveEntries();
                        return [4, run(this._server.connect)(address)];
                    case 1:
                        _a = __read.apply(void 0, [_b.sent(), 2]), err = _a[0], rpc = _a[1];
                        if (err) {
                            this._peers.delete(address);
                            debug('failed to connect to %s', address);
                            this._notifyEvent({
                                type: 'connecting-failed',
                                address: address,
                                key: key,
                                details: err,
                            });
                            this._updateLiveEntries();
                            throw err;
                        }
                        peer = this._peers.get(address);
                        if (!peer || peer.state !== 'connected') {
                            state_1 = 'connected';
                            this._setPeer(address, { state: state_1, key: key });
                            debug('connected to %s', address);
                            this._notifyEvent({
                                type: state_1,
                                address: address,
                                key: key,
                                details: { rpc: rpc },
                            });
                            this._updateLiveEntries();
                        }
                        return [2, rpc];
                }
            });
        });
    };
    ConnHub.prototype.disconnect = function (address) {
        return __awaiter(this, void 0, void 0, function () {
            var peer, key, prevState, state, _a, err;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this._assertNotClosed();
                        this._assertValidAddress(address);
                        if (!this._peers.has(address))
                            return [2, false];
                        peer = this._peers.get(address);
                        key = Ref.getKeyFromAddress(address);
                        prevState = peer.state;
                        if (prevState !== 'disconnecting') {
                            state = 'disconnecting';
                            this._setPeer(address, { state: state, key: key });
                            debug('disconnecting from %s', address);
                            this._notifyEvent({ type: state, address: address, key: key });
                            this._updateLiveEntries();
                        }
                        if (!peer.disconnect) return [3, 2];
                        return [4, run(peer.disconnect)()];
                    case 1:
                        _a = __read.apply(void 0, [_b.sent(), 1]), err = _a[0];
                        if (err) {
                            debug('failed to disconnect from %s', address);
                            this._notifyEvent({
                                type: 'disconnecting-failed',
                                address: address,
                                key: key,
                                details: err,
                            });
                            this._setPeer(address, { state: prevState, key: key });
                            this._updateLiveEntries();
                            throw err;
                        }
                        _b.label = 2;
                    case 2:
                        this._peers.delete(address);
                        debug('disconnected from %s', address);
                        this._notifyEvent({ type: 'disconnected', address: address, key: key });
                        this._updateLiveEntries();
                        if (this._connectRetries.has(address)) {
                            this._connectRetries.delete(address);
                            this.connect(address);
                        }
                        return [2, true];
                }
            });
        });
    };
    ConnHub.prototype.update = function (address, data) {
        this._assertNotClosed();
        this._assertValidAddress(address);
        if (this._peers.has(address)) {
            this._setPeer(address, data);
            this._updateLiveEntries();
            return true;
        }
        else {
            return false;
        }
    };
    ConnHub.prototype.reset = function () {
        var e_2, _a;
        this._assertNotClosed();
        for (var id in this._server.peers) {
            if (id !== this._server.id) {
                try {
                    for (var _b = (e_2 = void 0, __values(this._server.peers[id])), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var peer = _c.value;
                        peer.close(true, noop);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
        }
    };
    ConnHub.prototype.entries = function () {
        this._assertNotClosed();
        return this._peers.entries();
    };
    ConnHub.prototype.liveEntries = function () {
        this._assertNotClosed();
        return cat([
            pull.values([Array.from(this._peers.entries())]),
            this._notifyEntries.listen(),
        ]);
    };
    ConnHub.prototype.getState = function (address) {
        this._assertNotClosed();
        this._assertValidAddress(address);
        if (!this._peers.has(address))
            return undefined;
        return this._peers.get(address).state;
    };
    ConnHub.prototype.listen = function () {
        this._assertNotClosed();
        return this._notifyEvent.listen();
    };
    ConnHub.prototype.close = function () {
        this._server.removeListener('rpc:connect', this._onRpcConnect);
        this._closed = true;
        this._peers.clear();
        this._notifyEvent.end();
        this._notifyEntries.end();
        debug('closed the ConnHub instance');
    };
    return ConnHub;
}());
module.exports = ConnHub;

},{"debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js","multiserver-address":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js","multiserver/plugins/net":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/net.js","promisify-tuple":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisify-tuple/index.js","pull-cat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cat/index.js","pull-notify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-notify/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-hub/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-hub/node_modules/ssb-ref/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/ssb-ref/index.js"][0].apply(exports,arguments)
},{"ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js","is-canonical-base64":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-canonical-base64/index.js","is-valid-domain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-valid-domain/index.js","multiserver-address":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js","querystring":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/index.js":[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var Time = require("./queries/time");
var Health = require("./queries/health");
var Sorting = require("./queries/sorting");
var ConnQuery = (function () {
    function ConnQuery(db, hub, staging) {
        this.db = db;
        this.hub = hub;
        this.staging = staging;
    }
    ConnQuery.prototype._hubEntryToPeer = function (_a) {
        var _b = __read(_a, 2), address = _b[0], hubData = _b[1];
        var stagingEntry = Array.from(this.staging.entries()).find(function (_a) {
            var _b = __read(_a, 1), addr = _b[0];
            return addr === address;
        });
        var peer = this.db.has(address)
            ? [address, __assign({ pool: 'db' }, this.db.get(address))]
            : !!stagingEntry
                ? [address, __assign({ pool: 'staging' }, stagingEntry[1])]
                : [address, __assign({ pool: 'hub' }, hubData)];
        if (hubData.key && !peer[1].key) {
            peer[1].key = hubData.key;
        }
        return peer;
    };
    ConnQuery.prototype.peersAll = function () {
        return this.peersConnectable('dbAndStaging').concat(this.peersInConnection());
    };
    ConnQuery.prototype.peersConnected = function () {
        var _this = this;
        return Array.from(this.hub.entries())
            .filter(function (_a) {
            var _b = __read(_a, 2), _address = _b[0], data = _b[1];
            return data.state === 'connected';
        })
            .map(function (e) { return _this._hubEntryToPeer(e); });
    };
    ConnQuery.prototype.peersConnecting = function () {
        var _this = this;
        return Array.from(this.hub.entries())
            .filter(function (_a) {
            var _b = __read(_a, 2), _address = _b[0], data = _b[1];
            return data.state === 'connecting';
        })
            .map(function (e) { return _this._hubEntryToPeer(e); });
    };
    ConnQuery.prototype.peersInConnection = function () {
        var _this = this;
        return Array.from(this.hub.entries())
            .filter(function (_a) {
            var _b = __read(_a, 2), _address = _b[0], data = _b[1];
            return data.state === 'connected' || data.state === 'connecting';
        })
            .map(function (e) { return _this._hubEntryToPeer(e); });
    };
    ConnQuery.prototype.peersConnectable = function (pool) {
        var _this = this;
        if (pool === void 0) { pool = 'db'; }
        var useDB = pool === 'db' || pool === 'dbAndStaging';
        var useStaging = pool === 'staging' || pool === 'dbAndStaging';
        var dbPool = useDB
            ? Array.from(this.db.entries()).map(function (_a) {
                var _b = __read(_a, 2), addr = _b[0], data = _b[1];
                return [
                    addr,
                    __assign({ pool: 'db' }, data),
                ];
            })
            : [];
        var stagingPool = useStaging
            ? Array.from(this.staging.entries()).map(function (_a) {
                var _b = __read(_a, 2), addr = _b[0], data = _b[1];
                return [
                    addr,
                    __assign({ pool: 'staging' }, data),
                ];
            })
            : [];
        return []
            .concat(dbPool)
            .concat(stagingPool)
            .filter(function (_a) {
            var _b = __read(_a, 1), address = _b[0];
            var state = _this.hub.getState(address);
            return state !== 'connected' && state !== 'connecting';
        });
    };
    ConnQuery.passesExpBackoff = Time.passesExpBackoff;
    ConnQuery.passesGroupDebounce = Time.passesGroupDebounce;
    ConnQuery.hasNoAttempts = Health.hasNoAttempts;
    ConnQuery.hasOnlyFailedAttempts = Health.hasOnlyFailedAttempts;
    ConnQuery.hasSuccessfulAttempts = Health.hasSuccessfulAttempts;
    ConnQuery.hasPinged = Health.hasPinged;
    ConnQuery.sortByStateChange = Sorting.sortByStateChange;
    return ConnQuery;
}());
module.exports = ConnQuery;

},{"./queries/health":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/queries/health.js","./queries/sorting":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/queries/sorting.js","./queries/time":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/queries/time.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/queries/health.js":[function(require,module,exports){
"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
function hasNoAttempts(_a) {
    var _b = __read(_a, 2), _addr = _b[0], p = _b[1];
    return !p.stateChange;
}
exports.hasNoAttempts = hasNoAttempts;
function hasOnlyFailedAttempts(_a) {
    var _b = __read(_a, 2), _addr = _b[0], p = _b[1];
    return !!p.stateChange && (!p.duration || p.duration.mean == 0);
}
exports.hasOnlyFailedAttempts = hasOnlyFailedAttempts;
function hasSuccessfulAttempts(_a) {
    var _b = __read(_a, 2), _addr = _b[0], p = _b[1];
    return !!p.duration && p.duration.mean > 0;
}
exports.hasSuccessfulAttempts = hasSuccessfulAttempts;
function hasPinged(_a) {
    var _b = __read(_a, 2), _addr = _b[0], p = _b[1];
    return !!p.ping && !!p.ping.rtt && p.ping.rtt.mean > 0;
}
exports.hasPinged = hasPinged;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/queries/sorting.js":[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function sortByStateChange(peers) {
    return peers.sort(function (a, b) { return a[1].stateChange - b[1].stateChange; });
}
exports.sortByStateChange = sortByStateChange;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/queries/time.js":[function(require,module,exports){
"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
function passesExpBackoff(step, max, timestamp) {
    if (max === void 0) { max = Infinity; }
    if (timestamp === void 0) { timestamp = Date.now(); }
    return function (_a) {
        var _b = __read(_a, 2), _addr = _b[0], data = _b[1];
        var prevAttempt = data.stateChange || 0;
        var numFailures = data.failure || 0;
        var expBackoff = Math.min(Math.pow(2, numFailures) * step, max);
        var nextAttempt = prevAttempt + expBackoff;
        return nextAttempt < timestamp;
    };
}
exports.passesExpBackoff = passesExpBackoff;
function passesGroupDebounce(groupMin, timestamp) {
    if (timestamp === void 0) { timestamp = Date.now(); }
    return function (group) {
        var newestStateChange = group.reduce(function (max, _a) {
            var _b = __read(_a, 2), _addr = _b[0], p = _b[1];
            return Math.max(max, p.stateChange || 0);
        }, 0);
        var minTimeThreshold = newestStateChange + groupMin;
        if (timestamp < minTimeThreshold)
            return [];
        else
            return group;
    };
}
exports.passesGroupDebounce = passesGroupDebounce;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-staging/lib/index.js":[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var pull = require('pull-stream');
var cat = require('pull-cat');
var Notify = require('pull-notify');
var msAddress = require('multiserver-address');
var debug = require('debug')('ssb:conn-staging');
var ConnStaging = (function () {
    function ConnStaging() {
        this._peers = new Map();
        this._closed = false;
        this._notifyEvent = Notify();
        this._notifyEntries = Notify();
    }
    ConnStaging.prototype._assertNotClosed = function () {
        if (this._closed) {
            throw new Error('This ConnStaging instance is closed, create a new one.');
        }
    };
    ConnStaging.prototype._assertValidAddress = function (address) {
        if (!msAddress.check(address)) {
            throw new Error('The given address is not a valid multiserver-address');
        }
    };
    ConnStaging.prototype._updateLiveEntries = function () {
        this._notifyEntries(Array.from(this._peers.entries()));
    };
    ConnStaging.prototype.stage = function (address, data) {
        this._assertNotClosed();
        this._assertValidAddress(address);
        var now = Date.now();
        if (this._peers.has(address)) {
            var previous = this._peers.get(address);
            this._peers.set(address, __assign({}, previous, { stagingUpdated: now }, data));
            this._updateLiveEntries();
            return false;
        }
        else {
            this._peers.set(address, __assign({ stagingBirth: now, stagingUpdated: now }, data));
            debug('staged peer %s', address);
            this._notifyEvent({ type: 'staged', address: address });
            this._updateLiveEntries();
            return true;
        }
    };
    ConnStaging.prototype.unstage = function (address) {
        this._assertNotClosed();
        this._assertValidAddress(address);
        if (!this._peers.has(address))
            return false;
        this._peers.delete(address);
        debug('unstaged peer %s', address);
        this._notifyEvent({ type: 'unstaged', address: address });
        this._updateLiveEntries();
        return true;
    };
    ConnStaging.prototype.get = function (address) {
        this._assertNotClosed();
        this._assertValidAddress(address);
        return this._peers.get(address);
    };
    ConnStaging.prototype.entries = function () {
        this._assertNotClosed();
        return this._peers.entries();
    };
    ConnStaging.prototype.liveEntries = function () {
        this._assertNotClosed();
        return cat([
            pull.values([Array.from(this._peers.entries())]),
            this._notifyEntries.listen(),
        ]);
    };
    ConnStaging.prototype.listen = function () {
        this._assertNotClosed();
        return this._notifyEvent.listen();
    };
    ConnStaging.prototype.close = function () {
        this._closed = true;
        this._notifyEvent.end();
        this._peers.clear();
        debug('closed the ConnStaging instance');
    };
    return ConnStaging;
}());
module.exports = ConnStaging;

},{"debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","multiserver-address":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js","pull-cat":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cat/index.js","pull-notify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-notify/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/conn-scheduler.js":[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnScheduler = void 0;
const ConnQuery = require("ssb-conn-query");
const secret_stack_decorators_1 = require("secret-stack-decorators");
const pull = require('pull-stream');
const Pausable = require('pull-pause');
const ip = require('ip');
const onWakeup = require('on-wakeup');
const onNetwork = require('on-change-network-strict');
const hasNetwork = require('has-network2');
const Ref = require('ssb-ref');
const debug = require('debug')('ssb:conn:scheduler');
require('zii');
let lastCheck = 0;
let lastValue = null;
function hasNetworkDebounced() {
    if (lastCheck + 1e3 < Date.now()) {
        lastCheck = Date.now();
        lastValue = hasNetwork();
    }
    return lastValue;
}
function isOffline(p) {
    if (ip.isLoopback(p[1].host) || p[1].host == 'localhost')
        return false;
    else
        return !hasNetworkDebounced();
}
const canBeConnected = (p) => !isOffline(p);
function isLegacy(peer) {
    return hasSuccessfulAttempts(peer) && !hasPinged(peer);
}
function notRoom(peer) {
    return peer[1].type !== 'room';
}
function isDefunct(peer) {
    return peer[1].defunct === true;
}
function take(n) {
    return (arr) => arr.slice(0, Math.max(n, 0));
}
function detectType(peer) {
    const [addr, data] = peer;
    if (data.type === 'bt')
        return 'bt';
    if (data.type === 'lan')
        return 'lan';
    if (data.type === 'internet')
        return 'internet';
    if (data.type === 'dht')
        return 'dht';
    if (data.type === 'pub')
        return 'pub';
    if (data.type === 'room')
        return 'room';
    if (data.type === 'room-endpoint')
        return 'room-endpoint';
    if (data.source === 'local')
        return 'lan';
    if (data.source === 'pub')
        return 'pub';
    if (data.source === 'internet')
        return 'internet';
    if (data.source === 'dht')
        return 'dht';
    if (data.inferredType === 'bt')
        return 'bt';
    if (data.inferredType === 'lan')
        return 'lan';
    if (data.inferredType === 'dht')
        return 'dht';
    if (data.inferredType === 'internet')
        return 'internet';
    if (addr.startsWith('bt:'))
        return 'bt';
    if (addr.startsWith('dht:'))
        return 'dht';
    return '?';
}
const { passesExpBackoff, passesGroupDebounce, hasNoAttempts, hasOnlyFailedAttempts, hasPinged, hasSuccessfulAttempts, sortByStateChange, } = ConnQuery;
function shufflePeers(peers) {
    return peers.sort(() => Math.random() - 0.5);
}
const minute = 60e3;
const hour = 60 * 60e3;
let ConnScheduler = class ConnScheduler {
    constructor(ssb, config) {
        this.weBlockThem = ([_addr, data]) => {
            if (!(data === null || data === void 0 ? void 0 : data.key))
                return false;
            return this.hops[data.key] === -1;
        };
        this.weFollowThem = ([_addr, data]) => {
            var _a, _b;
            if (!(data === null || data === void 0 ? void 0 : data.key))
                return false;
            const h = this.hops[data.key];
            const maxHops = (_b = (_a = this.config.conn) === null || _a === void 0 ? void 0 : _a.hops) !== null && _b !== void 0 ? _b : 1;
            return h > 0 && h <= maxHops;
        };
        this.start = () => {
            var _a, _b;
            if (!this.closed)
                return;
            this.closed = false;
            for (let peer of this.ssb.conn.dbPeers()) {
                const [address, { source, type }] = peer;
                if (source === 'local' ||
                    source === 'bt' ||
                    type === 'lan' ||
                    type === 'bt') {
                    this.ssb.conn.forget(address);
                }
                if (isDefunct(peer)) {
                    this.removeDefunct(address);
                }
            }
            this.loadHops();
            this.populateWithSeeds();
            this.setupPubDiscovery();
            (_a = this.pubDiscoveryPausable) === null || _a === void 0 ? void 0 : _a.resume();
            this.setupLanDiscovery();
            this.setupBluetoothDiscovery();
            this.intervalForUpdate = setInterval(() => this.updateSoon(), 2e3);
            if ((_b = this.intervalForUpdate) === null || _b === void 0 ? void 0 : _b.unref)
                this.intervalForUpdate.unref();
            onWakeup(() => {
                if (this.closed)
                    return;
                this.ssb.conn.hub().reset();
            });
            onNetwork(() => {
                if (this.closed)
                    return;
                this.ssb.conn.hub().reset();
            });
            pull(this.ssb.conn.hub().listen(), pull.filter((ev) => ev.type === 'disconnected'), pull.drain(() => this.updateSoon(200)));
            this.updateSoon();
        };
        this.stop = () => {
            var _a, _b, _c;
            (_a = this.pubDiscoveryPausable) === null || _a === void 0 ? void 0 : _a.pause();
            (_c = (_b = this.ssb.lan) === null || _b === void 0 ? void 0 : _b.stop) === null || _c === void 0 ? void 0 : _c.call(_b);
            if (this.intervalForUpdate) {
                clearInterval(this.intervalForUpdate);
                this.intervalForUpdate = void 0;
            }
            this.ssb.conn.hub().reset();
            this.closed = true;
        };
        this.ssb = ssb;
        this.config = config;
        this.hasSsbDb = !!this.ssb.post && !!this.ssb.messagesByType;
        this.closed = true;
        this.lastMessageAt = 0;
        this.hasScheduledAnUpdate = false;
        this.isLoadingHops = false;
        this.hops = {};
        if (this.hasSsbDb) {
            this.ssb.post((msg) => {
                var _a;
                if (msg.value.author != this.ssb.id) {
                    this.lastMessageAt = Date.now();
                }
                if (((_a = msg.value.content) === null || _a === void 0 ? void 0 : _a.type) === 'contact') {
                    this.loadHops(() => this.updateNow());
                }
            });
        }
    }
    loadHops(doneCallback) {
        var _a;
        if (!((_a = this.ssb.friends) === null || _a === void 0 ? void 0 : _a.hops)) {
            debug('Warning: ssb-friends is missing, scheduling will miss some info');
            return;
        }
        this.isLoadingHops = true;
        this.ssb.friends.hops((err, hops) => {
            if (err) {
                debug('unable to call ssb.friends.hops: %s', err);
                return;
            }
            this.hops = hops;
            this.isLoadingHops = false;
            if (doneCallback)
                doneCallback();
        });
    }
    isCurrentlyDownloading() {
        return this.lastMessageAt && this.lastMessageAt > Date.now() - 500;
    }
    maxWaitToConnect(peer) {
        const type = detectType(peer);
        switch (type) {
            case 'lan':
                return 30e3;
            case 'bt':
                return 60e3;
            case 'dht':
                return 300e3;
            default:
                return 10e3;
        }
    }
    updateTheseConnections(test, opts) {
        const query = this.ssb.conn.query();
        const peersUp = query.peersInConnection().filter(test);
        const peersDown = query.peersConnectable('db').filter(test);
        const { quota, backoffStep, backoffMax, groupMin } = opts;
        const excess = peersUp.length > quota * 2 ? peersUp.length - quota : 0;
        const freeSlots = Math.max(quota - peersUp.length, 0);
        peersUp
            .z(sortByStateChange)
            .z(take(excess))
            .forEach(([addr]) => this.ssb.conn.disconnect(addr));
        peersDown
            .filter(p => !this.weBlockThem(p))
            .filter(canBeConnected)
            .filter(([, data]) => data.autoconnect !== false)
            .z(passesGroupDebounce(groupMin))
            .filter(passesExpBackoff(backoffStep, backoffMax))
            .z(peers => Math.random() <= 0.3
            ? peers.z(shufflePeers)
            : peers.z(sortByStateChange))
            .z(take(freeSlots))
            .forEach(([addr, data]) => this.ssb.conn.connect(addr, data));
    }
    updateStagingNow() {
        this.ssb.conn
            .query()
            .peersConnectable('db')
            .filter(p => !this.weBlockThem(p))
            .filter(([, data]) => data.autoconnect === false)
            .forEach(([addr, data]) => this.ssb.conn.stage(addr, data));
        this.ssb.conn
            .query()
            .peersConnectable('staging')
            .filter(this.weBlockThem)
            .forEach(([addr]) => this.ssb.conn.unstage(addr));
        this.ssb.conn
            .query()
            .peersConnectable('staging')
            .filter(([, data]) => data.type === 'lan')
            .filter(([, data]) => data.stagingUpdated + 10e3 < Date.now())
            .forEach(([addr]) => this.ssb.conn.unstage(addr));
        this.ssb.conn
            .query()
            .peersConnectable('staging')
            .filter(([, data]) => data.type === 'bt')
            .filter(([, data]) => data.stagingUpdated + 30e3 < Date.now())
            .forEach(([addr]) => this.ssb.conn.unstage(addr));
    }
    updateHubNow() {
        var _a;
        const conn = this.ssb.conn;
        if ((_a = this.config.seed) !== null && _a !== void 0 ? _a : true) {
            this.updateTheseConnections(p => p[1].source === 'seed', {
                quota: 3,
                backoffStep: 2e3,
                backoffMax: 10 * minute,
                groupMin: 1e3,
            });
        }
        if (conn.query().peersInConnection().length === 0) {
            this.updateTheseConnections(() => true, {
                quota: 1,
                backoffStep: 1e3,
                backoffMax: 6e3,
                groupMin: 0,
            });
        }
        this.updateTheseConnections(p => p[1].type === 'room', {
            quota: 5,
            backoffStep: 5e3,
            backoffMax: 5 * minute,
            groupMin: 5e3,
        });
        this.updateTheseConnections(p => notRoom(p) && hasPinged(p), {
            quota: 2,
            backoffStep: 10e3,
            backoffMax: 10 * minute,
            groupMin: 5e3,
        });
        this.updateTheseConnections(p => notRoom(p) && hasNoAttempts(p), {
            quota: 2,
            backoffStep: 30e3,
            backoffMax: 30 * minute,
            groupMin: 15e3,
        });
        this.updateTheseConnections(p => notRoom(p) && hasOnlyFailedAttempts(p), {
            quota: 3,
            backoffStep: 1 * minute,
            backoffMax: 3 * hour,
            groupMin: 5 * minute,
        });
        this.updateTheseConnections(p => notRoom(p) && isLegacy(p), {
            quota: 1,
            backoffStep: 4 * minute,
            backoffMax: 3 * hour,
            groupMin: 5 * minute,
        });
        conn
            .query()
            .peersConnectable('staging')
            .filter(this.weFollowThem)
            .z(take(3 - conn.query().peersInConnection().filter(this.weFollowThem).length))
            .forEach(([addr, data]) => conn.connect(addr, data));
        conn
            .query()
            .peersInConnection()
            .filter(this.weBlockThem)
            .forEach(([addr]) => conn.disconnect(addr));
        conn
            .query()
            .peersInConnection()
            .filter(p => conn.hub().getState(p[0]) === 'connecting')
            .filter(p => p[1].stateChange + this.maxWaitToConnect(p) < Date.now())
            .forEach(([addr]) => conn.disconnect(addr));
        conn
            .query()
            .peersConnected()
            .filter(p => p[1].type !== 'bt' && p[1].type !== 'lan')
            .filter(p => p[1].stateChange + 0.5 * hour < Date.now())
            .forEach(([addr]) => conn.disconnect(addr));
    }
    updateNow() {
        if (this.closed)
            return;
        if (this.hasSsbDb && !this.ssb.ready())
            return;
        if (this.isCurrentlyDownloading())
            return;
        if (this.isLoadingHops)
            return;
        this.updateStagingNow();
        this.updateHubNow();
    }
    updateSoon(period = 1000) {
        if (this.closed)
            return;
        if (this.hasScheduledAnUpdate)
            return;
        const fuzzyPeriod = period * 0.5 + period * Math.random();
        this.hasScheduledAnUpdate = true;
        const timer = setTimeout(() => {
            this.updateNow();
            this.hasScheduledAnUpdate = false;
        }, fuzzyPeriod);
        if (timer.unref)
            timer.unref();
    }
    removeDefunct(addr) {
        this.ssb.conn.db().update(addr, { defunct: void 0, autoconnect: void 0 });
    }
    populateWithSeeds() {
        var _a;
        const seeds = (_a = this.config.seeds) !== null && _a !== void 0 ? _a : [];
        (Array.isArray(seeds) ? seeds : [seeds]).filter(Boolean).forEach(addr => {
            const key = Ref.getKeyFromAddress(addr);
            this.ssb.conn.remember(addr, { key, source: 'seed' });
        });
    }
    setupPubDiscovery() {
        var _a;
        if (((_a = this.config.conn) === null || _a === void 0 ? void 0 : _a.populatePubs) === false)
            return;
        if (!this.hasSsbDb) {
            debug('Warning: ssb-db is missing, scheduling will miss some info');
            return;
        }
        setTimeout(() => {
            var _a;
            if (this.closed)
                return;
            const MAX_STAGED_PUBS = 3;
            this.pubDiscoveryPausable = (_a = this.pubDiscoveryPausable) !== null && _a !== void 0 ? _a : Pausable();
            pull(this.ssb.messagesByType({ type: 'pub', live: true, keys: false }), pull.filter((msg) => !msg.sync), pull.asyncMap((x, cb) => setTimeout(() => cb(null, x), 250)), pull.filter((msg) => { var _a; return ((_a = msg.content) === null || _a === void 0 ? void 0 : _a.address) && Ref.isAddress(msg.content.address); }), this.pubDiscoveryPausable, pull.drain((msg) => {
                try {
                    const address = Ref.toMultiServerAddress(msg.content.address);
                    const key = Ref.getKeyFromAddress(address);
                    if (this.weBlockThem([address, { key }])) {
                        this.ssb.conn.forget(address);
                    }
                    else if (!this.ssb.conn.db().has(address)) {
                        this.ssb.conn.stage(address, { key, type: 'pub' });
                        this.ssb.conn.remember(address, {
                            key,
                            type: 'pub',
                            autoconnect: false,
                        });
                    }
                }
                catch (err) {
                    debug('cannot process discovered pub because: %s', err);
                }
            }));
            pull(this.ssb.conn.staging().liveEntries(), pull.drain((staged) => {
                var _a, _b;
                if (this.closed)
                    return;
                const stagedPubs = staged.filter(([, data]) => data.type === 'pub');
                if (stagedPubs.length >= MAX_STAGED_PUBS) {
                    (_a = this.pubDiscoveryPausable) === null || _a === void 0 ? void 0 : _a.pause();
                }
                else {
                    (_b = this.pubDiscoveryPausable) === null || _b === void 0 ? void 0 : _b.resume();
                }
            }));
        }, 1000);
    }
    setupBluetoothDiscovery() {
        var _a;
        if (!((_a = this.ssb.bluetooth) === null || _a === void 0 ? void 0 : _a.nearbyScuttlebuttDevices)) {
            debug('Warning: ssb-bluetooth is missing, scheduling will miss some info');
            return;
        }
        pull(this.ssb.bluetooth.nearbyScuttlebuttDevices(1000), pull.drain(({ discovered }) => {
            if (this.closed)
                return;
            for (const btPeer of discovered) {
                const address = `bt:${btPeer.remoteAddress.split(':').join('')}` +
                    '~' +
                    `shs:${btPeer.id.replace(/^\@/, '').replace(/\.ed25519$/, '')}`;
                const data = {
                    type: 'bt',
                    note: btPeer.displayName,
                    key: btPeer.id,
                };
                if (this.weFollowThem([address, data])) {
                    this.ssb.conn.connect(address, data);
                }
                else {
                    this.ssb.conn.stage(address, data);
                }
            }
        }));
    }
    setupLanDiscovery() {
        var _a, _b;
        if (!((_a = this.ssb.lan) === null || _a === void 0 ? void 0 : _a.start) || !((_b = this.ssb.lan) === null || _b === void 0 ? void 0 : _b.discoveredPeers)) {
            debug('Warning: ssb-lan is missing, scheduling will miss some info');
            return;
        }
        pull(this.ssb.lan.discoveredPeers(), pull.drain(({ address, verified }) => {
            const key = Ref.getKeyFromAddress(address);
            if (!key)
                return;
            const data = {
                type: 'lan',
                key,
                verified,
            };
            if (this.weFollowThem([address, data])) {
                this.ssb.conn.connect(address, data);
            }
            else {
                this.ssb.conn.stage(address, data);
            }
        }));
        this.ssb.lan.start();
    }
};
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], ConnScheduler.prototype, "start", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], ConnScheduler.prototype, "stop", void 0);
ConnScheduler = __decorate([
    secret_stack_decorators_1.plugin('1.0.0')
], ConnScheduler);
exports.ConnScheduler = ConnScheduler;

},{"debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/node_modules/debug/src/browser.js","has-network2":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-network2/index.js","ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js","on-change-network-strict":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/on-change-network-strict/index.js","on-wakeup":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/on-wakeup/index.js","pull-pause":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pause/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","secret-stack-decorators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack-decorators/lib/index.js","ssb-conn-query":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js","zii":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/zii/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/conn.js":[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CONN = void 0;
const ConnDB = require("ssb-conn-db");
const ConnHub = require("ssb-conn-hub");
const ConnStaging = require("ssb-conn-staging");
const ConnQuery = require("ssb-conn-query");
const secret_stack_decorators_1 = require("secret-stack-decorators");
const interpool_glue_1 = require("./interpool-glue");
const ping = require('pull-ping');
let CONN = class CONN {
    constructor(ssb, cfg) {
        this.remember = (address, data = {}) => {
            this._db.set(address, data);
        };
        this.forget = (address) => {
            this._db.delete(address);
        };
        this.dbPeers = () => this._db.entries();
        this.connect = (address, b, c) => {
            if (c && (typeof b === 'function' || !b)) {
                throw new Error('CONN.connect() received incorrect arguments');
            }
            const last = !!c ? c : b;
            const cb = (typeof last === 'function' ? last : null);
            const data = (typeof b === 'object' ? b : {});
            this._hub.connect(address, data).then(result => cb === null || cb === void 0 ? void 0 : cb(null, result), err => cb === null || cb === void 0 ? void 0 : cb(err));
        };
        this.disconnect = (address, cb) => {
            this._hub.disconnect(address).then(result => cb === null || cb === void 0 ? void 0 : cb(null, result), err => cb === null || cb === void 0 ? void 0 : cb(err));
        };
        this.peers = () => this._hub.liveEntries();
        this.stage = (address, data = { type: 'internet' }) => {
            if (!!this._hub.getState(address))
                return false;
            if (data.key) {
                for (const other of this._hub.entries()) {
                    if (other[1].key === data.key)
                        return false;
                }
            }
            return this._staging.stage(address, data);
        };
        this.unstage = (address) => {
            return this._staging.unstage(address);
        };
        this.stagedPeers = () => this._staging.liveEntries();
        this.start = () => {
            return this.startScheduler();
        };
        this.stop = () => {
            this.stopScheduler();
        };
        this.ping = () => {
            var _a, _b;
            const MIN = 10e3;
            const DEFAULT = 5 * 60e3;
            const MAX = 30 * 60e3;
            let timeout = (_b = (_a = this.config.timers) === null || _a === void 0 ? void 0 : _a.ping) !== null && _b !== void 0 ? _b : DEFAULT;
            timeout = Math.max(MIN, Math.min(timeout, MAX));
            return ping({ timeout });
        };
        this.db = () => this._db;
        this.hub = () => this._hub;
        this.staging = () => this._staging;
        this.query = () => this._query;
        this.internalConnDB = () => {
            console.error('DEPRECATED conn.internalConnDB(), use conn.db() instead');
            return this._db;
        };
        this.internalConnHub = () => {
            console.error('DEPRECATED conn.internalConnHub(), use conn.hub() instead');
            return this._hub;
        };
        this.internalConnStaging = () => {
            console.error('DEPRECATED conn.internalConnStaging(), use conn.staging() instead');
            return this._staging;
        };
        this.ssb = ssb;
        this.config = cfg;
        this._db = new ConnDB({ path: this.config.path, writeTimeout: 1e3 });
        this._hub = new ConnHub(this.ssb);
        this._staging = new ConnStaging();
        this._query = new ConnQuery(this._db, this._hub, this._staging);
        this.initialize();
    }
    initialize() {
        this.setupCloseHook();
        this.maybeAutoStartScheduler();
        interpool_glue_1.interpoolGlue(this._db, this._hub, this._staging);
    }
    setupCloseHook() {
        const that = this;
        this.ssb.close.hook(function (fn, args) {
            that.stopScheduler();
            that._db.close();
            that._hub.close();
            that._staging.close();
            return fn.apply(this, args);
        });
    }
    maybeAutoStartScheduler() {
        var _a;
        if (((_a = this.config.conn) === null || _a === void 0 ? void 0 : _a.autostart) === false) {
        }
        else {
            this.startScheduler();
        }
    }
    startScheduler() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this._db.loaded();
            if (this.ssb.connScheduler) {
                this.ssb.connScheduler.start();
            }
            else {
                setTimeout(() => {
                    if (this.ssb.connScheduler) {
                        this.ssb.connScheduler.start();
                    }
                    else {
                        console.error('There is no ConnScheduler! ' +
                            'The CONN plugin will remain in manual mode.');
                    }
                }, 100);
            }
        });
    }
    stopScheduler() {
        if (this.ssb.connScheduler)
            this.ssb.connScheduler.stop();
    }
};
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "remember", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "forget", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "dbPeers", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('async')
], CONN.prototype, "connect", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('async')
], CONN.prototype, "disconnect", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('source')
], CONN.prototype, "peers", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "stage", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "unstage", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('source')
], CONN.prototype, "stagedPeers", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "start", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "stop", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('duplex', { anonymous: 'allow' })
], CONN.prototype, "ping", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "db", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "hub", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "staging", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "query", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "internalConnDB", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "internalConnHub", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], CONN.prototype, "internalConnStaging", void 0);
CONN = __decorate([
    secret_stack_decorators_1.plugin('1.0.0')
], CONN);
exports.CONN = CONN;

},{"./interpool-glue":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/interpool-glue.js","pull-ping":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ping/index.js","secret-stack-decorators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack-decorators/lib/index.js","ssb-conn-db":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/lib/index.js","ssb-conn-hub":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-hub/lib/index.js","ssb-conn-query":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-query/lib/index.js","ssb-conn-staging":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-staging/lib/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/gossip.js":[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Gossip = void 0;
const secret_stack_decorators_1 = require("secret-stack-decorators");
const pull = require('pull-stream');
const Notify = require('pull-notify');
const ref = require('ssb-ref');
function isPeerObject(o) {
    return o && 'object' == typeof o;
}
function toBase64(s) {
    if (typeof s === 'string')
        return s.substring(1, s.indexOf('.'));
    else
        return s.toString('base64');
}
function toAddressString(address) {
    var _a;
    if (isPeerObject(address)) {
        if (ref.isAddress(address.address))
            return address.address;
        let protocol = 'net';
        if ((_a = address.host) === null || _a === void 0 ? void 0 : _a.endsWith('.onion'))
            protocol = 'onion';
        return ([protocol, address.host, address.port].join(':') +
            '~' +
            ['shs', toBase64(address.key)].join(':'));
    }
    return address;
}
function parseAddress(address) {
    const legacyParsing = ref.parseAddress(address);
    if (legacyParsing) {
        return legacyParsing;
    }
    else if (ref.isAddress(address)) {
        return { key: ref.getKeyFromAddress(address) };
    }
}
function validateAddr(addr) {
    if (!addr || (typeof addr !== 'object' && typeof addr !== 'string')) {
        throw new Error('address should be an object or string');
    }
    const addressString = typeof addr === 'string' ? addr : toAddressString(addr);
    const parsed = typeof addr === 'object' ? addr : parseAddress(addressString);
    if (!parsed.key)
        throw new Error('address must have ed25519 key');
    if (!ref.isFeed(parsed.key))
        throw new Error('key must be ed25519 public id');
    return [addressString, parsed];
}
function inferSource(address) {
    return address.startsWith('net:') ? 'local' : 'manual';
}
let Gossip = class Gossip {
    constructor(ssb, cfg) {
        var _a;
        this.peers = () => {
            if (this.latestWarning + 10e3 < Date.now()) {
                console.trace('DEPRECATED gossip.peers(), use ssb-conn instead');
                this.latestWarning = Date.now();
            }
            const peers = Array.from(this.conn.db().entries()).map(([address, data]) => {
                return Object.assign(Object.assign({}, data), { address, state: this.conn.hub().getState(address) });
            });
            for (const [address, data] of this.conn.hub().entries()) {
                if (!this.conn.db().has(address)) {
                    const [, parsed] = validateAddr(address);
                    peers.push(Object.assign(Object.assign(Object.assign({}, data), parsed), { address, source: inferSource(address) }));
                }
            }
            return peers;
        };
        this.get = (addr) => {
            this.deprecationWarning('get');
            if (ref.isFeed(addr)) {
                for (let [address, data] of this.conn.db().entries()) {
                    if (data.key === addr) {
                        return Object.assign(Object.assign({}, data), { address });
                    }
                }
                return undefined;
            }
            const [addressString] = validateAddr(addr);
            const peer = this.conn.db().get(addressString);
            if (!peer)
                return undefined;
            else {
                return Object.assign({ address: addressString, state: this.conn.hub().getState(addressString) }, peer);
            }
        };
        this.connect = (addr, cb) => {
            var _a, _b;
            this.deprecationWarning('connect');
            let addressString;
            try {
                const inputAddr = ref.isFeed(addr) ? this.idToAddr(addr) : addr;
                [addressString] = validateAddr(inputAddr);
            }
            catch (err) {
                return cb(err);
            }
            this.add(addressString, 'manual');
            const stagedData = (_a = this.conn.staging().get(addressString)) !== null && _a !== void 0 ? _a : {};
            const dbData = (_b = this.conn.db().get(addressString)) !== null && _b !== void 0 ? _b : {};
            const data = Object.assign(Object.assign({}, dbData), stagedData);
            this.conn.connect(addressString, data, cb);
        };
        this.disconnect = (addr, cb) => {
            this.deprecationWarning('disconnect');
            let addressString;
            try {
                const inputAddr = ref.isFeed(addr) ? this.idToAddr(addr) : addr;
                [addressString] = validateAddr(inputAddr);
            }
            catch (err) {
                return cb(err);
            }
            this.conn.disconnect(addressString, cb);
        };
        this.changes = () => {
            this.deprecationWarning('changes');
            return this.notify.listen();
        };
        this.add = (addr, source) => {
            var _a;
            this.deprecationWarning('add');
            const [addressString, parsed] = validateAddr(addr);
            if (parsed.key === this.ssb.id)
                return;
            if (source === 'local') {
                console.error('gossip.add(p, "local") from ssb-local is deprecated, ' +
                    'this only supports ssb-lan');
                return;
            }
            if (this.conn.db().has(addressString)) {
                return this.conn.db().get(addressString);
            }
            else {
                this.conn.db().set(addressString, {
                    host: parsed.host,
                    port: parsed.port,
                    key: parsed.key,
                    address: addressString,
                    source: source,
                });
                this.notify({
                    type: 'discover',
                    peer: Object.assign(Object.assign({}, parsed), { state: this.conn.hub().getState(addressString), source: source !== null && source !== void 0 ? source : 'manual' }),
                    source: source !== null && source !== void 0 ? source : 'manual',
                });
                return (_a = this.conn.db().get(addressString)) !== null && _a !== void 0 ? _a : parsed;
            }
        };
        this.remove = (addr) => {
            this.deprecationWarning('remove');
            const [addressString] = validateAddr(addr);
            this.conn.hub().disconnect(addressString);
            this.conn.staging().unstage(addressString);
            const peer = this.conn.db().get(addressString);
            if (!peer)
                return;
            this.conn.db().delete(addressString);
            this.notify({ type: 'remove', peer: peer });
        };
        this.ping = () => this.conn.ping();
        this.reconnect = () => {
            this.deprecationWarning('reconnect');
            this.conn.hub().reset();
        };
        this.enable = (type) => {
            console.error('UNSUPPORTED gossip.enable("' + type + '") was ignored');
        };
        this.disable = (type) => {
            console.error('UNSUPPORTED gossip.disable("' + type + '") was ignored');
        };
        this.ssb = ssb;
        this.notify = Notify();
        this.conn = this.ssb.conn;
        this.latestWarning = 0;
        this.setupConnectionListeners();
        if (((_a = cfg.conn) === null || _a === void 0 ? void 0 : _a.autostart) === false) {
        }
        else {
            this.conn.start();
        }
        this.deprecationWarned = {};
    }
    setupConnectionListeners() {
        pull(this.conn.hub().listen(), pull.drain((ev) => {
            if (ev.type === 'connecting-failed')
                this.onConnectingFailed(ev);
            if (ev.type === 'connected')
                this.onConnected(ev);
            if (ev.type === 'disconnected')
                this.onDisconnected(ev);
        }));
    }
    onConnectingFailed(ev) {
        const peer = Object.assign({ state: ev.type, address: ev.address, key: ev.key }, this.conn.db().get(ev.address));
        this.notify({ type: 'connect-failure', peer });
    }
    onConnected(ev) {
        const peer = Object.assign({ state: ev.type, address: ev.address, key: ev.key }, this.conn.db().get(ev.address));
        if (!this.conn.db().has(ev.address))
            peer.source = inferSource(ev.address);
        this.notify({ type: 'connect', peer });
    }
    onDisconnected(ev) {
        const peer = Object.assign({ state: ev.type, address: ev.address, key: ev.key }, this.conn.db().get(ev.address));
        this.notify({ type: 'disconnect', peer });
    }
    idToAddr(id) {
        const addr = this.conn.db().getAddressForId(id);
        if (!addr) {
            throw new Error('no known address for peer:' + id);
        }
        return addr;
    }
    deprecationWarning(method) {
        if (this.deprecationWarned[method])
            return;
        console.error(`DEPRECATED gossip.${method}() was called. Use ssb-conn instead`);
        this.deprecationWarned[method] = true;
    }
};
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], Gossip.prototype, "peers", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], Gossip.prototype, "get", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('async')
], Gossip.prototype, "connect", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('async')
], Gossip.prototype, "disconnect", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('source')
], Gossip.prototype, "changes", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], Gossip.prototype, "add", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], Gossip.prototype, "remove", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('duplex', { anonymous: 'allow' })
], Gossip.prototype, "ping", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], Gossip.prototype, "reconnect", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], Gossip.prototype, "enable", void 0);
__decorate([
    secret_stack_decorators_1.muxrpc('sync')
], Gossip.prototype, "disable", void 0);
Gossip = __decorate([
    secret_stack_decorators_1.plugin('1.0.0')
], Gossip);
exports.Gossip = Gossip;

},{"pull-notify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-notify/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","secret-stack-decorators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/secret-stack-decorators/lib/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/index.js":[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const gossip_1 = require("./gossip");
const conn_1 = require("./conn");
const conn_scheduler_1 = require("./conn-scheduler");
module.exports = [conn_1.CONN, gossip_1.Gossip, conn_scheduler_1.ConnScheduler];

},{"./conn":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/conn.js","./conn-scheduler":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/conn-scheduler.js","./gossip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/gossip.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/lib/interpool-glue.js":[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.interpoolGlue = void 0;
const pull = require('pull-stream');
const stats = require('statistics');
const ping = require('pull-ping');
function interpoolGlue(db, hub, staging) {
    function setupPing(address, rpc) {
        const PING_TIMEOUT = 5 * 6e4;
        const pp = ping({ serve: true, timeout: PING_TIMEOUT }, () => { });
        db.update(address, { ping: { rtt: pp.rtt, skew: pp.skew } });
        pull(pp, rpc.gossip.ping({ timeout: PING_TIMEOUT }, (err) => {
            if ((err === null || err === void 0 ? void 0 : err.name) === 'TypeError') {
                db.update(address, (prev) => {
                    var _a;
                    return ({
                        ping: Object.assign(Object.assign({}, ((_a = prev.ping) !== null && _a !== void 0 ? _a : {})), { fail: true }),
                    });
                });
            }
        }), pp);
    }
    function onConnecting(ev) {
        const address = ev.address;
        const stagedData = staging.get(address);
        staging.unstage(address);
        for (const [addr, data] of staging.entries()) {
            if (data.key && data.key === ev.key)
                staging.unstage(addr);
        }
        db.update(address, { stateChange: Date.now() });
        const dbData = db.get(address);
        hub.update(address, Object.assign(Object.assign({}, dbData), stagedData));
    }
    function onConnectingFailed(ev) {
        db.update(ev.address, (prev) => {
            var _a;
            return ({
                failure: ((_a = prev.failure) !== null && _a !== void 0 ? _a : 0) + 1,
                stateChange: Date.now(),
                duration: stats(prev.duration, 0),
            });
        });
    }
    function onConnected(ev) {
        const address = ev.address;
        const stagedData = staging.get(address);
        staging.unstage(address);
        for (const [addr, data] of staging.entries()) {
            if (data.key && data.key === ev.key)
                staging.unstage(addr);
        }
        db.update(address, { stateChange: Date.now(), failure: 0 });
        const dbData = db.get(address);
        hub.update(address, Object.assign(Object.assign({}, dbData), stagedData));
        if (ev.details.isClient)
            setupPing(address, ev.details.rpc);
    }
    function onDisconnecting(ev) {
        db.update(ev.address, { stateChange: Date.now() });
    }
    function onDisconnectingFailed(ev) {
        db.update(ev.address, { stateChange: Date.now() });
    }
    function onDisconnected(ev) {
        db.update(ev.address, (prev) => ({
            stateChange: Date.now(),
            duration: stats(prev.duration, Date.now() - prev.stateChange),
        }));
    }
    pull(hub.listen(), pull.drain((ev) => {
        if (ev.type === 'connecting')
            onConnecting(ev);
        if (ev.type === 'connecting-failed')
            onConnectingFailed(ev);
        if (ev.type === 'connected')
            onConnected(ev);
        if (ev.type === 'disconnecting')
            onDisconnecting(ev);
        if (ev.type === 'disconnecting-failed')
            onDisconnectingFailed(ev);
        if (ev.type === 'disconnected')
            onDisconnected(ev);
    }));
}
exports.interpoolGlue = interpoolGlue;

},{"pull-ping":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-ping/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","statistics":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/statistics/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/node_modules/debug/src/browser.js":[function(require,module,exports){
(function (process){(function (){
/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = require('./common')(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};

}).call(this)}).call(this,require('_process'))
},{"./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/node_modules/debug/src/common.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn/node_modules/debug/src/common.js":[function(require,module,exports){

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = require('ms');

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* Active `debug` instances.
	*/
	createDebug.instances = [];

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return match;
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.enabled = createDebug.enabled(namespace);
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.destroy = destroy;
		debug.extend = extend;

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		createDebug.instances.push(debug);

		return debug;
	}

	function destroy() {
		const index = createDebug.instances.indexOf(this);
		if (index !== -1) {
			createDebug.instances.splice(index, 1);
			return true;
		}
		return false;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}

		for (i = 0; i < createDebug.instances.length; i++) {
			const instance = createDebug.instances[i];
			instance.enabled = createDebug.enabled(instance.namespace);
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;

},{"ms":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ms/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/db.js":[function(require,module,exports){
exports.init = function (sbot, config) {
  sbot.publish = sbot.db.publish
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/ebt.js":[function(require,module,exports){
const EBTIndex = require('../indexes/ebt')

exports.init = function (sbot, config) {
  sbot.db.registerIndex(EBTIndex)
  sbot.post = sbot.db.post
  sbot.getAtSequence = sbot.db.getIndex('ebt').getMessageFromAuthorSequence
  sbot.getVectorClock = function (cb) {
    sbot.db.getAllLatest((err, last) => {
      if (err) return cb(err)

      const clock = {}
      for (const k in last) {
        clock[k] = last[k].sequence
      }

      cb(null, clock)
    })
  }
}

},{"../indexes/ebt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/ebt.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/history-stream.js":[function(require,module,exports){
const pull = require('pull-stream')
const pullCont = require('pull-cont')
const ref = require('ssb-ref')
const { author } = require('../operators')
const { reEncrypt } = require('../indexes/private')

// exports.name is blank to merge into global namespace

exports.manifest = {
  createHistoryStream: 'source',
}

exports.permissions = {
  anonymous: { allow: ['createHistoryStream'], deny: null },
}

exports.init = function (sbot, config) {
  sbot.createHistoryStream = function (opts) {
    // default values
    const sequence = opts.sequence || opts.seq || 0
    const limit = opts.limit
    const keys = opts.keys === false ? false : true
    const values = opts.values === false ? false : true

    let query = author(opts.id)

    if (sequence) {
      query = {
        type: 'AND',
        data: [
          query,
          {
            type: 'GTE',
            data: {
              indexName: 'sequence',
              value: sequence,
            },
          },
        ],
      }
    }

    function formatMsg(msg) {
      msg = reEncrypt(msg)

      if (!keys && values) return msg.value
      else if (keys && !values) return msg.key
      else return msg
    }

    return pull(
      pullCont(function (cb) {
        sbot.db.getLog().onDrain(() => {
          if (!ref.isFeed(opts.id)) return cb(opts.id + ' is not a feed')

          if (limit) {
            sbot.db
              .getJITDB()
              .paginate(query, 0, limit, false, false, (err, answer) => {
                cb(err, pull.values(answer.results.map(formatMsg)))
              })
          } else {
            sbot.db.getJITDB().all(query, 0, false, false, (err, results) => {
              cb(err, pull.values(results.map(formatMsg)))
            })
          }
        })
      })
    )
  }

  return {}
}

},{"../indexes/private":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/private.js","../operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/index.js","pull-cont":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/index.js":[function(require,module,exports){
const db = require('./db')
const ebt = require('./ebt')
const hist = require('./history-stream')

exports.init = function (sbot, config) {
  db.init(sbot, config)
  ebt.init(sbot, config)
  hist.init(sbot, config)
}

},{"./db":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/db.js","./ebt":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/ebt.js","./history-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/compat/history-stream.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/db.js":[function(require,module,exports){
const push = require('push-stream')
const hash = require('ssb-keys/util').hash
const validate = require('ssb-validate')
const Obv = require('obz')
const promisify = require('promisify-4loc')
const jitdbOperators = require('jitdb/operators')
const JITDb = require('jitdb')
const Debug = require('debug')
const DeferredPromise = require('p-defer')

const { indexesPath } = require('./defaults')
const Log = require('./log')
const BaseIndex = require('./indexes/base')
const Private = require('./indexes/private')

const {
  and,
  fromDB,
  key,
  author,
  deferred,
  toCallback,
} = require('./operators')

function getId(msg) {
  return '%' + hash(JSON.stringify(msg, null, 2))
}

exports.name = 'db'

exports.version = '0.18.0'

exports.manifest = {
  get: 'async',
  add: 'async',
  publish: 'async',
  del: 'async',
  deleteFeed: 'async',
  addOOO: 'async',
  addOOOStrictOrder: 'async',
  getStatus: 'sync',

  // `query` should be `sync`, but secret-stack is automagically converting it
  // to async because of secret-stack/utils.js#hookOptionalCB. Eventually we
  // should include an option `synconly` in secret-stack that bypasses the hook,
  // but for now we leave the `query` API *implicitly* available in the plugin:

  // query: 'sync',
}

exports.init = function (sbot, config) {
  const dir = config.path
  const private = Private(dir, config.keys)
  const log = Log(dir, config, private)
  const jitdb = JITDb(log, indexesPath(dir))
  const baseIndex = BaseIndex(log, dir, private)

  const debug = Debug('ssb:db2')

  const indexes = {
    base: baseIndex,
  }
  const post = Obv()
  const hmac_key = null
  const stateFeedsReady = DeferredPromise()
  let state = validate.initial()

  sbot.close.hook(function (fn, args) {
    close(() => {
      fn.apply(this, args)
    })
  })

  // restore current state
  baseIndex.getAllLatest((err, last) => {
    // copy to so we avoid weirdness, because this object
    // tracks the state coming in to the database.
    for (const k in last) {
      state.feeds[k] = {
        id: last[k].id,
        timestamp: last[k].timestamp,
        sequence: last[k].sequence,
        queue: [],
      }
    }
    debug('getAllLatest is done setting up initial validate state')
    stateFeedsReady.resolve()
  })

  function guardAgainstDuplicateLogs(methodName) {
    if (sbot.db2migrate && sbot.db2migrate.doesOldLogExist()) {
      return new Error(
        'ssb-db2: refusing to ' +
          methodName +
          ' because the old log still exists. ' +
          'This is to protect your feed from forking ' +
          'into an irrecoverable state.'
      )
    }
  }

  function get(id, cb) {
    query(
      and(key(id)),
      toCallback((err, results) => {
        if (err) return cb(err)
        else if (results.length) return cb(null, results[0].value)
        else return cb()
      })
    )
  }

  function rawAdd(msg, validated, cb) {
    stateFeedsReady.promise.then(() => {
      const id = getId(msg)
      if (validated)
        // ssb-validate makes sure things come in order
        log.add(id, msg, cb)
      else
        get(id, (err, data) => {
          if (data) cb(null, data)
          else log.add(id, msg, cb)
        })
    })
  }

  function add(msg, cb) {
    const guard = guardAgainstDuplicateLogs('add()')
    if (guard) return cb(guard)

    try {
      state = validate.append(state, hmac_key, msg)
      if (state.error) return cb(state.error)
      rawAdd(msg, true, cb)
    } catch (ex) {
      return cb(ex)
    }
  }

  function addOOO(msg, cb) {
    const guard = guardAgainstDuplicateLogs('addOOO()')
    if (guard) return cb(guard)

    try {
      let oooState = validate.initial()
      validate.appendOOO(oooState, hmac_key, msg)

      if (oooState.error) return cb(oooState.error)

      rawAdd(msg, false, cb)
    } catch (ex) {
      return cb(ex)
    }
  }

  function addOOOStrictOrder(msg, strictOrderState, cb) {
    const guard = guardAgainstDuplicateLogs('addOOOStrictOrder()')
    if (guard) return cb(guard)

    const knownAuthor = msg.author in strictOrderState.feeds

    try {
      if (!knownAuthor)
        strictOrderState = validate.appendOOO(strictOrderState, hmac_key, msg)
      else strictOrderState = validate.append(strictOrderState, hmac_key, msg)

      if (strictOrderState.error) return cb(strictOrderState.error)

      rawAdd(msg, true, cb)
    } catch (ex) {
      return cb(ex)
    }
  }

  function publish(msg, cb) {
    const guard = guardAgainstDuplicateLogs('publish()')
    if (guard) return cb(guard)

    state.queue = []
    state = validate.appendNew(state, null, config.keys, msg, Date.now())
    rawAdd(state.queue[0].value, true, (err, data) => {
      post.set(data)
      cb(err, data)
    })
  }

  function del(msgId, cb) {
    const guard = guardAgainstDuplicateLogs('del()')
    if (guard) return cb(guard)

    jitdb.all(key(msgId), 0, false, true, (err, results) => {
      if (err) return cb(err)
      if (results.length === 0)
        return cb(
          new Error('cannot delete ' + msgId + ' because it was not found')
        )

      log.del(results[0], cb)
    })
  }

  function deleteFeed(feedId, cb) {
    const guard = guardAgainstDuplicateLogs('deleteFeed()')
    if (guard) return cb(guard)

    jitdb.all(author(feedId), 0, false, true, (err, offsets) => {
      push(
        push.values(offsets),
        push.asyncMap((offset, cb) => {
          log.del(offset, cb)
        }),
        push.collect((err) => {
          if (err) cb(err)
          else {
            delete state.feeds[feedId]
            baseIndex.removeFeedFromLatest(feedId)
            cb()
          }
        })
      )
    })
  }

  function getStatus() {
    const result = {
      log: log.since.value,
      indexes: {},
    }

    for (const indexName in indexes)
      result.indexes[indexName] = indexes[indexName].offset.value

    return result
  }

  function clearIndexes() {
    for (const indexName in indexes) indexes[indexName].remove(() => {})
  }

  function registerIndex(Index) {
    const index = Index(log, dir)

    if (indexes[index.name]) throw 'Index already exists'

    indexes[index.name] = index
  }

  function updateIndexes() {
    const start = Date.now()

    const indexesArr = Object.values(indexes)

    const lowestOffset = Math.min(...indexesArr.map((idx) => idx.offset.value))
    debug(`lowest offset for all indexes is ${lowestOffset}`)

    log.stream({ gt: lowestOffset }).pipe({
      paused: false,
      write(data) {
        indexesArr.forEach((idx) => idx.onData(data, false))
      },
      end() {
        debug(`updateIndexes() scan time: ${Date.now() - start}ms`)
        const writeTasks = indexesArr.map((idx) => promisify(idx.writeBatch)())
        Promise.all(writeTasks).then(() => {
          debug('updateIndexes() live streaming')
          log.stream({ gt: indexes['base'].offset.value, live: true }).pipe({
            paused: false,
            write(data) {
              indexesArr.forEach((idx) => idx.onData(data, true))
            },
          })
        })
      },
    })
  }

  function onDrain(indexName, cb) {
    if (!cb) {
      // default
      cb = indexName
      indexName = 'base'
    }

    onIndexesStateLoaded(() => {
      log.onDrain(() => {
        const index = indexes[indexName]
        if (!index) return cb('Unknown index:' + indexName)

        if (index.offset.value === log.since.value) {
          cb()
        } else {
          const remove = index.offset(() => {
            if (index.offset.value === log.since.value) {
              remove()
              cb()
            }
          })
        }
      })
    })
  }

  function onIndexesStateLoaded(cb) {
    if (!onIndexesStateLoaded.promise) {
      const stateLoadedPromises = [private.stateLoaded]
      for (const indexName in indexes) {
        stateLoadedPromises.push(indexes[indexName].stateLoaded)
      }
      onIndexesStateLoaded.promise = Promise.all(stateLoadedPromises)
    }
    onIndexesStateLoaded.promise.then(cb)
  }

  // setTimeout to make sure extra indexes from secret-stack are also included
  const timer = setTimeout(() => {
    onIndexesStateLoaded(updateIndexes)
  })
  if (timer.unref) timer.unref()

  function close(cb) {
    const tasks = []
    tasks.push(promisify(log.close)())
    for (const indexName in indexes) {
      tasks.push(promisify(indexes[indexName].close)())
    }
    return Promise.all(tasks).then(cb)
  }

  // override query() from jitdb to implicitly call fromDB()
  function query(first, ...rest) {
    const waitForMigrateAndDrain = and(
      deferred((meta, cb) => {
        if (sbot.db2migrate) {
          sbot.db2migrate.synchronized((isSynced) => {
            if (isSynced) {
              log.onDrain(cb)
            }
          })
        } else {
          log.onDrain(cb)
        }
      })
    )
    if (!first.meta) {
      const ops = fromDB(jitdb)
      ops.meta.db2 = this
      return jitdbOperators.query(ops, waitForMigrateAndDrain, first, ...rest)
    } else {
      return jitdbOperators.query(first, waitForMigrateAndDrain, ...rest)
    }
  }

  return {
    // API:
    get,
    query,
    del,
    deleteFeed,
    add,
    publish,
    addOOO,
    addOOOStrictOrder,
    getStatus,

    // needed primarily internally by other plugins in this project:
    post,
    getLatest: baseIndex.getLatest,
    getAllLatest: baseIndex.getAllLatest,
    getLog: () => log,
    registerIndex,
    getIndexes: () => indexes,
    getIndex: (index) => indexes[index],
    clearIndexes,
    onDrain,
    getJITDB: () => jitdb,
  }
}

},{"./defaults":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/defaults.js","./indexes/base":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/base.js","./indexes/private":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/private.js","./log":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/log.js","./operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/index.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","jitdb":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/index.js","jitdb/operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/operators.js","obz":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/obz/index.js","p-defer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/p-defer/index.js","promisify-4loc":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/promisify-4loc/index.js","push-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream/index.js","ssb-keys/util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/util.js","ssb-validate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/defaults.js":[function(require,module,exports){
const path = require('path')

exports.BLOCK_SIZE = 64 * 1024
exports.oldLogPath = (dir) => path.join(dir, 'flume', 'log.offset')
exports.newLogPath = (dir) => path.join(dir, 'db2', 'log.bipf')
exports.indexesPath = (dir) => path.join(dir, 'db2', 'indexes')

},{"path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/base.js":[function(require,module,exports){
(function (Buffer){(function (){
const bipf = require('bipf')
const pl = require('pull-level')
const pull = require('pull-stream')
const Plugin = require('./plugin')

// 1 index:
// - author => latest { msg key, sequence timestamp } (validate state & EBT)

module.exports = function (log, dir, privateIndex) {
  const bKey = Buffer.from('key')
  const bValue = Buffer.from('value')
  const bAuthor = Buffer.from('author')
  const bSequence = Buffer.from('sequence')
  const bTimestamp = Buffer.from('timestamp')

  const throwOnError = function (err) {
    if (err) throw err
  }

  let batch = []
  let authorLatest = {}
  const META = '\x00'

  const { level, offset, stateLoaded, onData, writeBatch } = Plugin(
    dir,
    'base',
    1,
    handleData,
    writeData,
    beforeIndexUpdate
  )

  function writeData(cb) {
    level.batch(batch, { valueEncoding: 'json' }, (err) => {
      if (err) return cb(err)
      else privateIndex.saveIndexes(cb)
    })

    batch = []
  }

  function handleData(record, processed) {
    if (record.offset < offset.value) return batch.length
    const buf = record.value
    if (!buf) return batch.length // deleted

    const pValue = bipf.seekKey(buf, 0, bValue)
    if (pValue >= 0) {
      const author = bipf.decode(buf, bipf.seekKey(buf, pValue, bAuthor))
      const sequence = bipf.decode(buf, bipf.seekKey(buf, pValue, bSequence))
      const timestamp = bipf.decode(buf, bipf.seekKey(buf, pValue, bTimestamp))

      let latestSequence = 0
      if (authorLatest[author]) latestSequence = authorLatest[author].sequence
      if (sequence > latestSequence) {
        const key = bipf.decode(buf, bipf.seekKey(buf, 0, bKey))
        authorLatest[author] = { id: key, sequence, timestamp }
        batch.push({
          type: 'put',
          key: author,
          value: authorLatest[author],
        })
      }
    }

    return batch.length
  }

  function beforeIndexUpdate(cb) {
    getAllLatest((err, latest) => {
      authorLatest = latest
      cb()
    })
  }

  function getAllLatest(cb) {
    pull(
      pl.read(level, {
        gt: META,
        valueEncoding: 'json',
      }),
      pull.collect((err, data) => {
        if (err) return cb(err)
        const result = {}
        data.forEach((d) => {
          result[d.key] = d.value
        })
        cb(null, result)
      })
    )
  }

  return {
    offset,
    stateLoaded,
    onData,
    writeBatch,

    remove: level.clear,
    close: level.close.bind(level),

    // returns { id (msg key), sequence, timestamp }
    getLatest: function (feedId, cb) {
      level.get(feedId, { valueEncoding: 'json' }, cb)
    },
    getAllLatest,
    removeFeedFromLatest: function (feedId) {
      level.del(feedId, throwOnError)
    },
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./plugin":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/plugin.js","bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","pull-level":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/ebt.js":[function(require,module,exports){
(function (Buffer){(function (){
const bipf = require('bipf')
const Plugin = require('./plugin')
const { reEncrypt } = require('./private')

// 1 index:
// - [author, sequence] => offset

module.exports = function (log, dir) {
  const bValue = Buffer.from('value')
  const bAuthor = Buffer.from('author')
  const bSequence = Buffer.from('sequence')

  let batch = []

  const name = 'ebt'
  const { level, offset, stateLoaded, onData, writeBatch } = Plugin(
    dir,
    name,
    1,
    handleData,
    writeData
  )

  function writeData(cb) {
    level.batch(batch, { keyEncoding: 'json' }, cb)
    batch = []
  }

  function handleData(record, processed) {
    if (record.offset < offset.value) return batch.length
    const buf = record.value
    if (!buf) return batch.length // deleted

    const pValue = bipf.seekKey(buf, 0, bValue)
    if (pValue >= 0) {
      const author = bipf.decode(buf, bipf.seekKey(buf, pValue, bAuthor))
      const sequence = bipf.decode(buf, bipf.seekKey(buf, pValue, bSequence))
      batch.push({
        type: 'put',
        key: [author, sequence],
        value: record.offset,
      })
    }

    return batch.length
  }

  function levelKeyToMessage(key, cb) {
    level.get(key, (err, offset) => {
      if (err) return cb(err)
      else
        log.get(parseInt(offset, 10), (err, record) => {
          if (err) return cb(err)
          cb(null, bipf.decode(record, 0))
        })
    })
  }

  return {
    offset,
    stateLoaded,
    onData,
    writeBatch,
    name,

    remove: level.clear,
    close: level.close.bind(level),

    // this is for EBT so must be not leak private messages
    getMessageFromAuthorSequence: (key, cb) => {
      levelKeyToMessage(JSON.stringify(key), (err, msg) => {
        if (err) cb(err)
        else cb(null, reEncrypt(msg))
      })
    },
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./plugin":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/plugin.js","./private":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/private.js","bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/full-mentions.js":[function(require,module,exports){
(function (Buffer){(function (){
const bipf = require('bipf')
const pl = require('pull-level')
const pull = require('pull-stream')
const Plugin = require('./plugin')
const jsonCodec = require('flumecodec/json')
const { or, seqs, liveSeqs } = require('../operators')

// 1 index:
// - mentions (msgId) => msg offsets

module.exports = function (log, dir) {
  const bKey = Buffer.from('key')
  const bValue = Buffer.from('value')
  const bContent = Buffer.from('content')
  const bMentions = Buffer.from('mentions')

  let batch = []

  const name = 'fullMentions'
  const { level, offset, stateLoaded, onData, writeBatch } = Plugin(
    dir,
    name,
    1,
    handleData,
    writeData
  )

  function writeData(cb) {
    level.batch(batch, { keyEncoding: jsonCodec }, cb)
    batch = []
  }

  function handleData(record, processed) {
    if (record.offset < offset.value) return batch.length
    const recBuffer = record.value
    if (!recBuffer) return batch.length // deleted

    let p = 0 // note you pass in p!
    const pKey = bipf.seekKey(recBuffer, p, bKey)

    p = 0
    p = bipf.seekKey(recBuffer, p, bValue)
    if (~p) {
      const pContent = bipf.seekKey(recBuffer, p, bContent)
      if (~pContent) {
        const pMentions = bipf.seekKey(recBuffer, pContent, bMentions)
        if (~pMentions) {
          const mentionsData = bipf.decode(recBuffer, pMentions)
          if (Array.isArray(mentionsData)) {
            const shortKey = bipf.decode(recBuffer, pKey).slice(1, 10)
            mentionsData.forEach((mention) => {
              if (
                mention.link &&
                typeof mention.link === 'string' &&
                (mention.link[0] === '@' || mention.link[0] === '%')
              ) {
                batch.push({
                  type: 'put',
                  key: [mention.link, shortKey],
                  value: processed,
                })
              }
            })
          }
        }
      }
    }

    return batch.length
  }

  function parseInt10(x) {
    return parseInt(x, 10)
  }

  function getResults(opts, live, cb) {
    pull(
      pl.read(level, opts),
      pull.collect((err, data) => {
        if (err) return cb(err)
        if (live) {
          const ps = pull(
            pl.read(level, Object.assign({}, opts, { live, old: false })),
            pull.map(parseInt10)
          )
          cb(null, or(seqs(data.map(parseInt10)), liveSeqs(ps)))
        } else cb(null, seqs(data.map(parseInt10)))
      })
    )
  }

  return {
    offset,
    stateLoaded,
    onData,
    writeBatch,

    name,
    remove: level.clear,
    close: level.close.bind(level),

    getMessagesByMention: function (key, live, cb) {
      getResults(
        {
          gte: [key, ''],
          lte: [key, undefined],
          keyEncoding: jsonCodec,
          keys: false,
        },
        live,
        cb
      )
    },
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"../operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/index.js","./plugin":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/plugin.js","bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","flumecodec/json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/flumecodec/json.js","pull-level":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-level/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/plugin.js":[function(require,module,exports){
const Obv = require('obz')
const Level = require('level')
const debounce = require('lodash.debounce')
const path = require('path')
const Debug = require('debug')
const DeferredPromise = require('p-defer')
const { indexesPath } = require('../defaults')

module.exports = function (
  dir,
  name,
  version,
  handleData,
  writeData,
  beforeIndexUpdate
) {
  const indexPath = path.join(indexesPath(dir), name)
  const debug = Debug('ssb:db2:' + name)

  if (typeof window === 'undefined') {
    // outside browser
    const mkdirp = require('mkdirp')
    mkdirp.sync(indexPath)
  }

  const level = Level(indexPath)
  const META = '\x00'
  const chunkSize = 2048
  let processed = 0 // processed "seq"
  const offset = Obv() // persisted
  const stateLoaded = DeferredPromise()
  let notPersistedOffset = -1

  function writeBatch(cb) {
    if (notPersistedOffset > -1 && !level.isClosed()) {
      writeData((err) => {
        if (err) return cb(err)
        else {
          // we can't batch this as the encoding might not be the same as the plugin
          level.put(
            META,
            { version, offset: notPersistedOffset, processed },
            { valueEncoding: 'json' },
            (err) => {
              if (err) cb(err)
              else {
                offset.set(notPersistedOffset)
                cb()
              }
            }
          )
        }
      })
    } else cb()
  }

  const liveWriteBatch = debounce(writeBatch, 250)

  function onData(record, isLive) {
    const changes = handleData(record, processed)
    notPersistedOffset = record.offset
    processed++

    if (changes > chunkSize) writeBatch(() => {})
    else if (isLive) liveWriteBatch(() => {})
  }

  level.get(META, { valueEncoding: 'json' }, (err, data) => {
    debug(`got index status:`, data)

    if (data && data.version == version) {
      processed = data.processed
      if (beforeIndexUpdate) {
        beforeIndexUpdate(() => {
          offset.set(data.offset)
          stateLoaded.resolve()
        })
      } else {
        offset.set(data.offset)
        stateLoaded.resolve()
      }
    } else {
      level.clear(() => {
        offset.set(-1)
        stateLoaded.resolve()
      })
    }
  })

  return { level, offset, onData, writeBatch, stateLoaded: stateLoaded.promise }
}

},{"../defaults":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/defaults.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","level":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/level/browser.js","lodash.debounce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/lodash.debounce/index.js","mkdirp":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/mkdirp/index.js","obz":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/obz/index.js","p-defer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/p-defer/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/private.js":[function(require,module,exports){
(function (Buffer){(function (){
const Obv = require('obz')
const bipf = require('bipf')
const fic = require('fastintcompression')
const bsb = require('binary-search-bounds')
const { readFile, writeFile } = require('atomically-universal')
const toBuffer = require('typedarray-to-buffer')
const ssbKeys = require('ssb-keys')
const DeferredPromise = require('p-defer')
const path = require('path')
const Debug = require('debug')

const { indexesPath } = require('../defaults')

module.exports = function (dir, keys) {
  const latestOffset = Obv()
  const stateLoaded = DeferredPromise()
  let encrypted = []
  let canDecrypt = []

  const debug = Debug('ssb:db2:private')

  const encryptedFile = path.join(indexesPath(dir), 'encrypted.index')
  const canDecryptFile = path.join(indexesPath(dir), 'canDecrypt.index')

  function save(filename, arr) {
    const buf = toBuffer(fic.compress(arr))
    const b = Buffer.alloc(4 + buf.length)
    b.writeInt32LE(latestOffset.value, 0)
    buf.copy(b, 4)

    writeFile(filename, b, { fsyncWait: false })
  }

  function load(filename, cb) {
    readFile(filename)
      .then((buf) => {
        if (!buf) return cb(new Error('empty file'))
        const offset = buf.readInt32LE(0)
        const body = buf.slice(4)

        cb(null, { offset, arr: fic.uncompress(body) })
      })
      .catch(cb)
  }

  function loadIndexes(cb) {
    load(encryptedFile, (err, data) => {
      if (err) {
        latestOffset.set(-1)
        stateLoaded.resolve()
        if (err.code === 'ENOENT') cb()
        else if (err.message === 'empty file') cb()
        else cb(err)
        return
      }

      const { offset, arr } = data
      encrypted = arr

      debug('encrypted loaded', encrypted.length)

      load(canDecryptFile, (err, data) => {
        let canDecryptOffset = -1
        if (!err) {
          canDecrypt = data.arr
          canDecryptOffset = data.offset
          debug('canDecrypt loaded', canDecrypt.length)
        }

        latestOffset.set(Math.min(offset, canDecryptOffset))
        stateLoaded.resolve()
        debug('loaded offset', latestOffset.value)

        cb()
      })
    })
  }

  loadIndexes((err) => {
    if (err) throw err
  })

  let savedTimer
  function saveIndexes(cb) {
    if (!savedTimer) {
      savedTimer = setTimeout(() => {
        savedTimer = null
        save(encryptedFile, encrypted)
        save(canDecryptFile, canDecrypt)
      }, 1000)
    }
    cb()
  }

  function reconstructMessage(record, unboxedContent) {
    const msg = bipf.decode(record.value, 0)
    const originalContent = msg.value.content
    msg.value.content = unboxedContent
    msg.meta = {
      private: true,
      originalContent,
    }

    const len = bipf.encodingLength(msg)
    const buf = Buffer.alloc(len)
    bipf.encode(msg, buf, 0)

    return { offset: record.offset, value: buf }
  }

  const bValue = Buffer.from('value')
  const bContent = Buffer.from('content')

  function decrypt(record, streaming) {
    const recOffset = record.offset
    const recBuffer = record.value
    let p = 0 // note you pass in p!
    if (bsb.eq(canDecrypt, recOffset) !== -1) {
      p = bipf.seekKey(recBuffer, p, bValue)
      if (p < 0) return record
      p = bipf.seekKey(recBuffer, p, bContent)
      if (p < 0) return record

      const unboxedContent = ssbKeys.unbox(bipf.decode(recBuffer, p), keys)
      if (!unboxedContent) return record

      return reconstructMessage(record, unboxedContent)
    } else if (recOffset > latestOffset.value) {
      if (streaming) latestOffset.set(recOffset)

      p = bipf.seekKey(recBuffer, p, bValue)
      if (p < 0) return record
      p = bipf.seekKey(recBuffer, p, bContent)
      if (p < 0) return record

      const type = bipf.getEncodedType(recBuffer, p)
      if (type !== bipf.types.string) return record

      encrypted.push(recOffset)
      const unboxedContent = ssbKeys.unbox(bipf.decode(recBuffer, p), keys)
      if (!unboxedContent) return record

      canDecrypt.push(recOffset)
      return reconstructMessage(record, unboxedContent)
    } else {
      return record
    }
  }

  return {
    latestOffset,
    decrypt,
    saveIndexes,
    stateLoaded: stateLoaded.promise,
  }
}

module.exports.reEncrypt = function (msg) {
  if (msg.meta && msg.meta.private) {
    msg.value.content = msg.meta.originalContent
    delete msg.meta
  }
  return msg
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"../defaults":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/defaults.js","atomically-universal":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically-universal/index.js","binary-search-bounds":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/binary-search-bounds/search-bounds.js","bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/debug/src/browser.js","fastintcompression":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/fastintcompression/FastIntegerCompression.js","obz":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/obz/index.js","p-defer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/p-defer/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js","ssb-keys":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/index.js","typedarray-to-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/typedarray-to-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/log.js":[function(require,module,exports){
(function (Buffer){(function (){
const OffsetLog = require('async-append-only-log')
const bipf = require('bipf')
const { BLOCK_SIZE, newLogPath } = require('./defaults')

module.exports = function (dir, config, privateIndex) {
  config = config || {}

  const log = OffsetLog(newLogPath(dir), {
    blockSize: BLOCK_SIZE,
    validateRecord: (d) => {
      try {
        bipf.decode(d, 0)
        return true
      } catch (ex) {
        return false
      }
    },
  })

  log.add = function (id, msg, cb) {
    const data = {
      key: id,
      value: msg,
      timestamp: Date.now(),
    }
    const b = Buffer.alloc(bipf.encodingLength(data))
    bipf.encode(data, b, 0)
    log.append(b, function (err) {
      if (err) cb(err)
      else cb(null, data)
    })
  }

  // add automatic decrypt

  const originalGet = log.get
  log.get = function (offset, cb) {
    originalGet(offset, (err, buffer) => {
      if (err) return cb(err)
      else {
        const record = { offset, value: buffer }
        cb(null, privateIndex.decrypt(record, false).value)
      }
    })
  }

  const originalStream = log.stream
  log.stream = function (opts) {
    const s = originalStream(opts)
    const originalPipe = s.pipe.bind(s)
    s.pipe = function pipe(o) {
      let originalWrite = o.write
      o.write = (record) => originalWrite(privateIndex.decrypt(record, true))
      return originalPipe(o)
    }
    return s
  }

  return log
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./defaults":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/defaults.js","async-append-only-log":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/async-append-only-log/index.js","bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/full-mentions.js":[function(require,module,exports){
const { deferred } = require('jitdb/operators')

module.exports = function mentions(key) {
  return deferred((meta, cb) => {
    meta.db2.onDrain('fullMentions', () => {
      meta.db2.getIndex('fullMentions').getMessagesByMention(key, meta.live, cb)
    })
  })
}

},{"jitdb/operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/operators.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/index.js":[function(require,module,exports){
(function (Buffer){(function (){
const jitdbOperators = require('jitdb/operators')
const {
  seekKey,
  seekType,
  seekAuthor,
  seekChannel,
  seekRoot,
  seekPrivate,
  seekMeta,
  seekVoteLink,
  seekMentions,
  pluckLink,
  seekContact,
} = require('../seekers')
const { and, equal, includes } = jitdbOperators

function key(value) {
  return equal(seekKey, value, {
    prefix: 32,
    indexType: 'key',
  })
}

function type(value) {
  return equal(seekType, value, {
    indexType: 'value_content_type',
  })
}

function author(value) {
  return equal(seekAuthor, value, {
    indexType: 'value_author',
  })
}

function channel(value) {
  return equal(seekChannel, value, {
    indexType: 'value_content_channel',
  })
}

function votesFor(msgKey) {
  return and(
    type('vote'),
    equal(seekVoteLink, msgKey, {
      prefix: 32,
      indexType: 'value_content_vote_link',
    })
  )()
}

function contact(feedId) {
  return and(
    type('contact'),
    equal(seekContact, feedId, {
      prefix: 32,
      indexType: 'value_content_contact',
    })
  )()
}

function mentions(key) {
  return includes(seekMentions, key, {
    pluck: pluckLink,
    indexType: 'value_content_mentions_link',
  })
}

function hasRoot(msgKey) {
  return equal(seekRoot, msgKey, {
    prefix: 32,
    indexType: 'value_content_root',
  })
}

function isRoot() {
  return equal(seekRoot, null, {
    indexType: 'value_content_root',
  })
}

const bTrue = Buffer.alloc(1, 1)
function isPrivate() {
  return equal(seekPrivate, bTrue, { indexType: 'meta_private' })
}

function isPublic() {
  return equal(seekMeta, undefined, { indexType: 'meta' })
}

module.exports = Object.assign({}, jitdbOperators, {
  type,
  author,
  channel,
  key,
  votesFor,
  contact,
  mentions,
  hasRoot,
  isRoot,
  isPrivate,
  isPublic
})

}).call(this)}).call(this,require("buffer").Buffer)
},{"../seekers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/seekers.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","jitdb/operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/jitdb/operators.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/seekers.js":[function(require,module,exports){
(function (Buffer){(function (){
const { seekKey } = require('bipf')

const bKey = Buffer.from('key')
const bValue = Buffer.from('value')
const bAuthor = Buffer.from('author')
const bContent = Buffer.from('content')
const bType = Buffer.from('type')
const bRoot = Buffer.from('root')
const bVote = Buffer.from('vote')
const bContact = Buffer.from('contact')
const bLink = Buffer.from('link')
const bMeta = Buffer.from('meta')
const bPrivate = Buffer.from('private')
const bChannel = Buffer.from('channel')
const bMentions = Buffer.from('mentions')

module.exports = {
  seekAuthor: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bValue)
    if (p < 0) return
    return seekKey(buffer, p, bAuthor)
  },

  seekType: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bValue)
    if (p < 0) return
    p = seekKey(buffer, p, bContent)
    if (p < 0) return
    return seekKey(buffer, p, bType)
  },

  seekRoot: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bValue)
    if (p < 0) return
    p = seekKey(buffer, p, bContent)
    if (p < 0) return
    return seekKey(buffer, p, bRoot)
  },

  seekVoteLink: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bValue)
    if (p < 0) return
    p = seekKey(buffer, p, bContent)
    if (p < 0) return
    p = seekKey(buffer, p, bVote)
    if (p < 0) return
    return seekKey(buffer, p, bLink)
  },

  seekContact: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bValue)
    if (p < 0) return
    p = seekKey(buffer, p, bContent)
    if (p < 0) return
    return seekKey(buffer, p, bContact)
  },

  seekMentions: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bValue)
    if (p < 0) return
    p = seekKey(buffer, p, bContent)
    if (p < 0) return
    return seekKey(buffer, p, bMentions)
  },

  pluckLink: function (buffer, start) {
    let p = start
    return seekKey(buffer, p, bLink)
  },

  seekPrivate: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bMeta)
    if (p < 0) return
    return seekKey(buffer, p, bPrivate)
  },

  seekMeta: function (buffer) {
    let p = 0 // note you pass in p!
    return seekKey(buffer, p, bMeta)
  },

  seekChannel: function (buffer) {
    let p = 0 // note you pass in p!
    p = seekKey(buffer, p, bValue)
    if (p < 0) return
    p = seekKey(buffer, p, bContent)
    if (p < 0) return
    return seekKey(buffer, p, bChannel)
  },

  seekKey: function (buffer) {
    var p = 0 // note you pass in p!
    return seekKey(buffer, p, bKey)
  },
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"bipf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/bipf/index.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/index.js":[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
var sodium = require("chloride");
var pb = require("private-box");
var u = require("./util");
var isBuffer = Buffer.isBuffer;

//UTILS

function clone(obj) {
  var _obj = {};
  for (var k in obj) {
    if (Object.hasOwnProperty.call(obj, k)) _obj[k] = obj[k];
  }
  return _obj;
}

var hmac = sodium.crypto_auth;

exports.hash = u.hash;

exports.getTag = u.getTag;

function isObject(o) {
  return "object" === typeof o;
}

function isString(s) {
  return "string" === typeof s;
}

var curves = {};
curves.ed25519 = require("./sodium");

function getCurve(keys) {
  var curve = keys.curve;

  if (!keys.curve && isString(keys.public)) keys = keys.public;

  if (!curve && isString(keys)) curve = u.getTag(keys);

  if (!curves[curve]) {
    throw new Error(
      "unkown curve:" + curve + " expected: " + Object.keys(curves)
    );
  }

  return curve;
}

//this should return a key pair:
// {curve: curve, public: Buffer, private: Buffer}

exports.generate = function (curve, seed) {
  curve = curve || "ed25519";

  if (!curves[curve]) throw new Error("unknown curve:" + curve);

  return u.keysToJSON(curves[curve].generate(seed), curve);
};

//import functions for loading/saving keys from storage
var storage = require("./storage")(exports.generate);
for (var key in storage) exports[key] = storage[key];

exports.loadOrCreate = function (filename, cb) {
  exports.load(filename, function (err, keys) {
    if (!err) return cb(null, keys);
    exports.create(filename, cb);
  });
};

exports.loadOrCreateSync = function (filename) {
  try {
    return exports.loadSync(filename);
  } catch (err) {
    return exports.createSync(filename);
  }
};

//takes a public key and a hash and returns a signature.
//(a signature must be a node buffer)

function sign(keys, msg) {
  if (isString(msg)) msg = Buffer.from(msg);
  if (!isBuffer(msg)) throw new Error("msg should be buffer");
  var curve = getCurve(keys);

  return (
    curves[curve]
      .sign(u.toBuffer(keys.private || keys), msg)
      .toString("base64") +
    ".sig." +
    curve
  );
}

//takes a public key, signature, and a hash
//and returns true if the signature was valid.
function verify(keys, sig, msg) {
  if (isObject(sig))
    throw new Error(
      "signature should be base64 string, did you mean verifyObj(public, signed_obj)"
    );
  return curves[getCurve(keys)].verify(
    u.toBuffer(keys.public || keys),
    u.toBuffer(sig),
    isBuffer(msg) ? msg : Buffer.from(msg)
  );
}

// OTHER CRYTPO FUNCTIONS

exports.signObj = function (keys, hmac_key, obj) {
  if (!obj) (obj = hmac_key), (hmac_key = null);
  var _obj = clone(obj);
  var b = Buffer.from(JSON.stringify(_obj, null, 2));
  if (hmac_key) b = hmac(b, u.toBuffer(hmac_key));
  _obj.signature = sign(keys, b);
  return _obj;
};

exports.verifyObj = function (keys, hmac_key, obj) {
  if (!obj) (obj = hmac_key), (hmac_key = null);
  obj = clone(obj);
  var sig = obj.signature;
  delete obj.signature;
  var b = Buffer.from(JSON.stringify(obj, null, 2));
  if (hmac_key) b = hmac(b, u.toBuffer(hmac_key));
  return verify(keys, sig, b);
};

exports.box = function (msg, recipients) {
  msg = Buffer.from(JSON.stringify(msg));

  recipients = recipients.map(function (keys) {
    return sodium.crypto_sign_ed25519_pk_to_curve25519(
      u.toBuffer(keys.public || keys)
    );
  });

  return pb.multibox(msg, recipients).toString("base64") + ".box";
};

function ssbSecretKeyToPrivateBoxSecret(keys) {
  return sodium.crypto_sign_ed25519_sk_to_curve25519(
    u.toBuffer(keys.private || keys)
  );
}

exports.ssbSecretKeyToPrivateBoxSecret = ssbSecretKeyToPrivateBoxSecret;

exports.unboxKey = function (boxed, keys) {
  boxed = u.toBuffer(boxed);
  var sk = ssbSecretKeyToPrivateBoxSecret(keys);
  return pb.multibox_open_key(boxed, sk);
};

exports.unboxBody = function (boxed, key) {
  if (!key) return null;
  boxed = u.toBuffer(boxed);
  key = u.toBuffer(key);
  var msg = pb.multibox_open_body(boxed, key);
  try {
    return JSON.parse("" + msg);
  } catch (_) {
    return;
  }
};

exports.unbox = function (boxed, keys) {
  boxed = u.toBuffer(boxed);

  var sk =
    keys._exchangeKey ||
    sodium.crypto_sign_ed25519_sk_to_curve25519(
      u.toBuffer(keys.private || keys)
    );
  if (keys.private) keys._exchangeKey = sk; //if keys is an object, cache the curve key.
  try {
    var msg = pb.multibox_open(boxed, sk);
    return JSON.parse("" + msg);
  } catch (_) {
    return;
  }
};

exports.secretBox = function secretBox(data, key) {
  if (!data) return;
  var ptxt = Buffer.from(JSON.stringify(data));
  return sodium.crypto_secretbox_easy(ptxt, key.slice(0, 24), key);
};

exports.secretUnbox = function secretUnbox(ctxt, key) {
  var ptxt = sodium.crypto_secretbox_open_easy(ctxt, key.slice(0, 24), key);
  if (!ptxt) return;
  return JSON.parse(ptxt.toString());
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"./sodium":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/sodium.js","./storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/storage.js","./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/util.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/index.js","private-box":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/private-box/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/local-storage.js":[function(require,module,exports){
"use strict";

function isFunction(f) {
  return "function" == typeof f;
}

module.exports = function (generate) {
  function create(filename, curve, legacy) {
    var keys = generate(curve, legacy);
    localStorage[filename] = JSON.stringify(keys);
    return keys;
  }

  function load(filename) {
    return JSON.parse(localStorage[filename]);
  }

  return {
    createSync: create,
    create: function (filename, curve, legacy, cb) {
      if (isFunction(legacy)) (cb = legacy), (legacy = null);
      if (isFunction(curve)) (cb = curve), (curve = null);
      cb(null, create(filename, curve, legacy));
    },
    loadSync: load,
    load: function (filename, cb) {
      cb(null, load(filename));
    },
  };
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/bindings.js":[function(require,module,exports){
var _require = require //fool browserify
module.exports =
  _require('sodium-chloride')(_require('sodium-native'))


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js"][0].apply(exports,arguments)
},{"sodium-browserify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sodium-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/index.js":[function(require,module,exports){
(function (process,Buffer){(function (){
var isElectron = require('is-electron')

if(process.env.CHLORIDE_JS) {
  module.exports = require('./browser')
} else {
  try {
    var cl = module.exports = require('./bindings')

    if(isElectron()) {
      //there is a weird problem with electro.
      //where detached signatures do not work, but other
      //signatures do...

      var keys = cl.crypto_sign_keypair()
      var msg = cl.crypto_hash(new Buffer('test signature'))
      var sig = cl.crypto_sign_detached(msg, keys.secretKey)

      if(!cl.crypto_sign_verify_detached(sig, msg, keys.publicKey)) {
        console.error('detached signatures broken in electron, using workaround')

        var verify = module.exports.crypto_sign_verify_detached
        module.exports.crypto_sign_verify_detached = function (sig, msg, pk) {
          return module.exports.crypto_sign_open(Buffer.concat([sig, msg]), pk)
        }
      }
    }
  } catch (err) {
    console.error('error loading sodium bindings:', err.message)
    console.error('falling back to javascript version.')
    module.exports = require('./browser')
  }
}



}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"./bindings":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/bindings.js","./browser":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","is-electron":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-electron/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/mkdirp/index.js":[function(require,module,exports){
var path = require('path');
var fs = require('fs');
var _0777 = parseInt('0777', 8);

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                if (path.dirname(p) === p) return cb(er);
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};

},{"fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/sodium.js":[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
var sodium = require("chloride");

module.exports = {
  curves: ["ed25519"],

  generate: function (seed) {
    if (!seed) sodium.randombytes((seed = Buffer.alloc(32)));

    var keys = seed
      ? sodium.crypto_sign_seed_keypair(seed)
      : sodium.crypto_sign_keypair();
    return {
      curve: "ed25519",
      public: keys.publicKey,

      //so that this works with either sodium
      //or libsodium-wrappers (in browser)
      private: keys.privateKey || keys.secretKey,
    };
  },

  sign: function (privateKey, message) {
    return sodium.crypto_sign_detached(message, privateKey);
  },

  verify: function (publicKey, sig, message) {
    return sodium.crypto_sign_verify_detached(sig, message, publicKey);
  },
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/storage.js":[function(require,module,exports){
"use strict";
var fs = require("fs");
var mkdirp = require("mkdirp");
var path = require("path");
var u = require("./util");

function isObject(o) {
  return "object" === typeof o;
}

function isFunction(f) {
  return "function" === typeof f;
}

function empty(v) {
  return !!v;
}

function toFile(filename) {
  if (isObject(filename)) return path.join(filename.path, "secret");
  return filename;
}

module.exports = function (generate) {
  if (!fs || !fs.readFile) return require("./local-storage")(generate);

  var exports = {};

  //(DE)SERIALIZE KEYS

  function constructKeys(keys, legacy) {
    if (!keys) throw new Error("*must* pass in keys");

    return `# WARNING: Never show this to anyone.
# WARNING: Never edit it or use it on multiple devices at once.
#
# This is your SECRET, it gives you magical powers. With your secret you can
# sign your messages so that your friends can verify that the messages came
# from you. If anyone learns your secret, they can use it to impersonate you.
#
# If you use this secret on more than one device you will create a fork and
# your friends will stop replicating your content.
#
${legacy ? keys.private : JSON.stringify(keys, null, 2)}
#
# The only part of this file that's safe to share is your public name:
#
#   ${keys.id}`;
  }

  function reconstructKeys(keyfile) {
    var privateKey = keyfile
      .replace(/\s*#[^\n]*/g, "")
      .split("\n")
      .filter(empty)
      .join("");

    //if the key is in JSON format, we are good.
    try {
      var keys = JSON.parse(privateKey);
      if (!u.hasSigil(keys.id)) keys.id = "@" + keys.public;
      return keys;
    } catch (_) {
      console.error(_.stack);
    }
  }

  exports.load = function (filename, cb) {
    filename = toFile(filename, "secret");
    fs.readFile(filename, "ascii", function (err, privateKeyStr) {
      if (err) return cb(err);
      var keys;
      try {
        keys = reconstructKeys(privateKeyStr);
      } catch (err) {
        return cb(err);
      }
      cb(null, keys);
    });
  };

  exports.loadSync = function (filename) {
    filename = toFile(filename);
    return reconstructKeys(fs.readFileSync(filename, "ascii"));
  };

  exports.create = function (filename, curve, legacy, cb) {
    if (isFunction(legacy)) (cb = legacy), (legacy = null);
    if (isFunction(curve)) (cb = curve), (curve = null);

    filename = toFile(filename);
    var keys = generate(curve);
    var keyfile = constructKeys(keys, legacy);
    mkdirp(path.dirname(filename), function (err) {
      if (err) return cb(err);
      fs.writeFile(filename, keyfile, { mode: 0x100, flag: "wx" }, function (
        err
      ) {
        if (err) return cb(err);
        cb(null, keys);
      });
    });
  };

  exports.createSync = function (filename, curve, legacy) {
    filename = toFile(filename);
    var keys = generate(curve);
    var keyfile = constructKeys(keys, legacy);
    mkdirp.sync(path.dirname(filename));
    fs.writeFileSync(filename, keyfile, { mode: 0x100, flag: "wx" });
    return keys;
  };

  return exports;
};

},{"./local-storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/local-storage.js","./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/util.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","mkdirp":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/mkdirp/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/util.js":[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
var cl = require("chloride");

exports.hash = function (data, enc) {
  data =
    "string" === typeof data && enc == null
      ? Buffer.from(data, "binary")
      : Buffer.from(data, enc);
  return cl.crypto_hash_sha256(data).toString("base64") + ".sha256";
};

exports.hasSigil = function hasSigil(s) {
  return /^(@|%|&)/.test(s);
};

function tag(key, tag) {
  if (!tag) throw new Error("no tag for:" + key.toString("base64"));
  return key.toString("base64") + "." + tag.replace(/^\./, "");
}

exports.keysToJSON = function keysToJSON(keys, curve) {
  curve = keys.curve || curve;

  var pub = tag(keys.public, curve);
  return {
    curve: curve,
    public: pub,
    private: keys.private ? tag(keys.private, curve) : undefined,
    id: "@" + pub,
  };
};

exports.getTag = function getTag(string) {
  var i = string.indexOf(".");
  return string.substring(i + 1);
};

exports.toBuffer = function (buf) {
  if (buf == null) return buf;
  if (Buffer.isBuffer(buf)) return buf;
  var i = buf.indexOf(".");
  var start = exports.hasSigil(buf) ? 1 : 0;
  return Buffer.from(buf.substring(start, ~i ? i : buf.length), "base64");
};

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/chloride/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-no-auth/index.js":[function(require,module,exports){
(function (Buffer){(function (){

exports.name = 'no-auth'
exports.version = '1.0.0'
exports.init = function (ssk, config) {
  var Noauth = require('multiserver/plugins/noauth')

  ssk.multiserver.transform({
    name: 'noauth',
    create: function () {
      return Noauth({
        keys: {
          publicKey: Buffer.from(config.keys.public, 'base64')
        }
      })
    }
  })
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","multiserver/plugins/noauth":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/noauth.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js":[function(require,module,exports){
var isCanonicalBase64 = require('is-canonical-base64')
var isDomain = require('is-valid-domain')
var Querystring = require('querystring')
var ip = require('ip')
var MultiServerAddress = require('multiserver-address')

var parseLinkRegex = /^((@|%|&)[A-Za-z0-9/+]{43}=\.[\w\d]+)(\?(.+))?$/
var feedIdRegex = exports.feedIdRegex = isCanonicalBase64('@', '.(?:sha256|ed25519)', 32)
var blobIdRegex = exports.blobIdRegex = isCanonicalBase64('&', '.sha256', 32)
var msgIdRegex = exports.msgIdRegex = isCanonicalBase64('%', '.sha256', 32)
var cloakedMsgIdRegex = exports.cloakedMsgIdRegex = isCanonicalBase64('%', '.cloaked', 32)

var extractRegex = /([@%&][A-Za-z0-9/+]{43}=\.[\w\d]+)/

function isMultiServerAddress (str) {
  // a http url fits into the multiserver scheme,
  // but all ssb address must have a transport and a transform
  // so check there is at least one unescaped ~ in the address
  return MultiServerAddress.check(str) && /[^!][~]/.test(str)
}

function isIP (s) {
  return ip.isV4Format(s) || ip.isV6Format(s)
}

var isInteger = Number.isInteger
var DEFAULT_PORT = 8008

function isString (s) {
  return typeof s === 'string'
}

var isHost = function (addr) {
  if (!isString(addr)) return
  addr = addr.replace(/^wss?:\/\//, '')
  return (isIP(addr)) || isDomain(addr) || addr === 'localhost'
}

var isPort = function (p) {
  return isInteger(p) && p <= 65536
}

function isObject (o) {
  return o && typeof o === 'object' && !Array.isArray(o)
}

var isFeedId = exports.isFeed = exports.isFeedId =
  function (data) {
    return isString(data) && feedIdRegex.test(data)
  }

var isMsgId = exports.isMsg = exports.isMsgId =
  function (data) {
    return isString(data) && msgIdRegex.test(data)
  }

exports.isCloakedMsg = exports.isCloakedMsgId =
  function (data) {
    return isString(data) && cloakedMsgIdRegex.test(data)
  }

var isBlobId = exports.isBlob = exports.isBlobId =
  function (data) {
    return isString(data) && blobIdRegex.test(data)
  }

var isLink = exports.isLink =
  function (data) {
    if (!isString(data)) return false
    var index = data.indexOf('?')
    data = ~index ? data.substring(0, index) : data
    return isString(data) && (isFeedId(data) || isMsgId(data) || isBlobId(data))
  }

exports.isBlobLink = function (s) {
  return s[0] === '&' && isLink(s)
}

exports.isMsgLink = function (s) {
  return s[0] === '%' && isLink(s)
}

exports.normalizeChannel =
  function (data) {
    if (typeof data === 'string') {
      data = data.toLowerCase().replace(/\s|,|\.|\?|!|<|>|\(|\)|\[|\]|"|#/g, '')
      if (data.length > 0) {
        return data.slice(0, 30)
      }
    }
    return null
  }

function deprecate (name, fn) {
  var logged = false
  return function () {
    var args = [].slice.call(arguments)
    if (!logged) {
      console.trace('deprecated api used: ' + name)
      logged = true
    }
    return fn.apply(this, args)
  }
}

var parseMultiServerAddress = function (data) {
  if (!isString(data)) return false
  if (!MultiServerAddress.check(data)) return false

  var addr = MultiServerAddress.decode(data)
  addr = addr.find(function (address) {
    if (!address[0]) return false
    if (!address[1]) return false
    return /^(net|wss?|onion)$/.test(address[0].name) && /^shs/.test(address[1].name)
  })
  if (!Array.isArray(addr)) {
    return false
  }
  var port = +addr[0].data.pop() // last item always port, to handle ipv6

  // preserve protocol type on websocket addresses
  var host = (/^wss?$/.test(addr[0].name) ? addr[0].name + ':' : '') + addr[0].data.join(':')
  var key = '@' + addr[1].data[0] + '.ed25519'
  var seed = addr[1].data[2]
  // allow multiserver addresses that are not currently understood!
  if (!(isHost(host) && isPort(+port) && isFeedId(key))) return false
  var address = {
    host: host,
    port: port,
    key: key
  }
  if (seed) { address.seed = seed }

  return address
}

var toLegacyAddress = parseMultiServerAddress
exports.toLegacyAddress = deprecate('ssb-ref.toLegacyAddress', toLegacyAddress)

exports.isLegacyAddress = function (addr) {
  return isObject(addr) && isHost(addr.host) && isPort(addr.port) && isFeedId(addr.key)
}

var toMultiServerAddress = exports.toMultiServerAddress = function (addr) {
  if (MultiServerAddress.check(addr)) return addr
  if (!isPort(addr.port)) throw new Error('ssb-ref.toMultiServerAddress - invalid port:' + addr.port)
  if (!isHost(addr.host)) throw new Error('ssb-ref.toMultiServerAddress - invalid host:' + addr.host)
  if (!isFeedId(addr.key)) throw new Error('ssb-ref.toMultiServerAddress - invalid key:' + addr.key)

  return (
    /^wss?:/.test(addr.host) ? addr.host
      : /\.onion$/.test(addr.host) ? 'onion:' + addr.host
        : 'net:' + addr.host
  ) + ':' + addr.port + '~shs:' + addr.key.substring(1, addr.key.indexOf('.'))
}

var isAddress = exports.isAddress = function (data) {
  var host, port, id
  if (isObject(data)) {
    id = data.key; host = data.host; port = data.port
  } else if (!isString(data)) return false
  else if (isMultiServerAddress(data)) return true
  else {
    var parts = data.split(':')
    id = parts.pop(); port = parts.pop(); host = parts.join(':')
  }
  return (
    isFeedId(id) && isPort(+port) &&
    isHost(host)
  )
}

// This is somewhat fragile, because maybe non-shs protocols get added...
// it would be better to treat all addresses as opaque or have multiserver handle
// extraction of a signing key from the address.
exports.getKeyFromAddress = function (addr) {
  if (addr.key) return addr.key
  try {
    var data = MultiServerAddress.decode(addr)
  } catch (err) {
    console.error(new Error('Attempted connection with malformed multiserver-address ' + addr))
  }
  if (!data) return undefined
  for (var k in data) {
    var address = data[k]
    for (var j in address) {
      var protocol = address[j]
      if (/^shs/.test(protocol.name)) {
        // forwards compatible with future shs versions...
        return '@' + protocol.data[0] + '.ed25519'
      }
    }
  }
}

var parseAddress = function (e) {
  if (isString(e)) {
    if (~e.indexOf('~')) { return parseMultiServerAddress(e) }
    var parts = e.split(':')
    var id = parts.pop(); var port = parts.pop(); var host = parts.join(':')
    e = {
      host: host,
      port: +(port || DEFAULT_PORT),
      key: id
    }
    return e
  }
  return e
}
exports.parseAddress = deprecate('ssb-ref.parseAddress', parseAddress)

var toAddress = exports.toAddress = function (e) {
  e = parseAddress(e)
  e.port = e.port || DEFAULT_PORT
  e.host = e.host || 'localhost'
  return e
}

var legacyInviteRegex = /^[A-Za-z0-9/+]{43}=$/
var legacyInviteFixerRegex = /#.*$/
var isLegacyInvite = exports.isLegacyInvite =
  function (data) {
    if (!isString(data)) return false
    data = data.replace(legacyInviteFixerRegex, '')
    var parts = data.split('~')
    return parts.length === 2 && isAddress(parts[0]) && legacyInviteRegex.test(parts[1])
  }

var isMultiServerInvite = exports.isMultiServerInvite =
  function (data) {
    if (!isString(data)) return false
    return !!parseMultiServerInvite(data)
  }

var isInvite = exports.isInvite =
  function (data) {
    if (!isString(data)) return false
    return isLegacyInvite(data) || isMultiServerInvite(data)
  }

exports.parseLink = function parseBlob (ref) {
  var match = parseLinkRegex.exec(ref)
  if (match && match[1]) {
    if (match[3]) {
      var query = Querystring.parse(match[4])
      // unbox keys have a '+' in them that is parsed into a ' ', this changes it back
      if (isString(query.unbox)) query.unbox = query.unbox.replace(/ /g, '+')
      return { link: match[1], query }
    } else {
      return { link: match[1] }
    }
  }
}

function parseLegacyInvite (invite) {
  var redirect = invite.split('#')
  invite = redirect.shift()
  var parts = invite.split('~')
  var addr = toAddress(parts[0])// .split(':')
  // convert legacy code to multiserver invite code.
  var remote = toMultiServerAddress(addr)
  invite = remote + ':' + parts[1]
  return {
    invite: remote + ':' + parts[1],
    key: addr.key,
    remote: remote,
    redirect: redirect.length ? '#' + redirect.join('#') : null
  }
}

function parseMultiServerInvite (invite) {
  var redirect = invite.split('#')
  if (!redirect.length) return null

  invite = redirect.shift()
  var addr = toLegacyAddress(invite)
  if (!addr) return null
  delete addr.seed
  return {
    invite: invite,
    remote: toMultiServerAddress(addr),
    key: addr.key,
    redirect: redirect.length ? '#' + redirect.join('#') : null
  }
}

exports.parseLegacyInvite = deprecate('ssb-ref.parseLegacyInvite', parseLegacyInvite)
exports.parseMultiServerInvite = deprecate('ssb-ref.parseMultiServerInvite', parseMultiServerInvite)

exports.parseInvite = deprecate('ssb-ref.parseInvite', function (invite) {
  return (
    isLegacyInvite(invite)
      ? parseLegacyInvite(invite)
      : isMultiServerInvite(invite)
        ? parseMultiServerInvite(invite)
        : null
  )
})

exports.type =
  function (id) {
    if (!isString(id)) return false
    var c = id.charAt(0)
    if (c === '@' && isFeedId(id)) { return 'feed' } else if (c === '%' && isMsgId(id)) { return 'msg' } else if (c === '&' && isBlobId(id)) { return 'blob' } else if (isAddress(id)) return 'address'
    else if (isInvite(id)) return 'invite'
    else { return false }
  }

exports.extract =
  function (data) {
    if (!isString(data)) { return false }

    var _data = data

    var res = extractRegex.exec(_data)
    if (res) {
      return res && res[0]
    } else {
      try {
        _data = decodeURIComponent(data)
      } catch (e) {
        // this may fail if it's not encoded, so don't worry if it does
      }
      _data = _data.replace(/&amp;/g, '&')

      res = extractRegex.exec(_data)
      return res && res[0]
    }
  }

},{"ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js","is-canonical-base64":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-canonical-base64/index.js","is-valid-domain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-valid-domain/index.js","multiserver-address":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js","querystring":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/node_modules/debug/src/browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/debug/src/browser.js"][0].apply(exports,arguments)
},{"./common":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/node_modules/debug/src/common.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/node_modules/debug/src/common.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/debug/src/common.js"][0].apply(exports,arguments)
},{"ms":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ms/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/node_modules/ssb-ref/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-conn-db/node_modules/ssb-ref/index.js"][0].apply(exports,arguments)
},{"ip":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ip/lib/ip.js","is-canonical-base64":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-canonical-base64/index.js","is-valid-domain":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-valid-domain/index.js","multiserver-address":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver-address/index.js","querystring":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/tunnel/client.js":[function(require,module,exports){
const pull = require('pull-stream');
const DuplexPair = require('pull-pair/duplex');
const ref = require('ssb-ref');
const debug = require('debug')('ssb:room:tunnel:client');
const ErrorDuplex = require('./error-duplex');

class RoomClient {
  constructor(ssb, serverKey, address, rpc, roomMetadata, onConnect) {
    this.ssb = ssb;
    this.serverKey = serverKey;
    this.address = address;
    this.rpc = rpc;
    this.roomMetadata = roomMetadata;
    this.onConnect = onConnect;
    this.connectionHandler = (stream, id) => {
      stream.address = 'tunnel:' + this.serverKey + ':' + id;
      debug(
        'handler will call onConnect for the stream.address: %s',
        stream.address,
      );
      this.onConnect(stream);
    };
    this.init();
  }

  init() {
    debug('announcing to portal: %s', this.serverKey);

    const roomName = this.roomMetadata && this.roomMetadata.name;
    if (roomName) {
      this.ssb.conn.db().update(this.address, {name: roomName});
      this.ssb.conn.hub().update(this.address, {name: roomName});
    }

    pull(
      this.rpc.tunnel.endpoints(),
      (this.endpointsDrain = pull.drain(endpoints => {
        const room = this.serverKey;
        debug('got endpoints from %s: %s', room, JSON.stringify(endpoints));

        // Update onlineCount metadata for this room
        const onlineCount = endpoints.length;
        this.ssb.conn.hub().update(this.address, {onlineCount});

        // Detect removed endpoints, unstage them
        for (const entry of this.ssb.conn.staging().entries()) {
          const [addr, data] = entry;
          if (data.room === room && data.key && !endpoints.includes(data.key)) {
            debug('will conn.unstage("%s")', addr);
            this.ssb.conn.unstage(addr);
          }
        }

        // Stage all the new endpoints
        for (const key of endpoints) {
          if (key === room) continue;
          if (key === this.ssb.id) continue;
          if (this.isAlreadyConnected(key)) continue;
          const address = this.getAddress(key);
          debug('will conn.stage("%s")', address);
          this.ssb.conn.stage(address, {
            type: 'room-endpoint',
            key,
            room,
            roomName,
          });
        }
      })),
    );
  }

  getAddress(key) {
    const shs = key.substr(1, key.length - 9);
    return `tunnel:${this.serverKey}:${key}~shs:${shs}`;
  }

  isAlreadyConnected(key) {
    for (const [, data] of this.ssb.conn.hub().entries()) {
      if (data.key === key) return true;
    }
    return false;
  }

  close() {
    if (this.endpointsDrain && this.endpointsDrain.abort) {
      this.endpointsDrain.abort();
    }
    for (const [addr, data] of this.ssb.conn.staging().entries()) {
      if (data.room === this.serverKey) {
        this.ssb.conn.unstage(addr);
      }
    }
    this.rpc.close(true, err => {
      if (err) debug('error when closing connection with room: %s', err);
    });
  }
}

function init(ssb) {
  if (!ssb.conn || !ssb.conn.connect) {
    throw new Error('tunnel plugin is missing the required ssb-conn plugin');
  }

  const rooms = new Map();
  var parseFn;

  ssb.multiserver.transport({
    name: 'tunnel',
    create(msConfig) {
      return {
        name: 'tunnel',

        scope() {
          return msConfig.scope;
        },

        server(onConnect) {
          // Once a room disconnects, teardown
          pull(
            ssb.conn.hub().listen(),
            pull.filter(({type}) => type === 'disconnected'),
            pull.filter(({key}) => !!key && rooms.has(key)),
            pull.drain(({key}) => {
              rooms.get(key).close();
              rooms.delete(key);
            }),
          );

          // Once a peer connects, detect rooms, and setup room portals
          pull(
            ssb.conn.hub().listen(),
            pull.filter(({type}) => type === 'connected'),
            pull.drain(({address, key, details}) => {
              if (!key || !details || !details.rpc) return;
              if (rooms.has(key)) return;
              const rpc = details.rpc;
              debug(
                'will try to call tunnel.isRoom() at new gossip peer: %s',
                key,
              );
              rpc.tunnel.isRoom((err, res) => {
                if (err || !res) return;
                debug('is connected to an actual ssb-room');
                rooms.set(
                  key,
                  new RoomClient(ssb, key, address, rpc, res, onConnect),
                );
              });
            }),
          );

          // close server
          return () => {
            rooms.forEach(roomClient => {
              roomClient.close();
            });
            rooms.clear();
          };
        },

        client(addr, cb) {
          debug(`we wish to connect to ${addr}`);
          const opts = parseFn(addr);
          if (!opts) {
            cb(new Error(`invalid tunnel address ${addr}`));
            return;
          }
          const {portal, target} = opts;
          if (!rooms.has(portal)) {
            cb(new Error(`room ${portal} is offline`));
            return;
          }

          const rpc = rooms.get(portal).rpc;
          debug(`will call tunnel.connect at ${target} via room ${portal}`);
          cb(null, rpc.tunnel.connect({target, portal}, () => {}));
        },

        parse: (parseFn = function parse(addr) {
          let opts;
          if (typeof addr === 'object') {
            opts = addr;
          } else {
            const parts = addr.split(':');
            opts = {name: parts[0], portal: parts[1], target: parts[2]};
          }
          if (opts.name !== 'tunnel') return;
          if (!ref.isFeed(opts.portal)) return;
          if (!ref.isFeed(opts.target)) return;
          return opts;
        }),

        stringify() {
          return undefined;
        },
      };
    },
  });

  return {
    isRoom(cb) {
      cb(null, false);
    },

    connect(opts) {
      if (!opts) return ErrorDuplex('opts *must* be provided');
      debug('received incoming tunnel.connect(%o)', opts);
      const {target, portal, origin} = opts;
      if (target === ssb.id && rooms.has(portal)) {
        debug('connect() will resolve because handler exists');
        const handler = rooms.get(portal).connectionHandler;
        const streams = DuplexPair();
        handler(streams[0], origin || this.id);
        return streams[1];
      } else {
        return ErrorDuplex(`could not connect to ${target}`);
      }
    },

    ping() {
      return Date.now();
    },
  };
}

module.exports = {
  name: 'tunnel',
  version: '1.0.0',
  manifest: {
    announce: 'sync', // not implemented
    leave: 'sync', // not implemented
    endpoints: 'source', // not implemented
    isRoom: 'async',
    connect: 'duplex',
    ping: 'sync',
  },
  permissions: {
    anonymous: {allow: ['connect', 'ping', 'isRoom']},
  },
  init,
};

},{"./error-duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/tunnel/error-duplex.js","debug":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/node_modules/debug/src/browser.js","pull-pair/duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-pair/duplex.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-room/tunnel/error-duplex.js":[function(require,module,exports){
module.exports = function ErrorDuplex(message) {
  const err = new Error(message);
  return {
    source(_abort, cb) {
      cb(err);
    },
    sink(read) {
      read(err, () => {});
    },
  };
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-sort/index.js":[function(require,module,exports){
var isMsgRef = require('ssb-ref').isMsg

//messages in thread that are not referenced by another message in the thread.
function heads (thread) {
  var counts = messages(thread)

  thread.forEach(function (msg) {
    links(msg.value, function (link) {
      counts[link] = 0
    })
  })
  var ary = []
  for(var k in counts) if(counts[k] !== 0) ary.push(k)
  return ary.sort()
}

function roots (thread) {
  sort(thread)
  var counts = messages(thread)

  thread.forEach(function (msg) {
    links(msg.value, function (link) {
      if(counts[link]) counts[msg.key] = 2
    })
  })

  var ary = []
  for(var k in counts) if(counts[k] === 1) ary.push(k)
  return ary
}

function sort (thread) {
  var dict = arrayToDict(thread)
  function compare(a, b) {
    return ancestorOf(a, b, dict) ? 1 : ancestorOf(b, a, dict) ? -1 : 0
  }

  return thread.sort(function (a, b) {
    return (
      compare(a, b)
      //received timestamp, may not be present
      || a.timestamp - b.timestamp
      //declared timestamp, may by incorrect or a lie
      || a.value.timestamp - b.value.timestamp
      //finially, sort hashes lexiegraphically.
      || (a.key > b.key ? -1 : a.key < b.key ? 1 : 0)
    )
  })
}

function ancestors (thread, start, isTarget) {
  if(Array.isArray(thread))
    thread = arrayToDict(thread)
  start = isString(start) ? start : start.key
  var seen = {}
  function traverse (key) {
    if(seen[key]) return
    seen[key] = true
    if(isTarget(thread[key], key)) return true
    return links(thread[key], function (link) {
      if(thread[link]) return traverse(link)
    })
  }

  return traverse(start)
}

function ancestorOf (a, b, thread) {
  return ancestors(thread, a.key, function (_b, k) {
    return b.key === k
  })
}

function missingContext (thread) {
  var dict = arrayToDict(thread)
  var results = {}

  thread.forEach(function (msg) {
    const noLineage = thread
      .filter(function (m) { return m.key !== msg.key })
      .map(function (m) {
        return areCausallyLinked(m, msg)
          ? null  // if it's an ancestor, that's all good
          : m     // if it's not an ancestor, bingo!
      })
      .filter(Boolean)

    if (noLineage.length) results[msg.key] = noLineage
  })
  return results

  function areCausallyLinked (a, b) {
    return ancestorOf(a, b, dict) || ancestorOf(b, a, dict)
  }
}

exports = module.exports = sort
exports.heads = heads
exports.roots = roots
exports.ancestors = ancestors
exports.missingContext = missingContext


// Utils ///////////////////////////////////

function links (obj, each) {
  if(isMsgRef(obj)) return each(obj)
  if(!obj || 'object' !== typeof obj) return
  for(var k in obj)
    if(links(obj[k], each)) return true
}

//used to initialize sort
function messages (thread) {
  var counts = {}

  for(var i = 0; i < thread.length; i++) {
    var key = thread[i].key
    if(counts[key])
      throw new Error('thread has duplicate message:'+key)
    counts[key] = 1
  }

  return counts
}

function arrayToDict (thread) {
  var o = {}
  thread.forEach(function (e) {
    o[e.key] = e.value
  })
  return o
}

function isString(s) { return 'string' === typeof s }


},{"ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/index.js":[function(require,module,exports){
(function (Buffer){(function (){
var ref = require('ssb-ref')
var ssbKeys = require('ssb-keys')
var isFeedId = ref.isFeedId
var timestamp = require('monotonic-timestamp')
var isCanonicalBase64 = require('is-canonical-base64')
var isEncryptedRx = isCanonicalBase64('','\\.box.*')
var isSignatureRx = isCanonicalBase64('','\\.sig.\\w+')

function isValidOrder (msg, signed) {
  var keys = Object.keys(msg)
  if(signed && keys.length !== 7) return false
  if(
    keys[0] !== 'previous' ||
    keys[3] !== 'timestamp' ||
    keys[4] !== 'hash' ||
    keys[5] !== 'content' ||
    (signed && keys[6] !== 'signature')
  ) return false
  //author and sequence may be swapped.
  if(!(
    (keys[1] === 'sequence' && keys[2] === 'author') ||
    (keys[1] === 'author' && keys[2] === 'sequence')
  ))
    return false
  return true
}

var encode = exports.encode = function (obj) {
  return JSON.stringify(obj, null, 2)
}

exports.initial = function () {
  return {
    validated: 0,
    queued: 0,
    queue: [],
    feeds: {},
    error: null
  }
}


function isString (s) {
  return s && 'string' === typeof s
}

function isInteger (n) {
  return ~~n === n
}

function isObject (o) {
  return o && 'object' === typeof o
}

function isEncrypted (str) {
  //NOTE: does not match end of string,
  //so future box version are accepted.
  //XXX check that base64 is canonical!
  return isString(str) && isEncryptedRx.test(str) ///^[0-9A-Za-z\/+]+={0,2}\.box/.test(str)
}

var isInvalidContent = exports.isInvalidContent = function (content) {
  if(!isEncrypted(content)) {
    var type = content.type
    if (!(isString(type) && type.length <= 52 && type.length >= 3)) {
      return new Error('type must be a string' +
        '3 <= type.length < 52, was:' + type
      )
    }
  }
  return false
}

var isSupportedHash = exports.isSupportedHash = function (msg) {
  return msg.hash === 'sha256'
}

var isSigMatchesCurve = exports.isSigMatchesCurve = function (msg) {
  if(!isSignatureRx.test(msg.signature)) return
  var curve = /\.(\w+)/.exec(msg.author)
  if(!(curve && curve[1])) return

  const signatureBase64Length = msg.signature.length - (curve[1].length + 5)

  if (signatureBase64Length !== 88) return
  if ('.sig.'+curve[1] !== msg.signature.substring(signatureBase64Length)) return

  return true
}

var isInvalidShape = exports.isInvalidShape = function (msg) {
  if(
    !isObject(msg) ||
    !isInteger(msg.sequence) ||
    !isFeedId(msg.author) ||
    !(isObject(msg.content) || isEncrypted(msg.content)) ||
    !isValidOrder(msg, false) || //false, because message may not be signed yet.
    !isSupportedHash(msg)
  )
    return new Error('message has invalid properties:'+JSON.stringify(msg, null, 2))

  //allow encrypted messages, where content is a base64 string.

  //NOTE: since this checks the length of javascript string,
  //it's not actually the byte length! it's the number of utf8 chars
  //for latin1 it's gonna be 8k, but if you use all utf8 you can
  //approach 32k. This is a weird legacy thing, obviously, that
  //we will fix at some point...
  var asJson = encode(msg)
  if (asJson.length > 8192) // 8kb
    return new Error('Encoded message must not be larger than 8192 bytes. Current size is '+asJson.length)

  return isInvalidContent(msg.content)
}

const isInvalidHmacKey = (hmacKey) => {
  if (hmacKey === undefined) return false
  if (hmacKey === null) return false
  const bytes = Buffer.isBuffer(hmacKey) ? hmacKey : Buffer.from(hmacKey, 'base64')

  if (typeof hmacKey === 'string') {
    if (bytes.toString('base64') !== hmacKey) return true
  }

  if (bytes.length !== 32) return true
  return false
}

function fatal(err) {
  err.fatal = true
  return err
}

exports.checkInvalidCheap = function (state, msg) {
  //the message is just invalid
  if(!ref.isFeedId(msg.author))
    return new Error('invalid message: must have author')
  if(!isSigMatchesCurve(msg))
    return new Error('invalid message: signature type must match author type')

  //state is id, sequence, timestamp
  if(state) {
    //most likely, we just tried to append two messages twice
    //or append another message after an error.
    if(msg.sequence != state.sequence + 1)
      return new Error('invalid message: expected sequence ' + (state.sequence + 1) + ' but got:'+ msg.sequence + 'in state:'+JSON.stringify(state)+', on feed:'+msg.author)
    //if we have the correct sequence and wrong previous,
    //this must be a fork!
    if(msg.previous != state.id)
      return fatal(new Error('invalid message: expected different previous message, on feed:'+msg.author))
    //and check type, and length, and some other stuff. finally check the signature.
  }
  else {
    if(msg.previous !== null)
      return fatal(new Error('initial message must have previous: null, on feed:'+msg.author))
    if(msg.sequence !== 1)
      return fatal(new Error('initial message must have sequence: 1, on feed:'+msg.author))
    if('number' !== typeof msg.timestamp)
      return fatal(new Error('initial message must have timestamp, on feed:'+msg.author))
  }
  if(!isValidOrder(msg, true))
    return fatal(new Error('message must have keys in allowed order'))

  return isInvalidShape(msg)
}

exports.checkInvalid = function (state, hmac_key, msg) {
  var err = exports.checkInvalidCheap(state, msg)
  if(err) return err

  if (isInvalidHmacKey(hmac_key)) {
    return fatal(new Error('invalid HMAC key'))
  }
  if(!ssbKeys.verifyObj({public: msg.author.substring(1)}, hmac_key, msg))
    return fatal(new Error('invalid signature'))
  return false //not invalid
}

/*
{
  //an array of messages which have been validated, but not written to the database yet.
  valid: [],
  //a map of information needed to know if something should be appeneded to the valid queue.
  feeds: {
    <feed>: {id, sequence, ts}
  },
  error: null
}
*/

exports.queue = function (state, msg) {
  state.error = exports.checkInvalidCheap(flatState(state.feeds[msg.author]), msg)

  if(state.error)
    return state
  state.feeds[msg.author] = state.feeds[msg.author] || {
    id: null, sequence: null, timestamp: null, queue: []
  }
  state.queued += 1
  state.feeds[msg.author].queue.push(exports.toKeyValueTimestamp(msg))
  return state
}

exports.toKeyValueTimestamp = function (msg, id) {
  return {
    key: id ? id : exports.id(msg),
    value: msg,
    timestamp: timestamp()
  }
}

function flatState (fstate) {
  if(!fstate) return null
  if(fstate.queue.length) {
    var last = fstate.queue[fstate.queue.length - 1]
    return {
      id: last.key,
      timestamp: last.value.timestamp,
      sequence: last.value.sequence
    }
  }
  else
    return fstate
}

exports.appendKVT = function (state, hmac_key, kvt) {
  var err
  var msg_id = kvt.key
  var msg = kvt.value
  var _state = flatState(state.feeds[msg.author])
  err = exports.checkInvalid(_state, hmac_key, msg)

  if(err)
    throw err
  else if(state.feeds[msg.author]) {
    var a = state.feeds[msg.author]
    a.id = msg_id
    a.sequence = msg.sequence
    a.timestamp = msg.timestamp
    var q = state.feeds[msg.author].queue
    state.validated += q.length
    state.queued -= q.length
    for (var i = 0; i < q.length; ++i)
      state.queue.push(q[i])
    q = []
  }
  else if(msg.sequence === 1) {
    state.feeds[msg.author] = {
      id: msg_id,
      sequence: msg.sequence,
      timestamp: msg.timestamp,
      queue: []
    }
  }

  state.queue.push(kvt)
  state.validated += 1
  return state
}

exports.append = function (state, hmac_key, msg) {
  return exports.appendKVT(state, hmac_key, exports.toKeyValueTimestamp(msg))
}

exports.checkInvalidOOO = function(msg, hmac_key) {
  if(!ref.isFeedId(msg.author))
    return new Error('invalid message: must have author')
  if(!isSigMatchesCurve(msg))
    return new Error('invalid message: signature type must match author type')
  if('number' !== typeof msg.timestamp)
    return fatal(new Error('message must have timestamp, on feed:'+msg.author))
  if(!isValidOrder(msg, true))
    return fatal(new Error('message must have keys in allowed order'))
  if (isInvalidShape(msg))
    return fatal(new Error('message has invalid shape'))
  if (isInvalidHmacKey(hmac_key))
    return fatal(new Error('invalid HMAC key'))
  if(!ssbKeys.verifyObj({public: msg.author.substring(1)}, hmac_key, msg))
    return fatal(new Error('invalid signature'))

  return false // ok
}

exports.appendOOO = function(state, hmac_key, msg) {

  state.error = exports.checkInvalidOOO(msg, hmac_key)
  if (state.error)
    return state

  var kvt = exports.toKeyValueTimestamp(msg)

  if (!state.feeds[msg.author]) {
    state.feeds[msg.author] = {
      id: kvt.key,
      sequence: msg.sequence,
      timestamp: msg.timestamp,
      queue: []
    }
  }

  state.queue.push(kvt)
  state.validated += 1
  return state
}

exports.validate = function (state, hmac_key, feed) {
  if(!isFeedId(feed)) throw new Error('validate takes a feedId')
  if(!state.feeds[feed] || !state.feeds[feed].queue.length) {
    return state
  }
  var kvt = state.feeds[feed].queue.pop()
  state.queued -= 1
  return exports.appendKVT(state, hmac_key, kvt)
}

//pass in your own timestamp, so it's completely deterministic
exports.create = function (state, keys, hmac_key, content, timestamp) {
  if(timestamp == null || isNaN(+timestamp)) throw new Error('timestamp must be provided')

  if(!isObject(content) && !isEncrypted(content))
    throw new Error('invalid message content, must be object or encrypted string')

  state = flatState(state)

  var msg = {
    previous: state ? state.id : null,
    sequence: state ? state.sequence + 1 : 1,
    author: keys.id,
    timestamp: +timestamp,
    hash: 'sha256',
    content: content
  }

  var err = isInvalidShape(msg)
  if(err) throw err
  return ssbKeys.signObj(keys, hmac_key, msg)
}

exports.id = function (msg) {
  return '%'+ssbKeys.hash(JSON.stringify(msg, null, 2))
}

exports.appendNew = function (state, hmac_key, keys, content, timestamp) {
  var msg = exports.create(state.feeds[keys.id], keys, hmac_key, content, timestamp)
  state = exports.append(state, hmac_key, msg)
  return state
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","is-canonical-base64":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-canonical-base64/index.js","monotonic-timestamp":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/monotonic-timestamp/index.js","ssb-keys":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/mkdirp/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/node_modules/mkdirp/index.js"][0].apply(exports,arguments)
},{"fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/index.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
var sodium     = require('chloride')

var pb         = require('private-box')

var u          = require('./util')

var isBuffer = Buffer.isBuffer

//UTILS

function clone (obj) {
  var _obj = {}
  for(var k in obj) {
    if(Object.hasOwnProperty.call(obj, k))
      _obj[k] = obj[k]
  }
  return _obj
}

var hmac = sodium.crypto_auth

exports.hash = u.hash

exports.getTag = u.getTag

function isObject (o) {
  return 'object' === typeof o
}

function isFunction (f) {
  return 'function' === typeof f
}

function isString(s) {
  return 'string' === typeof s
}

var curves = {}
curves.ed25519 = require('./sodium')

function getCurve(keys) {
  var curve = keys.curve

  if(!keys.curve && isString(keys.public))
    keys = keys.public

  if(!curve && isString(keys))
    curve = u.getTag(keys)

  if(!curves[curve]) {
    throw new Error(
      'unkown curve:' + curve +
      ' expected: '+Object.keys(curves)
    )
  }

  return curve
}

//this should return a key pair:
// {curve: curve, public: Buffer, private: Buffer}

exports.generate = function (curve, seed) {
  curve = curve || 'ed25519'

  if(!curves[curve])
    throw new Error('unknown curve:'+curve)

  return u.keysToJSON(curves[curve].generate(seed), curve)
}

//import functions for loading/saving keys from storage
var storage = require('./storage')(exports.generate)
for(var key in storage) exports[key] = storage[key]


exports.loadOrCreate = function (filename, cb) {
  exports.load(filename, function (err, keys) {
    if(!err) return cb(null, keys)
    exports.create(filename, cb)
  })
}

exports.loadOrCreateSync = function (filename) {
  try {
    return exports.loadSync(filename)
  } catch (err) {
    return exports.createSync(filename)
  }
}


//takes a public key and a hash and returns a signature.
//(a signature must be a node buffer)

function sign (keys, msg) {
  if(isString(msg))
    msg = new Buffer(msg)
  if(!isBuffer(msg))
    throw new Error('msg should be buffer')
  var curve = getCurve(keys)

  return curves[curve]
    .sign(u.toBuffer(keys.private || keys), msg)
    .toString('base64')+'.sig.'+curve

}

//takes a public key, signature, and a hash
//and returns true if the signature was valid.
function verify (keys, sig, msg) {
  if(isObject(sig))
    throw new Error('signature should be base64 string, did you mean verifyObj(public, signed_obj)')
  return curves[getCurve(keys)].verify(
    u.toBuffer(keys.public || keys),
    u.toBuffer(sig),
    isBuffer(msg) ? msg : new Buffer(msg)
  )
}

// OTHER CRYTPO FUNCTIONS

exports.signObj = function (keys, hmac_key, obj) {
  if(!obj) obj = hmac_key, hmac_key = null
  var _obj = clone(obj)
  var b = new Buffer(JSON.stringify(_obj, null, 2))
  if(hmac_key) b = hmac(b, u.toBuffer(hmac_key))
  _obj.signature = sign(keys, b)
  return _obj
}

exports.verifyObj = function (keys, hmac_key, obj) {
  if(!obj) obj = hmac_key, hmac_key = null
  obj = clone(obj)
  var sig = obj.signature
  delete obj.signature
  var b = new Buffer(JSON.stringify(obj, null, 2))
  if(hmac_key) b = hmac(b, u.toBuffer(hmac_key))
  return verify(keys, sig, b)
}

exports.box = function (msg, recipients) {
  msg = new Buffer(JSON.stringify(msg))

  recipients = recipients.map(function (keys) {
    return sodium.crypto_sign_ed25519_pk_to_curve25519(u.toBuffer(keys.public || keys))
  })

  return pb.multibox(msg, recipients).toString('base64')+'.box'
}

function ssbSecretKeyToPrivateBoxSecret (keys) {
  return sodium.crypto_sign_ed25519_sk_to_curve25519(u.toBuffer(keys.private || keys))
}

exports.ssbSecretKeyToPrivateBoxSecret = ssbSecretKeyToPrivateBoxSecret

exports.unboxKey = function (boxed, keys) {
  boxed = u.toBuffer(boxed)
  var sk = ssbSecretKeyToPrivateBoxSecret(keys)
  return pb.multibox_open_key(boxed, sk)
}

exports.unboxBody = function (boxed, key) {
  if(!key) return null
  boxed = u.toBuffer(boxed)
  key = u.toBuffer(key)
  var msg = pb.multibox_open_body(boxed, key)
  try {
    return JSON.parse(''+msg)
  } catch (_) { }
}

exports.unbox = function (boxed, keys) {
  boxed = u.toBuffer(boxed)

  var sk = keys._exchangeKey || sodium.crypto_sign_ed25519_sk_to_curve25519(u.toBuffer(keys.private || keys))
  if(keys.private) keys._exchangeKey = sk //if keys is an object, cache the curve key.
  try {
    var msg = pb.multibox_open(boxed, sk)
    return JSON.parse(''+msg)
  } catch (_) { }
  return
}

exports.secretBox = function secretBox (data, key) {
  if(!data) return
  var ptxt = Buffer.from(JSON.stringify(data))
  return sodium.crypto_secretbox_easy(ptxt, key.slice(0, 24), key)
}

exports.secretUnbox = function secretUnbox (ctxt, key) {
  var ptxt = sodium.crypto_secretbox_open_easy(ctxt, key.slice(0, 24), key)
  if(!ptxt) return
  return JSON.parse(ptxt.toString())
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./sodium":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/sodium.js","./storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/storage.js","./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/util.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js","private-box":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/private-box/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/local-storage.js":[function(require,module,exports){
'use strict'
var u = require('./util')

function isFunction (f) {
  return 'function' == typeof f
}

module.exports = function (generate) {

  function create (filename, curve, legacy) {
    var keys = generate(curve, legacy)
    localStorage[filename] = JSON.stringify(keys)
    return keys
  }

  function load (filename) {
    return JSON.parse(localStorage[filename])
  }

  return {
    createSync: create,
    create: function(filename, curve, legacy, cb) {
      if(isFunction(legacy))
        cb = legacy, legacy = null
      if(isFunction(curve))
        cb = curve, curve = null
      cb(null, create(filename, curve, legacy))
    },
    loadSync: load,
    load: function (filename, cb) {
      cb(null, load(filename))
    }
  }

}



},{"./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/util.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/sodium.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
var sodium = require('chloride')

module.exports = {

  curves: ['ed25519'],

  generate: function (seed) {
    if(!seed) sodium.randombytes(seed = new Buffer(32))

    var keys = seed ? sodium.crypto_sign_seed_keypair(seed) : sodium.crypto_sign_keypair()
    return {
      curve: 'ed25519',
      public: keys.publicKey,

      //so that this works with either sodium
      //or libsodium-wrappers (in browser)
      private: keys.privateKey || keys.secretKey
    }
  },

  sign: function (privateKey, message) {
    return sodium.crypto_sign_detached(message, privateKey)
  },

  verify: function (publicKey, sig, message) {
    return sodium.crypto_sign_verify_detached(sig, message, publicKey)
  }

}






}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/storage.js":[function(require,module,exports){
'use strict'
var fs         = require('fs')
var mkdirp     = require('mkdirp')
var path       = require('path')
var u          = require('./util')

function isObject (o) {
  return 'object' === typeof o
}

function isFunction (f) {
  return 'function' === typeof f
}

function empty(v) { return !!v }

function toFile (filename) {
  if(isObject(filename))
    return path.join(filename.path, 'secret')
  return filename
}

module.exports = function (generate) {

  if(!fs || !fs.readFile)
    return require('./local-storage')(generate)

  var exports = {}

  //(DE)SERIALIZE KEYS

  function constructKeys(keys, legacy) {
    if(!keys) throw new Error('*must* pass in keys')

    return `# WARNING: Never show this to anyone.
# WARNING: Never edit it or use it on multiple devices at once.
#
# This is your SECRET, it gives you magical powers. With your secret you can
# sign your messages so that your friends can verify that the messages came
# from you. If anyone learns your secret, they can use it to impersonate you.
#
# If you use this secret on more than one device you will create a fork and
# your friends will stop replicating your content.
#
${legacy ? keys.private : JSON.stringify(keys, null, 2)}
#
# The only part of this file that's safe to share is your public name:
#
#   ${keys.id}`
  }

  function reconstructKeys(keyfile) {
    var privateKey = keyfile
      .replace(/\s*\#[^\n]*/g, '')
      .split('\n').filter(empty).join('')

    //if the key is in JSON format, we are good.
    try {
      var keys = JSON.parse(privateKey)
      if(!u.hasSigil(keys.id)) keys.id = '@' + keys.public
      return keys
    } catch (_) { console.error(_.stack) }
  }

  exports.load = function(filename, cb) {
    filename = toFile(filename, 'secret')
    fs.readFile(filename, 'ascii', function(err, privateKeyStr) {
      if (err) return cb(err)
      var keys
      try { keys = reconstructKeys(privateKeyStr) }
      catch (err) { return cb(err) }
      cb(null, keys)
    })
  }

  exports.loadSync = function(filename) {
    filename = toFile(filename)
    return reconstructKeys(fs.readFileSync(filename, 'ascii'))
  }

  exports.create = function(filename, curve, legacy, cb) {
    if(isFunction(legacy))
      cb = legacy, legacy = null
    if(isFunction(curve))
      cb = curve, curve = null

    filename = toFile(filename)
    var keys = generate(curve)
    var keyfile = constructKeys(keys, legacy)
    mkdirp(path.dirname(filename), function (err) {
      if(err) return cb(err)
      fs.writeFile(filename, keyfile, {mode: 0x100, flag: 'wx'}, function(err) {
        if (err) return cb(err)
        cb(null, keys)
      })
    })
  }

  exports.createSync = function(filename, curve, legacy) {
    filename = toFile(filename)
    var keys = generate(curve)
    var keyfile = constructKeys(keys, legacy)
    mkdirp.sync(path.dirname(filename))
    fs.writeFileSync(filename, keyfile, {mode: 0x100, flag: 'wx'})
    return keys
  }

  return exports
}




},{"./local-storage":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/local-storage.js","./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/util.js","fs":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/lib/_empty.js","mkdirp":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/mkdirp/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/node_modules/ssb-keys/util.js":[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
var cl     = require('chloride')

exports.hash = function (data, enc) {
  data = (
    'string' === typeof data && enc == null
  ? new Buffer(data, 'binary')
  : new Buffer(data, enc)
  )
  return cl.crypto_hash_sha256(data).toString('base64')+'.sha256'
}

exports.hasSigil = function hasSigil (s) {
  return /^(@|%|&)/.test(s)
}

function tag (key, tag) {
  if(!tag) throw new Error('no tag for:' + key.toString('base64'))
  return key.toString('base64')+'.' + tag.replace(/^\./, '')
}

exports.keysToJSON = function keysToJSON(keys, curve) {
  curve = (keys.curve || curve)

  var pub = tag(keys.public, curve)
  return {
    curve: curve,
    public: pub,
    private: keys.private ? tag(keys.private, curve) : undefined,
    id: '@' + pub
  }
}

exports.getTag = function getTag (string) {
  var i = string.indexOf('.')
  return string.substring(i+1)
}

exports.toBuffer = function (buf) {
  if(buf == null) return buf
  if(Buffer.isBuffer(buf)) return buf
  var i = buf.indexOf('.')
  var start = (exports.hasSigil(buf)) ? 1 : 0
  return new Buffer(buf.substring(start, ~i ? i : buf.length), 'base64')
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","chloride":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/chloride/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ws/client.js":[function(require,module,exports){

module.exports = require('./inject')(function () {})

},{"./inject":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ws/inject.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ws/inject.js":[function(require,module,exports){
var WS = require('multiserver/plugins/ws')

module.exports = function (createHandlers) {
  var exports = {}
  exports.name = 'ws'
  exports.version = require('./package.json').version
  exports.manifest = {}

  exports.init = function (sbot, config) {
    var port
    if(config.ws) {
      port = config.ws.port
    }
    if(!port)
      port = 1024+(~~(Math.random()*(65536-1024)))

    var layers = []

    function no_handler (req, res, next) {
      next(new Error('ssb-ws:web sockets only'))
    }
    var handlers = createHandlers(sbot)
    sbot.multiserver.transport({
      name: 'ws',
      create: function (config) {
        var _host = config.host || 'localhost'
        var _port = config.port || port
        return WS(Object.assign({
          port: _port, host: _host,
          handler: config.http !== false ? handlers : no_handler
        }, config))
      }
    })

    return {
      use: function (handler) {
        if(handlers.layers) handlers.layers.push(handler)
      }
    }
  }

  return exports
}


},{"./package.json":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ws/package.json","multiserver/plugins/ws":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/multiserver/plugins/ws.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ws/package.json":[function(require,module,exports){
module.exports={
  "_from": "ssb-ws@^6.2.3",
  "_id": "ssb-ws@6.2.3",
  "_inBundle": false,
  "_integrity": "sha512-zZ/Q1M+9ZWlrchgh4QauD/MEUFa6eC6H6FYq6T8Of/y82JqsQBLwN6YlzbO09evE7Rx6x0oliXDCnQSjwGwQRA==",
  "_location": "/ssb-ws",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "ssb-ws@^6.2.3",
    "name": "ssb-ws",
    "escapedName": "ssb-ws",
    "rawSpec": "^6.2.3",
    "saveSpec": null,
    "fetchSpec": "^6.2.3"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ssb-ws/-/ssb-ws-6.2.3.tgz",
  "_shasum": "80b18c391579c77b7611bbb2ca194635a5cf244c",
  "_spec": "ssb-ws@^6.2.3",
  "_where": "/home/kylemaas/Programming/JavaScript/ssb-browser-core",
  "author": {
    "name": "'Dominic Tarr'",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "browser": {
    "./index.js": "./client.js"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/ssb-ws/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "emoji-server": "^1.0.0",
    "multiblob-http": "^1.0.0",
    "multiserver": "^3.0.2",
    "pull-box-stream": "^1.0.13",
    "pull-stream": "^3.6.9",
    "ssb-ref": "^2.3.0",
    "stack": "^0.1.0"
  },
  "deprecated": false,
  "description": "websocket & http server for ssb",
  "devDependencies": {
    "ssb-client": "^4.7.1",
    "ssb-config": "^3.0.0",
    "ssb-server": "^14.1.6",
    "tape": "^4.10.1"
  },
  "homepage": "https://github.com/dominictarr/ssb-ws",
  "license": "MIT",
  "name": "ssb-ws",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/ssb-ws.git"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "version": "6.2.3"
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/statistics/index.js":[function(require,module,exports){
module.exports = function reduce (acc, value) {
  //handle when called without initial
  if('number' === typeof acc)
    return reduce(reduce(null, acc), value)
  //set initial if initial was null
  else if(null == acc)
    return {
      mean: value,
      stdev: 0,

      count: 1,
      sum: value,
      sqsum: value*value
    }

  var sum = acc.sum + value
  var count = acc.count + 1
  var sq = value*value

  var mean = sum/count
  var sqsum = acc.sqsum + sq

  return {
    //these values useful output
    mean: mean,
    stdev: Math.sqrt(sqsum/count - mean*mean),

    //these values needed to maintain state.
    count: count,
    sum: sum,
    sqsum: sqsum
  }
}

module.exports.initial = require('./initial')


},{"./initial":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/statistics/initial.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/statistics/initial.js":[function(require,module,exports){
module.exports = function () {
  return {
    mean: 0, stdev: 0,
    count: 0, sum: 0, sqsum: 0
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/statistics/mutate.js":[function(require,module,exports){
'use strict'
module.exports = function reduce (acc, value) {
  //handle when called without initial
  if('number' === typeof acc)
    return reduce(reduce(null, acc), value)
  //set initial if initial was null
  else if(null == acc)
    return {
      mean: value,
      stdev: 0,

      count: 1,
      sum: value,
      sqsum: value*value
    }

  var sum = (acc.sum||0) + value
  var count = (acc.count||0) + 1
  var sq = value*value
  var sqsum = (acc.sqsum||0) + sq

  acc.mean = sum/count
  acc.stdev = Math.sqrt(sqsum/count - acc.mean*acc.mean)

  acc.count = count
  acc.sum = sum
  acc.sqsum = sqsum

  return acc
}

module.exports.initial = require('./initial')

},{"./initial":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/statistics/initial.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/index.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","readable-stream/lib/_stream_duplex.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","readable-stream/lib/_stream_passthrough.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","readable-stream/lib/_stream_readable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_transform.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","readable-stream/lib/_stream_writable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","readable-stream/lib/internal/streams/end-of-stream.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","readable-stream/lib/internal/streams/pipeline.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js"][0].apply(exports,arguments)
},{"./_stream_readable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","./_stream_writable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js"][0].apply(exports,arguments)
},{"./_stream_transform":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/async_iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./internal/streams/buffer_list":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/from":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","string_decoder/":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/lib/string_decoder.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","util-deprecate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util-deprecate/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js"][0].apply(exports,arguments)
},{"./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js"][0].apply(exports,arguments)
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js"][0].apply(exports,arguments)
},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/index.js":[function(require,module,exports){
(function (global){(function (){
var ClientRequest = require('./lib/request')
var response = require('./lib/response')
var extend = require('xtend')
var statusCodes = require('builtin-status-codes')
var url = require('url')

var http = exports

http.request = function (opts, cb) {
	if (typeof opts === 'string')
		opts = url.parse(opts)
	else
		opts = extend(opts)

	// Normally, the page is loaded from http or https, so not specifying a protocol
	// will result in a (valid) protocol-relative url. However, this won't work if
	// the protocol is something else, like 'file:'
	var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''

	var protocol = opts.protocol || defaultProtocol
	var host = opts.hostname || opts.host
	var port = opts.port
	var path = opts.path || '/'

	// Necessary for IPv6 addresses
	if (host && host.indexOf(':') !== -1)
		host = '[' + host + ']'

	// This may be a relative url. The browser should always be able to interpret it correctly.
	opts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path
	opts.method = (opts.method || 'GET').toUpperCase()
	opts.headers = opts.headers || {}

	// Also valid opts.auth, opts.mode

	var req = new ClientRequest(opts)
	if (cb)
		req.on('response', cb)
	return req
}

http.get = function get (opts, cb) {
	var req = http.request(opts, cb)
	req.end()
	return req
}

http.ClientRequest = ClientRequest
http.IncomingMessage = response.IncomingMessage

http.Agent = function () {}
http.Agent.defaultMaxSockets = 4

http.globalAgent = new http.Agent()

http.STATUS_CODES = statusCodes

http.METHODS = [
	'CHECKOUT',
	'CONNECT',
	'COPY',
	'DELETE',
	'GET',
	'HEAD',
	'LOCK',
	'M-SEARCH',
	'MERGE',
	'MKACTIVITY',
	'MKCOL',
	'MOVE',
	'NOTIFY',
	'OPTIONS',
	'PATCH',
	'POST',
	'PROPFIND',
	'PROPPATCH',
	'PURGE',
	'PUT',
	'REPORT',
	'SEARCH',
	'SUBSCRIBE',
	'TRACE',
	'UNLOCK',
	'UNSUBSCRIBE'
]
}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./lib/request":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/request.js","./lib/response":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/response.js","builtin-status-codes":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/builtin-status-codes/browser.js","url":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/url/url.js","xtend":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/immutable.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/capability.js":[function(require,module,exports){
(function (global){(function (){
exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)

exports.writableStream = isFunction(global.WritableStream)

exports.abortController = isFunction(global.AbortController)

// The xhr request to example.com may violate some restrictive CSP configurations,
// so if we're running in a browser that supports `fetch`, avoid calling getXHR()
// and assume support for certain features below.
var xhr
function getXHR () {
	// Cache the xhr value
	if (xhr !== undefined) return xhr

	if (global.XMLHttpRequest) {
		xhr = new global.XMLHttpRequest()
		// If XDomainRequest is available (ie only, where xhr might not work
		// cross domain), use the page location. Otherwise use example.com
		// Note: this doesn't actually make an http request.
		try {
			xhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')
		} catch(e) {
			xhr = null
		}
	} else {
		// Service workers don't have XHR
		xhr = null
	}
	return xhr
}

function checkTypeSupport (type) {
	var xhr = getXHR()
	if (!xhr) return false
	try {
		xhr.responseType = type
		return xhr.responseType === type
	} catch (e) {}
	return false
}

// If fetch is supported, then arraybuffer will be supported too. Skip calling
// checkTypeSupport(), since that calls getXHR().
exports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')

// These next two tests unavoidably show warnings in Chrome. Since fetch will always
// be used if it's available, just return false for these to avoid the warnings.
exports.msstream = !exports.fetch && checkTypeSupport('ms-stream')
exports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')

// If fetch is supported, then overrideMimeType will be supported too. Skip calling
// getXHR().
exports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)

function isFunction (value) {
	return typeof value === 'function'
}

xhr = null // Help gc

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/request.js":[function(require,module,exports){
(function (process,global,Buffer){(function (){
var capability = require('./capability')
var inherits = require('inherits')
var response = require('./response')
var stream = require('readable-stream')

var IncomingMessage = response.IncomingMessage
var rStates = response.readyStates

function decideMode (preferBinary, useFetch) {
	if (capability.fetch && useFetch) {
		return 'fetch'
	} else if (capability.mozchunkedarraybuffer) {
		return 'moz-chunked-arraybuffer'
	} else if (capability.msstream) {
		return 'ms-stream'
	} else if (capability.arraybuffer && preferBinary) {
		return 'arraybuffer'
	} else {
		return 'text'
	}
}

var ClientRequest = module.exports = function (opts) {
	var self = this
	stream.Writable.call(self)

	self._opts = opts
	self._body = []
	self._headers = {}
	if (opts.auth)
		self.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))
	Object.keys(opts.headers).forEach(function (name) {
		self.setHeader(name, opts.headers[name])
	})

	var preferBinary
	var useFetch = true
	if (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {
		// If the use of XHR should be preferred. Not typically needed.
		useFetch = false
		preferBinary = true
	} else if (opts.mode === 'prefer-streaming') {
		// If streaming is a high priority but binary compatibility and
		// the accuracy of the 'content-type' header aren't
		preferBinary = false
	} else if (opts.mode === 'allow-wrong-content-type') {
		// If streaming is more important than preserving the 'content-type' header
		preferBinary = !capability.overrideMimeType
	} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {
		// Use binary if text streaming may corrupt data or the content-type header, or for speed
		preferBinary = true
	} else {
		throw new Error('Invalid value for opts.mode')
	}
	self._mode = decideMode(preferBinary, useFetch)
	self._fetchTimer = null

	self.on('finish', function () {
		self._onFinish()
	})
}

inherits(ClientRequest, stream.Writable)

ClientRequest.prototype.setHeader = function (name, value) {
	var self = this
	var lowerName = name.toLowerCase()
	// This check is not necessary, but it prevents warnings from browsers about setting unsafe
	// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but
	// http-browserify did it, so I will too.
	if (unsafeHeaders.indexOf(lowerName) !== -1)
		return

	self._headers[lowerName] = {
		name: name,
		value: value
	}
}

ClientRequest.prototype.getHeader = function (name) {
	var header = this._headers[name.toLowerCase()]
	if (header)
		return header.value
	return null
}

ClientRequest.prototype.removeHeader = function (name) {
	var self = this
	delete self._headers[name.toLowerCase()]
}

ClientRequest.prototype._onFinish = function () {
	var self = this

	if (self._destroyed)
		return
	var opts = self._opts

	var headersObj = self._headers
	var body = null
	if (opts.method !== 'GET' && opts.method !== 'HEAD') {
        body = new Blob(self._body, {
            type: (headersObj['content-type'] || {}).value || ''
        });
    }

	// create flattened list of headers
	var headersList = []
	Object.keys(headersObj).forEach(function (keyName) {
		var name = headersObj[keyName].name
		var value = headersObj[keyName].value
		if (Array.isArray(value)) {
			value.forEach(function (v) {
				headersList.push([name, v])
			})
		} else {
			headersList.push([name, value])
		}
	})

	if (self._mode === 'fetch') {
		var signal = null
		if (capability.abortController) {
			var controller = new AbortController()
			signal = controller.signal
			self._fetchAbortController = controller

			if ('requestTimeout' in opts && opts.requestTimeout !== 0) {
				self._fetchTimer = global.setTimeout(function () {
					self.emit('requestTimeout')
					if (self._fetchAbortController)
						self._fetchAbortController.abort()
				}, opts.requestTimeout)
			}
		}

		global.fetch(self._opts.url, {
			method: self._opts.method,
			headers: headersList,
			body: body || undefined,
			mode: 'cors',
			credentials: opts.withCredentials ? 'include' : 'same-origin',
			signal: signal
		}).then(function (response) {
			self._fetchResponse = response
			self._connect()
		}, function (reason) {
			global.clearTimeout(self._fetchTimer)
			if (!self._destroyed)
				self.emit('error', reason)
		})
	} else {
		var xhr = self._xhr = new global.XMLHttpRequest()
		try {
			xhr.open(self._opts.method, self._opts.url, true)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}

		// Can't set responseType on really old browsers
		if ('responseType' in xhr)
			xhr.responseType = self._mode

		if ('withCredentials' in xhr)
			xhr.withCredentials = !!opts.withCredentials

		if (self._mode === 'text' && 'overrideMimeType' in xhr)
			xhr.overrideMimeType('text/plain; charset=x-user-defined')

		if ('requestTimeout' in opts) {
			xhr.timeout = opts.requestTimeout
			xhr.ontimeout = function () {
				self.emit('requestTimeout')
			}
		}

		headersList.forEach(function (header) {
			xhr.setRequestHeader(header[0], header[1])
		})

		self._response = null
		xhr.onreadystatechange = function () {
			switch (xhr.readyState) {
				case rStates.LOADING:
				case rStates.DONE:
					self._onXHRProgress()
					break
			}
		}
		// Necessary for streaming in Firefox, since xhr.response is ONLY defined
		// in onprogress, not in onreadystatechange with xhr.readyState = 3
		if (self._mode === 'moz-chunked-arraybuffer') {
			xhr.onprogress = function () {
				self._onXHRProgress()
			}
		}

		xhr.onerror = function () {
			if (self._destroyed)
				return
			self.emit('error', new Error('XHR error'))
		}

		try {
			xhr.send(body)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}
	}
}

/**
 * Checks if xhr.status is readable and non-zero, indicating no error.
 * Even though the spec says it should be available in readyState 3,
 * accessing it throws an exception in IE8
 */
function statusValid (xhr) {
	try {
		var status = xhr.status
		return (status !== null && status !== 0)
	} catch (e) {
		return false
	}
}

ClientRequest.prototype._onXHRProgress = function () {
	var self = this

	if (!statusValid(self._xhr) || self._destroyed)
		return

	if (!self._response)
		self._connect()

	self._response._onXHRProgress()
}

ClientRequest.prototype._connect = function () {
	var self = this

	if (self._destroyed)
		return

	self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)
	self._response.on('error', function(err) {
		self.emit('error', err)
	})

	self.emit('response', self._response)
}

ClientRequest.prototype._write = function (chunk, encoding, cb) {
	var self = this

	self._body.push(chunk)
	cb()
}

ClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {
	var self = this
	self._destroyed = true
	global.clearTimeout(self._fetchTimer)
	if (self._response)
		self._response._destroyed = true
	if (self._xhr)
		self._xhr.abort()
	else if (self._fetchAbortController)
		self._fetchAbortController.abort()
}

ClientRequest.prototype.end = function (data, encoding, cb) {
	var self = this
	if (typeof data === 'function') {
		cb = data
		data = undefined
	}

	stream.Writable.prototype.end.call(self, data, encoding, cb)
}

ClientRequest.prototype.flushHeaders = function () {}
ClientRequest.prototype.setTimeout = function () {}
ClientRequest.prototype.setNoDelay = function () {}
ClientRequest.prototype.setSocketKeepAlive = function () {}

// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method
var unsafeHeaders = [
	'accept-charset',
	'accept-encoding',
	'access-control-request-headers',
	'access-control-request-method',
	'connection',
	'content-length',
	'cookie',
	'cookie2',
	'date',
	'dnt',
	'expect',
	'host',
	'keep-alive',
	'origin',
	'referer',
	'te',
	'trailer',
	'transfer-encoding',
	'upgrade',
	'via'
]

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"./capability":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/capability.js","./response":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/response.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","readable-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/readable-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/response.js":[function(require,module,exports){
(function (process,global,Buffer){(function (){
var capability = require('./capability')
var inherits = require('inherits')
var stream = require('readable-stream')

var rStates = exports.readyStates = {
	UNSENT: 0,
	OPENED: 1,
	HEADERS_RECEIVED: 2,
	LOADING: 3,
	DONE: 4
}

var IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {
	var self = this
	stream.Readable.call(self)

	self._mode = mode
	self.headers = {}
	self.rawHeaders = []
	self.trailers = {}
	self.rawTrailers = []

	// Fake the 'close' event, but only once 'end' fires
	self.on('end', function () {
		// The nextTick is necessary to prevent the 'request' module from causing an infinite loop
		process.nextTick(function () {
			self.emit('close')
		})
	})

	if (mode === 'fetch') {
		self._fetchResponse = response

		self.url = response.url
		self.statusCode = response.status
		self.statusMessage = response.statusText
		
		response.headers.forEach(function (header, key){
			self.headers[key.toLowerCase()] = header
			self.rawHeaders.push(key, header)
		})

		if (capability.writableStream) {
			var writable = new WritableStream({
				write: function (chunk) {
					return new Promise(function (resolve, reject) {
						if (self._destroyed) {
							reject()
						} else if(self.push(Buffer.from(chunk))) {
							resolve()
						} else {
							self._resumeFetch = resolve
						}
					})
				},
				close: function () {
					global.clearTimeout(fetchTimer)
					if (!self._destroyed)
						self.push(null)
				},
				abort: function (err) {
					if (!self._destroyed)
						self.emit('error', err)
				}
			})

			try {
				response.body.pipeTo(writable).catch(function (err) {
					global.clearTimeout(fetchTimer)
					if (!self._destroyed)
						self.emit('error', err)
				})
				return
			} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this
		}
		// fallback for when writableStream or pipeTo aren't available
		var reader = response.body.getReader()
		function read () {
			reader.read().then(function (result) {
				if (self._destroyed)
					return
				if (result.done) {
					global.clearTimeout(fetchTimer)
					self.push(null)
					return
				}
				self.push(Buffer.from(result.value))
				read()
			}).catch(function (err) {
				global.clearTimeout(fetchTimer)
				if (!self._destroyed)
					self.emit('error', err)
			})
		}
		read()
	} else {
		self._xhr = xhr
		self._pos = 0

		self.url = xhr.responseURL
		self.statusCode = xhr.status
		self.statusMessage = xhr.statusText
		var headers = xhr.getAllResponseHeaders().split(/\r?\n/)
		headers.forEach(function (header) {
			var matches = header.match(/^([^:]+):\s*(.*)/)
			if (matches) {
				var key = matches[1].toLowerCase()
				if (key === 'set-cookie') {
					if (self.headers[key] === undefined) {
						self.headers[key] = []
					}
					self.headers[key].push(matches[2])
				} else if (self.headers[key] !== undefined) {
					self.headers[key] += ', ' + matches[2]
				} else {
					self.headers[key] = matches[2]
				}
				self.rawHeaders.push(matches[1], matches[2])
			}
		})

		self._charset = 'x-user-defined'
		if (!capability.overrideMimeType) {
			var mimeType = self.rawHeaders['mime-type']
			if (mimeType) {
				var charsetMatch = mimeType.match(/;\s*charset=([^;])(;|$)/)
				if (charsetMatch) {
					self._charset = charsetMatch[1].toLowerCase()
				}
			}
			if (!self._charset)
				self._charset = 'utf-8' // best guess
		}
	}
}

inherits(IncomingMessage, stream.Readable)

IncomingMessage.prototype._read = function () {
	var self = this

	var resolve = self._resumeFetch
	if (resolve) {
		self._resumeFetch = null
		resolve()
	}
}

IncomingMessage.prototype._onXHRProgress = function () {
	var self = this

	var xhr = self._xhr

	var response = null
	switch (self._mode) {
		case 'text':
			response = xhr.responseText
			if (response.length > self._pos) {
				var newData = response.substr(self._pos)
				if (self._charset === 'x-user-defined') {
					var buffer = Buffer.alloc(newData.length)
					for (var i = 0; i < newData.length; i++)
						buffer[i] = newData.charCodeAt(i) & 0xff

					self.push(buffer)
				} else {
					self.push(newData, self._charset)
				}
				self._pos = response.length
			}
			break
		case 'arraybuffer':
			if (xhr.readyState !== rStates.DONE || !xhr.response)
				break
			response = xhr.response
			self.push(Buffer.from(new Uint8Array(response)))
			break
		case 'moz-chunked-arraybuffer': // take whole
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING || !response)
				break
			self.push(Buffer.from(new Uint8Array(response)))
			break
		case 'ms-stream':
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING)
				break
			var reader = new global.MSStreamReader()
			reader.onprogress = function () {
				if (reader.result.byteLength > self._pos) {
					self.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))
					self._pos = reader.result.byteLength
				}
			}
			reader.onload = function () {
				self.push(null)
			}
			// reader.onerror = ??? // TODO: this
			reader.readAsArrayBuffer(response)
			break
	}

	// The ms-stream case handles end separately in reader.onload()
	if (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {
		self.push(null)
	}
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"./capability":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/lib/capability.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","readable-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/readable-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/errors-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js"][0].apply(exports,arguments)
},{"./_stream_readable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","./_stream_writable":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js"][0].apply(exports,arguments)
},{"./_stream_transform":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/async_iterator":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js","./internal/streams/buffer_list":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/from":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","string_decoder/":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/lib/string_decoder.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js"][0].apply(exports,arguments)
},{"../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/errors-browser.js","./_stream_duplex":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","./internal/streams/destroy":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","./internal/streams/state":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js","./internal/streams/stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js","util-deprecate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util-deprecate/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js"][0].apply(exports,arguments)
},{"./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js"][0].apply(exports,arguments)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js"][0].apply(exports,arguments)
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/errors-browser.js","./end-of-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js"][0].apply(exports,arguments)
},{"../../../errors":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/errors-browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js"][0].apply(exports,arguments)
},{"events":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/events/events.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/readable-browser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js"][0].apply(exports,arguments)
},{"./lib/_stream_duplex.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","./lib/_stream_passthrough.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","./lib/_stream_readable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","./lib/_stream_transform.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","./lib/_stream_writable.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","./lib/internal/streams/end-of-stream.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","./lib/internal/streams/pipeline.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-to-pull-stream/index.js":[function(require,module,exports){
(function (process){(function (){
var pull = require('pull-stream/pull')
var looper = require('looper')

function destroy (stream) {
  if(!stream.destroy)
    console.error(
      'warning, stream-to-pull-stream: \n'
    + 'the wrapped node-stream does not implement `destroy`, \n'
    + 'this may cause resource leaks.'
    )
  else stream.destroy()

}

function write(read, stream, cb) {
  var ended, closed = false, did
  function done () {
    if(did) return
    did = true
    cb && cb(ended === true ? null : ended)
  }

  function onClose () {
    if(closed) return
    closed = true
    cleanup()
    if(!ended) read(ended = true, done)
    else       done()
  }
  function onError (err) {
    cleanup()
    if(!ended) read(ended = err, done)
  }
  function cleanup() {
    stream.on('finish', onClose)
    stream.removeListener('close', onClose)
    stream.removeListener('error', onError)
  }
  stream.on('close', onClose)
  stream.on('finish', onClose)
  stream.on('error', onError)
  process.nextTick(function () {
    looper(function (next) {
      read(null, function (end, data) {
        ended = ended || end
        //you can't "end" a stdout stream, so this needs to be handled specially.
        if(end === true)
          return stream._isStdio ? done() : stream.end()

        if(ended = ended || end) {
          destroy(stream)
          return done(ended)
        }

        //I noticed a problem streaming to the terminal:
        //sometimes the end got cut off, creating invalid output.
        //it seems that stdout always emits "drain" when it ends.
        //so this seems to work, but i have been unable to reproduce this test
        //automatically, so you need to run ./test/stdout.js a few times and the end is valid json.
        if(stream._isStdio)
          stream.write(data, function () { next() })
        else {
          var pause = stream.write(data)
          if(pause === false)
            stream.once('drain', next)
          else next()
        }
      })
    })
  })
}

function first (emitter, events, handler) {
  function listener (val) {
    events.forEach(function (e) {
      emitter.removeListener(e, listener)
    })
    handler(val)
  }
  events.forEach(function (e) {
    emitter.on(e, listener)
  })
  return emitter
}

function read2(stream) {
  var ended = false, waiting = false
  var _cb

  function read () {
    var data = stream.read()
    if(data !== null && _cb) {
      var cb = _cb; _cb = null
      cb(null, data)
    }
  }

  stream.on('readable', function () {
    waiting = true
    _cb && read()
  })
  .on('end', function () {
    ended = true
    _cb && _cb(ended)
  })
  .on('error', function (err) {
    ended = err
    _cb && _cb(ended)
  })

  return function (end, cb) {
    _cb = cb
    if(ended)
      cb(ended)
    else if(waiting)
      read()
  }
}

function read1(stream) {
  var buffer = [], cbs = [], ended, paused = false

  var draining
  function drain() {
    while((buffer.length || ended) && cbs.length)
      cbs.shift()(buffer.length ? null : ended, buffer.shift())
    if(!buffer.length && (paused)) {
      paused = false
      stream.resume()
    }
  }

  stream.on('data', function (data) {
    buffer.push(data)
    drain()
    if(buffer.length && stream.pause) {
      paused = true
      stream.pause()
    }
  })
  stream.on('end', function () {
    ended = true
    drain()
  })
  stream.on('close', function () {
    ended = true
    drain()
  })
  stream.on('error', function (err) {
    ended = err
    drain()
  })
  return function (abort, cb) {
    if(!cb) throw new Error('*must* provide cb')
    if(abort) {
      function onAbort () {
        while(cbs.length) cbs.shift()(abort)
        cb(abort)
      }
      //if the stream happens to have already ended, then we don't need to abort.
      if(ended) return onAbort()
      stream.once('close', onAbort)
      destroy(stream)
    }
    else {
      cbs.push(cb)
      drain()
    }
  }
}

var read = read1

var sink = function (stream, cb) {
  return function (read) {
    return write(read, stream, cb)
  }
}

var source = function (stream) {
  return read1(stream)
}

exports = module.exports = function (stream, cb) {
  return (
    (stream.writable && stream.write)
    ? stream.readable
      ? function(_read) {
          write(_read, stream, cb);
          return read1(stream)
        }
      : sink(stream, cb)
    : source(stream)
  )
}

exports.sink = sink
exports.source = source
exports.read = read
exports.read1 = read1
exports.read2 = read2
exports.duplex = function (stream, cb) {
  return {
    source: source(stream),
    sink: sink(stream, cb)
  }
}
exports.transform = function (stream) {
  return function (read) {
    var _source = source(stream)
    sink(stream)(read); return _source
  }
}










}).call(this)}).call(this,require('_process'))
},{"_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","looper":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-to-pull-stream/node_modules/looper/index.js","pull-stream/pull":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/pull.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/stream-to-pull-stream/node_modules/looper/index.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-through/node_modules/looper/index.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/lib/string_decoder.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/node_modules/safe-buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/string_decoder/node_modules/safe-buffer/index.js":[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/timers-browserify/main.js":[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","timers":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/timers-browserify/main.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/to-camel-case/index.js":[function(require,module,exports){

var space = require('to-space-case')

/**
 * Export.
 */

module.exports = toCamelCase

/**
 * Convert a `string` to camel case.
 *
 * @param {String} string
 * @return {String}
 */

function toCamelCase(string) {
  return space(string).replace(/\s(\w)/g, function (matches, letter) {
    return letter.toUpperCase()
  })
}

},{"to-space-case":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/to-space-case/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/to-no-case/index.js":[function(require,module,exports){

/**
 * Export.
 */

module.exports = toNoCase

/**
 * Test whether a string is camel-case.
 */

var hasSpace = /\s/
var hasSeparator = /(_|-|\.|:)/
var hasCamel = /([a-z][A-Z]|[A-Z][a-z])/

/**
 * Remove any starting case from a `string`, like camel or snake, but keep
 * spaces and punctuation that may be important otherwise.
 *
 * @param {String} string
 * @return {String}
 */

function toNoCase(string) {
  if (hasSpace.test(string)) return string.toLowerCase()
  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()
  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()
  return string.toLowerCase()
}

/**
 * Separator splitter.
 */

var separatorSplitter = /[\W_]+(.|$)/g

/**
 * Un-separate a `string`.
 *
 * @param {String} string
 * @return {String}
 */

function unseparate(string) {
  return string.replace(separatorSplitter, function (m, next) {
    return next ? ' ' + next : ''
  })
}

/**
 * Camelcase splitter.
 */

var camelSplitter = /(.)([A-Z]+)/g

/**
 * Un-camelcase a `string`.
 *
 * @param {String} string
 * @return {String}
 */

function uncamelize(string) {
  return string.replace(camelSplitter, function (m, previous, uppers) {
    return previous + ' ' + uppers.toLowerCase().split('').join(' ')
  })
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/to-space-case/index.js":[function(require,module,exports){

var clean = require('to-no-case')

/**
 * Export.
 */

module.exports = toSpaceCase

/**
 * Convert a `string` to space case.
 *
 * @param {String} string
 * @return {String}
 */

function toSpaceCase(string) {
  return clean(string).replace(/[\W_]+(.|$)/g, function (matches, match) {
    return match ? ' ' + match : ''
  }).trim()
}

},{"to-no-case":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/to-no-case/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/traverse/index.js":[function(require,module,exports){
var traverse = module.exports = function (obj) {
    return new Traverse(obj);
};

function Traverse (obj) {
    this.value = obj;
}

Traverse.prototype.get = function (ps) {
    var node = this.value;
    for (var i = 0; i < ps.length; i ++) {
        var key = ps[i];
        if (!node || !hasOwnProperty.call(node, key)) {
            node = undefined;
            break;
        }
        node = node[key];
    }
    return node;
};

Traverse.prototype.has = function (ps) {
    var node = this.value;
    for (var i = 0; i < ps.length; i ++) {
        var key = ps[i];
        if (!node || !hasOwnProperty.call(node, key)) {
            return false;
        }
        node = node[key];
    }
    return true;
};

Traverse.prototype.set = function (ps, value) {
    var node = this.value;
    for (var i = 0; i < ps.length - 1; i ++) {
        var key = ps[i];
        if (!hasOwnProperty.call(node, key)) node[key] = {};
        node = node[key];
    }
    node[ps[i]] = value;
    return value;
};

Traverse.prototype.map = function (cb) {
    return walk(this.value, cb, true);
};

Traverse.prototype.forEach = function (cb) {
    this.value = walk(this.value, cb, false);
    return this.value;
};

Traverse.prototype.reduce = function (cb, init) {
    var skip = arguments.length === 1;
    var acc = skip ? this.value : init;
    this.forEach(function (x) {
        if (!this.isRoot || !skip) {
            acc = cb.call(this, acc, x);
        }
    });
    return acc;
};

Traverse.prototype.paths = function () {
    var acc = [];
    this.forEach(function (x) {
        acc.push(this.path); 
    });
    return acc;
};

Traverse.prototype.nodes = function () {
    var acc = [];
    this.forEach(function (x) {
        acc.push(this.node);
    });
    return acc;
};

Traverse.prototype.clone = function () {
    var parents = [], nodes = [];
    
    return (function clone (src) {
        for (var i = 0; i < parents.length; i++) {
            if (parents[i] === src) {
                return nodes[i];
            }
        }
        
        if (typeof src === 'object' && src !== null) {
            var dst = copy(src);
            
            parents.push(src);
            nodes.push(dst);
            
            forEach(objectKeys(src), function (key) {
                dst[key] = clone(src[key]);
            });
            
            parents.pop();
            nodes.pop();
            return dst;
        }
        else {
            return src;
        }
    })(this.value);
};

function walk (root, cb, immutable) {
    var path = [];
    var parents = [];
    var alive = true;
    
    return (function walker (node_) {
        var node = immutable ? copy(node_) : node_;
        var modifiers = {};
        
        var keepGoing = true;
        
        var state = {
            node : node,
            node_ : node_,
            path : [].concat(path),
            parent : parents[parents.length - 1],
            parents : parents,
            key : path.slice(-1)[0],
            isRoot : path.length === 0,
            level : path.length,
            circular : null,
            update : function (x, stopHere) {
                if (!state.isRoot) {
                    state.parent.node[state.key] = x;
                }
                state.node = x;
                if (stopHere) keepGoing = false;
            },
            'delete' : function (stopHere) {
                delete state.parent.node[state.key];
                if (stopHere) keepGoing = false;
            },
            remove : function (stopHere) {
                if (isArray(state.parent.node)) {
                    state.parent.node.splice(state.key, 1);
                }
                else {
                    delete state.parent.node[state.key];
                }
                if (stopHere) keepGoing = false;
            },
            keys : null,
            before : function (f) { modifiers.before = f },
            after : function (f) { modifiers.after = f },
            pre : function (f) { modifiers.pre = f },
            post : function (f) { modifiers.post = f },
            stop : function () { alive = false },
            block : function () { keepGoing = false }
        };
        
        if (!alive) return state;
        
        function updateState() {
            if (typeof state.node === 'object' && state.node !== null) {
                if (!state.keys || state.node_ !== state.node) {
                    state.keys = objectKeys(state.node)
                }
                
                state.isLeaf = state.keys.length == 0;
                
                for (var i = 0; i < parents.length; i++) {
                    if (parents[i].node_ === node_) {
                        state.circular = parents[i];
                        break;
                    }
                }
            }
            else {
                state.isLeaf = true;
                state.keys = null;
            }
            
            state.notLeaf = !state.isLeaf;
            state.notRoot = !state.isRoot;
        }
        
        updateState();
        
        // use return values to update if defined
        var ret = cb.call(state, state.node);
        if (ret !== undefined && state.update) state.update(ret);
        
        if (modifiers.before) modifiers.before.call(state, state.node);
        
        if (!keepGoing) return state;
        
        if (typeof state.node == 'object'
        && state.node !== null && !state.circular) {
            parents.push(state);
            
            updateState();
            
            forEach(state.keys, function (key, i) {
                path.push(key);
                
                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);
                
                var child = walker(state.node[key]);
                if (immutable && hasOwnProperty.call(state.node, key)) {
                    state.node[key] = child.node;
                }
                
                child.isLast = i == state.keys.length - 1;
                child.isFirst = i == 0;
                
                if (modifiers.post) modifiers.post.call(state, child);
                
                path.pop();
            });
            parents.pop();
        }
        
        if (modifiers.after) modifiers.after.call(state, state.node);
        
        return state;
    })(root).node;
}

function copy (src) {
    if (typeof src === 'object' && src !== null) {
        var dst;
        
        if (isArray(src)) {
            dst = [];
        }
        else if (isDate(src)) {
            dst = new Date(src.getTime ? src.getTime() : src);
        }
        else if (isRegExp(src)) {
            dst = new RegExp(src);
        }
        else if (isError(src)) {
            dst = { message: src.message };
        }
        else if (isBoolean(src)) {
            dst = new Boolean(src);
        }
        else if (isNumber(src)) {
            dst = new Number(src);
        }
        else if (isString(src)) {
            dst = new String(src);
        }
        else if (Object.create && Object.getPrototypeOf) {
            dst = Object.create(Object.getPrototypeOf(src));
        }
        else if (src.constructor === Object) {
            dst = {};
        }
        else {
            var proto =
                (src.constructor && src.constructor.prototype)
                || src.__proto__
                || {}
            ;
            var T = function () {};
            T.prototype = proto;
            dst = new T;
        }
        
        forEach(objectKeys(src), function (key) {
            dst[key] = src[key];
        });
        return dst;
    }
    else return src;
}

var objectKeys = Object.keys || function keys (obj) {
    var res = [];
    for (var key in obj) res.push(key)
    return res;
};

function toS (obj) { return Object.prototype.toString.call(obj) }
function isDate (obj) { return toS(obj) === '[object Date]' }
function isRegExp (obj) { return toS(obj) === '[object RegExp]' }
function isError (obj) { return toS(obj) === '[object Error]' }
function isBoolean (obj) { return toS(obj) === '[object Boolean]' }
function isNumber (obj) { return toS(obj) === '[object Number]' }
function isString (obj) { return toS(obj) === '[object String]' }

var isArray = Array.isArray || function isArray (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

forEach(objectKeys(Traverse.prototype), function (key) {
    traverse[key] = function (obj) {
        var args = [].slice.call(arguments, 1);
        var t = new Traverse(obj);
        return t[key].apply(t, args);
    };
});

var hasOwnProperty = Object.hasOwnProperty || function (obj, key) {
    return key in obj;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/truncate-utf8-bytes/browser.js":[function(require,module,exports){
'use strict';

var truncate = require("./lib/truncate");
var getLength = require("utf8-byte-length/browser");
module.exports = truncate.bind(null, getLength);

},{"./lib/truncate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/truncate-utf8-bytes/lib/truncate.js","utf8-byte-length/browser":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/utf8-byte-length/browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/truncate-utf8-bytes/lib/truncate.js":[function(require,module,exports){
'use strict';

function isHighSurrogate(codePoint) {
  return codePoint >= 0xd800 && codePoint <= 0xdbff;
}

function isLowSurrogate(codePoint) {
  return codePoint >= 0xdc00 && codePoint <= 0xdfff;
}

// Truncate string by size in bytes
module.exports = function truncate(getLength, string, byteLength) {
  if (typeof string !== "string") {
    throw new Error("Input must be string");
  }

  var charLength = string.length;
  var curByteLength = 0;
  var codePoint;
  var segment;

  for (var i = 0; i < charLength; i += 1) {
    codePoint = string.charCodeAt(i);
    segment = string[i];

    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {
      i += 1;
      segment += string[i];
    }

    curByteLength += getLength(segment);

    if (curByteLength === byteLength) {
      return string.slice(0, i + 1);
    }
    else if (curByteLength > byteLength) {
      return string.slice(0, i - segment.length + 1);
    }
  }

  return string;
};


},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/tweetnacl-auth/nacl-auth.js":[function(require,module,exports){
(function(root, f) {
  'use strict';
  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));
  else root.nacl.auth = f(root.nacl);

}(this, function(nacl) {
  'use strict';

  if (!nacl) throw new Error('tweetnacl not loaded');

  var BLOCK_SIZE = 128, HASH_SIZE = 64;

  function hmac(message, key) {
    var buf = new Uint8Array(BLOCK_SIZE + Math.max(HASH_SIZE, message.length));
    var i, innerHash;

    if (key.length > BLOCK_SIZE)
      key = nacl.hash(key);

    for (i = 0; i < BLOCK_SIZE; i++) buf[i] = 0x36;
    for (i = 0; i < key.length; i++) buf[i] ^= key[i];
    buf.set(message, BLOCK_SIZE);
    innerHash = nacl.hash(buf.subarray(0, BLOCK_SIZE + message.length));

    for (i = 0; i < BLOCK_SIZE; i++) buf[i] = 0x5c;
    for (i = 0; i < key.length; i++) buf[i] ^= key[i];
    buf.set(innerHash, BLOCK_SIZE);
    return nacl.hash(buf.subarray(0, BLOCK_SIZE + innerHash.length));
  }

  function auth(message, key) {
    var out = new Uint8Array(32);
    out.set(hmac(message, key).subarray(0, 32));
    return out;
  }

  auth.full = function (message, key) {
    return hmac(message, key);
  };

  auth.authLength = 32;
  auth.authFullLength = 64;
  auth.keyLength = 32;

  return auth;

}));

},{"tweetnacl":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/tweetnacl/nacl-fast.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/tweetnacl/nacl-fast.js":[function(require,module,exports){
(function(nacl) {
'use strict';

// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

//  Pluggable, initialized in high-level API below.
var randombytes = function(/* x, n */) { throw new Error('no PRNG'); };

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_16(x, xi, y, yi) {
  return vn(x,xi,y,yi,16);
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function core_salsa20(o, p, k, c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }
   x0 =  x0 +  j0 | 0;
   x1 =  x1 +  j1 | 0;
   x2 =  x2 +  j2 | 0;
   x3 =  x3 +  j3 | 0;
   x4 =  x4 +  j4 | 0;
   x5 =  x5 +  j5 | 0;
   x6 =  x6 +  j6 | 0;
   x7 =  x7 +  j7 | 0;
   x8 =  x8 +  j8 | 0;
   x9 =  x9 +  j9 | 0;
  x10 = x10 + j10 | 0;
  x11 = x11 + j11 | 0;
  x12 = x12 + j12 | 0;
  x13 = x13 + j13 | 0;
  x14 = x14 + j14 | 0;
  x15 = x15 + j15 | 0;

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x1 >>>  0 & 0xff;
  o[ 5] = x1 >>>  8 & 0xff;
  o[ 6] = x1 >>> 16 & 0xff;
  o[ 7] = x1 >>> 24 & 0xff;

  o[ 8] = x2 >>>  0 & 0xff;
  o[ 9] = x2 >>>  8 & 0xff;
  o[10] = x2 >>> 16 & 0xff;
  o[11] = x2 >>> 24 & 0xff;

  o[12] = x3 >>>  0 & 0xff;
  o[13] = x3 >>>  8 & 0xff;
  o[14] = x3 >>> 16 & 0xff;
  o[15] = x3 >>> 24 & 0xff;

  o[16] = x4 >>>  0 & 0xff;
  o[17] = x4 >>>  8 & 0xff;
  o[18] = x4 >>> 16 & 0xff;
  o[19] = x4 >>> 24 & 0xff;

  o[20] = x5 >>>  0 & 0xff;
  o[21] = x5 >>>  8 & 0xff;
  o[22] = x5 >>> 16 & 0xff;
  o[23] = x5 >>> 24 & 0xff;

  o[24] = x6 >>>  0 & 0xff;
  o[25] = x6 >>>  8 & 0xff;
  o[26] = x6 >>> 16 & 0xff;
  o[27] = x6 >>> 24 & 0xff;

  o[28] = x7 >>>  0 & 0xff;
  o[29] = x7 >>>  8 & 0xff;
  o[30] = x7 >>> 16 & 0xff;
  o[31] = x7 >>> 24 & 0xff;

  o[32] = x8 >>>  0 & 0xff;
  o[33] = x8 >>>  8 & 0xff;
  o[34] = x8 >>> 16 & 0xff;
  o[35] = x8 >>> 24 & 0xff;

  o[36] = x9 >>>  0 & 0xff;
  o[37] = x9 >>>  8 & 0xff;
  o[38] = x9 >>> 16 & 0xff;
  o[39] = x9 >>> 24 & 0xff;

  o[40] = x10 >>>  0 & 0xff;
  o[41] = x10 >>>  8 & 0xff;
  o[42] = x10 >>> 16 & 0xff;
  o[43] = x10 >>> 24 & 0xff;

  o[44] = x11 >>>  0 & 0xff;
  o[45] = x11 >>>  8 & 0xff;
  o[46] = x11 >>> 16 & 0xff;
  o[47] = x11 >>> 24 & 0xff;

  o[48] = x12 >>>  0 & 0xff;
  o[49] = x12 >>>  8 & 0xff;
  o[50] = x12 >>> 16 & 0xff;
  o[51] = x12 >>> 24 & 0xff;

  o[52] = x13 >>>  0 & 0xff;
  o[53] = x13 >>>  8 & 0xff;
  o[54] = x13 >>> 16 & 0xff;
  o[55] = x13 >>> 24 & 0xff;

  o[56] = x14 >>>  0 & 0xff;
  o[57] = x14 >>>  8 & 0xff;
  o[58] = x14 >>> 16 & 0xff;
  o[59] = x14 >>> 24 & 0xff;

  o[60] = x15 >>>  0 & 0xff;
  o[61] = x15 >>>  8 & 0xff;
  o[62] = x15 >>> 16 & 0xff;
  o[63] = x15 >>> 24 & 0xff;
}

function core_hsalsa20(o,p,k,c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x5 >>>  0 & 0xff;
  o[ 5] = x5 >>>  8 & 0xff;
  o[ 6] = x5 >>> 16 & 0xff;
  o[ 7] = x5 >>> 24 & 0xff;

  o[ 8] = x10 >>>  0 & 0xff;
  o[ 9] = x10 >>>  8 & 0xff;
  o[10] = x10 >>> 16 & 0xff;
  o[11] = x10 >>> 24 & 0xff;

  o[12] = x15 >>>  0 & 0xff;
  o[13] = x15 >>>  8 & 0xff;
  o[14] = x15 >>> 16 & 0xff;
  o[15] = x15 >>> 24 & 0xff;

  o[16] = x6 >>>  0 & 0xff;
  o[17] = x6 >>>  8 & 0xff;
  o[18] = x6 >>> 16 & 0xff;
  o[19] = x6 >>> 24 & 0xff;

  o[20] = x7 >>>  0 & 0xff;
  o[21] = x7 >>>  8 & 0xff;
  o[22] = x7 >>> 16 & 0xff;
  o[23] = x7 >>> 24 & 0xff;

  o[24] = x8 >>>  0 & 0xff;
  o[25] = x8 >>>  8 & 0xff;
  o[26] = x8 >>> 16 & 0xff;
  o[27] = x8 >>> 24 & 0xff;

  o[28] = x9 >>>  0 & 0xff;
  o[29] = x9 >>>  8 & 0xff;
  o[30] = x9 >>> 16 & 0xff;
  o[31] = x9 >>> 24 & 0xff;
}

function crypto_core_salsa20(out,inp,k,c) {
  core_salsa20(out,inp,k,c);
}

function crypto_core_hsalsa20(out,inp,k,c) {
  core_hsalsa20(out,inp,k,c);
}

var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            // "expand 32-byte k"

function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
    mpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];
  }
  return 0;
}

function crypto_stream_salsa20(c,cpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = x[i];
  }
  return 0;
}

function crypto_stream(c,cpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20(c,cpos,d,sn,s);
}

function crypto_stream_xor(c,cpos,m,mpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);
}

/*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/

var poly1305 = function(key) {
  this.buffer = new Uint8Array(16);
  this.r = new Uint16Array(10);
  this.h = new Uint16Array(10);
  this.pad = new Uint16Array(8);
  this.leftover = 0;
  this.fin = 0;

  var t0, t1, t2, t3, t4, t5, t6, t7;

  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;
  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;
  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;
  this.r[5] = ((t4 >>>  1)) & 0x1ffe;
  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;
  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
  this.r[9] = ((t7 >>>  5)) & 0x007f;

  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
};

poly1305.prototype.blocks = function(m, mpos, bytes) {
  var hibit = this.fin ? 0 : (1 << 11);
  var t0, t1, t2, t3, t4, t5, t6, t7, c;
  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;

  var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];

  var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];

  while (bytes >= 16) {
    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;
    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;
    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;
    h5 += ((t4 >>>  1)) & 0x1fff;
    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;
    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
    h9 += ((t7 >>> 5)) | hibit;

    c = 0;

    d0 = c;
    d0 += h0 * r0;
    d0 += h1 * (5 * r9);
    d0 += h2 * (5 * r8);
    d0 += h3 * (5 * r7);
    d0 += h4 * (5 * r6);
    c = (d0 >>> 13); d0 &= 0x1fff;
    d0 += h5 * (5 * r5);
    d0 += h6 * (5 * r4);
    d0 += h7 * (5 * r3);
    d0 += h8 * (5 * r2);
    d0 += h9 * (5 * r1);
    c += (d0 >>> 13); d0 &= 0x1fff;

    d1 = c;
    d1 += h0 * r1;
    d1 += h1 * r0;
    d1 += h2 * (5 * r9);
    d1 += h3 * (5 * r8);
    d1 += h4 * (5 * r7);
    c = (d1 >>> 13); d1 &= 0x1fff;
    d1 += h5 * (5 * r6);
    d1 += h6 * (5 * r5);
    d1 += h7 * (5 * r4);
    d1 += h8 * (5 * r3);
    d1 += h9 * (5 * r2);
    c += (d1 >>> 13); d1 &= 0x1fff;

    d2 = c;
    d2 += h0 * r2;
    d2 += h1 * r1;
    d2 += h2 * r0;
    d2 += h3 * (5 * r9);
    d2 += h4 * (5 * r8);
    c = (d2 >>> 13); d2 &= 0x1fff;
    d2 += h5 * (5 * r7);
    d2 += h6 * (5 * r6);
    d2 += h7 * (5 * r5);
    d2 += h8 * (5 * r4);
    d2 += h9 * (5 * r3);
    c += (d2 >>> 13); d2 &= 0x1fff;

    d3 = c;
    d3 += h0 * r3;
    d3 += h1 * r2;
    d3 += h2 * r1;
    d3 += h3 * r0;
    d3 += h4 * (5 * r9);
    c = (d3 >>> 13); d3 &= 0x1fff;
    d3 += h5 * (5 * r8);
    d3 += h6 * (5 * r7);
    d3 += h7 * (5 * r6);
    d3 += h8 * (5 * r5);
    d3 += h9 * (5 * r4);
    c += (d3 >>> 13); d3 &= 0x1fff;

    d4 = c;
    d4 += h0 * r4;
    d4 += h1 * r3;
    d4 += h2 * r2;
    d4 += h3 * r1;
    d4 += h4 * r0;
    c = (d4 >>> 13); d4 &= 0x1fff;
    d4 += h5 * (5 * r9);
    d4 += h6 * (5 * r8);
    d4 += h7 * (5 * r7);
    d4 += h8 * (5 * r6);
    d4 += h9 * (5 * r5);
    c += (d4 >>> 13); d4 &= 0x1fff;

    d5 = c;
    d5 += h0 * r5;
    d5 += h1 * r4;
    d5 += h2 * r3;
    d5 += h3 * r2;
    d5 += h4 * r1;
    c = (d5 >>> 13); d5 &= 0x1fff;
    d5 += h5 * r0;
    d5 += h6 * (5 * r9);
    d5 += h7 * (5 * r8);
    d5 += h8 * (5 * r7);
    d5 += h9 * (5 * r6);
    c += (d5 >>> 13); d5 &= 0x1fff;

    d6 = c;
    d6 += h0 * r6;
    d6 += h1 * r5;
    d6 += h2 * r4;
    d6 += h3 * r3;
    d6 += h4 * r2;
    c = (d6 >>> 13); d6 &= 0x1fff;
    d6 += h5 * r1;
    d6 += h6 * r0;
    d6 += h7 * (5 * r9);
    d6 += h8 * (5 * r8);
    d6 += h9 * (5 * r7);
    c += (d6 >>> 13); d6 &= 0x1fff;

    d7 = c;
    d7 += h0 * r7;
    d7 += h1 * r6;
    d7 += h2 * r5;
    d7 += h3 * r4;
    d7 += h4 * r3;
    c = (d7 >>> 13); d7 &= 0x1fff;
    d7 += h5 * r2;
    d7 += h6 * r1;
    d7 += h7 * r0;
    d7 += h8 * (5 * r9);
    d7 += h9 * (5 * r8);
    c += (d7 >>> 13); d7 &= 0x1fff;

    d8 = c;
    d8 += h0 * r8;
    d8 += h1 * r7;
    d8 += h2 * r6;
    d8 += h3 * r5;
    d8 += h4 * r4;
    c = (d8 >>> 13); d8 &= 0x1fff;
    d8 += h5 * r3;
    d8 += h6 * r2;
    d8 += h7 * r1;
    d8 += h8 * r0;
    d8 += h9 * (5 * r9);
    c += (d8 >>> 13); d8 &= 0x1fff;

    d9 = c;
    d9 += h0 * r9;
    d9 += h1 * r8;
    d9 += h2 * r7;
    d9 += h3 * r6;
    d9 += h4 * r5;
    c = (d9 >>> 13); d9 &= 0x1fff;
    d9 += h5 * r4;
    d9 += h6 * r3;
    d9 += h7 * r2;
    d9 += h8 * r1;
    d9 += h9 * r0;
    c += (d9 >>> 13); d9 &= 0x1fff;

    c = (((c << 2) + c)) | 0;
    c = (c + d0) | 0;
    d0 = c & 0x1fff;
    c = (c >>> 13);
    d1 += c;

    h0 = d0;
    h1 = d1;
    h2 = d2;
    h3 = d3;
    h4 = d4;
    h5 = d5;
    h6 = d6;
    h7 = d7;
    h8 = d8;
    h9 = d9;

    mpos += 16;
    bytes -= 16;
  }
  this.h[0] = h0;
  this.h[1] = h1;
  this.h[2] = h2;
  this.h[3] = h3;
  this.h[4] = h4;
  this.h[5] = h5;
  this.h[6] = h6;
  this.h[7] = h7;
  this.h[8] = h8;
  this.h[9] = h9;
};

poly1305.prototype.finish = function(mac, macpos) {
  var g = new Uint16Array(10);
  var c, mask, f, i;

  if (this.leftover) {
    i = this.leftover;
    this.buffer[i++] = 1;
    for (; i < 16; i++) this.buffer[i] = 0;
    this.fin = 1;
    this.blocks(this.buffer, 0, 16);
  }

  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  for (i = 2; i < 10; i++) {
    this.h[i] += c;
    c = this.h[i] >>> 13;
    this.h[i] &= 0x1fff;
  }
  this.h[0] += (c * 5);
  c = this.h[0] >>> 13;
  this.h[0] &= 0x1fff;
  this.h[1] += c;
  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  this.h[2] += c;

  g[0] = this.h[0] + 5;
  c = g[0] >>> 13;
  g[0] &= 0x1fff;
  for (i = 1; i < 10; i++) {
    g[i] = this.h[i] + c;
    c = g[i] >>> 13;
    g[i] &= 0x1fff;
  }
  g[9] -= (1 << 13);

  mask = (c ^ 1) - 1;
  for (i = 0; i < 10; i++) g[i] &= mask;
  mask = ~mask;
  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];

  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;
  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;
  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;
  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;
  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;
  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;
  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;
  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;

  f = this.h[0] + this.pad[0];
  this.h[0] = f & 0xffff;
  for (i = 1; i < 8; i++) {
    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
    this.h[i] = f & 0xffff;
  }

  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;
  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;
  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;
  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;
  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;
  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;
  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;
  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;
  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;
  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;
  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;
  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;
  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;
  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;
  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;
  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;
};

poly1305.prototype.update = function(m, mpos, bytes) {
  var i, want;

  if (this.leftover) {
    want = (16 - this.leftover);
    if (want > bytes)
      want = bytes;
    for (i = 0; i < want; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    bytes -= want;
    mpos += want;
    this.leftover += want;
    if (this.leftover < 16)
      return;
    this.blocks(this.buffer, 0, 16);
    this.leftover = 0;
  }

  if (bytes >= 16) {
    want = bytes - (bytes % 16);
    this.blocks(m, mpos, want);
    mpos += want;
    bytes -= want;
  }

  if (bytes) {
    for (i = 0; i < bytes; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    this.leftover += bytes;
  }
};

function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
  var s = new poly1305(k);
  s.update(m, mpos, n);
  s.finish(out, outpos);
  return 0;
}

function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
  var x = new Uint8Array(16);
  crypto_onetimeauth(x,0,m,mpos,n,k);
  return crypto_verify_16(h,hpos,x,0);
}

function crypto_secretbox(c,m,d,n,k) {
  var i;
  if (d < 32) return -1;
  crypto_stream_xor(c,0,m,0,d,n,k);
  crypto_onetimeauth(c, 16, c, 32, d - 32, c);
  for (i = 0; i < 16; i++) c[i] = 0;
  return 0;
}

function crypto_secretbox_open(m,c,d,n,k) {
  var i;
  var x = new Uint8Array(32);
  if (d < 32) return -1;
  crypto_stream(x,0,32,n,k);
  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;
  crypto_stream_xor(m,0,c,0,d,n,k);
  for (i = 0; i < 32; i++) m[i] = 0;
  return 0;
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

function crypto_box_keypair(y, x) {
  randombytes(x, 32);
  return crypto_scalarmult_base(y, x);
}

function crypto_box_beforenm(k, y, x) {
  var s = new Uint8Array(32);
  crypto_scalarmult(s, x, y);
  return crypto_core_hsalsa20(k, _0, s, sigma);
}

var crypto_box_afternm = crypto_secretbox;
var crypto_box_open_afternm = crypto_secretbox_open;

function crypto_box(c, m, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_afternm(c, m, d, n, k);
}

function crypto_box_open(m, c, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_open_afternm(m, c, d, n, k);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

function crypto_sign_keypair(pk, sk, seeded) {
  var d = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];
  var i;

  if (!seeded) randombytes(sk, 32);
  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  scalarbase(p, d);
  pack(pk, p);

  for (i = 0; i < 32; i++) sk[i+32] = pk[i];
  return 0;
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = (x[j] + 128) >> 8;
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Note: difference from C - smlen returned, not passed as argument.
function crypto_sign(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  var smlen = n + 64;
  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 32; i < 64; i++) sm[i] = sk[i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * d[j];
    }
  }

  modL(sm.subarray(32), x);
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i, mlen;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  mlen = -1;
  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  mlen = n;
  return mlen;
}

var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;

nacl.lowlevel = {
  crypto_core_hsalsa20: crypto_core_hsalsa20,
  crypto_stream_xor: crypto_stream_xor,
  crypto_stream: crypto_stream,
  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
  crypto_stream_salsa20: crypto_stream_salsa20,
  crypto_onetimeauth: crypto_onetimeauth,
  crypto_onetimeauth_verify: crypto_onetimeauth_verify,
  crypto_verify_16: crypto_verify_16,
  crypto_verify_32: crypto_verify_32,
  crypto_secretbox: crypto_secretbox,
  crypto_secretbox_open: crypto_secretbox_open,
  crypto_scalarmult: crypto_scalarmult,
  crypto_scalarmult_base: crypto_scalarmult_base,
  crypto_box_beforenm: crypto_box_beforenm,
  crypto_box_afternm: crypto_box_afternm,
  crypto_box: crypto_box,
  crypto_box_open: crypto_box_open,
  crypto_box_keypair: crypto_box_keypair,
  crypto_hash: crypto_hash,
  crypto_sign: crypto_sign,
  crypto_sign_keypair: crypto_sign_keypair,
  crypto_sign_open: crypto_sign_open,

  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
  crypto_sign_BYTES: crypto_sign_BYTES,
  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
  crypto_hash_BYTES: crypto_hash_BYTES
};

/* High-level API */

function checkLengths(k, n) {
  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
}

function checkBoxLengths(pk, sk) {
  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
}

function checkArrayTypes() {
  var t, i;
  for (i = 0; i < arguments.length; i++) {
     if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')
       throw new TypeError('unexpected type ' + t + ', use Uint8Array');
  }
}

function cleanup(arr) {
  for (var i = 0; i < arr.length; i++) arr[i] = 0;
}

// TODO: Completely remove this in v0.15.
if (!nacl.util) {
  nacl.util = {};
  nacl.util.decodeUTF8 = nacl.util.encodeUTF8 = nacl.util.encodeBase64 = nacl.util.decodeBase64 = function() {
    throw new Error('nacl.util moved into separate package: https://github.com/dchest/tweetnacl-util-js');
  };
}

nacl.randomBytes = function(n) {
  var b = new Uint8Array(n);
  randombytes(b, n);
  return b;
};

nacl.secretbox = function(msg, nonce, key) {
  checkArrayTypes(msg, nonce, key);
  checkLengths(key, nonce);
  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
  var c = new Uint8Array(m.length);
  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];
  crypto_secretbox(c, m, m.length, nonce, key);
  return c.subarray(crypto_secretbox_BOXZEROBYTES);
};

nacl.secretbox.open = function(box, nonce, key) {
  checkArrayTypes(box, nonce, key);
  checkLengths(key, nonce);
  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
  var m = new Uint8Array(c.length);
  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];
  if (c.length < 32) return false;
  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return false;
  return m.subarray(crypto_secretbox_ZEROBYTES);
};

nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;

nacl.scalarMult = function(n, p) {
  checkArrayTypes(n, p);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult(q, n, p);
  return q;
};

nacl.scalarMult.base = function(n) {
  checkArrayTypes(n);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult_base(q, n);
  return q;
};

nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;

nacl.box = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox(msg, nonce, k);
};

nacl.box.before = function(publicKey, secretKey) {
  checkArrayTypes(publicKey, secretKey);
  checkBoxLengths(publicKey, secretKey);
  var k = new Uint8Array(crypto_box_BEFORENMBYTES);
  crypto_box_beforenm(k, publicKey, secretKey);
  return k;
};

nacl.box.after = nacl.secretbox;

nacl.box.open = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox.open(msg, nonce, k);
};

nacl.box.open.after = nacl.secretbox.open;

nacl.box.keyPair = function() {
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
  crypto_box_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.box.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_box_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  crypto_scalarmult_base(pk, secretKey);
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
nacl.box.nonceLength = crypto_box_NONCEBYTES;
nacl.box.overheadLength = nacl.secretbox.overheadLength;

nacl.sign = function(msg, secretKey) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);
  crypto_sign(signedMsg, msg, msg.length, secretKey);
  return signedMsg;
};

nacl.sign.open = function(signedMsg, publicKey) {
  if (arguments.length !== 2)
    throw new Error('nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?');
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

nacl.sign.detached = function(msg, secretKey) {
  var signedMsg = nacl.sign(msg, secretKey);
  var sig = new Uint8Array(crypto_sign_BYTES);
  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
  return sig;
};

nacl.sign.detached.verify = function(msg, sig, publicKey) {
  checkArrayTypes(msg, sig, publicKey);
  if (sig.length !== crypto_sign_BYTES)
    throw new Error('bad signature size');
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
  var m = new Uint8Array(crypto_sign_BYTES + msg.length);
  var i;
  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];
  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
};

nacl.sign.keyPair = function() {
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  crypto_sign_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.sign.keyPair.fromSeed = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== crypto_sign_SEEDBYTES)
    throw new Error('bad seed size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  for (var i = 0; i < 32; i++) sk[i] = seed[i];
  crypto_sign_keypair(pk, sk, true);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
nacl.sign.seedLength = crypto_sign_SEEDBYTES;
nacl.sign.signatureLength = crypto_sign_BYTES;

nacl.hash = function(msg) {
  checkArrayTypes(msg);
  var h = new Uint8Array(crypto_hash_BYTES);
  crypto_hash(h, msg, msg.length);
  return h;
};

nacl.hash.hashLength = crypto_hash_BYTES;

nacl.verify = function(x, y) {
  checkArrayTypes(x, y);
  // Zero length arguments are considered not equal.
  if (x.length === 0 || y.length === 0) return false;
  if (x.length !== y.length) return false;
  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
};

nacl.setPRNG = function(fn) {
  randombytes = fn;
};

(function() {
  // Initialize PRNG if environment provides CSPRNG.
  // If not, methods calling randombytes will throw.
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;
  if (crypto && crypto.getRandomValues) {
    // Browsers.
    var QUOTA = 65536;
    nacl.setPRNG(function(x, n) {
      var i, v = new Uint8Array(n);
      for (i = 0; i < n; i += QUOTA) {
        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
      }
      for (i = 0; i < n; i++) x[i] = v[i];
      cleanup(v);
    });
  } else if (typeof require !== 'undefined') {
    // Node.js.
    crypto = require('crypto');
    if (crypto && crypto.randomBytes) {
      nacl.setPRNG(function(x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    }
  }
})();

})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));

},{"crypto":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browser-resolve/empty.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/typedarray-to-buffer/index.js":[function(require,module,exports){
(function (Buffer){(function (){
/*! typedarray-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/**
 * Convert a typed array to a Buffer without a copy
 *
 * Author:   Feross Aboukhadijeh <https://feross.org>
 * License:  MIT
 *
 * `npm install typedarray-to-buffer`
 */

module.exports = function typedarrayToBuffer (arr) {
  return ArrayBuffer.isView(arr)
    // To avoid a copy, use the typed array's underlying ArrayBuffer to back
    // new Buffer, respecting the "view", i.e. byteOffset and byteLength
    ? Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength)
    // Pass through all other types to `Buffer.from`
    : Buffer.from(arr)
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/typedfastbitset/TypedFastBitSet.js":[function(require,module,exports){
/**
 * TypedFastBitSet.js : a fast bit set implementation in JavaScript.
 * (c) the authors
 * Licensed under the Apache License, Version 2.0.
 *
 * Speed-optimized BitSet implementation for modern browsers and JavaScript engines.
 *
 * A BitSet is an ideal data structure to implement a Set when values being stored are
 * reasonably small integers. It can be orders of magnitude faster than a generic set implementation.
 * The FastBitSet implementation optimizes for speed, leveraging commonly available features
 * like typed arrays.
 *
 * Simple usage :
 *  var b = new TypedFastBitSet();// initially empty
 *         // will throw exception if typed arrays are not supported
 *  b.add(1);// add the value "1"
 *  b.has(1); // check that the value is present! (will return true)
 *  b.add(2);
 *  console.log(""+b);// should display {1,2}
 *  b.add(10);
 *  b.array(); // would return [1,2,10]
 *
 *  var c = new TypedFastBitSet([1,2,3,10]); // create bitset initialized with values 1,2,3,10
 *  c.difference(b); // from c, remove elements that are in b
 *  var su = c.union_size(b);// compute the size of the union (bitsets are unchanged)
 * c.union(b); // c will contain all elements that are in c and b
 * var s1 = c.intersection_size(b);// compute the size of the intersection (bitsets are unchanged)
 * c.intersection(b); // c will only contain elements that are in both c and b
 * c = b.clone(); // create a (deep) copy of b and assign it to c.
 * c.equals(b); // check whether c and b are equal
 *
 *   See README.md file for a more complete description.
 *
 * You can install the library under node with the command line
 *   npm install fastbitset
 */
'use strict';

function isIterable(obj) {
  if (obj == null) {
    return false;
  }
  return obj[Symbol.iterator] !== undefined;
}
// you can provide an iterable
// an exception is thrown if typed arrays are not supported
function TypedFastBitSet(iterable) {
  this.count = 0 | 0;
  this.words = new Uint32Array(8);
  if (isIterable(iterable)) {
    for (var key of iterable) {
      this.add(key);
    }
  }
}

// Add the value (Set the bit at index to true)
TypedFastBitSet.prototype.add = function(index) {
  if ((this.count << 5) <= index) {
    this.resize(index);
  }
  this.words[index >>> 5] |= 1 << index ;
};

// If the value was not in the set, add it, otherwise remove it (flip bit at index)
TypedFastBitSet.prototype.flip = function(index) {
  if ((this.count << 5) <= index) {
    this.resize(index);
  }
  this.words[index >>> 5] ^= 1 << index ;
};

// Remove all values, reset memory usage
TypedFastBitSet.prototype.clear = function() {
  this.count = 0 | 0;
  this.words = new Uint32Array(this.count);
};

// Set the bit at index to false
TypedFastBitSet.prototype.remove = function(index) {
  if ((this.count  << 5) <= index) {
    this.resize(index);
  }
  this.words[index  >>> 5] &= ~(1 << index);
};

// Set bits from start (inclusive) to end (exclusive)
TypedFastBitSet.prototype.addRange = function (start, end) {
  if (start >= end) {
    return;
  }

  if ((this.count << 5) <= end) {
    this.resize(end);
  }

  var firstword = start >> 5;
  var endword = (end - 1) >> 5;

  if (firstword === endword) {
    this.words[firstword] |= (~0 << start) & (~0 >>> -end);
    return;
  }
  this.words[firstword] |= ~0 << start;
  this.words.fill(~0, firstword + 1, endword);
  this.words[endword] |= ~0 >>> -end;
};

// Remove bits from start (inclusive) to end (exclusive)
TypedFastBitSet.prototype.removeRange = function (start, end) {
  start = Math.min(start, (this.count << 5) - 1);
  end = Math.min(end, (this.count << 5) - 1);

  if (start >= end) {
    return;
  }
  var firstword = start >> 5;
  var endword = (end - 1) >> 5;

  if (firstword === endword) {
    this.words[firstword] &= ~((~0 << start) & (~0 >>> -end));
    return;
  }
  this.words[firstword] &= ~(~0 << start);
  this.words.fill(0, firstword + 1, endword);
  this.words[endword] &= ~(~0 >>> -end);
};

// Return true if no bit is set
TypedFastBitSet.prototype.isEmpty = function(index) {
  var c = this.count;
  for (var  i = 0; i < c; i++) {
    if (this.words[i] !== 0) return false;
  }
  return true;
};

// Tries to add the value (Set the bit at index to true), return 1 if the
// value was added, return 0 if the value was already present
TypedFastBitSet.prototype.checkedAdd = function(index) {
  this.resize(index);
  var word = this.words[index  >>> 5]
  var newword = word | (1 << index)
  this.words[index >>> 5] = newword
  return (newword ^ word) >>> index
};

// Is the value contained in the set? Is the bit at index true or false? Returns a boolean
TypedFastBitSet.prototype.has = function(index) {
  return (this.words[index  >>> 5] & (1 << index)) !== 0;
};

// Reduce the memory usage to a minimum
TypedFastBitSet.prototype.trim = function() {
  var nl = this.words.length
  while ((nl > 0) && (this.words[nl - 1] === 0)) {
      nl--;
  }
  this.count = nl
  this.words = this.words.slice(0,this.count);
};

// Resize the bitset so that we can write a value at index
TypedFastBitSet.prototype.resize = function(index) {
  if ((this.count  << 5) > index) {
    return; //nothing to do
  }
  this.count = (index + 32) >>> 5;// just what is needed
  if ((this.words.length  << 5) <= index) {
    var newwords = new Uint32Array(this.count << 1);
    newwords.set(this.words);// hopefully, this copy is fast
    this.words = newwords;
  }
};

// fast function to compute the Hamming weight of a 32-bit unsigned integer
TypedFastBitSet.prototype.hammingWeight = function(v) {
  v -= ((v >>> 1) & 0x55555555);// works with signed or unsigned shifts
  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);
  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;
};


// How many values stored in the set? How many set bits?
TypedFastBitSet.prototype.size = function() {
  var answer = 0;
  var c = this.count;
  for (var i = 0; i < c; i++) {
    answer += this.hammingWeight(this.words[i] | 0);
  }
  return answer;
};

// Return an array with the set bit locations (values)
TypedFastBitSet.prototype.array = function() {
  var answer = new Array(this.size());
  var pos = 0 | 0;
  var c = this.count | 0;
  for (var k = 0; k < c; ++k) {
    var w =  this.words[k];
    while (w != 0) {
      var t = w & -w;
      answer[pos++] = (k << 5) + this.hammingWeight((t - 1) | 0);
      w ^= t;
    }
  }
  return answer;
};


// Execute fnc on each value stored in bitset
TypedFastBitSet.prototype.forEach = function(fnc) {
  var c = this.count | 0;
  for (var k = 0; k < c; ++k) {
    var w =  this.words[k];
    while (w != 0) {
      var t = w & -w;
      fnc((k << 5) + this.hammingWeight(t - 1));
      w ^= t;
    }
  }
};

// Creates a copy of this bitmap
TypedFastBitSet.prototype.clone = function() {
  var clone = Object.create(TypedFastBitSet.prototype);
  clone.count = this.count;
  clone.words = new Uint32Array(this.words);
  return clone;
};

// Check if this bitset intersects with another one,
// no bitmap is modified
TypedFastBitSet.prototype.intersects = function(otherbitmap) {
  var newcount = Math.min(this.count,otherbitmap.count);
  for (var k = 0 | 0; k < newcount; ++k) {
    if ((this.words[k] & otherbitmap.words[k]) !== 0) return true;
  }
  return false;
};

// Computes the intersection between this bitset and another one,
// the current bitmap is modified  (and returned by the function)
TypedFastBitSet.prototype.intersection = function(otherbitmap) {
  var newcount = Math.min(this.count,otherbitmap.count);
  var k = 0 | 0;
  for (; k + 7 < newcount; k += 8) {
    this.words[k] &= otherbitmap.words[k];
    this.words[k + 1] &= otherbitmap.words[k + 1];
    this.words[k + 2] &= otherbitmap.words[k + 2];
    this.words[k + 3] &= otherbitmap.words[k + 3];
    this.words[k + 4] &= otherbitmap.words[k + 4];
    this.words[k + 5] &= otherbitmap.words[k + 5];
    this.words[k + 6] &= otherbitmap.words[k + 6];
    this.words[k + 7] &= otherbitmap.words[k + 7];
  }
  for (; k < newcount; ++k) {
    this.words[k] &= otherbitmap.words[k];
  }
  var c = this.count;
  for (var k = newcount; k < c; ++k) {
    this.words[k] = 0;
  }
  this.count = newcount;
  return this;
};

// Computes the size of the intersection between this bitset and another one
TypedFastBitSet.prototype.intersection_size = function(otherbitmap) {
  var newcount = Math.min(this.count,otherbitmap.count);
  var answer = 0 | 0;
  for (var k = 0 | 0; k < newcount; ++k) {
    answer += this.hammingWeight(this.words[k] & otherbitmap.words[k]);
  }
  return answer;
};

// Computes the intersection between this bitset and another one,
// a new bitmap is generated
TypedFastBitSet.prototype.new_intersection = function(otherbitmap) {
  var answer = Object.create(TypedFastBitSet.prototype);
  answer.count = Math.min(this.count,otherbitmap.count);
  answer.words = new Uint32Array(answer.count);
  var c = answer.count;
  for (var k = 0 | 0; k < c; ++k) {
    answer.words[k] = this.words[k] & otherbitmap.words[k];
  }
  return answer;
};

// Check whether this bitset and another one are equal
TypedFastBitSet.prototype.equals = function(otherbitmap) {
  var mcount = Math.min(this.count , otherbitmap.count);
  for (var k = 0 | 0; k < mcount; ++k) {
    if (this.words[k] != otherbitmap.words[k]) return false;
  }
  if (this.count < otherbitmap.count) {
    var c = otherbitmap.count;
    for (var k = this.count; k < c; ++k) {
      if (otherbitmap.words[k] != 0) return false;
    }
  } else if (otherbitmap.count < this.count) {
    var c = this.count;
    for (var k = otherbitmap.count; k < c; ++k) {
      if (this.words[k] != 0) return false;
    }
  }
  return true;
};

// Computes the difference between this bitset and another one,
// the current bitset is modified (and returned by the function)
TypedFastBitSet.prototype.difference = function(otherbitmap) {
  var newcount = Math.min(this.count,otherbitmap.count);
  var k = 0 | 0;
  for (; k + 7 < newcount; k += 8) {
    this.words[k] &= ~otherbitmap.words[k];
    this.words[k + 1] &= ~otherbitmap.words[k + 1];
    this.words[k + 2] &= ~otherbitmap.words[k + 2];
    this.words[k + 3] &= ~otherbitmap.words[k + 3];
    this.words[k + 4] &= ~otherbitmap.words[k + 4];
    this.words[k + 5] &= ~otherbitmap.words[k + 5];
    this.words[k + 6] &= ~otherbitmap.words[k + 6];
    this.words[k + 7] &= ~otherbitmap.words[k + 7];
  }
  for (; k < newcount; ++k) {
    this.words[k] &= ~otherbitmap.words[k];
  }
  return this;
};

// Computes the size of the difference between this bitset and another one
TypedFastBitSet.prototype.difference_size = function(otherbitmap) {
  var newcount = Math.min(this.count,otherbitmap.count);
  var answer = 0 | 0;
  var k = 0 | 0;
  for (; k < newcount; ++k) {
    answer += this.hammingWeight(this.words[k] & (~otherbitmap.words[k]));
  }
  var c = this.count;
  for (; k < c; ++k) {
    answer += this.hammingWeight(this.words[k]);
  }
  return answer;
};

// Returns a string representation
TypedFastBitSet.prototype.toString = function() {
  return '{' + this.array().join(',') + '}';
};

// Computes the union between this bitset and another one,
// the current bitset is modified  (and returned by the function)
TypedFastBitSet.prototype.union = function(otherbitmap) {
  var mcount = Math.min(this.count,otherbitmap.count);
  var k = 0 | 0;
  for (; k + 7  < mcount; k += 8) {
    this.words[k] |= otherbitmap.words[k];
    this.words[k + 1] |= otherbitmap.words[k + 1];
    this.words[k + 2] |= otherbitmap.words[k + 2];
    this.words[k + 3] |= otherbitmap.words[k + 3];
    this.words[k + 4] |= otherbitmap.words[k + 4];
    this.words[k + 5] |= otherbitmap.words[k + 5];
    this.words[k + 6] |= otherbitmap.words[k + 6];
    this.words[k + 7] |= otherbitmap.words[k + 7];
  }
  for (; k < mcount; ++k) {
    this.words[k] |= otherbitmap.words[k];
  }
  if (this.count < otherbitmap.count) {
    this.resize((otherbitmap.count  << 5) - 1);
    var c = otherbitmap.count;
    for (var k = mcount; k < c; ++k) {
      this.words[k] = otherbitmap.words[k];
    }
    this.count = otherbitmap.count;
  }
  return this;
};

// Computes the union between this bitset and another one,
// a new bitmap is generated
TypedFastBitSet.prototype.new_union = function(otherbitmap) {
  var answer = Object.create(TypedFastBitSet.prototype);
  answer.count = Math.max(this.count,otherbitmap.count);
  answer.words = new Uint32Array(answer.count);
  var mcount = Math.min(this.count,otherbitmap.count)
  for (var k = 0; k < mcount; ++k) {
      answer.words[k] = this.words[k] | otherbitmap.words[k];
  }
  var c = this.count;
  for (var k = mcount; k < c; ++k) {
      answer.words[k] = this.words[k] ;
  }
  var c2 = otherbitmap.count;
  for (var k = mcount; k < c2; ++k) {
      answer.words[k] = otherbitmap.words[k] ;
  }
  return answer;
};

// Computes the difference between this bitset and another one,
// a new bitmap is generated
TypedFastBitSet.prototype.new_difference = function(otherbitmap) {
  return this.clone().difference(otherbitmap);// should be fast enough
};

// Computes the size of the union between this bitset and another one
TypedFastBitSet.prototype.union_size = function(otherbitmap) {
  var mcount = Math.min(this.count,otherbitmap.count);
  var answer = 0 | 0;
  for (var k = 0 | 0; k < mcount; ++k) {
    answer += this.hammingWeight(this.words[k] | otherbitmap.words[k]);
  }
  if (this.count < otherbitmap.count) {
    var c = otherbitmap.count;
    for (var k = this.count ; k < c; ++k) {
      answer += this.hammingWeight(otherbitmap.words[k] | 0);
    }
  } else {
    var c = this.count;
    for (var k = otherbitmap.count ; k < c; ++k) {
      answer += this.hammingWeight(this.words[k] | 0);
    }
  }
  return answer;
};

module.exports = TypedFastBitSet;

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/url/url.js":[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/url/util.js","punycode":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/punycode/punycode.js","querystring":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/querystring-es3/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/url/util.js":[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/utf8-byte-length/browser.js":[function(require,module,exports){
'use strict';

function isHighSurrogate(codePoint) {
  return codePoint >= 0xd800 && codePoint <= 0xdbff;
}

function isLowSurrogate(codePoint) {
  return codePoint >= 0xdc00 && codePoint <= 0xdfff;
}

// Truncate string by size in bytes
module.exports = function getByteLength(string) {
  if (typeof string !== "string") {
    throw new Error("Input must be string");
  }

  var charLength = string.length;
  var byteLength = 0;
  var codePoint = null;
  var prevCodePoint = null;
  for (var i = 0; i < charLength; i++) {
    codePoint = string.charCodeAt(i);
    // handle 4-byte non-BMP chars
    // low surrogate
    if (isLowSurrogate(codePoint)) {
      // when parsing previous hi-surrogate, 3 is added to byteLength
      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {
        byteLength += 1;
      }
      else {
        byteLength += 3;
      }
    }
    else if (codePoint <= 0x7f ) {
      byteLength += 1;
    }
    else if (codePoint >= 0x80 && codePoint <= 0x7ff) {
      byteLength += 2;
    }
    else if (codePoint >= 0x800 && codePoint <= 0xffff) {
      byteLength += 3;
    }
    prevCodePoint = codePoint;
  }

  return byteLength;
};

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util-deprecate/browser.js":[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/support/isBufferBrowser.js":[function(require,module,exports){
arguments[4]["/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/assert/node_modules/util/support/isBufferBrowser.js"][0].apply(exports,arguments)
},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/support/types.js":[function(require,module,exports){
// Currently in sync with Node.js lib/internal/util/types.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9

'use strict';

var isArgumentsObject = require('is-arguments');
var isGeneratorFunction = require('is-generator-function');
var whichTypedArray = require('which-typed-array');
var isTypedArray = require('is-typed-array');

function uncurryThis(f) {
  return f.call.bind(f);
}

var BigIntSupported = typeof BigInt !== 'undefined';
var SymbolSupported = typeof Symbol !== 'undefined';

var ObjectToString = uncurryThis(Object.prototype.toString);

var numberValue = uncurryThis(Number.prototype.valueOf);
var stringValue = uncurryThis(String.prototype.valueOf);
var booleanValue = uncurryThis(Boolean.prototype.valueOf);

if (BigIntSupported) {
  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
}

if (SymbolSupported) {
  var symbolValue = uncurryThis(Symbol.prototype.valueOf);
}

function checkBoxedPrimitive(value, prototypeValueOf) {
  if (typeof value !== 'object') {
    return false;
  }
  try {
    prototypeValueOf(value);
    return true;
  } catch(e) {
    return false;
  }
}

exports.isArgumentsObject = isArgumentsObject;
exports.isGeneratorFunction = isGeneratorFunction;
exports.isTypedArray = isTypedArray;

// Taken from here and modified for better browser support
// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js
function isPromise(input) {
	return (
		(
			typeof Promise !== 'undefined' &&
			input instanceof Promise
		) ||
		(
			input !== null &&
			typeof input === 'object' &&
			typeof input.then === 'function' &&
			typeof input.catch === 'function'
		)
	);
}
exports.isPromise = isPromise;

function isArrayBufferView(value) {
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    return ArrayBuffer.isView(value);
  }

  return (
    isTypedArray(value) ||
    isDataView(value)
  );
}
exports.isArrayBufferView = isArrayBufferView;


function isUint8Array(value) {
  return whichTypedArray(value) === 'Uint8Array';
}
exports.isUint8Array = isUint8Array;

function isUint8ClampedArray(value) {
  return whichTypedArray(value) === 'Uint8ClampedArray';
}
exports.isUint8ClampedArray = isUint8ClampedArray;

function isUint16Array(value) {
  return whichTypedArray(value) === 'Uint16Array';
}
exports.isUint16Array = isUint16Array;

function isUint32Array(value) {
  return whichTypedArray(value) === 'Uint32Array';
}
exports.isUint32Array = isUint32Array;

function isInt8Array(value) {
  return whichTypedArray(value) === 'Int8Array';
}
exports.isInt8Array = isInt8Array;

function isInt16Array(value) {
  return whichTypedArray(value) === 'Int16Array';
}
exports.isInt16Array = isInt16Array;

function isInt32Array(value) {
  return whichTypedArray(value) === 'Int32Array';
}
exports.isInt32Array = isInt32Array;

function isFloat32Array(value) {
  return whichTypedArray(value) === 'Float32Array';
}
exports.isFloat32Array = isFloat32Array;

function isFloat64Array(value) {
  return whichTypedArray(value) === 'Float64Array';
}
exports.isFloat64Array = isFloat64Array;

function isBigInt64Array(value) {
  return whichTypedArray(value) === 'BigInt64Array';
}
exports.isBigInt64Array = isBigInt64Array;

function isBigUint64Array(value) {
  return whichTypedArray(value) === 'BigUint64Array';
}
exports.isBigUint64Array = isBigUint64Array;

function isMapToString(value) {
  return ObjectToString(value) === '[object Map]';
}
isMapToString.working = (
  typeof Map !== 'undefined' &&
  isMapToString(new Map())
);

function isMap(value) {
  if (typeof Map === 'undefined') {
    return false;
  }

  return isMapToString.working
    ? isMapToString(value)
    : value instanceof Map;
}
exports.isMap = isMap;

function isSetToString(value) {
  return ObjectToString(value) === '[object Set]';
}
isSetToString.working = (
  typeof Set !== 'undefined' &&
  isSetToString(new Set())
);
function isSet(value) {
  if (typeof Set === 'undefined') {
    return false;
  }

  return isSetToString.working
    ? isSetToString(value)
    : value instanceof Set;
}
exports.isSet = isSet;

function isWeakMapToString(value) {
  return ObjectToString(value) === '[object WeakMap]';
}
isWeakMapToString.working = (
  typeof WeakMap !== 'undefined' &&
  isWeakMapToString(new WeakMap())
);
function isWeakMap(value) {
  if (typeof WeakMap === 'undefined') {
    return false;
  }

  return isWeakMapToString.working
    ? isWeakMapToString(value)
    : value instanceof WeakMap;
}
exports.isWeakMap = isWeakMap;

function isWeakSetToString(value) {
  return ObjectToString(value) === '[object WeakSet]';
}
isWeakSetToString.working = (
  typeof WeakSet !== 'undefined' &&
  isWeakSetToString(new WeakSet())
);
function isWeakSet(value) {
  return isWeakSetToString(value);
}
exports.isWeakSet = isWeakSet;

function isArrayBufferToString(value) {
  return ObjectToString(value) === '[object ArrayBuffer]';
}
isArrayBufferToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  isArrayBufferToString(new ArrayBuffer())
);
function isArrayBuffer(value) {
  if (typeof ArrayBuffer === 'undefined') {
    return false;
  }

  return isArrayBufferToString.working
    ? isArrayBufferToString(value)
    : value instanceof ArrayBuffer;
}
exports.isArrayBuffer = isArrayBuffer;

function isDataViewToString(value) {
  return ObjectToString(value) === '[object DataView]';
}
isDataViewToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  typeof DataView !== 'undefined' &&
  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))
);
function isDataView(value) {
  if (typeof DataView === 'undefined') {
    return false;
  }

  return isDataViewToString.working
    ? isDataViewToString(value)
    : value instanceof DataView;
}
exports.isDataView = isDataView;

function isSharedArrayBufferToString(value) {
  return ObjectToString(value) === '[object SharedArrayBuffer]';
}
isSharedArrayBufferToString.working = (
  typeof SharedArrayBuffer !== 'undefined' &&
  isSharedArrayBufferToString(new SharedArrayBuffer())
);
function isSharedArrayBuffer(value) {
  if (typeof SharedArrayBuffer === 'undefined') {
    return false;
  }

  return isSharedArrayBufferToString.working
    ? isSharedArrayBufferToString(value)
    : value instanceof SharedArrayBuffer;
}
exports.isSharedArrayBuffer = isSharedArrayBuffer;

function isAsyncFunction(value) {
  return ObjectToString(value) === '[object AsyncFunction]';
}
exports.isAsyncFunction = isAsyncFunction;

function isMapIterator(value) {
  return ObjectToString(value) === '[object Map Iterator]';
}
exports.isMapIterator = isMapIterator;

function isSetIterator(value) {
  return ObjectToString(value) === '[object Set Iterator]';
}
exports.isSetIterator = isSetIterator;

function isGeneratorObject(value) {
  return ObjectToString(value) === '[object Generator]';
}
exports.isGeneratorObject = isGeneratorObject;

function isWebAssemblyCompiledModule(value) {
  return ObjectToString(value) === '[object WebAssembly.Module]';
}
exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;

function isNumberObject(value) {
  return checkBoxedPrimitive(value, numberValue);
}
exports.isNumberObject = isNumberObject;

function isStringObject(value) {
  return checkBoxedPrimitive(value, stringValue);
}
exports.isStringObject = isStringObject;

function isBooleanObject(value) {
  return checkBoxedPrimitive(value, booleanValue);
}
exports.isBooleanObject = isBooleanObject;

function isBigIntObject(value) {
  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
}
exports.isBigIntObject = isBigIntObject;

function isSymbolObject(value) {
  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
}
exports.isSymbolObject = isSymbolObject;

function isBoxedPrimitive(value) {
  return (
    isNumberObject(value) ||
    isStringObject(value) ||
    isBooleanObject(value) ||
    isBigIntObject(value) ||
    isSymbolObject(value)
  );
}
exports.isBoxedPrimitive = isBoxedPrimitive;

function isAnyArrayBuffer(value) {
  return typeof Uint8Array !== 'undefined' && (
    isArrayBuffer(value) ||
    isSharedArrayBuffer(value)
  );
}
exports.isAnyArrayBuffer = isAnyArrayBuffer;

['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {
  Object.defineProperty(exports, method, {
    enumerable: false,
    value: function() {
      throw new Error(method + ' is not supported in userland');
    }
  });
});

},{"is-arguments":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-arguments/index.js","is-generator-function":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-generator-function/index.js","is-typed-array":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-typed-array/index.js","which-typed-array":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/which-typed-array/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/util.js":[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnvRegex = /^$/;

if (process.env.NODE_DEBUG) {
  var debugEnv = process.env.NODE_DEBUG;
  debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, '\\$&')
    .replace(/\*/g, '.*')
    .replace(/,/g, '$|^')
    .toUpperCase();
  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');
}
exports.debuglog = function(set) {
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (debugEnvRegex.test(set)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
exports.types = require('./support/types');

function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;
exports.types.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;
exports.types.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;
exports.types.isNativeError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
}

exports.promisify.custom = kCustomPromisifiedSymbol

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },
            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;

}).call(this)}).call(this,require('_process'))
},{"./support/isBuffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/support/isBufferBrowser.js","./support/types":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/util/support/types.js","_process":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/process/browser.js","inherits":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/inherits/inherits_browser.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/decode.js":[function(require,module,exports){
module.exports = read

var MSB = 0x80
  , REST = 0x7F

function read(buf, offset) {
  var res    = 0
    , offset = offset || 0
    , shift  = 0
    , counter = offset
    , b
    , l = buf.length

  do {
    if (counter >= l) {
      read.bytes = 0
      throw new RangeError('Could not decode varint')
    }
    b = buf[counter++]
    res += shift < 28
      ? (b & REST) << shift
      : (b & REST) * Math.pow(2, shift)
    shift += 7
  } while (b >= MSB)

  read.bytes = counter - offset

  return res
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/encode.js":[function(require,module,exports){
module.exports = encode

var MSB = 0x80
  , REST = 0x7F
  , MSBALL = ~REST
  , INT = Math.pow(2, 31)

function encode(num, out, offset) {
  out = out || []
  offset = offset || 0
  var oldOffset = offset

  while(num >= INT) {
    out[offset++] = (num & 0xFF) | MSB
    num /= 128
  }
  while(num & MSBALL) {
    out[offset++] = (num & 0xFF) | MSB
    num >>>= 7
  }
  out[offset] = num | 0
  
  encode.bytes = offset - oldOffset + 1
  
  return out
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/index.js":[function(require,module,exports){
module.exports = {
    encode: require('./encode.js')
  , decode: require('./decode.js')
  , encodingLength: require('./length.js')
}

},{"./decode.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/decode.js","./encode.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/encode.js","./length.js":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/length.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/varint/length.js":[function(require,module,exports){

var N1 = Math.pow(2,  7)
var N2 = Math.pow(2, 14)
var N3 = Math.pow(2, 21)
var N4 = Math.pow(2, 28)
var N5 = Math.pow(2, 35)
var N6 = Math.pow(2, 42)
var N7 = Math.pow(2, 49)
var N8 = Math.pow(2, 56)
var N9 = Math.pow(2, 63)

module.exports = function (value) {
  return (
    value < N1 ? 1
  : value < N2 ? 2
  : value < N3 ? 3
  : value < N4 ? 4
  : value < N5 ? 5
  : value < N6 ? 6
  : value < N7 ? 7
  : value < N8 ? 8
  : value < N9 ? 9
  :              10
  )
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/which-typed-array/index.js":[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('foreach');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasSymbols = require('has-symbols')();
var hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';

var typedArrays = availableTypedArrays();

var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		if (typeof global[typedArray] === 'function') {
			var arr = new global[typedArray]();
			if (!(Symbol.toStringTag in arr)) {
				throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
			}
			var proto = getPrototypeOf(arr);
			var descriptor = gOPD(proto, Symbol.toStringTag);
			if (!descriptor) {
				var superProto = getPrototypeOf(proto);
				descriptor = gOPD(superProto, Symbol.toStringTag);
			}
			toStrTags[typedArray] = descriptor.get;
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var foundName = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!foundName) {
			try {
				var name = getter.call(value);
				if (name === typedArray) {
					foundName = name;
				}
			} catch (e) {}
		}
	});
	return foundName;
};

var isTypedArray = require('is-typed-array');

module.exports = function whichTypedArray(value) {
	if (!isTypedArray(value)) { return false; }
	if (!hasToStringTag) { return $slice($toString(value), 8, -1); }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/available-typed-arrays/index.js","call-bind/callBound":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/call-bind/callBound.js","es-abstract/helpers/getOwnPropertyDescriptor":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","foreach":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/foreach/index.js","has-symbols":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/has-symbols/index.js","is-typed-array":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/is-typed-array/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/wrappy/wrappy.js":[function(require,module,exports){
// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/immutable.js":[function(require,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/xtend/mutable.js":[function(require,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/zii/index.js":[function(require,module,exports){
Object.defineProperty(Object.prototype, 'z', {
  value: function(f) {
    return f(this.valueOf());
  },
  writable: true,
  configurable: true,
});

},{}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/partial.js":[function(require,module,exports){
/*
 format:
 id => {
   full,
   syncedProfile,
   syncedContacts,
   syncedMessages,
 }
*/

module.exports = function (dir) {
  const { readFile, writeFile } = require('atomically-universal')
  const debounce = require('lodash.debounce')
  const path = require('path')
  const DeferredPromise = require('p-defer')

  const stateLoaded = DeferredPromise()
  var state = {}

  const filename = path.join(dir, "indexes/partial.json")

  function get(cb) {
    readFile(filename).then((data) => {
      if (data)
        state = JSON.parse(data).state

      stateLoaded.resolve()
      cb(null, state)
    }).catch((err) => {
      stateLoaded.resolve()
      cb(err, {})
    })
  }

  function atomicSave()
  {
    writeFile(filename, JSON.stringify({ state }), { fsyncWait: false }).catch((err) => {
      console.error("error saving partial", err)
    })
  }
  var saveState = debounce(atomicSave, 1000, { leading: true })

  function save(cb) {
    saveState()
    cb()
  }

  return {
    updateState: function(feedId, updateFeedState, cb) {
      stateLoaded.promise.then(() => {
        let feedState = state[feedId] || {}
        state[feedId] = Object.assign(feedState, updateFeedState)
        save(cb)
      })
    },

    removeFeed: function(feedId, cb) {
      stateLoaded.promise.then(() => {
        delete state[feedId]
        save(cb)
      })
    },

    get,
    getSync: function() {
      return state
    },

    remove: function(cb) {
      // FIXME
      //f.destroy(cb)
    }
  }
}

},{"atomically-universal":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomically-universal/index.js","lodash.debounce":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/lodash.debounce/index.js","p-defer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/p-defer/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/simple-blobs.js":[function(require,module,exports){
(function (Buffer){(function (){
// this needs refactoring, but is close to ssb-blobs

const path = require('path')
const raf = require('polyraf')
const pull = require('pull-stream')
const defer = require('pull-defer')
const BoxStream = require('pull-box-stream')
const sanitize = require('sanitize-filename')

exports.manifest = {
  has: 'async',
  get: 'source',
  createWants: 'source',
}

exports.name = 'blobs'
exports.version = "1.0.0"
exports.permissions = {
  anonymous: {allow: ['has', 'get', 'createWants']},
}

exports.init = function (sbot, config) {
  const blobsDir = path.join(config.path, "blobs")
  const privateBlobsDir = path.join(config.path, "private-blobs")
  console.log("blobs dir:", blobsDir)

  const maxConcurrentRequests = 5
  var waitingGet = [] // {url, responseType, cb}

  var waiting = {} // url -> cb

  function waitingCb(url, err, data) {
    for (var i = 0; i < waiting[url].length; ++i)
      waiting[url][i](err, data)

    delete waiting[url]

    if (waitingGet.length > 0) {
      const wg = waitingGet.shift()
      httpGet(wg.url, wg.responseType, wg.cb)
    }
  }

  function httpGet(url, responseType, cb) {
    if (waiting[url]) return waiting[url].push(cb)

    if (Object.keys(waiting).length > maxConcurrentRequests)
      return waitingGet.push({ url, responseType, cb })

    waiting[url] = [cb]

    console.log("download: ", url)

    var req = new XMLHttpRequest()
    req.timeout = 2000;
    req.onreadystatechange = function() {
      if (req.readyState == 4 && req.status == 200)
        waitingCb(url, null, req.response)
    }
    req.onerror = function() {
      waitingCb(url, "Error requesting blob")
    }
    req.ontimeout = function () {
      waitingCb(url, "Timeout requesting blob")
    }

    req.open("GET", url, true)
    if (responseType)
      req.responseType = responseType

    req.send()
  }

  function sanitizedPrivatePath(id) {
    return path.join(privateBlobsDir, sanitize(id))
  }

  // we need to store these blobs unencrypted to have a fs url working
  function addPrivate(id, blob, cb) {
    console.log("wrote private to local filesystem:", id)
    const file = raf(sanitizedPrivatePath(id))
    file.write(0, blob, cb)
  }

  function hash(blob, cb)
  {
    var hash = require('crypto').createHash('sha256')
    hash.update(blob)
    cb(null, hash.digest('base64') + '.sha256')
  }

  function sanitizedPath(id) {
    return path.join(blobsDir, sanitize(id))
  }

  function add(id, blob, cb) {
    blob.arrayBuffer().then(function (buffer) {
      hash(new Uint8Array(buffer), (err, hash) => {
        if (err) return cb(err)
        if ('&' + hash != id) return cb(`wrong blob hash in blobs.add, expected ${id} got &${hash}`)

        console.log("wrote to local filesystem:", id)
        const file = raf(sanitizedPath(id))
        file.write(0, blob, (err) => {
          if (err) return cb(err)

          delete want[id]
          cb()
        })
      })
    })
  }

  function pushBlob(id, cb) {
    if(!isBlobId(id))
      return cb(new Error('invalid hash:'+id))

    push[id] = push[id] || {}
    queue(id, -1)
    cb()
  }

  function privateFsURL(id, cb) {
    var file = raf(sanitizedPrivatePath(id))
    file.stat((err, file) => {
      cb(null, URL.createObjectURL(file))
    })
  }

  function fsURL(id, cb) {
    if (window.IDBMutableFile) // firefox
    {
      cb(null, remoteURL(id))
      return

      // this should be working, but is not?
      // https://github.com/random-access-storage/random-access-idb-mutable-file/issues/6

      const mutableAccess = require('random-access-idb-mutable-file')
      mutableAccess.mount({}).then((requestFile) => {
        var f = requestFile(sanitizedPath(id))
        f.open((err) => {
          f.file.getFile().then((fileObj) => {
            // blob:null/ae825970-3f3a-4834-bc5c-ada3789b83c5
            console.log(URL.createObjectURL(fileObj))
            cb(null, URL.createObjectURL(fileObj))
          })
        })
      })
    }
    else
    {
      var file = raf(sanitizedPath(id))
      file.stat((err, file) => {
        cb(null, URL.createObjectURL(file))
      })
    }
  }

  function remoteURL(id) {
    const peer = SSB.getPeer()
    if (!peer) return ''

    let remoteAddress = peer.stream.address
    let remoteHost = remoteAddress.split("~")[0]

    if (remoteHost === 'undefined') return ''

    if (remoteAddress.includes("wss:"))
      return remoteHost.replace("wss:", "https://") + '/blobs/get/' + id
    else
      return remoteHost.replace("ws:", "http://") + '/blobs/get/' + id
  }

  var zeros = Buffer.alloc(24); zeros.fill(0)

  function unboxBlob(unbox) {
    var key = Buffer.from(unbox.replace(/\s/g, '+'), 'base64')
    return BoxStream.createUnboxStream(
      Buffer.from(key, 'base64'),
      zeros
    )
  }

  // from ssb-blobs
  var Notify = require('pull-notify')
  var isBlobId = require('ssb-ref').isBlob

  var peers = {}
  var want = {}, push = {}, getting = {}
  var available = {}, streams = {}

  var notify = Notify()

  const { sympathy, stingy, pushy, max } = config.blobs

  function isAvailable(id) {
    for(var peer in peers)
      if(available[peer] && available[peer][id] < max && peers[peer])
        return peer
  }

  function get (peer, id) {
    if(getting[id] || !peers[peer]) return

    getting[id] = peer
    var source = peers[peer].blobs.get({key: id, max: max})
    pull(
      source,
      pull.collect(function(err, data) {
        add(id, data, function (err, _id) {
          delete getting[id]
          if(err) {
            if(available[peer]) delete available[peer][id]
            //check if another peer has this.
            //if so get it from them.
            if(peer = isAvailable(id)) get(peer, id)
          }
        })
    }))
  }

  // wants helper
  var send = {}
  function queue (id, hops) {
    if(hops < 0)
      want[id] = hops
    else
      delete want[id]

    send[id] = hops
    var _send = send;
    send = {}
    notify(_send)
  }

  function wants (peer, id, hops) {
    if(Math.abs(hops) > sympathy) return //sorry!
    if(!want[id] || want[id] < hops) {
      want[id] = hops
      queue(id, hops)
      if(peer = isAvailable(id)) {
        get(peer, id)
      }
    }
  }

  function has(peer_id, id, size) {
    if('string' !== typeof peer_id) throw new Error('peer must be string id')
    available[peer_id] = available[peer_id] || {}
    available[peer_id][id] = size
    //if we are broadcasting this blob,
    //mark this peer has it.
    //if N peers have it, we can stop broadcasting.
    if(push[id]) {
      push[id][peer_id] = size
      if(Object.keys(push[id]).length >= pushy) {
        var data = {key: id, peers: push[id]}
        delete push[id]
      }
    }

    if(want[id] && !getting[id] && size < max) get(peer_id, id)
  }

  function onAbort(abortCb) {
    return function (read) {
      return function (abort, cb) {
        if (abort) abortCb(abort, cb)
        else read(null, cb)
      }
    }
  }

  function createWantStream (id) {
    if(!streams[id]) {
      streams[id] = notify.listen()

      //merge in ids we are pushing.
      var w = Object.assign({}, want)
      for(var k in push) w[k] = -1
      streams[id].push(w)
    }
    return pull(streams[id], onAbort(function (err, cb) {
      streams[id] = false
      cb(err)
    }))
  }

  function process (data, peer, cb) {
    var n = 0, res = {}
    for(var id in data) (function (id) {
      if(isBlobId(id) && Number.isInteger(data[id])) {
        if(data[id] < 0 && (stingy !== true || push[id])) { //interpret as "WANT"
          n++
          //check whether we already *HAVE* this file.
          //respond with it's size, if we do.
          const file = raf(sanitizedPath(id))
          file.stat(function (err, stat) {
            if(stat && stat.size) res[id] = stat.size
            else wants(peer, id, data[id] - 1)
            next()
          })
        }
        else if(data[id] > 0) { //interpret as "HAS"
          has(peer, id, data[id])
        }
      }
    }(id))

    function next () {
      if(--n) return
      cb(null, res)
    }
  }

  function isEmpty (o) {
    for(var k in o) return false
    return true
  }

  function wantSink (peer) {
    createWantStream(peer.id) //set streams[peer.id]

    var modern = false
    return pull.drain(function (data) {
      modern = true
      //respond with list of blobs you already have,
      process(data, peer.id, function (err, has_data) {
        //(if you have any)
        if(!isEmpty(has_data) && streams[peer.id]) streams[peer.id].push(has_data)
      })
    }, function (err) {
      if(peers[peer.id] == peer) {
        delete peers[peer.id]
        delete available[peer.id]
        delete streams[peer.id]
      }
    })
  }

  sbot.on('rpc:connect', function (rpc) {
    peers[rpc.id] = rpc
    pull(rpc.blobs.createWants(), wantSink(rpc))
  })
  // end ssb-blobs

  function localGetHelper(max, id, cb) {
    const file = raf(sanitizedPath(id))
    file.stat((err, stat) => {
      if (stat && stat.size == 0) {
        httpGet(remoteURL(id), 'blob', (err, data) => {
          if (err) cb(err)
          else if (data.size < max)
            add(id, data, () => { fsURL(id, cb) })
          else
            cb(null, remoteURL(id))
        })
      }
      else
      {
        //console.log("reading from local filesystem")
        fsURL(id, cb)
      }
    })
  }

  return {
    hash,
    add,
    addPrivate,
    has,
    push: pushBlob,

    createWants: function () {
      return createWantStream(this.id)
    },

    get: function(opts) {
      var stream = defer.source()

      var id = opts.key || opts.hash

      const file = raf(sanitizedPath(id))
      file.stat((err, stat) => {
        if (opts.max != null && opts.max < stat.size) {
          stream.abort(new Error('incorrect file length,'
                                 + ' requested:' + opts.size + ' file was:' + stat.size
                                 + ' for file:' + id))
        } else {
          file.read(0, stat.size, (err, data) => {
            if (err) stream.abort(err)
            stream.resolve(pull.once(data))
          })
        }
      })

      return stream
    },

    // internal

    privateGet: function(id, unboxKey, cb) {
      const file = raf(sanitizedPrivatePath(id))
      file.stat((err, stat) => {
        if (stat.size == 0) {
          httpGet(remoteURL(id), 'arraybuffer', (err, data) => {
            if (err) return cb(err)
            pull(
              pull.once(Buffer.from(data)),
              unboxBlob(unboxKey),
              pull.collect((err, decrypted) => {
                if (decrypted) {
                  addPrivate(id, new Blob(decrypted), () => {
                    console.log("wrote private blob")
                    privateFsURL(id, cb)
                  })
                }
                else
                {
                  console.log("failed to decrypt", err)
                  cb(err)
                }
              })
            )
          })
        }
        else
        {
          privateFsURL(id, cb)
        }
      })
    },

    localGet: function (id, cb) {
      localGetHelper(max, id, cb)
    },

    localProfileGet: function (id, cb) {
      localGetHelper(2048*1024, id, cb)
    },

    remoteGet: function(id, type, cb) {
      httpGet(remoteURL(id), type, cb)
    },

    fsURL,
    privateFsURL,
    remoteURL
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/browserify/node_modules/buffer/index.js","crypto":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/crypto-browserify/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js","polyraf":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/polyraf/browser.js","pull-box-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-box-stream/index.js","pull-defer":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-defer/index.js","pull-notify":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-notify/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","random-access-idb-mutable-file":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/random-access-idb-mutable-file/lib/random-access-idb-mutable-file.js","sanitize-filename":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/sanitize-filename/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/simple-ebt.js":[function(require,module,exports){
'use strict'
var pull = require('pull-stream')
var EBT = require('epidemic-broadcast-trees')
var path = require('path')
var toPull = require('push-stream-to-pull-stream')
var isFeed = require('ssb-ref').isFeed

var AtomicFile = require('atomic-file')

exports.name = 'ebt'

exports.version = '1.0.0'

exports.manifest = {
  replicate: 'duplex',
  request: 'sync',
  peerStatus: 'sync'
}
exports.permissions = {
  anonymous: {allow: ['replicate']},
}

//there was a bug that caused some peers
//to request things that weren't feeds.
//this is fixed, so just ignore anything that isn't a feed.
function cleanClock(clock, message) {
  for(var k in clock)
    if(!isFeed(k)) {
      delete clock[k]
    }
}

exports.init = function (sbot, config) {
  var ebt = EBT({
    logging: config.ebt && config.ebt.logging,
    id: sbot.id,
    getClock: function (id, cb) {
      var f = AtomicFile(path.join(config.path, 'ebt', id))
      f.get(function(err, clock) {
        clock = clock || {}
        cleanClock(clock)
        cb(null, clock)
      })
    },
    setClock: function (id, clock) {
      cleanClock(clock, 'non-feed key when saving clock')
      var f = AtomicFile(path.join(config.path, 'ebt', id))
      f.set(clock)
    },
    getAt: function (pair, cb) {
      sbot.getAtSequence([pair.id, pair.sequence], (err, data) => {
        if (err) cb(err)
        else cb(null, data ? data.value : null)
      })
    },
    append: function (msg, cb) {
      sbot.db.add(msg, (err, msg) => {
        cb(err && err.fatal ? err : null, msg)
      })
    },
    isFeed
  })

  function updateClock(cb) {
    sbot.db.getAllLatest((err, last) => {
      var clock = {}
      for (var k in last)
        clock[k] = last[k].sequence

      //console.log("EBT updated clock", clock)
      ebt.state.clock = clock
      ebt.update()

      if (cb) cb()
    })
  }

  SSB.events.on('SSB: loaded', updateClock)

  sbot.db.post(function (msg) {
    // FIXME: maybe handle block and follow here
    sbot.db.onDrain('ebt', () => ebt.onAppend(msg.value))
  })

  function onClose() {
    sbot.emit('replicate:finish', ebt.state.clock)
  }

  return {
    onPost: function(msg) {
      ebt.onAppend(msg.value)
    },
    updateClock,
    replicate: function(opts) {
      if (opts.version != 3)
        throw new Error('expected ebt version 3')
      return toPull.duplex(ebt.createStream(this.id, opts.version, false))
    },
    //get replication status for feeds for this id.
    peerStatus: function(id) {
      id = id || sbot.id
      var data = {
        id: id,
        seq: ebt.state.clock[id],
        peers: {},
      }

      for (var k in ebt.state.peers) {
        var peer = ebt.state.peers[k]
        if((peer.clock && peer.clock[id] != null) || (peer.replicating && peer.replicating[id] != null)) {
          var rep = peer.replicating && peer.replicating[id]
          data.peers[k] = {
            seq: peer.clock[id],
            replicating: rep
          }
        }
      }

      return data
    },
    request: ebt.request,
    startEBT: function(rpc) {
      var opts = {version: 3}
      var a = toPull.duplex(ebt.createStream(rpc.id, opts.version, true))
      var b = rpc.ebt.replicate(opts, function (err) {
        if(err) {
          rpc.removeListener('closed', onClose)
          rpc._emit('fallback:replicate', err)
        }
      })

      pull(a, b, a)
      rpc.on('closed', onClose)
    }
  }
}

},{"atomic-file":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/atomic-file/browser.js","epidemic-broadcast-trees":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/epidemic-broadcast-trees/index.js","path":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/path-browserify/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","push-stream-to-pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/push-stream-to-pull-stream/index.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/simple-ooo.js":[function(require,module,exports){
// this is ripped from ssb-ooo

var pull = require('pull-stream')
var GQ = require('gossip-query')
var hash = require('ssb-keys/util').hash
var isMsg = require('ssb-ref').isMsg
var checkInvalidOOO = require('ssb-validate').checkInvalidOOO

function getId(msg) {
  return '%'+hash(JSON.stringify(msg, null, 2))
}

function isObject (o) {
  return o && 'object' === typeof o
}

exports.name = 'ooo'
exports.version = '1.0.0'
exports.manifest = {
  stream: 'duplex',
  get: 'async',
  help: 'sync'
}
exports.permissions = {
  anonymous: {allow: ['stream']}
}

exports.init = function (sbot, config) {
  var id = sbot.id

  var conf = config.ooo || {}

  var gq = GQ({
    isQuery: isMsg,
    isRequest: function (n) {
      return Number.isInteger(n) && n < 0
    },
    isResponse: function (o) {
      return o && isObject(o)
    },
    check: function (key, cb) {
      SSB.db.get(key, cb)
    },
    isUpdate: function (id, msg, value) {
      return value == null && getId(msg) == id
    },
    process: function (id, msg, cb) {
      if(id !== getId(msg) || checkInvalidOOO(msg, null))
        cb()
      else cb(null, msg)
    },
    timeout: conf.timeout || 30e3
  })

  function get (opts, cb) {
    var id = isMsg(opts) ? opts : opts.id
    var timeout = opts.timeout != null ? opts.timeout : conf.timeout == null ? 5000 : conf.timeout
    var timer
    if(timeout > 0)
      timer = setTimeout(function () {
        var _cb = cb
        cb = null
        _cb(new Error('ooo.get: took more than timeout:'+timeout))
      }, timeout)

    console.log("doing a query for", id)
    
    gq.query(id, function (err, msg) {
      if(err) return cb(err)
      clearTimeout(timer)
      cb && cb(null, msg)
    })
  }

  sbot.on('rpc:connect', function (rpc, isClient) {
    if(isClient) {
      var stream = gq.createStream(rpc.id)
      pull(stream, rpc.ooo.stream(function () {}), stream)
    }
  })

  return {
    stream: function () {
      //called by muxrpc, so remote id is set as this.id
      return gq.createStream(this.id)
    },
    get: get
  }
}

},{"gossip-query":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/gossip-query/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-keys/util":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-keys/util.js","ssb-ref":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-ref/index.js","ssb-validate":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-validate/index.js"}],"/home/kylemaas/Programming/JavaScript/ssb-browser-core/ssb-partial-replication.js":[function(require,module,exports){
const pull = require('pull-stream')
const pullCont = require('pull-cont')
const sort = require('ssb-sort')
const { reEncrypt } = require('ssb-db2/indexes/private')
const {
  and,
  toCallback,
  hasRoot,
  author,
  type,
  startFrom,
  paginate
} = require('ssb-db2/operators')

exports.manifest = {
  getFeed: 'source',
  getFeedReverse: 'source',
  getTangle: 'async',
  getMessagesOfType: 'source'
}
exports.permissions = {
  anonymous: {allow: Object.keys(exports.manifest)}
}

exports.name = 'partial-replication'

exports.init = function (sbot, config) {
  return {
    getFeed: function (opts) {
      return pull(
        sbot.createHistoryStream(opts)
      )
    },

    getFeedReverse: function (opts) {
      return pull(
        pullCont(function(cb) {
          SSB.db.getLatest(opts.id, (err, latest) => {
            if (err) {
              console.error("Got error on feed reverse", err)
              return cb(null, pull.empty())
            }

            var seqStart = latest ? latest.sequence - (opts.limit - 1) : 0
            if (seqStart < 0)
              seqStart = 0

            opts.seq = seqStart

            cb(null, sbot.createHistoryStream(opts))
          })
        })
      )
    },

    getTangle: function(msgId, cb) {
      if (!msgId) return cb("msg not found:" + msgId)

      SSB.db.get(msgId, (err, msg) => {
        if (err) return cb(err)
        if (msg.meta && msg.meta.private === true) return cb(null, [])
        SSB.db.query(
          and(hasRoot(msgId)),
          toCallback((err, msgs) => {
            if (err) return cb(err)
            msgs = msgs.filter(x => !x.meta || x.meta.private !== true)
            cb(null, [reEncrypt(msg), ...sort(msgs).map(m => reEncrypt(m.value))])
          })
        )
      })
    },

    // opts: { id: feedId, type: string, seq: int?, limit: int? }
    getMessagesOfType: function(opts)
    {
      if (!opts.id) throw new Error("id is required!")
      if (!opts.type) throw new Error("type is required!")

      const seq = opts.sequence || opts.seq || 0
      const limit = opts.limit || 1e10

      return pull(
        pullCont(function(cb) {
          let q = SSB.db.query(
            and(author(opts.id), type(opts.type))
          )

          if (seq) // sequences starts with 1, offset starts with 0 ;-)
            q = SSB.db.query(q, (startFrom(seq-1)))

          SSB.db.query(
            q,
            paginate(limit),
            toCallback((err, answer) => {
              if (err) return cb(err)
              let results = answer.results.map(x => reEncrypt(x).value)
              cb(null, pull.values(results))
            })
          )
        })
      )
    }
  }
}

},{"pull-cont":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-cont/index.js","pull-stream":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/pull-stream/index.js","ssb-db2/indexes/private":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/indexes/private.js","ssb-db2/operators":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-db2/operators/index.js","ssb-sort":"/home/kylemaas/Programming/JavaScript/ssb-browser-core/node_modules/ssb-sort/index.js"}]},{},["/home/kylemaas/Programming/JavaScript/ssb-browser-core/browser.js"]);
